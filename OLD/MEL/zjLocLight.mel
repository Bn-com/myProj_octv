global proc zjLocLight()
{
	string $selsh[] = `ls -ni -dag -sl -lights`;
	if (size($selsh)!=1)
		error "please select a light";
	
	string $sel[] = `ls -sl -tr`;

	$light = $sel[0];

	string $con[] = `listConnections -s 1 -d 0 ($selsh[0] + ".centerOfIllumination")`;
	if (size($con))
		error ($selsh[0] + ".centerOfIllumination has been locked or connected!");

	string $locatorShapeList[] = `spaceLocator -p 0 0 0 -name "lookAt1"`;
	string $locatorShape = $locatorShapeList[0];
	

	$locatorShapeList = `parent $locatorShape $light`;
	$locatorShape = $locatorShapeList[0];
	float $centerOfIllumination = `getAttr ($light + ".centerOfIllumination")`;
	if ($centerOfIllumination == 0)
	{
		$centerOfIllumination = 5.0;
	}
	float $scale[] = `xform -query -relative -scale $light`;
	xform -translation 0 0 (-$centerOfIllumination / $scale[2]) $locatorShape;
	$locatorShapeList = `parent -world $locatorShape`;
	$locatorShape = $locatorShapeList[0];

	
	string $target = $locatorShape;
	string $lookAt = `createNode -name ($light+"_group") "lookAt"`;

	setAttr ".aimVector" -type double3 0 0 -1;

	connectAttr ($target+".tx") ($lookAt+".target[0].targetTranslateX");
	connectAttr ($target+".ty") ($lookAt+".target[0].targetTranslateY");
	connectAttr ($target+".tz") ($lookAt+".target[0].targetTranslateZ");
	connectAttr ($target+".rp") ($lookAt+".target[0].targetRotatePivot");
	connectAttr ($target+".rpt") ($lookAt+".target[0].targetRotateTranslate");
	connectAttr ($target+".pm") ($lookAt+".target[0].targetParentMatrix");

	connectAttr ($light+".pim") ($lookAt+".constraintParentInverseMatrix");
	connectAttr ($light+".t") ($lookAt+".constraintTranslate");
	connectAttr ($light+".rp") ($lookAt+".constraintRotatePivot");
	connectAttr ($light+".rpt") ($lookAt+".constraintRotateTranslate");

	connectAttr ($lookAt+".constraintRotateX") ($light+".rotateX");
	connectAttr ($lookAt+".constraintRotateY") ($light+".rotateY");
	connectAttr ($lookAt+".constraintRotateZ") ($light+".rotateZ");

	connectAttr ($lookAt+".distanceBetween") ($selsh[0]+".centerOfIllumination");

}

