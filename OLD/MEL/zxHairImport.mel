/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: hb
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc string mySubstitute(string $source, string $old, string $new)
{
	string $buf[];
	
	if (`tokenize $source "|" $buf`)
		return ` substitute $old $buf[size($buf)-1]  ""`;
	return "";
}

proc cleanNamespace (string $nsName)
{
	string $namesp[] = `ls ($nsName + "*:*")`;
	for ($j=0;$j<size($namesp);$j++)
	{
		string $buff[];
		tokenize $namesp[$j] "|" $buff;
		string $obj = $buff[size($buff) - 1];

		string $buf[];
		tokenize $obj ":" $buf;
		string $sp = $buf[0]+":";

		string $new = mySubstitute($obj,$sp,"");
		if (`objExists($namesp[$j])` && $new!=$namesp[$j] && size($new)>0)
			rename $namesp[$j] $new;
	}
}




proc importGeoHair (string $masterName, string $chaName, string $ns_hair)
{
	switch ($masterName)
	{
	case "dvdburdinem005001_MASTER":
//	case "m005006burdinehonoluluoutfit_MASTER":
	case "m005018burdine_MASTER":
	case "burdinem005_023_Global":
	case "bernicem005_001_Global":
	case "BerniceM005_024_Global":
	case "Burdinem005_008_Global":
	case "bernicem005_001_Global":


		string $gChaName = "Burdine";
		string $hairGroup[] = {":burtinemGeoHair"};
//		string $jointName = "Head";
	break;

	case "EllaminaI043_001_Global":


		string $gChaName = "Ellamina";
		string $hairGroup[] = {":EllaminaGeoHair"};
//		string $jointName = "Head";
	break;

	case "dvdkirsteem006001_MASTER":
	case "m006020kirsteebluedress_MASTER":
	case "m006021kirstee_MASTER":
	case "Kristeem006_015_Global":
	case "Kirsteem006_016_Global":
	case "KirsteeM006_009_Global":
		string $gChaName = "Kirstee";
		string $hairGroup[] = {":kirsteeGeoHair" ,":Kristee_Hair_joint"};
//		string $jointName = "joint44";
	break;

	case "dvdkayceem007001_MASTER":
	case "m007032kayceebluedress_MASTER":
	case "m007033kayceebluedress_MASTER":
	case "kayceem007_022_Global":
	case "kayceem007_023_Global":
	case "kayceem007_029_Global":
	case "Kayceem007_027_Global":
	case "Kayceem007_028_Global":
	case "KayceeM007_019_Global":

		string $gChaName = "Kaycee";
		string $hairGroup[] = {":kayceeGeoHair", ":Kaycee_Hair_joint"};
//		string $jointName = "head";
	break;
	
	}

	string $str[] = `ls ($gChaName + "_Hair_Group")`;
	if (size($str) != 0)
	{
		error ($gChaName + "'s Hair had Imported Already!");
	}

	string $fileList[] = `getFileList -folder "Z:\\Projects\\BRATZ\\Production\\Asset\\prop\\hair\\3deffect\\" -filespec ("br_hair_" + $gChaName + "_h_ef_*.mb")`;

	string $filePath_hair = "Z:\\Projects\\BRATZ\\Production\\Asset\\prop\\hair\\3deffect\\" + $fileList[size($fileList)-1];
	file -import -namespace $ns_hair $filePath_hair;

	string $jointPath;
	string $jointList[] = `ls -l -type joint "*head" "*:*head"`;
	//string $hairPath = $ns_hair + $hairGroup;
	string $matchName;

	for ($jointPath in $jointList)
	{
		$matchName = "";
		$matchName = `match $chaName $jointPath`;
		if ($matchName == $chaName)
		{
			break;
		}
	}
	
	string $item;
	for ($item in $hairGroup )
	{
		$item  = $ns_hair + $item;
		parent $item $jointPath;
	}

	select -cl;

	cleanNamespace $ns_hair;
	cleanNamespace $ns_hair;

}

proc importHair (string $masterName, string $chaName, string $chkChaName, string $ns_hair, string $selectedLN, string $prefix)
{

	string $jointName[] , $collideName[];

	string $Path = `textField -q -tx zxIHtextField1`;


	string $subPath = substituteAllString($Path, "/", ("\\"+"\\"));
	
	file -import -namespace $ns_hair $subPath;   

								
	string $checkNamespace[] = `ls "*:hairCollide_GRP"`;  
	string $buff[];
	tokenize $checkNamespace[0] ":" $buff;
	$ns_hair = $buff[0];


//	$jointName   = {($chaName + "_lobackA") ,  
//		        ($chaName + "_chestA") ,   
//		        ($chaName + "_neckA") ,    
//		        ($chaName + "_head") ,     
//		        ($chaName + "_arm_l") ,    
//		        ($chaName + "_elbow_l") ,  
//		        ($chaName + "_arm_r") ,    
//		        ($chaName + "_elbow_r") ,  
//		        ($chaName + "_leg_l") ,    
//		        ($chaName + "_leg_r")};    
				       

	$jointName   = {($chaName + "_pelvis") ,  
		        ($chaName + "_chestA") ,   
		        ($chaName + "_neckA") ,    
		        ($chaName + "_head") ,     
		        ($chaName + "_arm_left") ,    
		        ($chaName + "_elbow_left") ,  
		        ($chaName + "_arm_right") ,    
		        ($chaName + "_elbow_right") ,  
		        ($chaName + "_leg_left") ,    
		        ($chaName + "_leg_right")};    

	  $collideName  = {"br_hairCollide_root" , 
			   "br_hairCollide_spine" , 
			   "br_hairCollide_neck" , 
			   "br_hairCollide_head" , 
			   "br_hairCollide_armLeft" ,
			   "br_hairCollide_elbowLeft" , 
			   "br_hairCollide_armRight" , 
			   "br_hairCollide_elbowRight" , 
			   "br_hairCollide_hipLeft" , 
			   "br_hairCollide_hipRight"};

	int $i;
	string $jointList[];
	string $matchName;
	string $jointPath;
	string $collidePath;
	
	for ($i = 0; $i<size($jointName); $i++)
	{
		$jointList = `ls -l ($prefix + $jointName[$i])`;
		for ($jointPath in $jointList)
		{
			$matchName = `match $selectedLN $jointPath`;
			if ($matchName == $selectedLN)
			{
				break;
			}
		}

		$collidePath = $ns_hair + ":" + $collideName[$i]; 
		parent $collidePath $jointPath;
	}
	select -cl;
	string $emptyGroup = $ns_hair + ":hairCollide_GRP";
	delete $emptyGroup;


//	zjRemoveNamespace;
//	zjRemoveNamespace;

	select -cl;

}



global proc zxHairImport()                 
{

//	zjRemoveNamespace;
//	zjRemoveNamespace;

	string $Path = `textField -q -tx zxIHtextField1`;

	if(!size($Path))
	{

		confirmDialog -title "Warning"
			      -message " 请 点 击 文 件 夹 图 标 ， 选 取 需 要 导 入 的 头 发 文 件 ! "
			      -button "OK";

		error " 请 点 击 文 件 夹 图 标 ， 选 取 需 要 导 入 的 头 发 文 件 ! ";

	}


	string $selected[] = `ls -l -sl`;


	if ( size($selected) == 1 )                       
	{

		string $selectedLN = $selected[0]; 
		string $tem[];
		tokenize $selected[0] "|" $tem;
		tokenize $tem[size($tem)-1] ":" $tem;

		string $prefix;
		if(size($tem)==2)
			$prefix = ($tem[0] + ":");

		else if(size($tem)<2)
			$prefix = "";
		else 
			error "MASTER 命 名 不 规 范 ";

		$masterName = $tem[size($tem)-1];  

		string $temp[];

		string $chaName = `substitute "_MASTER" $masterName ""`;  
		string $ns_hair = $chaName + "_hairNS";                   

		string $chkChaName = substituteAllString($chaName, "_", ""); 



									
if(!objExists ($prefix + $chaName + "_set"))

error ("没 有 发 现 " + ($prefix + $chaName + "_set") + " , 是 否 选 择 了 " + " MASTER !" );



string $lockAttr[];

string $transforms[] = {"tx","ty","tz","rx","ry","rz","sx","sy","sz"} ;


for($tran in $transforms)
{
	$lock = `getAttr -l ($selectedLN + "." + $tran)`;

	if($lock == 1)
	{
		$lockAttr[size($lockAttr)] = $tran;
		setAttr -l 0 ($selectedLN + "." + $tran) ;
	}
}

float $valAttr[];

string $msParent[];

string $wMs[];

$msParent = `listRelatives -p -f $selectedLN`;

string $buffer1[];

$tokNum = `tokenize $selectedLN  "|" $buffer1`;

// turn off autoKeyframe
autoKeyframe -state false;

if($tokNum > 2)
{
	parent -w $selectedLN;
	$wMs = `ls -sl -l`;
	$selectedLN = $wMs[0];
}

if ($tokNum == 2)
{
	string $buffer2[];

	$tokNum = `tokenize $buffer1[size($buffer1)-1]  ":" $buffer2`;

	if($buffer1[size($buffer1)-2] != ($buffer2[0] + "RNgroup"))
	{
		parent -w $selectedLN;
		$wMs = `ls -sl -l`;
		$selectedLN = $wMs[0];
	}
}



float $rPivot[];

float $time;

$rPivot = `getAttr ($selectedLN + ".rp")`;

if  ($rPivot[0] != 0 || $rPivot[1] != 0  || $rPivot[2] != 0 )   // && ($masterName != "dvdguskidnapperi017001_MASTER") )
{

	currentTime 43;
	xform -rp 0 0 0 $selectedLN;
	xform -sp 0 0 0 $selectedLN;
}

for($tran in $transforms)
{
	$valAttr[size($valAttr)] = `getAttr ($selectedLN + "." + $tran)`;
}



//select -ne ($prefix + $chaName + "_set");

slResetPose;



//import hair ----------------------------------------------

		if ($masterName == "dvdburdinem005001_MASTER"||
//		    $masterName == "m005006burdinehonoluluoutfit_MASTER"||
		    $masterName == "m005018burdine_MASTER"||
		    $masterName == "Burdinem005_008_Global"||
		    $masterName == "burdinem005_023_Global"||
		    $masterName == "bernicem005_001_Global"||
		    $masterName == "BerniceM005_024_Global"||
		    $masterName == "bernicem005_001_Global"||
		    $masterName == "dvdkirsteem006001_MASTER"||
		    $masterName == "m006020kirsteebluedress_MASTER"||
		    $masterName == "m006021kirstee_MASTER"||
		    $masterName == "Kristeem006_015_Global"||
		    $masterName == "Kirsteem006_016_Global"||
		    $masterName == "KirsteeM006_009_Global"||
		    $masterName == "dvdkayceem007001_MASTER"||
		    $masterName == "m007032kayceebluedress_MASTER"||
		    $masterName == "m007033kayceebluedress_MASTER"||
		    $masterName == "kayceem007_022_Global"||
		    $masterName == "kayceem007_023_Global"||
		    $masterName == "Kayceem007_027_Global"||
		    $masterName == "Kayceem007_028_Global"||
		    $masterName == "kayceem007_029_Global"||
		    $masterName == "KayceeM007_019_Global"||
		    $masterName == "EllaminaI043_001_Global")
					
						
		importGeoHair ($masterName, $chaName, $ns_hair);


		else importHair ($masterName, $chaName, $chkChaName, $ns_hair, $selectedLN, $prefix);



//恢复动画文件的初始状态----------------------------------------


int $j;

for($j = 0; $j<size($transforms) ;$j++)
{

setAttr ($selectedLN + "." + $transforms[$j]) $valAttr[$j];

}


if(`objExists $wMs[0]`)
{
parent $wMs[0] $msParent[0];

$wMs = `ls -sl -l`;
$selectedLN = $wMs[0];
}


if  ($rPivot[0] != 0 || $rPivot[1] != 0  || $rPivot[2] != 0 ) //&& ($masterName != "dvdguskidnapperi017001_MASTER") )
{

xform -rp $rPivot[0] $rPivot[1] $rPivot[2] $selectedLN;
xform -sp $rPivot[0] $rPivot[1] $rPivot[2] $selectedLN;
}

for($lock in $lockAttr)
{

setAttr -l 1 ($selectedLN + "." +$lock);

}


//clean namespace----------------------------------------------------------

							
		cleanNamespace $ns_hair;
		cleanNamespace $ns_hair;
		if (!`namespace -exists $ns_hair`)
		{
			namespace -removeNamespace $ns_hair;
		}

		select $selected[0];

		print ("Import hair and ring for " + $chaName); 



	}


	else error "invalid selection";

	flushUndo;

}