global proc mrUpdateParticleAndSpring()
{
	string $temp[] = `ls "mushgro*a01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushgro*a01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 4)
			{
		//		PARTICLE: mushgro_a01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushgro_a01");
			}
			else
				warning("Particle count does not match: " + $item);
	}

	string $temp[] = `ls "mushlar*c01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushlar*c01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 11)
			{
		//		PARTICLE: mushlar_c01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushlar_c01");
			}
			else
				warning("Particle count does not match: " + $item);
	}

 
	string $temp[] = `ls "mushlar*c02*Particle"`;

	if (size($temp) > 0)
	{
		select "mushlar*c02*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 10)
			{
		//		PARTICLE: mushlar_c02_curve1ParticleShape

				mrAssignParticleWeight($item, "mushlar_c02");
			}
			else
				warning("Particle count does not match: " + $item);
	}

 
	string $temp[] = `ls "mushlar*a01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushlar*a01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 10)
			{
		//		PARTICLE: mushlar_c_lo_a01_1_curve1ParticleShape

				mrAssignParticleWeight($item, "mushlar_a01");
			}
			else
				warning("Particle count does not match: " + $item);
	}

 
	string $temp[] = `ls "mushlar*a02*Particle"`;

	if (size($temp) > 0)
	{
		select "mushlar*a02*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 9)
			{
		//		PARTICLE: mushlar_c_lo_a02_curve1ParticleShape

				mrAssignParticleWeight($item, "mushlar_a02");
			}
			else
				warning("Particle count does not match: " + $item);
	}
 

	string $temp[] = `ls "mushlar*e01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushlar*e01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 13)
			{
		//		PARTICLE: mushlar_e01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushlar_e01");
			}
			else
				warning("Particle count does not match: " + $item);
	}


	string $temp[] = `ls "mushmed*b01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*b01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 4)
			{
		//		PARTICLE: mushmed_b01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushmed_b01");
			}
			else
				warning("Particle count does not match: " + $item);
 	}


	string $temp[] = `ls "mushmed*c01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*c01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 11)
			{
		//		PARTICLE: mushmed_c01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushmed_c01_2");
			}
			else
			if (`getAttr ($item + ".count")` == 8)
			{
		//		PARTICLE: mushmed_c01_curve2ParticleShape

				mrAssignParticleWeight($item, "mushmed_c01_1");
			}
			else
				warning("Particle count does not match: " + $item);
	}

/* 
// Since there will be a brand new setup for mushmed_d01, there is no need to update the old particles

	string $temp[] = `ls "mushmed*d01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*d01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 4)
			{
		//		PARTICLE: mushmed_d01_curve1ParticleShape

// DO NOT call mrAssignParticleWeight() because cannot differentiate the 2 types of sub-mushrooms
//				mrAssignParticleWeight($item, "mushmed_d01");

				particle -e -order 0 -attribute mass -floatValue 0.1 $item;
				particle -e -order 1 -attribute mass -floatValue 0.1 $item;
				particle -e -order 2 -attribute mass -floatValue 0.1 $item;
				particle -e -order 3 -attribute mass -floatValue 0.1 $item;
			}
			else
				warning("Particle count does not match: " + $item);
	}
*/
 
/*
//	SAME AS ABOVE

	string $temp[] = `ls "mushmed*d01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*d01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 4)
			{
		//		PARTICLE: mushmed_d01_curve2ParticleShape

				particle -e -order 0 -attribute mass -floatValue 0.1 $item;
				particle -e -order 1 -attribute mass -floatValue 0.1 $item;
				particle -e -order 2 -attribute mass -floatValue 0.1 $item;
				particle -e -order 3 -attribute mass -floatValue 0.1 $item;
			}
			else
				warning("Particle count does not match: " + $item);
	}
*/
 
/*
	string $temp[] = `ls "mushmed*d01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*d01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 3)
			{
		//		PARTICLE: mushmed_d01_curve3ParticleShape

				mrAssignParticleWeight($item, "mushmed_d01_3");
			}
			else
				warning("Particle count does not match: " + $item);
	}
*/
 
	string $temp[] = `ls "mushmed*f01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*f01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 6)
			{
		//		PARTICLE: mushmed_f01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushmed_f01");
			}
			else
				warning("Particle count does not match: " + $item);
	}

 
	string $temp[] = `ls "mushmed*h01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushmed*h01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 14)
			{
		//		PARTICLE: mushmed_h01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushmed_h01_4");
			}
			else
			if (`getAttr ($item + ".count")` == 10)
			{
		//		PARTICLE: mushmed_h01_curve2ParticleShape

				mrAssignParticleWeight($item, "mushmed_h01_3");
			}
			else
			if (`getAttr ($item + ".count")` == 11)
			{
		//		PARTICLE: mushmed_h01_curve3ParticleShape

				mrAssignParticleWeight($item, "mushmed_h01_2");
			}
			else
			if (`getAttr ($item + ".count")` == 8)
			{
		//		PARTICLE: mushmed_h01_curve4ParticleShape

				mrAssignParticleWeight($item, "mushmed_h01_1");
			}
			else
			if (`getAttr ($item + ".count")` == 75)
			{
		//		PARTICLE: mushmed_h01_ffd1LatticeParticleShape

				mrAssignParticleWeight($item, "mushmed_h01_5");
			}
			else
				warning("Particle count does not match: " + $item);
	}

 
	string $temp[] = `ls "mushsma*b01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushsma*b01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 27)
			{
		//		PARTICLE: mushsma_b01_ffd1LatticeParticleShape

				mrAssignParticleWeight($item, "mushsma_b01");
			}
			else
				warning("Particle count does not match: " + $item);
 	}


	string $temp[] = `ls "mushsma*s01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushsma*s01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 32)
			{
		//		PARTICLE: mushsma_s01_pTorus1ParticleShape

				mrAssignParticleWeight($item, "mushsma_s01");
			}
			else
				warning("Particle count does not match: " + $item);
	}


	string $temp[] = `ls "mushsma*t01*Particle"`;

	if (size($temp) > 0)
	{
		select "mushsma*t01*Particle";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
			if (`getAttr ($item + ".count")` == 8)
			{
		//		PARTICLE: mushsma_t01_curve1ParticleShape

				mrAssignParticleWeight($item, "mushsma_t01");
			}
			else
				warning("Particle count does not match: " + $item);
	}


	string $temp[] = `ls "mushmed*b01*spring"`;

	if (size($temp) > 0)
	{
		select "mushmed*b01*spring";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
		{
			//SPRING: mushmed_b01_springShape1	// squashed
			//STIFFNESS: 0.45
			//DAMPING: 0.2

			spring -e -stiffness 0.45 -damping 0.2 $item;
		}
	}


	string $temp[] = `ls "mushmed*h01*spring"`;

	if (size($temp) > 0)
	{
		select "mushmed*h01*spring";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
		{
			//SPRING: mushmed_h01_springShape5	// lattice - assigned
			//STIFFNESS: 0.1
			//DAMPING: 0.05

			spring -e -stiffness 0.1 -damping 0.05 $item;
		}
	}


	string $temp[] = `ls "mushsma*b01*spring"`;

	if (size($temp) > 0)
	{
		select "mushsma*b01*spring";
		string $selected[] = `ls -selection`;

		for ($item in $selected)
		{
			//SPRING: mushsma_b01_springShape1	// squashed
			//STIFFNESS: 0.45
			//DAMPING: 0.2

			spring -e -stiffness 0.45 -damping 0.2 $item;
		}
	}
}
 
