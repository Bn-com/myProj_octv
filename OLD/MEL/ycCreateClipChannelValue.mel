/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: “¸Í…
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc string PEcreatePoseChannelValue(string $clip)
{
	string $result, $buf[];
	int $i;
	
	string $allPoses[] = `pose -query -allPoses`;
	string $character[] = `clip -query -character $clip`;
	string $clipSchedule = `character -query -scheduler $character[0]`;
	clipSchedule -instance $clip $clipSchedule;
	string $clipIndex[] = `clipSchedule -query -clipIndex $clipSchedule`;
	tokenize $clipIndex[size($clipIndex)-1] "," $buf;
	string $listPairs[] = eval ("clipSchedule -clipIndex " + $buf[1] + "-query -listPairs " + $clipSchedule);
	for ($i=0; $i<size($listPairs); $i++)
	{
		tokenize $listPairs[$i] " " $buf;
		$result = $result + "\n" + $buf[0];
		if(`stringArrayCount $clip $allPoses`)
		{
			float $value[] = `keyframe -index 0 -query -valueChange $buf[1]`;
			$result = $result + "\t" + $value[0];
		}
	}
	return $result;
}
global proc ycGetClip()
{
	string $MasterChar[]=`ls -sl`;
	if (`nodeType $MasterChar[0]`!="character")
	{
		return;
	}
	string $MasterChar[]=`lsType "character"`;
	for ($i=0;$i<size($MasterChar);$i++)
	{
		string $characterScheduler[]=`listConnections -s 1 -type "clipScheduler" $MasterChar[$i]`;
		string $ClipName[]=`listConnections -s 1 -type "animClip" $characterScheduler[0]`;
		ycCreateClipChannelValue($ClipName[0]);
	}

}

global proc ycCreateClipChannelValue(string $clip)
{
	string $ClipSource[]=`listConnections -s 1 -type "animClip" $clip`;
	string $ClipLib[]=`listConnections -c 0 -type "clipLibrary" $ClipSource[0]`;
        string $AnimCurve[]=`listConnections -s 1 $ClipLib[0]`;
	string $AllAnimCurve[];
	int $AnimNum=0;
	for ($i=0;$i<size($AnimCurve);$i++)
	{
		if (`nodeType $AnimCurve[$i]`=="animCurveTA"||`nodeType $AnimCurve[$i]`=="animCurveTL"||
		`nodeType $AnimCurve[$i]`=="animCurveTT"||`nodeType $AnimCurve[$i]`=="animCurveTU"||
		`nodeType $AnimCurve[$i]`=="animCurveUA"||`nodeType $AnimCurve[$i]`=="animCurveUL"||
		`nodeType $AnimCurve[$i]`=="animCurveUT"||`nodeType $AnimCurve[$i]`=="animCurveUU")
		{
			$AllAnimCurve[$AnimNum]=$AnimCurve[$i];
			$AnimNum++;
		}
	}
	string $SetKeyArray[];
	int $ArrayCount=0;

	if (size($AllAnimCurve)==0)
	{
		return;
	}
	else
	{
		for ($i=0;$i<size($AllAnimCurve);$i++)
		{
			int $keyCount = `keyframe -q -keyframeCount $AllAnimCurve[$i]`;
			float $time[] = `keyframe  -query -timeChange  $AllAnimCurve[$i]`;
			float $key[] = `keyframe  -query -valueChange $AllAnimCurve[$i]`;
			string $inTangent[] = `keyTangent  -query -inTangentType $AllAnimCurve[$i]`;
			string $outTangent[] = `keyTangent -query -outTangentType $AllAnimCurve[$i]`;
			string $AnimCurveBuff[];
			int $AnimCurveNameSplitNum=`tokenize $AllAnimCurve[$i] "_" $AnimCurveBuff`;

			$SetKeyArray[$ArrayCount]=$AnimCurveBuff[$AnimCurveNameSplitNum-2] + "." + $AnimCurveBuff[$AnimCurveNameSplitNum-1] + "\t\t" + $keyCount;
			for ($k=0;$k<$keyCount;$k++)
			{
				$SetKeyArray[$ArrayCount]=$SetKeyArray[$ArrayCount] + "\t\t" +  $time[$k];
			}
			for ($k=0;$k<$keyCount;$k++)
			{
				$SetKeyArray[$ArrayCount]=$SetKeyArray[$ArrayCount] + "\t\t" +  $key[$k];
			}
			for ($k=0;$k<$keyCount;$k++)
			{
				$SetKeyArray[$ArrayCount]=$SetKeyArray[$ArrayCount] + "\t\t" +  $inTangent[$k];
			}
			for ($k=0;$k<$keyCount;$k++)
			{
				$SetKeyArray[$ArrayCount]=$SetKeyArray[$ArrayCount] + "\t\t" +  $outTangent[$k];
			}
			$ArrayCount++;
		}
		string $dir = `workspace -q -dir`;

		int $JudgeDirExist=`filetest -d ($dir + "/ycClipConvertionCurve/")`;
		if ($JudgeDirExist==0)
		{
			workspace -cr ($dir+"/ycClipConvertionCurve/");
		}
		int $fileId = `fopen ($dir + "ycClipConvertionCurve/" + $clip + ".ycc") "wt"`;
		fprint $fileId "";
		fclose $fileId;
		waitCursor -state on;
		int $fileId = `fopen ($dir + "ycClipConvertionCurve/" + $clip + ".ycc") "at"`;
		for ($i=0;$i<size($SetKeyArray);$i++)
		{
			fprint $fileId ($SetKeyArray[$i]+"\n");
		}
		fclose $fileId;	
		waitCursor -state off;

	}
	print $SetKeyArray;
	clear $SetKeyArray;
	select -cl;
	//clip -q -character clip3	//character2 
	//clipSchedule -q -sourceClipName character2Scheduler1;		//clip3,18,1.000000,0.000000,1.000000,1.000000
	//listConnections -s 1 -type "clipScheduler" character2		//character2Scheduler1 
}
//ycCreateClipChannelValue clip3;
//ycImportClipCurve 1 1;
global proc ycImportClipCurve(float $ClipScale,int $ClipCycle)
{
	string $loadFile = (`workspace -q -dir`+ "/ycClipConvertionCurve/");
	string $yclFileList[]=`getFileList -folder $loadFile  -filespec "*.ycc"`;
	string $getFileLine[];
	for ($i=0;$i<size($yclFileList);$i++)
	{
		waitCursor -state on;
		select -cl;
		int $fileId=`fopen ($loadFile + $yclFileList[$i]) "rt"`;
		if ($fileId==0)
		{
			continue;
		}
		int $nextLineArray = 0;								
		$getFileLine[0]=`fgetline $fileId`;
		while (size($getFileLine[$nextLineArray])!=0)
		{
			$nextLineArray++;
			$getFileLine[$nextLineArray] = `fgetline $fileId`;
			//print $getFileLine[$nextLineArray];
		}
		//print $getFileLine;
		for ($j=0;$j<size($getFileLine)-1;$j++)
		{
			ImportClipCurve($getFileLine[$j],$ClipScale,$ClipCycle);
		}
		fclose $fileId;
		clear $getFileLine;
		waitCursor -state off;
	}
}

global proc ImportClipCurve(string $GetClipKeyDate,float $ClipScale,int $ClipCycle)
{
	//print $GetClipKeyDate;
	string $GetClipKeyDateBuff[];
	tokenize $GetClipKeyDate "\t\n" $GetClipKeyDateBuff;
	string $KeyAttr = $GetClipKeyDateBuff[0];
	//print $KeyAttr;
	string $ObjectName=PickUp($KeyAttr);
	string $KeyFrameAttr[]=`keyframe -q -n $ObjectName`;

	int $numKey = $GetClipKeyDateBuff[1];
	//print $numKey;
	float $time=0;
	float $CycluCountValue;
	for ($j=0;$j<$ClipCycle;$j++)
	{
		for ($i=0;$i<$numKey;$i++)
		{
			//float $timeTemp=$GetClipKeyDateBuff[2];
			if ($i==0)
			{
				$time=$time+0;
			}
			else
			{
				float $Time2=$GetClipKeyDateBuff[$i+2];
				float $Time1=$GetClipKeyDateBuff[2];
				$time=($Time2-$Time1)/$ClipScale+$time;
			}
			float $key=$GetClipKeyDateBuff[$i+($numKey-2)+4];
			string $inTangent = $GetClipKeyDateBuff[$i+($numKey-2)+($numKey-2)+6];
			string $outTangent = $GetClipKeyDateBuff[$i+($numKey-2)+($numKey-2)+8];
			int $CurrentTimeList=`currentTime -q`;
			if ($inTangent=="spline"||$inTangent=="linear"||$inTangent=="clamped"||$outTangent=="spline"||$outTangent=="linear"||$outTangent=="clamped")
			{
				setKeyframe -time ($time+$CurrentTimeList) -value $key -inTangentType $inTangent -outTangentType $outTangent $KeyAttr;
			}
	//		selectKey -add -k -t 33.956 joint3_translateX ;
		}
	}
}

global proc string PickUp(string $Name)
{
	string $Buffer[];
	int $Num=`tokenize $Name "." $Buffer`;
	string $ReturnValve=$Buffer[0];
	if ($Num>2)
	{
		for ($i=1;$i<$Num-1;$i++)
		{
			$ReturnValve=$ReturnValve+"."+$Buffer[1];
		}
	}
	return $ReturnValve;
}

global proc ycImportClipCurveWithPrefix(string $Prefix,float $ClipScale,int $ClipCycle)
{
	string $loadFile = (`workspace -q -dir`+ "/ycClipConvertionCurve/");
	string $yclFileList[]=`getFileList -folder $loadFile  -filespec "*.ycc"`;
	string $getFileLine[];
	for ($i=0;$i<size($yclFileList);$i++)
	{
		waitCursor -state on;
		select -cl;
		int $fileId=`fopen ($loadFile + $yclFileList[$i]) "rt"`;
		if ($fileId==0)
		{
			continue;
		}
		int $nextLineArray = 0;								
		$getFileLine[0]=`fgetline $fileId`;
		while (size($getFileLine[$nextLineArray])!=0)
		{
			$nextLineArray++;
			$getFileLine[$nextLineArray] = `fgetline $fileId`;
			//print $getFileLine[$nextLineArray];
		}
		//print $getFileLine;
		for ($j=0;$j<size($getFileLine)-1;$j++)
		{
			ImportClipCurveWithPrefix($getFileLine[$j],$Prefix,$ClipScale,$ClipCycle);
		}
		fclose $fileId;
		clear $getFileLine;
		waitCursor -state off;
	}
}

global proc ImportClipCurveWithPrefix(string $GetClipKeyDate,string $Prefix,float $ClipScale,int $ClipCycle)
{
	//print $GetClipKeyDate;
	string $GetClipKeyDateBuff[];
	tokenize $GetClipKeyDate "\t\n" $GetClipKeyDateBuff;
	string $KeyAttr = $Prefix+"_"+$GetClipKeyDateBuff[0];
	//print $KeyAttr;
	string $ObjectName=PickUp($KeyAttr);
	string $KeyFrameAttr[]=`keyframe -q -n $ObjectName`;

	int $numKey = $GetClipKeyDateBuff[1];
	//print $numKey;
	float $time=0;
	float $CycluCountValue;
	for ($j=0;$j<$ClipCycle;$j++)
	{	
		for ($i=0;$i<$numKey;$i++)
		{
			//float $timeTemp=$GetClipKeyDateBuff[2];
			if ($i==0)
			{
				$time=$time+0;
			}
			else
			{
				float $Time2=$GetClipKeyDateBuff[$i+2];
				float $Time1=$GetClipKeyDateBuff[2];
				$time=($Time2-$Time1)/$ClipScale+$time;
			}
			float $key=$GetClipKeyDateBuff[$i+($numKey-2)+4];
			string $inTangent = $GetClipKeyDateBuff[$i+($numKey-2)+($numKey-2)+6];
			string $outTangent = $GetClipKeyDateBuff[$i+($numKey-2)+($numKey-2)+8];
			int $CurrentTimeList=`currentTime -q`;
			if ($inTangent=="spline"||$inTangent=="linear"||$inTangent=="clamped"||$outTangent=="spline"||$outTangent=="linear"||$outTangent=="clamped")
			{
				setKeyframe -time ($time+$CurrentTimeList) -value $key -inTangentType $inTangent -outTangentType $outTangent $KeyAttr;
			}
	//		selectKey -add -k -t 33.956 joint3_translateX ;
		}
	}
}