//Creates an object shaped like a camera and constrains it to a real camera
//to allow it to be scaled independantly, and visible in renders
//Dan Ziegler 2003

global proc string findCamera(){
	$selected = `ls -sl`;
	if(size($selected)<1){
		error "please select a camera";
	}
	$camera = $selected[0];
	$shapes = `listRelatives -s $selected`;
	string $camShape="";
	for($shape in $shapes){
		if(`objectType $shape`=="camera"){
			$camShape=$shape;
		}
   	}
	if(size($camShape)<1){
		error "please select a camera";
	}
	return $camera;
}


global proc cameraDummy(){
	//Make sure camera is selected
	$camera = `findCamera`;

	//Create standin geometry
	$dummy = ($camera+"Dummy");
	if(`objExists $dummy`){
		delete $dummy;
	}
	createNode transform -n $dummy;
	$body = `polyCube -w 0.5 -h 0.85 -d 1.3 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -tx 1 -ch 1 -n ($camera+"_body")`;
	setAttr ($body[0]+".tz") 0.65;
	setAttr ($body[0]+".ty") 0.1;
	parent $body[0] $dummy;

	$lens = `cylinder -p 0 0 0 -ax 0 0 1 -ssw 0 -esw 360 -r 0.25 -hr 1.5 -d 3 -ut 0 -tol 0.01 -s 6 -nsp 1 -ch 1 -n ($camera+"_lens")`;
	setAttr ($lens[0]+".tz") -0.19;
	parent $lens[0] $dummy;

	$reel_a = `cylinder -p 0 0 0 -ax 1 0 0 -ssw 0 -esw 360 -r 0.5 -hr 1 -d 3 -ut 0 -tol 0.01 -s 6 -nsp 1 -ch 1 -n ($camera+"_reel_a")`;
	nurbsPrimitiveCap 3 1 0; 
	setAttr ($reel_a[0]+".ty") 0.2;
	setAttr ($reel_a[0]+".tz") 1.4;
	parent $reel_a[0] $dummy;

	$reel_b = `cylinder -p 0 0 0 -ax 1 0 0 -ssw 0 -esw 360 -r 0.5 -hr 1 -d 3 -ut 0 -tol 0.01 -s 6 -nsp 1 -ch 1 -n ($camera+"_reel_b")`;
	nurbsPrimitiveCap 3 1 0; 
	setAttr ($reel_b[0]+".ty") 0.6;
	setAttr ($reel_b[0]+".tz") 0.75;
	parent $reel_b[0] $dummy;

	//Constrain to real camera
	pointConstraint $camera $dummy;
	orientConstraint $camera $dummy;

	select $dummy;
}

