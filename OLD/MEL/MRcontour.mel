global proc MRcontour() 
{
	//the controls' default values
	global float $contour_zdelta = 10.0;
	global float $contour_ndelta = 35.0;
	global int $contour_d_m = 1;
	global int $contour_d_l = 0;
	global int $contour_d_i = 0;
	global int $contour_d_c = 0;
	global int $contour_minlevel = 1;
	global int $contour_maxlevel = 1;
	global float $shader_sim_w = 0.2;
	global float $shader_sim_c[] = {0.0,0.0,0.0};
	global float $shader_rand_w = 0.2;
	global float $shader_rand_c[] = {0.0,0.0,0.0};
	global float $shader_randtrans_w = 0.2;
	global float $shader_randtrans_c[] = {0.0,0.0,0.0};
	global float $shader_curv_w1 = 0.2;
	global float $shader_curv_w2 = 0.3;
	global float $shader_curv_c[] = {0.0,0.0,0.0};
	global float $shader_facol_f = 0.5;
	global float $shader_facol_w = 0.5;
	global float $shader_depf_nz = -10.0;
	global float $shader_depf_nc[] = {255.0,0.0,0.0};
	global float $shader_depf_nw = 2;
	global float $shader_depf_fz = -25.0;
	global float $shader_depf_fc[] = {0,0,255};
	global float $shader_depf_fw = 0.5;
	global float $shader_frmfd_f1 = 3;
	global float $shader_frmfd_c1[] = {1.0,1.0,1.0};
	global float $shader_frmfd_w1 = 0.5;
	global float $shader_frmfd_f2 = 10.0;
	global float $shader_frmfd_c2[] = {0.0,0.0,0.0};
	global float $shader_frmfd_w2 = 0.2;
	global float $shader_layth_c[] = {0.0,0.0,0.0};
	global float $shader_layth_w = 0.2;
	global float $shader_layth_f = 0.5;
	global float $shader_wfc_c[] = {0.0,0.0,0.0};
	global float $shader_wfc_w1 = 0.2;
	global float $shader_wfc_w2 = 0.5;
	global float $shader_wfld_c[] = {0.0,0.0,0.0};
	global float $shader_wfld_w1 = 0.1;
	global float $shader_wfld_w2 = 0.3;
	global float $shader_wfld_d1 = 0.0;
	global float $shader_wfld_d2 = 0.0;
	global float $shader_wfld_d3 = 0.0;
	global float $shader_wfl_c[] = {0.0,0.0,0.0};
	global float $shader_wfl_w1 = 0.1;
	global float $shader_wfl_w2 = 0.3;
	global string $shader_wfl_l = "";
	global float $shader_com_nz = -12.0;
	global float $shader_com_nc[] = {255.0,0.0,0.0};
	global float $shader_com_nw = 0.5;
	global float $shader_com_fz = -18.0;
	global float $shader_com_fc[] = {0.0,0.0,255.0};
	global float $shader_com_fw = 0.1;
	global float $shader_com_f = 0.5;
	global string $shader_com_l = "";
	global float $shader_com_mf = 0.5;
	global float $output_only_c[] = {1.0,1.0,1.0};
	global int $output_only_g = 0;
	global int $output_only_m = 0;
	global int $output_cp_g = 0;
	global int $output_cp_m = 0;
	global int $output_ps_sz = 5;
	global float $output_ps_sc = 1.0;
	global float $output_ps_b = 0.0;
	global float $output_ps_d = 1.0;
	global int $output_ps_t = 0;
	global int $output_ps_l = 0;
	global float $output_ps_d1 = 1.0;
	global float $output_ps_d2 = 1.0;
	global float $output_ps_d3 = 0.0;
	global float $output_ps_frac = 0.5;
	global string $output_ps_fn = "";

	if (!`window -exists ContourWin`)
	{
		window -title "Contour" -resizeToFitChildren true ContourWin;
			scrollLayout -horizontalScrollBarThickness 0;
			columnLayout -adjustableColumn true;
			//layout--"Contour Contrast Function"
				frameLayout -label "Contour Contrast Function" -borderStyle "etchedIn";
				columnLayout -adj false -cal "center";
					string $form = `formLayout`;
						$b1=`floatSliderGrp -field true -l "zdelta" -columnWidth 1 100 -min 0 -max 100 -pre 2
								-v $contour_zdelta
								-cc "$contour_zdelta = #1"`; 
						$b2=`floatSliderGrp -field true -l "ndelta" -columnWidth 1 100 -min 0 -max 100 -pre 2
								-v $contour_ndelta
								-cc "$contour_ndelta = #1"`; 
						$b3=`checkBoxGrp -ncb 4 -l "" -columnWidth 1 100
							-l1 "diff_mat" -v1 $contour_d_m 
							-cc1 "$contour_d_m = #1"
							-l2 "diff_label" -v2 $contour_d_l
							-cc2 "$contour_d_l = #1"
							-l3 "diff_index" -v3 $contour_d_i
							-cc3 "$contour_d_i = #1"
							-l4 "contrast" -v4 $contour_d_c
							-cc4 "$contour_d_c = #1"`;
						$b4=`intSliderGrp -field true -l "min_level" -columnWidth 1 100 -min 0 -max 100 
								-v $contour_minlevel
								-cc "$contour_minlevel = #1"`; 
						$b5=`intSliderGrp -field true -l "max_level" -columnWidth 1 100 -min 0 -max 100 
								-v $contour_maxlevel
								-cc "$contour_maxlevel = #1"`; 

						formLayout -edit
							-attachForm		$b1	"top"	5

							-attachControl		$b2	"top"	5	$b1

							-attachControl		$b3	"top"	5	$b2
							-attachControl		$b4	"top"	5	$b3
							-attachControl		$b5	"top"	5	$b4
					$form;
					setParent ..;
				setParent ..;
			setParent ..;

			//layout--"Contour Shader"
				frameLayout -label "Contour Shader" -borderStyle "etchedIn";
				columnLayout -adj false -cal "center" shader;
					string $form = `formLayout`;
						$b1=`optionMenuGrp -label ""  -columnWidth 1 100 -cc "changeshader" shadermenu`;
							menuItem -label "contour_shader_simple";
							menuItem -label "contour_shader_randomwidth";
							menuItem -label "contour_shader_randomtransparency";
							menuItem -label "contour_shader_curvature";
							menuItem -label "contour_shader_factorcolor";
							menuItem -label "contour_shader_depthfade";
							menuItem -label "contour_shader_framefade";
							menuItem -label "contour_shader_layerthinner";
							menuItem -label "contour_shader_widthfromcolor";
							menuItem -label "contour_shader_widthfromlightdir";
							menuItem -label "contour_shader_widthfromlight";
							menuItem -label "contour_shader_combi"; 
						setParent ..;

						columnLayout -adj false -cal "center" shader1;
							colorSliderGrp -label "Color" -columnWidth 1 100
									-rgb $shader_sim_c[0] $shader_sim_c[1] $shader_sim_c[2]
									-cc "float $v[] = `colorSliderGrp -q -rgb col__ct_sim`;$shader_sim_c[0] = $v[0];$shader_sim_c[1] = $v[1];$shader_sim_c[2] = $v[2]"
									-dc "float $v[] = `colorSliderGrp -q -rgb col__ct_sim`;$shader_sim_c[0] = $v[0];$shader_sim_c[1] = $v[1];$shader_sim_c[2] = $v[2]"
									col__ct_sim;
							floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
								-v $shader_sim_w
								-cc "$shader_sim_w = #1";
						setParent ..;
					setParent ..;
				setParent ..;

			//layout--"Contour Output Shader"
				frameLayout -label "Contour Output Shader" -borderStyle "etchedIn";
				columnLayout -adj false -cal "center" output;
					string $form = `formLayout`;
						$b1=`optionMenuGrp -label ""  -columnWidth 1 100 -cc "changeoutput" outputmenu`;
							menuItem -label "contour_only";
							menuItem -label "contour_composite";
							menuItem -label "contour_ps";
						setParent ..;

						columnLayout -adj false -cal "center" output1;
							colorSliderGrp -label "background" -columnWidth 1 100
									-rgb $output_only_c[0] $output_only_c[1] $output_only_c[2]
									-cc "float $v[] = `colorSliderGrp -q -rgb col__op_bg`;$output_only_c[0] = $v[0];$output_only_c[1] = $v[1];$output_only_c[2] = $v[2]"
									-dc "float $v[] = `colorSliderGrp -q -rgb col__op_bg`;$output_only_c[0] = $v[0];$output_only_c[1] = $v[1];$output_only_c[2] = $v[2]"
									col__op_bg;
							checkBoxGrp -ncb 2 -l "" -columnWidth 1 100
								-l1 "glow" -v1 $output_only_g 
								-cc1 "$output_only_g = #1"
								-l2 "maxcomp" -v2 $output_only_m
								-cc2 "$output_only_m = #1";
						setParent ..;
					setParent ..;
				setParent ..;

			//layout--"Convert"
				frameLayout -label "Convert" -borderStyle "etchedIn";
				columnLayout -adj false -cal "center" cvt;
					string $form = `formLayout`;
						$b1=`textFieldGrp -columnWidth 1 100 -label "File" -text ""`;
						$b2 = `button -label "Browse" -command ("MR_fileBrowser " + $b1)`;
						$b3 = `button -label "Convert" -w 240 -command ("Convertfile " + " " + $b1)`;

						formLayout -edit
							-attachForm		$b1	"top"	5
							-attachForm		$b2	"top"	5	
							-attachControl		$b2	"left"	5	$b1
							-attachControl		$b3	"top"	5	$b2
							-attachForm		$b3	"left"	100	
					$form;
				setParent ..;
			setParent ..;

		showWindow ContourWin;
	}
}
global proc MR_fileBrowser(string $control)
{
	string $result = `fileDialog -directoryMask "*.mi"`;

	if ($result != "")
		textFieldGrp -edit -text $result $control;	
}

global proc changeshader()	//rebuild the layout of Contour Shader
{
	global float $shader_sim_w;
	global float $shader_sim_c[];
	global float $shader_rand_w;
	global float $shader_rand_c[];
	global float $shader_randtrans_w;
	global float $shader_randtrans_c[];
	global float $shader_curv_w1;
	global float $shader_curv_w2;
	global float $shader_curv_c[];
	global float $shader_facol_f;
	global float $shader_facol_w;
	global float $shader_depf_nz;
	global float $shader_depf_nc[];
	global float $shader_depf_nw;
	global float $shader_depf_fz;
	global float $shader_depf_fc[];
	global float $shader_depf_fw;
	global float $shader_frmfd_f1;
	global float $shader_frmfd_c1[];
	global float $shader_frmfd_w1;
	global float $shader_frmfd_f2;
	global float $shader_frmfd_c2[];
	global float $shader_frmfd_w2;
	global float $shader_layth_c[];
	global float $shader_layth_w;
	global float $shader_layth_f;
	global float $shader_wfc_c[];
	global float $shader_wfc_w1;
	global float $shader_wfc_w2;
	global float $shader_wfld_c[];
	global float $shader_wfld_w1;
	global float $shader_wfld_w2;
	global float $shader_wfld_d1;
	global float $shader_wfld_d2;
	global float $shader_wfld_d3;
	global float $shader_wfl_c[];
	global float $shader_wfl_w1;
	global float $shader_wfl_w2;
	global string $shader_wfl_l;
	global float $shader_com_nz;
	global float $shader_com_nc[];
	global float $shader_com_nw;
	global float $shader_com_fz;
	global float $shader_com_fc[];
	global float $shader_com_fw;
	global float $shader_com_f;
	global string $shader_com_l;
	global float $shader_com_mf;

	setParent shader;
	string $shd = `optionMenuGrp -q -v shadermenu`;
	if ($shd == "contour_shader_simple")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_sim_c[0] $shader_sim_c[1] $shader_sim_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_sim`;$shader_sim_c[0] = $v[0];$shader_sim_c[1] = $v[1];$shader_sim_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_sim`;$shader_sim_c[0] = $v[0];$shader_sim_c[1] = $v[1];$shader_sim_c[2] = $v[2]"
				col__sd_sim;
			floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_sim_w
				-cc "$shader_sim_w = #1";
	}
	else if ($shd == "contour_shader_randomwidth")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_rand_c[0] $shader_rand_c[1] $shader_rand_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_rand`;$shader_rand_c[0] = $v[0];$shader_rand_c[1] = $v[1];$shader_rand_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_rand`;$shader_rand_c[0] = $v[0];$shader_rand_c[1] = $v[1];$shader_rand_c[2] = $v[2]"
				col__sd_rand;

			floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_rand_w
				-cc "$shader_rand_w = #1";
	}
	else if ($shd == "contour_shader_randomtransparency")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_randtrans_c[0] $shader_randtrans_c[1] $shader_randtrans_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_randtr`;$shader_randtrans_c[0] = $v[0];$shader_randtrans_c[1] = $v[1];$shader_randtrans_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_randtr`;$shader_randtrans_c[0] = $v[0];$shader_randtrans_c[1] = $v[1];$shader_randtrans_c[2] = $v[2]"
				col__sd_randtr;
			floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_randtrans_w
				-cc "$shader_randtrans_w = #1";
	}
	else if ($shd == "contour_shader_curvature")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_curv_c[0] $shader_curv_c[1] $shader_curv_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_curv`;$shader_curv_c[0] = $v[0];$shader_curv_c[1] = $v[1];$shader_curv_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_curv`;$shader_curv_c[0] = $v[0];$shader_curv_c[1] = $v[1];$shader_curv_c[2] = $v[2]"
				col__sd_curv;
			floatSliderGrp -field true -l "min_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_curv_w1
				-cc "$shader_curv_w1 = #1";
			floatSliderGrp -field true -l "max_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_curv_w2
				-cc "$shader_curv_w2 = #1";
	}
	else if ($shd == "contour_shader_factorcolor")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			floatSliderGrp -field true -l "factor" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_facol_f
				-cc "$shader_facol_f = #1";
			floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_facol_w
				-cc "$shader_facol_w = #1";
	}
	else if ($shd == "contour_shader_depthfade")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			floatSliderGrp -field true -l "near_z" -columnWidth 1 100 -min -5000 -max 0 -pre 2
				-v $shader_depf_nz
				-cc "$shader_depf_nz = #1";
			colorSliderGrp -label "near_color" -columnWidth 1 100
				-rgb $shader_depf_nc[0] $shader_depf_nc[1] $shader_depf_nc[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_depf`;$shader_depf_nc[0] = $v[0];$shader_depf_nc[1] = $v[1];$shader_depf_nc[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_depf`;$shader_depf_nc[0] = $v[0];$shader_depf_nc[1] = $v[1];$shader_depf_nc[2] = $v[2]"
				col__sd_depf;
			floatSliderGrp -field true -l "near_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_depf_nw
				-cc "$shader_depf_nw = #1";
			floatSliderGrp -field true -l "far_z" -columnWidth 1 100 -min -5000 -max 0 -pre 2
				-v $shader_depf_fz
				-cc "$shader_depf_fz = #1";
			colorSliderGrp -label "far_color" -columnWidth 1 100
				-rgb $shader_depf_fc[0] $shader_depf_fc[1] $shader_depf_fc[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_depf_fc[0] = $v[0];$shader_depf_fc[1] = $v[1];$shader_depf_fc[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_depf_fc[0] = $v[0];$shader_depf_fc[1] = $v[1];$shader_depf_fc[2] = $v[2]"
				col1;
			floatSliderGrp -field true -l "far_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_depf_fw
				-cc "$shader_depf_fw = #1";

	}
	else if ($shd == "contour_shader_framefade")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			floatSliderGrp -field true -l "frame1" -columnWidth 1 100 -min 0 -max 5000 -pre 1
				-v $shader_frmfd_f1
				-cc "$shader_frmfd_f1 = #1";
			colorSliderGrp -label "color1" -columnWidth 1 100
				-rgb $shader_frmfd_c1[0] $shader_frmfd_c1[1] $shader_frmfd_c1[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_frf`;$shader_frmfd_c1[0] = $v[0];$shader_frmfd_c1[1] = $v[1];$shader_frmfd_c1[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_frf`;$shader_frmfd_c1[0] = $v[0];$shader_frmfd_c1[1] = $v[1];$shader_frmfd_c1[2] = $v[2]"
				col__sd_frf;
			floatSliderGrp -field true -l "width1" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_frmfd_w1
				-cc "$shader_frmfd_w1 = #1";
			floatSliderGrp -field true -l "frame2" -columnWidth 1 100 -min 0 -max 5000 -pre 1
				-v $shader_frmfd_f2
				-cc "$shader_frmfd_f2 = #1";
			colorSliderGrp -label "color2" -columnWidth 1 100
				-rgb $shader_frmfd_c2[0] $shader_frmfd_c2[1] $shader_frmfd_c2[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_frmfd_c2[0] = $v[0];$shader_frmfd_c2[1] = $v[1];$shader_frmfd_c2[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_frmfd_c2[0] = $v[0];$shader_frmfd_c2[1] = $v[1];$shader_frmfd_c2[2] = $v[2]"
				col1;
			floatSliderGrp -field true -l "width2" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_frmfd_w2
				-cc "$shader_frmfd_w2 = #1";

	}
	else if ($shd == "contour_shader_layerthinner")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_layth_c[0] $shader_layth_c[1] $shader_layth_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_lay`;$shader_layth_c[0] = $v[0];$shader_layth_c[1] = $v[1];$shader_layth_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_lay`;$shader_layth_c[0] = $v[0];$shader_layth_c[1] = $v[1];$shader_layth_c[2] = $v[2]"
				col__sd_lay;
			floatSliderGrp -field true -l "width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_layth_w
				-cc "$shader_layth_w = #1";
			floatSliderGrp -field true -l "factor" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_layth_f
				-cc "$shader_layth_f = #1";
	}
	else if ($shd == "contour_shader_widthfromcolor")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_wfc_c[0] $shader_wfc_c[1] $shader_wfc_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfc`;$shader_wfc_c[0] = $v[0];$shader_wfc_c[1] = $v[1];$shader_wfc_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfc`;$shader_wfc_c[0] = $v[0];$shader_wfc_c[1] = $v[1];$shader_wfc_c[2] = $v[2]"
				col__sd_wfc;
			floatSliderGrp -field true -l "min_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfc_w1
				-cc "$shader_wfc_w1 = #1";
			floatSliderGrp -field true -l "max_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfc_w2
				-cc "$shader_wfc_w2 = #1";
	}
	else if ($shd == "contour_shader_widthfromlightdir")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_wfld_c[0] $shader_wfld_c[1] $shader_wfld_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfld`;$shader_wfld_c[0] = $v[0];$shader_wfld_c[1] = $v[1];$shader_wfld_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfld`;$shader_wfld_c[0] = $v[0];$shader_wfld_c[1] = $v[1];$shader_wfld_c[2] = $v[2]"
				col__sd_wfld;
			floatSliderGrp -field true -l "min_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfld_w1
				-cc "$shader_wfld_w1 = #1";
			floatSliderGrp -field true -l "max_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfld_w2
				-cc "$shader_wfld_w2 = #1";
			floatSliderGrp -field true -l "light_dir" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $shader_wfld_d1
				-cc "$shader_wfld_d1 = #1";
			floatSliderGrp -field true -l "" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $shader_wfld_d2
				-cc "$shader_wfld_d2 = #1";
			floatSliderGrp -field true -l "" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $shader_wfld_d3
				-cc "$shader_wfld_d3 = #1";
	}
	else if ($shd == "contour_shader_widthfromlight")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			colorSliderGrp -label "Color" -columnWidth 1 100
				-rgb $shader_wfl_c[0] $shader_wfl_c[1] $shader_wfl_c[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfl`;$shader_wfl_c[0] = $v[0];$shader_wfl_c[1] = $v[1];$shader_wfl_c[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_wfl`;$shader_wfl_c[0] = $v[0];$shader_wfl_c[1] = $v[1];$shader_wfl_c[2] = $v[2]"
				col__sd_wfl;
			floatSliderGrp -field true -l "min_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfl_w1
				-cc "$shader_wfl_w1 = #1";
			floatSliderGrp -field true -l "max_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_wfl_w2
				-cc "$shader_wfl_w2 = #1";
			textFieldGrp -label "light" -columnWidth 1 100
				-text $shader_wfl_l
				-cc "$shader_wfl_l = \"#1\"";
	}
	else if ($shd == "contour_shader_combi")
	{
		deleteUI shader1;
		columnLayout -adj false -cal "center" shader1;
			floatSliderGrp -field true -l "near_z" -columnWidth 1 100 -min -5000 -max 0 -pre 2
				-v $shader_com_nz
				-cc "$shader_com_nz = #1";
			colorSliderGrp -label "near_color" -columnWidth 1 100
				-rgb $shader_com_nc[0] $shader_com_nc[1] $shader_com_nc[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col__sd_com`;$shader_com_nc[0] = $v[0];$shader_com_nc[1] = $v[1];$shader_com_nc[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col__sd_com`;$shader_com_nc[0] = $v[0];$shader_com_nc[1] = $v[1];$shader_com_nc[2] = $v[2]"
				col__sd_com;
			floatSliderGrp -field true -l "near_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_com_nw
				-cc "$shader_com_nw = #1";
			floatSliderGrp -field true -l "far_z" -columnWidth 1 100 -min -5000 -max 0 -pre 2
				-v $shader_com_fz
				-cc "$shader_com_fz = #1";
			colorSliderGrp -label "far_color" -columnWidth 1 100
				-rgb $shader_com_fc[0] $shader_depf_fc[1] $shader_depf_fc[2]
				-cc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_com_fc[0] = $v[0];$shader_com_fc[1] = $v[1];$shader_com_fc[2] = $v[2]"
				-dc "float $v[] = `colorSliderGrp -q -rgb col1`;$shader_com_fc[0] = $v[0];$shader_com_fc[1] = $v[1];$shader_com_fc[2] = $v[2]"
				col1;
			floatSliderGrp -field true -l "far_width" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_com_fw
				-cc "$shader_com_fw = #1";
			floatSliderGrp -field true -l "factor" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_com_f
				-cc "$shader_com_f = #1";
			textFieldGrp -label "light" -columnWidth 1 100
				-text $shader_com_l
				-cc "$shader_com_l = \"#1\"";
			floatSliderGrp -field true -l "light_min_factor" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $shader_com_mf
				-cc "$shader_com_mf = #1";

	}
}
global proc changeoutput()	//rebuild the layout of Convert
{
	global float $output_only_c[];
	global int $output_only_g;
	global int $output_only_m;
	global int $output_cp_g;
	global int $output_cp_m;
	global int $output_ps_sz;
	global float $output_ps_sc;
	global float $output_ps_b;
	global float $output_ps_d;
	global int $output_ps_t;
	global int $output_ps_l;
	global float $output_ps_d1;
	global float $output_ps_d2;
	global float $output_ps_d3;
	global float $output_ps_frac;
	global string $output_ps_fn;

	setParent output;
	string $shd = `optionMenuGrp -q -v outputmenu`;
	if ($shd == "contour_only")
	{
		deleteUI output1;
		columnLayout -adj false -cal "center" output1;
			colorSliderGrp -label "background" -columnWidth 1 100
					-rgb $output_only_c[0] $output_only_c[1] $output_only_c[2]
					-cc "float $v[] = `colorSliderGrp -q -rgb col__op_oly`;$output_only_c[0] = $v[0];$output_only_c[1] = $v[1];$output_only_c[2] = $v[2]"
					-dc "float $v[] = `colorSliderGrp -q -rgb col__op_oly`;$output_only_c[0] = $v[0];$output_only_c[1] = $v[1];$output_only_c[2] = $v[2]"
					col__op_oly;
			checkBoxGrp -ncb 2 -l "" -columnWidth 1 100
				-l1 "glow" -v1 $output_only_g 
				-cc1 "$output_only_g = #1"
				-l2 "maxcomp" -v2 $output_only_m
				-cc2 "$output_only_m = #1";
	}
	else if ($shd == "contour_composite")
	{
		deleteUI output1;
		columnLayout -adj false -cal "center" output1;
			checkBoxGrp -ncb 2 -l "" -columnWidth 1 100
				-l1 "glow" -v1 $output_only_g 
				-cc1 "$output_cp_g = #1"
				-l2 "maxcomp" -v2 $output_only_m
				-cc2 "$output_cp_m = #1";
	}
	else if ($shd == "contour_ps")
	{
		deleteUI output1;
		columnLayout -adj false -cal "center" output1;
			intSliderGrp -field true -l "paper_size" -columnWidth 1 100 -min 0 -max 100 
				-v $output_ps_sz
				-cc "$output_ps_sz = #1"; 
			floatSliderGrp -field true -l "paper_scale" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $output_ps_sc
				-cc "$output_ps_sc = #1";
			floatSliderGrp -field true -l "paper_transform_b" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $output_ps_b
				-cc "$output_ps_b = #1";
			floatSliderGrp -field true -l "paper_transform_d" -columnWidth 1 100 -min 0 -max 100 -pre 2
				-v $output_ps_d
				-cc "$output_ps_d = #1";
			checkBoxGrp -ncb 2 -l "" -columnWidth 1 100
				-l1 "title" -v1 $output_ps_t 
				-cc1 "$output_ps_t = #1"
				-l2 "landscape" -v2 $output_ps_l
				-cc2 "$output_ps_l = #1";
			floatSliderGrp -field true -l "ink_stroke_dir" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $output_ps_d1
				-cc "$output_ps_d1 = #1";
			floatSliderGrp -field true -l "" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $output_ps_d2
				-cc "$output_ps_d2 = #1";
			floatSliderGrp -field true -l "" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $output_ps_d3
				-cc "$output_ps_d3 = #1";
			floatSliderGrp -field true -l "ink_min_frac" -columnWidth 1 100 -min 0 -max 1 -pre 2
				-v $output_ps_frac
				-cc "$output_ps_frac = #1";
			textFieldGrp -label "file_name" -columnWidth 1 100
				-text $output_ps_fn
				-cc "$output_ps_fn = \"#1\"";
	}
}


global proc Convertfile(string $file)
{
	global float $contour_zdelta;
	global float $contour_ndelta;
	global int $contour_d_m;
	global int $contour_d_l;
	global int $contour_d_i;
	global int $contour_d_c;
	global int $contour_minlevel;
	global int $contour_maxlevel;
	global float $shader_sim_w;
	global float $shader_sim_c[];
	global float $shader_rand_w;
	global float $shader_rand_c[];
	global float $shader_randtrans_w;
	global float $shader_randtrans_c[];
	global float $shader_curv_w1;
	global float $shader_curv_w2;
	global float $shader_curv_c[];
	global float $shader_facol_f;
	global float $shader_facol_w;
	global float $shader_depf_nz;
	global float $shader_depf_nc[];
	global float $shader_depf_nw;
	global float $shader_depf_fz;
	global float $shader_depf_fc[];
	global float $shader_depf_fw;
	global float $shader_frmfd_f1;
	global float $shader_frmfd_c1[];
	global float $shader_frmfd_w1;
	global float $shader_frmfd_f2;
	global float $shader_frmfd_c2[];
	global float $shader_frmfd_w2;
	global float $shader_layth_c[];
	global float $shader_layth_w;
	global float $shader_layth_f;
	global float $shader_wfc_c[];
	global float $shader_wfc_w1;
	global float $shader_wfc_w2;
	global float $shader_wfld_c[];
	global float $shader_wfld_w1;
	global float $shader_wfld_w2;
	global float $shader_wfld_d1;
	global float $shader_wfld_d2;
	global float $shader_wfld_d3;
	global float $shader_wfl_c[];
	global float $shader_wfl_w1;
	global float $shader_wfl_w2;
	global string $shader_wfl_l;
	global float $shader_com_nz;
	global float $shader_com_nc[];
	global float $shader_com_nw;
	global float $shader_com_fz;
	global float $shader_com_fc[];
	global float $shader_com_fw;
	global float $shader_com_f;
	global string $shader_com_l;
	global float $shader_com_mf;
	global float $output_only_c[];
	global int $output_only_g;
	global int $output_only_m;
	global int $output_cp_g;
	global int $output_cp_m;
	global int $output_ps_sz;
	global float $output_ps_sc;
	global float $output_ps_b;
	global float $output_ps_d;
	global int $output_ps_t;
	global int $output_ps_l;
	global float $output_ps_d1;
	global float $output_ps_d2;
	global float $output_ps_d3;
	global float $output_ps_frac;
	global string $output_ps_fn;

	string $fname = "E:/MentalRay/shader.pl";
	$fileId = `fopen $fname "w"`;
	$str = "#!/usr/local/bin/perl\n\n$line0 = 'link \"contour.so\"\n';\n\n$line1 = '$include \"contour.mi\"\n';\n\n$line2 = '\n\ncontour store \"contour_store_function\" ()\ncontour contrast \"contour_contrast_function_levels\" (\n";
	$str += "";
	$str += "\"zdelta\"	"+$contour_zdelta+",\n";
	$str += "\"ndelta\"	"+$contour_ndelta+",\n";
	$str += "\"diff_mat\"	"+($contour_d_m==1?"on":"off")+",\n";
	$str += "\"diff_label\"	"+($contour_d_l==1?"on":"off")+",\n";
	$str += "\"diff_index\"	"+($contour_d_i==1?"on":"off")+",\n";
	$str += "\"contrast\"		"+($contour_d_c==1?"on":"off")+",\n";
	$str += "\"min_level\"		"+$contour_minlevel+",\n";
	$str += "\"max_level\"		"+$contour_maxlevel+"\n";
	$str += ")\n\n';\n\n$line3 = '\n\noutput \"contour,rgba\" \"";
	string $shader = `optionMenuGrp -q -v outputmenu`;
	$str += $shader+"\" (\n";
	if ($shader == "contour_only")
	{
		$str += "\"background\"		"+$output_only_c[0]+" "+$output_only_c[1]+" "+$output_only_c[2]+" 1.0,\n";
		$str += "\"glow\"	"+($output_only_g==1?"on":"off")+",\n";
		$str += "\"maxcomp\"	"+($output_only_m==1?"on":"off")+"\n";
	}
	else if ($shader == "contour_composite")
	{
		$str += "\"glow\"		"+($output_cp_g==1?"on":"off")+",\n";
		$str += "\"maxcomp\"	"+($output_cp_m==1?"on":"off")+"\n";
	}
	else if ($shader == "contour_ps")
	{
		$str += "\"paper_size\"		"+$output_ps_sz+",\n";
		$str += "\"paper_scale\"	"+$output_ps_sc+",\n";
		$str += "\"paper_transform_b\"		"+$output_ps_b+",\n";
		$str += "\"paper_transform_d\"		"+$output_ps_d+",\n";
		$str += "\"title\"		"+($output_ps_t==1?"on":"off")+",\n";
		$str += "\"landscape\"	"+($output_ps_l==1?"on":"off")+",\n";
		$str += "\"ink_stroke_dir\"	"+$output_ps_d1+" "+$output_ps_d2+" "+$output_ps_d3+",\n";
		$str += "\"ink_min_frac\"	"+$output_ps_frac+",\n";
		$str += "\"file_name\"		"+$output_ps_fn+"\n";
	}

	$str += ")\n\n';";
	$str += "\n\n$line4 = '\n\ncontour \"";
	string $shd = `optionMenuGrp -q -v shadermenu`;
	$str += $shd+"\" (\n";
	if ($shd == "contour_shader_simple")
	{
		$str += "\"color\"		"+$shader_sim_c[0]+" "+$shader_sim_c[1]+" "+$shader_sim_c[2]+" 1.0,\n";
		$str += "\"width\"		"+$shader_sim_w+"\n";
	}
	else if ($shd == "contour_shader_randomwidth")
	{
		$str += "\"color\"		"+$shader_rand_c[0]+" "+$shader_rand_c[1]+" "+$shader_rand_c[2]+" 1.0,\n";
		$str += "\"width\"		"+$shader_rand_w+"\n";
	}
	else if ($shd == "contour_shader_randomtransparency")
	{
		$str += "\"color\"		"+$shader_randtrans_c[0]+" "+$shader_randtrans_c[1]+" "+$shader_randtrans_c[2]+" 1.0,\n";
		$str += "\"width\"		"+$shader_randtrans_w+"\n";
	}
	else if ($shd == "contour_shader_curvature")
	{
		$str += "\"color\"		"+$shader_curv_c[0]+" "+$shader_curv_c[1]+" "+$shader_curv_c[2]+" 1.0,\n";
		$str += "\"min_width\"		"+$shader_curv_w1+",\n";
		$str += "\"max_width\"		"+$shader_curv_w2+"\n";
	}
	else if ($shd == "contour_shader_factorcolor")
	{
		$str += "\"factor\"		"+$shader_facol_f+",\n";
		$str += "\"width\"		"+$shader_facol_w+"\n";
	}
	else if ($shd == "contour_shader_depthfade")
	{
		$str += "\"near_z\"		"+$shader_depf_nz+",\n";
		$str += "\"near_color\"		"+$shader_depf_nc[0]+" "+$shader_depf_nc[1]+" "+$shader_depf_nc[2]+" 1.0,\n";
		$str += "\"near_width\"		"+$shader_depf_nw+",\n";
		$str += "\"far_z\"		"+$shader_depf_fz+",\n";
		$str += "\"far_color\"		"+$shader_depf_fc[0]+" "+$shader_depf_fc[1]+" "+$shader_depf_fc[2]+" 1.0,\n";
		$str += "\"far_width\"		"+$shader_depf_fw+"\n";
	}
	else if ($shd == "contour_shader_framefade")
	{
		$str += "\"frame1\"		"+$shader_frmfd_f1+",\n";
		$str += "\"color1\"		"+$shader_frmfd_c1[0]+" "+$shader_frmfd_c1[1]+" "+$shader_frmfd_c1[2]+" 1.0,\n";
		$str += "\"width1\"		"+$shader_frmfd_w1+",\n";
		$str += "\"frame2\"		"+$shader_frmfd_f2+",\n";
		$str += "\"color2\"		"+$shader_frmfd_c2[0]+" "+$shader_frmfd_c2[1]+" "+$shader_frmfd_c2[2]+" 1.0,\n";
		$str += "\"width2\"		"+$shader_frmfd_w2+"\n";
	}
	else if ($shd == "contour_shader_layerthinner")
	{
		$str += "\"color\"		"+$shader_layth_c[0]+" "+$shader_layth_c[1]+" "+$shader_layth_c[2]+" 1.0,\n";
		$str += "\"width\"		"+$shader_layth_w+",\n";
		$str += "\"factor\"		"+$shader_layth_f+"\n";
	}
	else if ($shd == "contour_shader_widthfromcolor")
	{
		$str += "\"color\"		"+$shader_wfc_c[0]+" "+$shader_wfc_c[1]+" "+$shader_wfc_c[2]+" 1.0,\n";
		$str += "\"min_width\"		"+$shader_wfc_w1+",\n";
		$str += "\"max_width\"		"+$shader_wfc_w2+"\n";
	}
	else if ($shd == "contour_shader_widthfromlightdir")
	{
		$str += "\"color\"		"+$shader_wfld_c[0]+" "+$shader_wfld_c[1]+" "+$shader_wfld_c[2]+" 1.0,\n";
		$str += "\"min_width\"		"+$shader_wfld_w1+",\n";
		$str += "\"max_width\"		"+$shader_wfld_w2+",\n";
		$str += "\"light_dir\"		"+$shader_wfld_d1+" "+$shader_wfld_d2+" "+$shader_wfld_d3+"\n";
	}
	else if ($shd == "contour_shader_widthfromlight")
	{
		$str += "\"color\"		"+$shader_wfl_c[0]+" "+$shader_wfl_c[1]+" "+$shader_wfl_c[2]+" 1.0,\n";
		$str += "\"min_width\"		"+$shader_wfl_w1+",\n";
		$str += "\"max_width\"		"+$shader_wfl_w2+",\n";
		$str += "\"light\"		"+$shader_wfl_l+"\n";
	}
	else if ($shd == "contour_shader_combi")
	{
		$str += "\"near_z\"		"+$shader_com_nz+",\n";
		$str += "\"near_color\"		"+$shader_com_nc[0]+" "+$shader_com_nc[1]+" "+$shader_com_nc[2]+" 1.0,\n";
		$str += "\"near_width\"		"+$shader_com_nw+",\n";
		$str += "\"far_z\"		"+$shader_com_fz+",\n";
		$str += "\"far_color\"		"+$shader_com_fc[0]+" "+$shader_com_fc[1]+" "+$shader_com_fc[2]+" 1.0,\n";
		$str += "\"far_width\"		"+$shader_com_fw+",\n";
		$str += "\"factor\"		"+$shader_com_f+",\n";
		$str += "\"light\"		"+$shader_com_l+",\n";
		$str += "\"light_min_factor\"		"+$shader_com_mf+"\n";
	}

	$str += "\n)\n\n';";

	fprint $fileId $str;
	fclose $fileId;
	string $fname = `textFieldGrp -q -fileName $file`;
	string $buffer[];
	tokenize $fname "/" $buffer;
	$name = $buffer[size($buffer)-1];
	
	$fname = substitute(".mi",$name,"");
	string $buf[];
	tokenize $fname "." $buf;
	$k = int($buf[1]);
	$file = $buf[0]+"."+$k+".mi";
	while(`filetest -r $file`)
	{
		$fn = 	substitute(".mi",$file,"");
		system ("E:/MentalRay/run "+$fn+" "+$k);
		$k++;
		$file = $buf[0]+"."+$k+".mi";
	}
}