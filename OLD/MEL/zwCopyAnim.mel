/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: 黄仲维
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwCopyAnim(string $lowOrHigh)
{
	fileBrowserDialog -mode 0 -fileCommand ("zwCopyAnimProc \"" + $lowOrHigh + "\"") -fileType "mayaBinary" -actionName "OK";
}

global proc zwCopyAnimProc(string $lowOrHigh, string $filename, string $fileType)
{
	file -r -type "mayaBinary" -namespace "CopyAnim" -options "v=0" $filename;

	if ($lowOrHigh == "low2high")
		catch (`zwCopyAnimLow2high`);
	else if ($lowOrHigh == "high2low")
		catch (`zwCopyAnimHigh2low`);

	cycleCheck -e off;
	file -removeReference $filename;
}

global proc zwCopyAnimLow2high()
{
	string $source, $dest, $buf[], $buf1[], $buf2[], $buf3[];

	string $joints[] = {
		"MASTER",
		"footCon_l",
		"footCon_r",
		"torso",
		"loBackA",
		"loBackB",
		"chestA",
		"shoulder_l",
		"arm_l",
		"elbow_l",
		"wrist_l",
		"shoulder_r",
		"arm_r",
		"elbow_r",
		"wrist_r",
		"neckA",
		"neckB",
		"world_wristCon_l",
		"world_wristCon_r"};

	if (!`pluginInfo -query -loaded "animImportExport.mll"`)
		loadPlugin -quiet "animImportExport.mll";

	string $filename = `internalVar -userTmpDir` + "alan.anim";
	for ($joint in $joints)
	{
		$buf = `ls -long ("CopyAnim:*_" + $joint)`;
		clear $buf1;
		for ($node in $buf)
		{
			tokenize $node "|" $buf2;
			if (`gmatch $buf2[0] "*_MASTER"`)
				$buf1[size($buf1)] = $node;
		}
		if (`size $buf1` != 1)
			continue;
		$source = $buf1[0];

		$buf = `ls -long ("*_" + $joint)`;
		for ($dest in $buf)
		{
			sysFile -delete $filename;
			select $source;
			if (!catch(`file -exportSelected -type "animExport" $filename`))
			{
				select $dest;
				file -import -type "animImport" -rpr "a" -options ";targetTime=4;copies=1;option=replaceCompletely;pictures=0;connect=0;" $filename;
			}
			$buf1 = `ls $dest`;
			print ($buf1[0] + "\n");
		}
	}

//	上半身问题
/*	$buf = {"loBackA", "loBackB", "chestA"};
	for ($joint in $buf)
	{
		$buf1 = `ls -long ("*_" + $joint)`;
		for ($dest in $buf1)
		{
			scaleKey -valueScale -1 ($dest + ".rotateX");
			scaleKey -valueScale -1 ($dest + ".rotateZ");
			$buf2 = `ls $dest`;
			print ($buf2[0] + ".rotateX\n");
			print ($buf2[0] + ".rotateZ\n");
		}
	}
*/
//	名字问题
	$buf = {"l", "r"};
	for ($leftOrRight in $buf)
	{
		$buf1 = `ls -long ("CopyAnim:soldierthin_wrist_" + $leftOrRight)`;
		clear $buf2;
		for ($node in $buf1)
		{
			tokenize $node "|" $buf3;
			if (`gmatch $buf3[0] "*_MASTER"`)
				$buf2[size($buf2)] = $node;
		}
		if (`size $buf2` != 1)
			continue;
		$source = $buf2[0];

		$buf1 = `ls -long ("*_wristCon_" + $leftOrRight)`;
		clear $buf2;
		for ($node in $buf1)
		{
			if (!`gmatch $node ("*_world_wristCon_" + $leftOrRight)`)
				$buf2[size($buf2)] = $node;
		}
		for ($dest in $buf2)
		{
			sysFile -delete $filename;
			select $source;
			if (!catch(`file -exportSelected -type "animExport" $filename`))
			{
				select $dest;
				file -import -type "animImport" -rpr "a" -options ";targetTime=4;copies=1;option=replaceCompletely;pictures=0;connect=0;" $filename;
			}
			$buf1 = `ls $dest`;
			print ($buf1[0] + "\n");
		}
	}

	sysFile -delete $filename;
}

global proc zwCopyAnimHigh2low()
{
	string $source, $dest, $buf[], $buf1[], $buf2[], $buf3[];

	string $joints[] = {
		"MASTER",
		"footCon_l",
		"footCon_r",
		"torso",
		"loBackA",
		"loBackB",
		"chestA",
		"shoulder_l",
		"arm_l",
		"elbow_l",
		"wrist_l",
		"shoulder_r",
		"arm_r",
		"elbow_r",
		"wrist_r",
		"neckA",
		"neckB",
		"world_wristCon_l",
		"world_wristCon_r"};

	if (!`pluginInfo -query -loaded "animImportExport.mll"`)
		loadPlugin -quiet "animImportExport.mll";

	string $filename = `internalVar -userTmpDir` + "alan.anim";
	for ($joint in $joints)
	{
		$buf = `ls -long ("CopyAnim:*_" + $joint)`;
		clear $buf1;
		for ($node in $buf)
		{
			tokenize $node "|" $buf2;
			if (`gmatch $buf2[0] "*_MASTER"`)
				$buf1[size($buf1)] = $node;
		}
		if (`size $buf1` != 1)
			continue;
		$source = $buf1[0];

		$buf = `ls -long ("*_" + $joint)`;
		for ($dest in $buf)
		{
			sysFile -delete $filename;
			select $source;
			if (!catch(`file -exportSelected -type "animExport" $filename`))
			{
				select $dest;
				file -import -type "animImport" -rpr "a" -options ";targetTime=4;copies=1;option=replaceCompletely;pictures=0;connect=0;" $filename;
			}
			$buf1 = `ls $dest`;
			print ($buf1[0] + "\n");
		}
	}

//	上半身问题
/*	$buf = {"loBackA", "loBackB", "chestA"};
	for ($joint in $buf)
	{
		$buf1 = `ls -long ("*_" + $joint)`;
		for ($dest in $buf1)
		{
			scaleKey -valueScale -1 ($dest + ".rotateX");
			scaleKey -valueScale -1 ($dest + ".rotateZ");
			$buf2 = `ls $dest`;
			print ($buf2[0] + ".rotateX\n");
			print ($buf2[0] + ".rotateZ\n");
		}
	}
*/
//	名字问题
	$buf = {"l", "r"};
	for ($leftOrRight in $buf)
	{
		$buf1 = `ls -long ("CopyAnim:*_wristCon_" + $leftOrRight)`;
		clear $buf2;
		for ($node in $buf1)
		{
			tokenize $node "|" $buf3;
			if (`gmatch $buf3[0] "*_MASTER"` && !`gmatch $node ("CopyAnim:*_world_wristCon_" + $leftOrRight)`)
				$buf2[size($buf2)] = $node;
		}
		if (`size $buf2` != 1)
			continue;
		$source = $buf2[0];

		$buf1 = `ls -long ("soldierthin_wrist_" + $leftOrRight)`;
		for ($dest in $buf1)
		{
			sysFile -delete $filename;
			select $source;
			if (!catch(`file -exportSelected -type "animExport" $filename`))
			{
				select $dest;
				file -import -type "animImport" -rpr "a" -options ";targetTime=4;copies=1;option=replaceCompletely;pictures=0;connect=0;" $filename;
			}

			$buf2 = `ls $dest`;
			print ($buf2[0] + "\n");
		}
	}

	sysFile -delete $filename;
}