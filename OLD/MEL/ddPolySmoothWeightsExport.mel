/*  This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: poly_smooth_weights_export v1.0
''    Author: s.d.serbos
''    Last Updated: June 02 2005
''    Update/Change this file at: Julii FreeMAN
''    http://www.highend3d.com/maya/mel/?section=animation#945
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/

//----------------------------------------------------------------------------------------------------------------
// MODIFY THIS AT YOUR OWN RISK
//
// Creation Date:  23 March 2001
// Author:         S. D. Serbos <serbos@alpha.fdu.edu> & Julii FreeMAN
// Home Pages    http://alpha.fdu.edu/~serbos
//     http://www.sorceron.com
// 
//
//  Procedure Name:
//
//      ddPolySmoothWeightsExport (version 0.1 beta)   (Bug reports are welcome) 
//
//  Description:
//
//      This script will export polygon point weights to a text file. You can
//  use "sds_poly_smooth_weights_import.mel" to re-import these weights at a later time.
// 
// 
//
//
//  Instructions:
//
//
// 1) Make sure you have a directory called "pwt" in your current Project.
// 1) Select a polygon model that is "soft bound" to a skeleton.
// 2) Run the script.
// 3) In a few seconds (depending on the size of your Polygon model your point weights
//    should be safe in a text file on your hardrive.
//
//   Comments:
//  
// Before you run this script make sure you create a directory called "pwt" in your current Project.
// If your object is called "Body", then the text file containing the weight assignments
// will be called "Body.pwt".
// Bug reports are welcome.
// 
//
// History:
//
// 30 September 2004
// ----------------
// The birthday of this script.
//----------------------------------------------------------------------------------------------------------------
global proc ddPolyWeightExportFileName ( string $fileName, string $fileType )
{
 global string $ddPolyWeightExportFileName ;
 $ddPolyWeightExportFileName = $fileName;
}

global proc ddPolySmoothWeightsExport()
{
 

 string $usersel[] = `ls -sl` ;

 for ($element in $usersel)
 { 
  string $ShapeOfElement[] = `ls  -dagObjects -sl -hd 1 -type mesh $element` ;   
  if ($ShapeOfElement[0] != "")
  { 
   string $objHistory[] = `listHistory $ShapeOfElement[0]` ;
   string $isBound[] = `ls  -typ  skinCluster $objHistory` ;

   int $totalSkinClustersFound = `size $isBound` ;
   if  ($totalSkinClustersFound != 0)
   {
    $element = `substitute "|" $element ""` ;
    string $directory = `workspace -q -rd` ;

    global string $ddPolyWeightExportFileName ;
    fileBrowser ("ddPolyWeightExportFileName", "Export", "", 1);

    if($ddPolyWeightExportFileName == "") continue ;
    
    string $pointWeightsFileName = ($ddPolyWeightExportFileName + ".pwt") ;

    string $buffer[];
    tokenize $pointWeightsFileName "." $buffer ;
    $pointWeightsFileName = ($buffer[0] + ".pwt") ;
    //string $pointWeightsFileName = ( $directory + "pwt/" + $element +".pwt" ) ; 

    $fileIdw=`fopen $pointWeightsFileName "w"` ;
    fprint $fileIdw ("") ;
    fclose $fileIdw ;
    
    $fileIda=`fopen $pointWeightsFileName "a"` ;
    
    string $skinClusterJoints[] = `listConnections ($isBound[0] + ".matrix")` ;
    int $totalJointsFound = `size $skinClusterJoints` ;
    print ("TOTAL JOINTS: "+$totalJointsFound+"\n") ;
    int $i ;
    waitCursor -state on ;
    for ($i = 0 ; $i < $totalJointsFound  ; $i++)
    { 
     //print ("\n this is for joint" + $i + "\n") ;
     string $Attr = ($isBound[0] + ".weightList[*].weights[" + $i + "]") ;
     float $jointEffects[] =  `getAttr $Attr` ;
     string $dummy = "" ;
     for ($jointEffect in $jointEffects)
     {
      $dummy = ($dummy +$jointEffect+" " ) ;
     }
     print ("JOINT "+$i+": "+$skinClusterJoints[$i] + "\n") ; 
     fprint $fileIda  ($skinClusterJoints[$i] + "\n") ;
     $dummy = ($dummy + "\n") ;
     //print $dummy ;
     fprint $fileIda $dummy ;
    }
    fclose $fileIda ;
    waitCursor -state off ;
   }
  }
  print ("\nFINISHED WRITING PWT FILE FOR: "+$element+"\n") ;
 }
}

//End of file.