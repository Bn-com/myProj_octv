/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc kcEFXPresetCmd()
{
   int $dlight = 1;
   int $dmat   = 1;
   int $enray  = 1;
   int $enrfl  = 1;
   int $cambg  = 1;

// delete all light in the scene
   if($dlight == 1)
   {
      delete `ls -type light`;
   }
   
// delete all mat in the scene
   if($dmat == 1)
   {
      string $matlist[] = `ls -mat -type shadingEngine`;
      string $undeled[] = {"lambert1","particleCloud1","initialParticleSE","initialShadingGroup"};
      string $clearlist[] = stringArrayRemove($undeled, $matlist);
      delete $clearlist;           
   }

// set render global to enable raytrace rendering.   
   if($enray == 1)
   {       
         setAttr defaultRenderQuality.enableRaytracing 1;
         setAttr defaultRenderQuality.reflections 0;
         setAttr defaultRenderQuality.refractions 0;
         setAttr defaultRenderQuality.shadows 0;
         setAttr defaultRenderQuality.rayTraceBias 0;
   }
   
// set all geometry's reflection and refraction render option;  
   if($enrfl == 1)
   {
   	string $geo[] = `ls -noIntermediate -type "mesh" -type "nurbsSurface"`;
   	string $tmpgeo;
   	for($tmpgeo in $geo)
   	{
   	   setAttr ($tmpgeo + ".visibleInReflections") 1;
           setAttr ($tmpgeo + ".visibleInRefractions") 1;
           
           // set to default shader
           sets -edit -forceElement initialShadingGroup $tmpgeo;	
   	}
   }
   
// added by KC

	if ($cambg == 1)
	{
		string $camera[] = `ls -type camera`;

		for ($item in $camera)
			setAttr ($item + ".backgroundColor") -type double3 1 1 1;
	}

// optimize scene

    kcDefaultOptimizeSceneCmd;
}