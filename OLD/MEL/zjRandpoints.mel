/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjRandpoints()
{
	if (!`window -exists randpointsWin`)
	{
		window -title "Randpoints Tool" -w 255 -h 140 randpointsWin;
			formLayout layout_formlayout;
			$cont1 = `floatFieldGrp -label "range " -numberOfFields 2 -value1 0.0 -value2 0.0
					-columnWidth 1 40 -columnWidth 2 50 -columnWidth 3 50`;
			$cont2 = `radioButtonGrp  -numberOfRadioButtons 2 -select 2  -labelArray2 "selected vertexes" "all vertexes" 
					-columnWidth 1 120 -columnWidth 2 120`;
	
			$cont3 = `button -label "Apply"   -h 27 -command ("randpfunc "+$cont1+" "+$cont2)`;
			$cont4 = `button -label "Close"   -h 27 -command "deleteUI -window  randpointsWin"`;
			formLayout -edit
				-attachForm		$cont1		"top"		15
				-attachForm		$cont1		"left"		30
			
				-attachControl		$cont2		"top"		10	$cont1
				-attachForm		$cont2		"left"		30

				-attachControl		$cont3		"top"		10	$cont2
				-attachForm		$cont3		"left"		0
				-attachPosition		$cont3      	"right"		0       50
				
				-attachControl		$cont4		"top"		10	$cont2
				-attachControl		$cont4		"left"		10	$cont3
				-attachPosition		$cont4      	"right"		0       100

			layout_formlayout;

	}
	showWindow randpointsWin;
}

global proc randpfunc(string $cont1,string $cont2)
{
	float $up = `floatFieldGrp -q -v1 $cont1`;
	float $lower = `floatFieldGrp -q -v2 $cont1`;
	int $op = `radioButtonGrp -q -select $cont2`;
	if ($op == 2)
	{
		string $sel[] = `ls -sl`;
		if (`nodeType $sel[0]` == "transform")
		{
			int $ptnum[] = `polyEvaluate -v`;
			int $num = $ptnum[0];
			for ($i=0;$i<$num;$i++)
			{
				float $val = `rand $up $lower`;
				string $str = $sel[0]+".pnts["+$i+"]";
				moveVertexAlongDirection -n $val $str;
			}
		}
		else error "please select a polygon";
	}
	else 
	{
		string $sel[] = `ls -sl`;
		string $vertexes[];
		clear $vertexes;
		string $buffer[];
		tokenize $sel[0] "." $buffer;
		string $prefix = $buffer[0];
		int $k = 0;
		for ($j=0;$j<size($sel);$j++)
		{
			string $buf[];
			int $num = `tokenize $sel[$j] ":" $buf`;
			if ($num == 2)
			{
				$vertexes[$k++] = $buf[0]+"]";
				$vertexes[$k++] = $prefix+".vtx["+$buf[1];
			}
			else $vertexes[$k++] = $buf[0];

		}
		for ($i=0;$i<size($vertexes);$i++)
		{
			float $val = `rand $up $lower`;
			string $point[];
			tokenize $vertexes[$i] "[]" $point;
			int $ord = $point[1];
			string $str = $prefix+".pnts["+$ord+"]";
			moveVertexAlongDirection -n $val $str;
		}
	}
}