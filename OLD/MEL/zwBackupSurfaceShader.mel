proc enableRendering( int $enable )
{
  string $materials[] = `ls -materials`;

  for ( $mat in $materials )
    shadingConnection -e -cs $enable ( $mat + ".color" );
}

global proc zwBackupSurfaceShader(int $restore)
{
//	enableRendering $restore;
//	return;

	string $attr = "originalSurfaceShader";

	string $shadingEngines[] =  `ls -type shadingEngine`;
	for ($shadingEngine in $shadingEngines)
	{
		string $current[] = `listConnections -plugs true ($shadingEngine + ".surfaceShader")`;
		if ($restore)
		{
			if (!`attributeExists $attr $shadingEngine`)
			{
				continue;
			}
			string $original[] = `listConnections -plugs true ($shadingEngine + "." + $attr)`;
			if (size($original) == 0)
			{
				continue;
			}
			if (size($current) == 1)
			{
				if ($original[0] == $current[0])
				{
					continue;
				}
			}
			eval ("connectAttr -force \"" + $original[0] + "\" \"" + $shadingEngine + ".surfaceShader\"");
		}
		else
		{
			if (!`objExists "whiteLambert"`)
			{
				shadingNode -asShader -name "whiteLambert" "lambert";
				setAttr "whiteLambert.color" -type double3 1 1 1;
			}
			if (size($current) == 1)
			{
				if ($current[0] == "whiteLambert.outColor")
				{
					continue;
				}
				if (!`attributeExists $attr $shadingEngine`)
				{
					addAttr -longName $attr -dataType "float3" $shadingEngine;
				}
				if (!`isConnected $current[0] ($shadingEngine + "." + $attr)`)
				{
					connectAttr -force $current[0] ($shadingEngine + "." + $attr);
				}
			}
			eval ("connectAttr -force \"whiteLambert.outColor\" \"" + $shadingEngine + ".surfaceShader\"");
		}
	}
}