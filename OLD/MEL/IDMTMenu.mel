global proc IDMTMenu()
{
	string $str = `about -version`;
	string $version = zwAboutVersion();

	if (`about -batch`)
		return;

//	if(`menu -exists IDMTMainMenu`)
//		deleteUI IDMTMainMenu;

	global string $gMainWindow;

	string $parent = "IDMTMainMenu";//`menu -label "IDMT" -parent $gMainWindow -tearOff true -allowOptionBoxes true IDMTMainMenu`;
	menu -edit -deleteAllItems $parent;
	setParent -menu $parent;

	menuItem -label "Checkin Tool..." -command "source zwCheckin.mel; zwCheckin;";
	menuItem -label "Muster..." -annotation "提交网络渲染" -command "source MusterCheckin.mel; global int $zwMusterIsBatch; $zwMusterIsBatch = 0; MusterCheckin";
	menuItem -label "Plex..." -annotation "文件制作信息" -command "zwPlexMini";
	menuItem -label "Update Avi..." -command "source zwUpdateAvi.mel; zwUpdateAvi;";
/* removed by huangzhongwei, 20070109
	menuItem -divider true;

	menuItem -label "Browse Scene..." -command "zjViewFileIcon";
	menuItem -label "fast open scene" -checkBox off -c mhMinimizeOpenSceneTime minOpnScTime;

	menuItem -divider true;

	int $snapshotSize = 64;
	if (`optionVar -exists "snapshotSize"`)
		$snapshotSize = `optionVar -query "snapshotSize"`;
	if (!`optionVar -exists "snapshotSave"`)
		optionVar -intValue "snapshotSave" 1;
	menuItem -label ("Snapshot (" + $snapshotSize + "×" + $snapshotSize + ")") -command "NewSaveFilewithIcon" snapshotMenu;
	menuItem -command "zjSnapshotOption" -optionBox true;
*/
	menuItem -divider true;


// General Tools
	menuItem -parent $parent -label "General Tools" -subMenu true -tearOff true -allowOptionBoxes true;
/* removed by huangzhongwei, 20070109
		int $autoBackupEnable = false;
		if (`optionVar -exists "autoBackupEnable"`)
			$autoBackupEnable = `optionVar -query "autoBackupEnable"`;
		menuItem -label "Auto Backup" -command "autoBackupMenu" -checkBox $autoBackupEnable autoBackupMenu;
		menuItem -optionBox true -command "zwAutoBackup";
*/
	//	menuItem -label "Rename iff Sequence..." -command "ycRenameIff";
		if ((float)$version >= 2011)
		{
			menuItem -label "Sequence Rename..." -command "python (\"try:\\n\\treload(idmt.standalone.SequenceTool)\\nexcept:\\n\\timport idmt.standalone.SequenceTool\\ndialog = idmt.standalone.SequenceTool.Dialog()\\ndialog.show()\")";
		}
		else
		{
			menuItem -label "Sequence Rename..." -command "python (\"import pumpThread as pt\\npt.initializePumpThread()\\ntry:\\n\\treload(idmt.standalone.SequenceTool)\\nexcept:\\n\\timport idmt.standalone.SequenceTool\\ndialog = idmt.standalone.SequenceTool.Dialog()\\ndialog.show()\")";
		}
	//	menuItem -label "Update Reference" -command "zwUpdateReference";
	//	menuItem -label "Delete Nodes Tool..." -command "zjDeleteNodes";
	//	menuItem -label "Import/Reference Information..." -command "source zwHistoryUI.mel; zwHistoryUI";	// removed by huangzhongwei, 20070109
		menuItem -label "Export Animation to Illusion..." -command "lr_illusionExport";
		menuItem -label "Remove Namespace" -command "zjRemoveNamespace";
	//	menuItem -label "Ali Two Objects" -command "zjAli";
		menuItem -label "Delete Empty Namespaces" -command "zwRemoveUnusedNamespace \":\"";
		menuItem -divider true;
		menuItem -label "Naming Tool..." -command "source zwNamingTool.mel; zwNamingTool";
	//	menuItem -label "Naming Tool for WinxClub..." -command "source zwNamingTool4Winx.mel; zwNamingTool4Winx";
	//	menuItem -label "Prefix Select... " -command "zxPrefixSelGUI";
	//	menuItem -label "Prefix Check/Rename..." -command "ycNamePrefixCheck";
		menuItem -label "Move Transform Type -In..." -command "zjAdjustPos";
		menuItem -label "Copy Transform..." -command "kcCopyTransform";
		menuItem -label "Convert Format..." -command "source slImgConverFormat.mel; slImgConverFormat";
		menuItem -label "Copy Files..." -command "yuCopyFile()";
		menuItem -label "OpenTempFile..." -command "yuOpenTempFile()";
    menuItem -label "openShotFileUI" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/edo_openShotFileUI.py')\")";
    menuItem -label "Command Search" -command "yuCmdSearchCmd()";
    menuItem -label "Ninja Dojo" -command "source \"//file-cluster/GDC/Resource/Support/Maya/modules/Ninja_Dojo/Ninja_Dojo.mel\"; Ninja_Dojo(\"//file-cluster/GDC/Resource/Support/Maya/modules/Ninja_Dojo/\")";



// Layout Tools
//		menuItem -parent $parent -label "Layout Tools" -subMenu true -tearOff true -allowOptionBoxes true;
//			menuItem -label "Layout Set..." -command "zjLayoutSet";


// Modeling Tools
	menuItem -parent $parent -label "Modeling Tools" -subMenu true -tearOff true -allowOptionBoxes true;
            menuItem -label "Model name auto check tool" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/edo_modelNameCheckinList.py')\")";
      //	menuItem -label "Renamer..." -command "zwRenamer";
		menuItem -label "Cleanup Model..." -command "zjCleanupModel";
		menuItem -label "Check Vertex..." -command "kcCheckVertex";
		menuItem -label "Set Smooth..." -command "kcSetSmooth";
		menuItem -label "Apply Smooth..." -command "zjTDSmooth";
	//	menuItem -label "Convert Smooth" -command "convertSmooth";
		menuItem -label "Convert to Instance" -command "kcConvert2instance";
		menuItem -label "Select Instance..." -command "source zwSelectInstance.mel; zwSelectInstance";
		menuItem -label "Truncate Mesh Name" -command "kcTruncateMeshName";
		menuItem -label "Curve on Poly" -command "zjCrvOnPolyPlugin";
		menuItem -label "Check Normal..." -command "wsRectifyPolygonNormal";
		menuItem -label "Select Instance/Non -Instance..." -command "source kcSelectInstanceMain.mel; kcSelectInstanceMain";
		menuItem -label "Convert to Instance (model has not been frozen)..." -command "kcConvert2instanceNoFreezeGUI";
		menuItem -label "Convert to Instance (New version for model frozen)..." -command "source \"//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/mel/edo/general/edo_meshSuperSnapUI.mel\"";
		menuItem -label "Model Smooth..." -command "zjModelSmooth";
		menuItem -label "Check Duplicated Objects" -command "zjCheckDup";
		menuItem -label "Delete Empty Groups" -command "mhDelNullGrp";
		menuItem -label "Paint Effects Attribute Apply..." -command "zjPfxAttrApply";
		menuItem -label "Set Paint Effect Image Path" -command "zwSetPaintEffectImage";
		menuItem -label "Hide Face Tool..." -command "bgHideFacesUI";
		menuItem -label "Set Texture Attribute..." -command "zjSetTexture_m";
		menuItem -label "Lock Pivot..." -command "zjLockPivot";
		menuItem -label "Grass Switch..." -command "zjPaintSwitch";
		menuItem -label "Multiple Replace..." -command "source \"//file-cluster/GDC/Resource/Support/Maya/scripts/zjMultiReplace.mel\";zjMultiReplace;";
		menuItem -label "Multiple Rand..." -command "zjMultiRand";
		menuItem -label "Change Group..." -command "source zwOutliner.mel; zwOutliner";
	//	menuItem -label "Replace Mushrooms" -command "zjReplacemush";	// removed by huangzhongwei, 20070109
	//	menuItem -label "Check Seam(QQShow)..." -command "zjQQModelCheck";
		menuItem -label "Check NonManifold Vertices" -command "string $poly[] = `ls -type mesh`;string $nmv[] = `polyInfo -nmv $poly`;select $nmv";
		menuItem -label "Select Polygon Planes" -command "zjGetPlanes";
		menuItem -label "Delete Smooth Nodes" -command "zjDelsmooth";
		menuItem -label "Perfect Sphere" -command "zjPerfectBall";
	//	menuItem -label "Delete Non -BlendShape History" -command "zjDelhistory {\"blendShape\", \"deleteComponent\", \"polySoftEdge\", \"polyNormalPerVertex\"}";
		menuItem -label "List Objects with Keyframe" -command "source zwListObjWithKeys.mel; zwListObjWithKeys;";

		menuItem -label "Rotate hole point to std shape" -command "rotToStdShape";
		menuItem -label "Learn Axis from object or curve ends" -command "learnAxis";
		menuItem -label "Delete Mulit Facets" -command "deletMultiFacets";
		menuItem -label "duplicate special 2" -command "specialDup2";
		menuItem -label "Check CVs" -annotation "检查可能飞点的物体" -command "zwCheckCVs";
                        menuItem -label "RoadKill" -annotation "分UV插件,需要安装才能使用" -command "RoadKill();";
    menuItem -label "Digital City Tool..." -command "source yuDigitalCityTool.mel; yuDigitalCityToolWin";



// Setup Tools
	menuItem -parent $parent -label "Setup Tools" -subMenu true -tearOff true -allowOptionBoxes true;
	//	menuItem -label "Cross -Check Setup And Texture Files" -command "jjMainCheckFile";
	//	menuItem -divider true;
                        menuItem -label "GDC_rigging_tool2014" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/edward/python/RIG/IDMT_RIG.py')\")";
                        menuItem -label "facialRiggingTool(temporary UI)" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/edo_facialRiggingToolMainUI.py')\")";
                        menuItem -label "Rigging & Simulation Tool UI" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/edward/python/edo_riggingToolMainUI/showUi.py')\")";
                        menuItem -label "Set Initial State" -command "slSavePose";
                        menuItem -label "Rigging Tools UI" -command "python(\"execfile('//file-cluster/GDC/Resource/Development/Maya/GDC/Plug/Python/GDC/COMMON/set/RIG/lynn/lynn_UI_tools_local.py')\")";
                        //menuItem -label "Rigging Tools UI" -command "python(\"execfile('//file-cluster/GDC/Resource/Development/Maya/GDC/Plug/Python/GDC/COMMON/set/RIG/lynn/lynn_UI_tools_local.py')\")";

		menuItem -divider true;
	//	menuItem -label "Create Display Layer..." -command "zjCreateLayer";
	//	menuItem -label "Create Character..." -command "kcCreateCharGUI";
	//	menuItem -divider true;
	//	menuItem -label "Export Polygon Weights" -command "sds_poly_smooth_weights_export";
	//	menuItem -label "Import Polygon Weights..." -command "sds_poly_smooth_weights_import";
		menuItem -label "Export Nurbs Weights" -command "nurbs_smooth_weights_export";
		menuItem -label "Import Nurbs Weights..." -command "nurbs_smooth_weights_import";
	//	menuItem -label "Export Cluster Weights" -command "source stExportClusterWeight.mel; stExportClusterWeight";
	//	menuItem -label "Import Cluster Weights..." -command "source stImportClusterWeight.mel; stImportClusterWeight";
		menuItem -divider true;
		menuItem -label "Mirror Skin Weights..." -command "stMirrorSkinWeights";
		menuItem -label "Mirror Cluster Weights..." -command "stMirrorClusterWeights";
		menuItem -label "Mirror Influence..." -command "mhMirrorInfluence";
		menuItem -label "Correct Blendshape Target" -command "yyCorrectBS";
		menuItem -divider true;
		menuItem -label "P -P Copy Weights..." -command "p2pCopyWeight";
	//	menuItem -label "Set Lock/Keyable..." -command "ycSetLockKeyable";
		menuItem -divider true;
	//	menuItem -label "Export Setup Info..." -command "kcExportSetup";
	//	menuItem -label "Import Setup Info..." -command "kcImportSetup";
	//	menuItem -divider true;
	//	menuItem -label "Mushroom Tool..." -command "zjMushroomExp";
	//	menuItem -label "Randomize Mushrooms..." -command "zjMushroomRand";
	//	menuItem -label "Disable Mushroom..." -command "zjDisableMush";
		menuItem -label "Joint On Curve..." -command "source ddJointOnCurve ;ddJointOnCurveUI ;" ;
		menuItem -divider true;
	//	menuItem -label "Correct Axlyx Setup" -command "kcCorrectAxlyxSetup";
	//	menuItem -divider true;
	//	menuItem -label "Panshel" -subMenu true -tearOff true;
	//		menuItem -label "Project NURBS on Poly (command)..." -command "kcProjectNurbsGUI";
	//		menuItem -label "Project Eye/Mouth on NURBS head..." -command "kcProjectNurbsOnNurbsGUI";
	//		menuItem -label "Fix ProjectSurf Nodes" -command "kcFixProjectSurf";
	//		setParent -menu ..;
	//	menuItem -divider true;
	//	menuItem -label "Create Template Skeleton" -command "source MB_create_template_skeleton.mel; MB_create_template_skeleton";
	//	menuItem -label "Create Final Skeleton..." -command "source MB_create_final_skeleton.mel; MB_create_final_skeleton";
	//	menuItem -divider true;
		menuItem -label "Remove Influences" -command "zjRemoveInfluences";
		menuItem -label "Constrain From Edge" -command "zxEdgeConstrain";
		menuItem -label "Export Face" -command "hbFaceExport";
		menuItem -label "Import Face" -command "hbFaceImport";
		menuItem -divider true;
		menuItem -label "Reset Joints" -command "zjResetJoints";
	//	menuItem -label "Release Channel" -command "zjReleaseChannel";
	//	menuItem -label "Group DAG Objects Under Selected" -command "zjGroupparented";
	//	menuItem -label "Reposite Detached Object" -command "zxRepositionDetach";
		menuItem -label "Remove BindPose" -command "zjRemoveBindPose";
		menuItem -label "Delete Non -Skin History" -command "zjDelhistory {\"skinCluster\"}";
		menuItem -label "Delete History" -command "slDeleteHistory {\"polySmoothFace\"}";
	//	menuItem -label "Attribute Goal..." -command "attrGoalEditor";
		menuItem -divider true;
		menuItem -label "Create Glide Deformer" -command "source createGlideDeformer.mel; createGlideDeformer;";
		menuItem -divider true;

			menuItem -label "Check Setup Scene" -annotation "Check Setup Scene" -command ("checkScene 1 2") cleanUpProject;
				menuItem -optionBox true -annotation "Check Scene Option Box" -label "Check Scene Option Box" -command ("checkScene 2 2") cleanUpSceneOptions;


// Animation Tools
	menuItem -parent $parent -label "Animation Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Shift Key..." -command "zwShiftKey";
		menuItem -label "Reset to Initial State" -command "slResetPose";
		menuItem -label "Reset to Initial SkinWeight" -command "slBrCopySkinweight";
		menuItem -label "Referenced Objects -> Import" -command "czImportRefobj";
	//	menuItem -label "Crowd Animation Create Iff File..." -command "ycProduceCamera";
		menuItem -label "Pose/Clip Editor" -subMenu true;
			menuItem -label "Create Pose..." -command "zwPE_CreatePose";
			menuItem -label "Use Pose..." -command "zwPE_UsePose";
			setParent -menu ..;
		menuItem -label "Copy Anim(low -> high)..." -command "zwCopyAnim \"low2high\"";
		menuItem -label "Copy Anim(high -> low)..." -command "zwCopyAnim \"high2low\"";
		menuItem -label "Penetration Check..." -command "zjPeneCheck";
		menuItem -label "Check BrSyncFile..." -command "slBrCheckSyncTxt";
		menuItem -label "Layer Taxi..." -command "zyLayerTaxi";
		menuItem -label "Animation Library..." -command "zwAnimLib \"Bratz\"";
		menuItem -label "Create Motion Curve" -command "zjMotionCurve";
		menuItem -label "Bake Anim to Locator" -command "zzjUtilityTools \"bakeAnim\"";
		menuItem -divider true;

		menuItem -label "Check Animation Scene" -annotation "Check Animation Scene" -command ("checkScene 1 3") cleanUpProject;
			menuItem -optionBox true -annotation "Check Scene Option Box" -label "Check Scene Option Box" -command ("checkScene 2 3") cleanUpSceneOptions;


// Texture Tools
	menuItem -parent $parent -label "Texture Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Transfer Material..." -command "zjApplyMaterial";
		menuItem -label "Reset ShadingEngines" -command "zwResetShadingEngines";
		menuItem -label "Export Material..." -command "zwExportMaterialUI";
		menuItem -label "Texture Collector..." -command "source zwTextureCollector.mel; zwTextureCollector";
	//	menuItem -label "Add Mesh Prefix..." -command "kcAddMeshPrefix";
	//	menuItem -label "Optimize Scene Size" -command "zwOptimizeSceneSizeProc";
	//	menuItem -command "zwOptimizeSceneSize" -optionBox true;
	//	menuItem -label "Optimize Scene Size" -command "zjOptimizeMat";
	//	menuItem -label "Combine Surf Luminance" -command "combineSL";
		menuItem -label "Switch Utilities..." -command "zwSwitchUtilities";
		menuItem -label "Check Texture..." -command "source zwTextureChecker.mel; zwTextureChecker";
		menuItem -label "Copy Node Attribute" -command "zjCopyattr";
		menuItem -label "Make BOT..." -command "kcMakeBot";
		menuItem -label "Copy Reverse UV..." -command "kcUVCopyReverseUV";
	//	menuItem -label "Shading Network..." -command "zjMoebiusShaderGui";
		menuItem -label "PolyTransfer2" -command "xws_uvTransfer";
		menuItem -label "Link Out Matte Opacity..." -command "zjLinkShader";
	//	menuItem -label "Moebius Shader Controller..." -command "zjMoebiusShaderController";
		menuItem -label "Convert New Shader" -command "zjConvertNewShader";
		menuItem -label "Scale All Texture..." -command "source zwScaleTexture.mel; zwScaleTexture";
		menuItem -label "Modify Texture Path..." -command "source kcModifyMapPathGUI.mel; kcModifyMapPathGUI";
		menuItem -label "Modify ArnoldStandIn Path..." -command "source ModifyStandInPathGUI.mel; ModifyStandInPathGUI";
		menuItem -label "PolyTransferUV..." -command "source zwPolyTransferUV.mel; zwPolyTransferUV";
	//	menuItem -label "Rename Mushroom's Shape..." -command "zjRenameShape";
		menuItem -label "Differ Materials..." -command "zjDifferMaterials";
		menuItem -label "Select Objects with Texture Attribute..." -command "zjSetTexture_t";
		menuItem -label "Hold Texture..." -command "source zwHoldTexture.mel; zwHoldTexture";
		menuItem -label "Select Objects with Emtpy UV" -command "kcCheckEmptyUV";
		menuItem -label "Texture Info For Selected Objects" -command "zwTextureInfo true false";
		menuItem -label "Display High Resolution Textures" -command "zwTextureInfo false true";
		menuItem -label "Freeze Glow" -command "zjFreezeGlow";
		menuItem -label "Set Hardware Resolution..." -command "zxHardwareTexturing";
		menuItem -label "Preset Z" -command "zwTaowaZ";
		menuItem -label "Delete All UvSets" -command "zjDelAlluvSet";
                        menuItem -label "convertTetrueFomatInMaya" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/edo_textrueConvertUI.py')\")";
		menuItem -divider true;
	//	menuItem -label "PeltingTools..." -command "slPeltingTools;";
		menuItem -label "AutoMap For EmpUV" -command "hqEmptyUvSet;";
		if ((float)$version >= 8.0)
		{
			menuItem -label "SSS_Shader" -command "czSubsurf_Scatter_MR";
		}
		menuItem -label "AO for Transparency" -command "source zwAssignAO.mel; zwAssignAO";
		menuItem -label "renameFN" -ann "根据贴图名字重命名节点名字" -command "slModelRenameFileNode;"; // add by wanshouong 2010-8-6


// Lighting Tools
	menuItem -parent $parent -label "Lighting Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Light Lookat" -command "source zjLocLight.mel; zjLocLight;";
		menuItem -label "Select Light -linked Objects" -command "kcLightSelLinkedObj true";
		menuItem -label "Select Inverse Light -linked Objects" -command "kcLightSelLinkedObj false";
		menuItem -label "Transfer Light..." -command "zjTransferLights";
		menuItem -label "Light Attr Tool..." -command "lightAttr";
		menuItem -label "Share Depth Shader" -command "zjSharedepth";
		menuItem -label "Toggle Maps..." -command "source zwToggleMaps.mel; zwToggleMaps \"\"";
		menuItem -label "-> bot" -annotation "所有贴图路径切换到 bot" -command "source zwToggleFormat.mel; zwToggleFormat \"[^.]+\" \"bot\"";
		menuItem -label "<- bot" -annotation "所有贴图路径从 bot 还原" -command "source zwToggleFormat.mel; zwToggleFormat \"bot\" \"\"";
		menuItem -label "-> map" -annotation "所有贴图路径切换到 map" -command "source zwToggleFormat.mel; zwToggleFormat \"[^.]+\" \"map\"";
		menuItem -label "<- map" -annotation "所有贴图路径从 map 还原" -command "source zwToggleFormat.mel; zwToggleFormat \"map\" \"\"";
		menuItem -label "-> tx" -annotation "所有贴图路径切换到 tx" -command "source zwToggleFormat.mel; zwToggleFormat \"[^.]+\" \"tx\"";
		menuItem -label "<- tx" -annotation "所有贴图路径从 tx 还原" -command "source zwToggleFormat.mel; zwToggleFormat \"tx\" \"\"";
		menuItem -label "Create Ambient Light Rig..." -command "mhAmbientOcclusionLight";
		menuItem -label "Up Light Control" -command "source zwUpLightControl.mel; zwUpLightControl";
		menuItem -label "Link lights And plane" -command "zjConnectLights";
	//	menuItem -label "Disk Based Dmaps -> Off" -command "zwDmapSaveToDisk";
		menuItem -label "Create Spot Light with Locator" -command "zwCreateSpotLight";
		menuItem -label "Smooth Dmap Filter" -command "source zwDmapFilter.mel; zwDmapFilter;";

		menuItem -divider true;
		menuItem -label "Create ShadowLight(Doc)" -command "zjHelpCallback zjCrtShdowlight";
		menuItem -label "LightFaquir" -command "hqLightFaquirRender";
		menuItem -label "Material On" -command "hqSmartMaterials 1";
		menuItem -label "Material Off" -command "hqSmartMaterials 0";
		menuItem -divider true;
	//	menuItem -label "Mental Ray Light Fog - Ray Match" -annotation "Mental Ray做Ray Match级的灯光雾。先选边界盒，再加选灯" -command "source \"//file-cluster/GDC/Resource/Support/Maya/scripts/zwRayMatch.mel\"; zwRayMatch";
		menuItem -label "Mental Ray Light Fog - parti_volume" -annotation "依次选择Boundary、spotLight、medium、camera" -command "python \"try:\\n\\treload(idmt.maya.LightFog)\\nexcept:\\n\\timport idmt.maya.LightFog\\nidmt.maya.LightFog.parti_volume()\"";
		menuItem -label "Mental Ray Light Fog - Maya" -annotation "选择一盏灯" -command "source \"//file-cluster/GDC/Resource/Support/Maya/scripts/zwLightLog.mel\"; zwLightLog";



// Crowd Tools
	menuItem -parent $parent -label "Crowd Tools" -subMenu true -tearOff true -allowOptionBoxes true;
	//	menuItem -label "Poly plane convert to Particles..." -command "ycPolygonConvertToParticles";
	//	menuItem -label "Random Split Particles..." -command "ycRandomSplitParticles";
	//	menuItem -label "Character Reorientation..." -command "ycCharacterAnimInPlace";
	//	menuItem -label "Set Position of Character..." -command "ycSetPositionOfCharacter";
	//	menuItem -label "Assign Shader" -command "ycAssignWSSwitch2";
	//	menuItem -label "Crowd Preset..." -command "mhCrowdPreset";

		menuItem -label "Massive Prime(R) Pipeline Toolkit" -command "yyMassivePipeline";
		menuItem -divider true;
		menuItem -label "Locate Crowd Material..." -command "mhGetParticleMatGUI";
		menuItem -label "Hardware Render Preset" -command "kcCrowdHwdRenderPreset";
		menuItem -label "Delete Clothes" -command "zwDelCloth" -annotation "删掉前面的一块袍";
		menuItem -divider true;
		menuItem -label "Project NURBS on Poly (command)..." -command "kcProjectNurbsGUI";
		menuItem -divider true;
		menuItem -label "Fix Triangulation" -command "tnpFixTriangulation";
		menuItem -label "Make Animation in Place" -command "kcCRCharAnimInPlace 1";
		menuItem -label "Change Speed of Master Node" -command "kcCrowdCreateSpeedMultiply";
		menuItem -divider true;
		menuItem -label "Create Locators" -subMenu true -tearOff true;
			menuItem -label "Create Locators on NURBS or Poly Surface..." -command "kcCrowdSetPosGUI";
			menuItem -label "Create a grid of jittered locators..." -command "tnpCrowdGridLocatorUI";
			menuItem -label "Create Locators on Vertexes..." -command "zjCreateParticleonVtx";
			menuItem -label "Create Locators on Particles" -command "zjCrtParticleLoc";
			setParent -menu ..;
		menuItem -divider true;
		menuItem -label "Project selected group of locators onto plane" -command "zjProjectLoc";
		menuItem -divider true;
		menuItem -label "Create Particles" -subMenu true -tearOff true;
			menuItem -label "Create Particles from Locators" -command "zjCrowdCreateParticleM";
			menuItem -label "Combine Particles" -command "zjComParticle";
			setParent -menu ..;
		menuItem -divider true;
		menuItem -label "Set Attributes&&Expressions" -subMenu true -tearOff true;
			menuItem -label "Set Attrs&&Expressions(Common)" -command "zjcreateParticleSet";
			menuItem -label "Set Attrs&&Expressions(With Camera)" -command "zjcreateParticleSet1";
			setParent -menu ..;
		menuItem -divider true;
		menuItem -label "Compute" -subMenu true -tearOff true;
			menuItem -label "Compute ParentU And ParentV for Particle" -command "kcCrowdFollowFlowField 0";
			menuItem -label "Connect Particle And Instancer" -command kcCrowdConnectParticleInstancer;
			setParent -menu ..;
	//	menuItem -label "Create Particles Kit..." -command "zjCrowdCreateParticle";
		menuItem -divider true;
		menuItem -label "Flow Field" -subMenu true -tearOff true;
			menuItem -label "Create Flow Field" -command "kcCrowdCreateFlowField";
			menuItem -label "Follow Flow Field" -command "kcCrowdFollowFlowField 2";
			menuItem -label "Paint Flow Field" -command "flowfieldPaintTool 0;";
			setParent -menu ..;
		menuItem -divider true;
		menuItem -label "Instancer" -subMenu true -tearOff true;
			menuItem -label "Show All" -command "kcCrowdShowInstancer";
			menuItem -label "Hide All" -command "kcCrowdHideInstancer";
			menuItem -label "Swap Btw Models And Boxes" -command "kcCrowdSwapInstancer";
			setParent -menu ..;

	// TRAN [06.10.2003]: add in menu items for tnpCrowdCreator
		menuItem -divider true;
		menuItem -label "Crowd Creator Based On Locators/Curves" -subMenu true -tearOff true;
			menuItem -label "Crowd Creator GUI" -command "tnpCrowdUI";
		//	menuItem -label "Project selected group of locators onto \"floor\"" -command "tnpProjectLocator \"floor\"";
			menuItem -label "Crowd Collision Detection" -command "tnpCrowdCollisionDetection 1.0";
		//	menuItem -label "Crowd Collision Avoidance";
			setParent -menu ..;
	// END

		menuItem -divider true;
		menuItem -label "Crowd Maker" -subMenu true -tearOff true;
			menuItem -label "Create..." -command "cMakerCreationUI";
			menuItem -label "Setup..." -command "cMakerSetupUI";
			menuItem -label "Add Obstacle" -command "cMakerAddObstacle";
			setParent -menu ..;

		menuItem -divider true;
		menuItem -label "Connect Z" -command "kcConnectZ";
		menuItem -divider true;
		menuItem -label "Aim focus at object" -command "shCenterFocus";

		menuItem -divider true;
		menuItem -label "Fish School..." -command "zjFishSchool";

		menuItem -divider true;
		menuItem -label "Bratz Crowd..." -command "slCrowdWin";

		menuItem -divider true;
		menuItem -label "CopyCrowd..." -command "fsCopy2DCword";

		menuItem -divider true;
		menuItem -label "Instancer To Geometry..." -command "yuInstancerToGeoTool";

		if ((float)$version == 7.0)
		{
			menuItem -divider true;
			menuItem -label "Particle On Curve" -annotation "create particle on the selected curve group" -command "zwParticleOnCurve";
		}

		menuItem -divider true;
		menuItem -label "Ninjago Crowd Tools..." -command "yuCrowdTools()";

		menuItem -divider true;
		menuItem -label "colorDancer Crowd Tools..." -command "yu_colorDancer()";

		menuItem -divider true;
		menuItem -label "Help" -command "zjHelpCallback zjCrowdtool";




// 3D Effects
	menuItem -parent $parent -label "3D Effects" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Cloth Constraint Object" -command "zjPrintConstrObj";
	//	menuItem -label "Change Particle Transform Attribute..." -command "ycChangeParticle";
		menuItem -label "Setup Trail Of Dust" -command "zxTyreDustTail";
		menuItem -label "Setup Trail Of Smoke" -command "zxSmokeTail";
		menuItem -label "Setup Steam" -command "zxfireEffect";
		if (((float)$version >= 8.5)&&((float)$version <= 2009))
		   {menuItem -label "Bake Instancer..." -command "source \"yfsBakeInstancer.mel\";yfsBakeInstancer";}

		menuItem -l "Desert Tools..." -c ("source \"fsdesertWindow\";fsdesertWindow") desertTools;

		menuItem -l "Shatter Instance..." -c ("source \"fsshatter_instance_noFreeze\";fsshatter_instance_noFreeze") fsshatter_instance_noFreeze;
//		menuItem -l "Shatter Instance AfterFreeze..." -c ("source \"fsshatter_instance_afterFreeze\";fsshatter_instance_afterFreeze") fsshatter_instance_afterFreeze;

		if ((float)$version >= 8.5)
		   {menuItem -label "Geometry Cache&&Delete BlendShape..." -command "source \"fsGeoCache.mel\";fsGeoCache";}

		menuItem -l "Bow Tools..." -c ("source \"fsBowWindow\";fsBowWindow") fsBowWindow;

		menuItem -l "InstancerOpcity Tools..." -c ("source \"fsInstancerOpcityWindow\";fsInstancerOpcityWindow") fsInstancerOpcityWindow;
		menuItem -l "Particle on Curve" -annotation "select a group of curves, this tool will creat a particle on each curve" -command "zwParticleOnCurve";

		menuItem -l "maya paritlce to max"  -command "source KrakatoaSR_Exporter.mel;";

		menuItem -l "Export Particles To Realflow..." -c "source yuExportToRealflow.mel;yuExportToRealflowWin()";

		menuItem -l "PaintableFlow" -c "source CreatePaintableFlow.mel;zzyPaintableFlowWindow()";
		menuItem -l "WaterTrickle" -c "source WaterTrickle.mel;zzyWaterTrickleWindow()";
		menuItem -l "RipplesWater" -c "source RipplesInTheWater.mel;zzyRipplesInWaterWindow()";
		menuItem -l "Fill Particle In Polygon" -c "source yu_fill_particle_in_polygon.mel; fillParticle();";

		menuItem -label "Instancer Baking..." -command "source InstancerBaking_v1.mel";

		menuItem -label "Particle Cache Tool..." -command "source yuParticleCacheTool.mel";
		menuItem -label "Combine Separate Particle Tool..." -command "source slParticleTools.mel;slParticleTools()";
		menuItem -label "Accumulation Tool..." -command "source yu_accumulation_tool.mel;tjh_rubbish_dumper()";
		menuItem -label "Particle To Line Tool..." -command "source yuParticleToLines.mel;particleToLinesToolsWin()";
		menuItem -label "Poly To Fluid" -command "source yuObjConnectFluidTool.mel;yuObjConnectFluid()";
		menuItem -label "Grow FX..." -command "source yuGrowfxTools.mel;destro_pfx()";
		menuItem -label "Rivet" -command "source yuRivet.mel;rivet()";
		menuItem -label "Particle To Houdini" -command "yuParticleToHoudini";
		menuItem -label "Confetti Particles " -command "source \"//file-cluster/GDC/Resource/Development/Maya/GDC/Plug/Python/GDC/MEL/yuConfettiParticles/yuConfettiParticles.mel\";openUI";

		menuItem -divider true;

		menuItem -label "Check Effect Scene" -annotation "Check Effect Scene" -command ("checkScene 1 4") cleanUpProject;
			menuItem -optionBox true -annotation "Check Scene Option Box" -label "Check Scene Option Box" -command ("checkScene 2 4") cleanUpSceneOptions;
		
		menuItem -label "vk_makeSoftJoint" -command "python(\"execfile('//file-cluster/GDC/Resource/Support/Maya/projects/VickytheViking/vk_softJoint.py')\")";
	








// Hair Tools
	menuItem -parent $parent -label "Hair Tools" -subMenu true -tearOff true -allowOptionBoxes true;
	//	menuItem -label "Create Pipe..." -command "ycCreatePipe";
		menuItem -label "Create Curve" -command "loadPlugin \"zjCrvOnPoly.mll\";zjCrvOnPolyPlugin";
				menuItem -command "ycCreateCurve" -optionBox true;
		menuItem -label "Create Cloth Tube" -command "source \"ycCreateClothTube.mel\";CreateClothTube";
				menuItem -command "ycCreateClothTube" -optionBox true;
		menuItem -label "Rebuild Joint" -command "source \"ycRebuildJoint.mel\";RebuildJointCommand";
				menuItem -command "ycRebuildJoint" -optionBox true;
		menuItem -label "Adjust Joint Axis..." -command "ycAdjustJointAxis";
		menuItem -label "Softbody Curve Paint..." -command "ycAdjustCurveSoftbodyWeight";
		menuItem -label "Create Syflex Cloth Tube For Curves..." -command "ycCreateSyflexClothTubeForCurves";
		menuItem -label "Create Syflex Cloth Tube For Nurbs..." -command "ycCreateSyflexClothTube";
		menuItem -label "Syflex Skin" -command "ycSyflexSkin";
		menuItem -divider true;
	//	menuItem -label "Create Joint, IK spline, Softbody..." -command "kcHairMainGUI";
	//	menuItem -label "Assign Particle Weights..." -command "kcHairAssignSelectedParticleWeightUniformDistGUI";
	//	menuItem -label "Select Particles" -command "kcSelectParticle";
	//	menuItem -label "Assign Hair DrawOrder..." -command "zjHairDraw";
	//	menuItem -label "Create Paint Effects or Strips..." -command "kcHairCreatePaintEffectGUI";
	//	menuItem -label "Create Paint Effects Light Dir Manipulator..." -command "kcHairCreateLightManipGUI";
		menuItem -label "Assign Hair Follicles..." -command "zjHairAssighFol";
	//	menuItem -label "Import Hair And Earring for BRATZ" -command "hbHairImport";
		menuItem -label "Bake Earring And GEO Hair for BRATZ" -command "hbBakeEarring";
	//	menuItem -label "Import Hair Cache For BRATZ" -command "jayehairinput";
		menuItem -label "Reset Cache File Name" -command "zjSetHaircache";
		menuItem -divider true;
		menuItem -label "Follicles Random Select" -command "zxFolSel";
		menuItem -label "Average ISO Select" -command "zxAveIso";
		menuItem -label "Create Multi Constraint" -subMenu true -tearOff true;
			menuItem -label "Rubber Band" -command "zxMultiHairConstraint 0";
			menuItem -label "Transform" -command "zxMultiHairConstraint 1";
			menuItem -label "Stick" -command "zxMultiHairConstraint 2";
			menuItem -label "Hair to Hair" -command "zxMultiHairConstraint 3";
			menuItem -label "Hair to Bunch" -command "zxMultiHairConstraint 4";
			menuItem -label "Collide Sphere" -command "zxMultiHairConstraint 5";
			menuItem -label "Collide Cube" -command "zxMultiHairConstraint 6";
		setParent -menu ..;
		menuItem -label "Select All HairSystem" -command "zjSelectAllHair";
		menuItem -label "Filter HairSystem..." -command "xy_hairtool";

//2006.03.12 add a menu to filter colliders and constraints hanjiang

		menuItem -label "Filter Hair Constraints..." -command "hjxy_hairtool";

		menuItem -label "Land Curves..." -command "landCurves";
		menuItem -label "Constraint Follow Vertex..." -command "czTrackVertex";
		menuItem -divider true;
		menuItem -label "Auto Grass..." -command "zjGrowGrass";


// Cloth Tools
	menuItem -parent $parent -label "Cloth Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Bake Cloth to Blend Shape" -command "cyBakeClothMain";
		menuItem -label "SyRemoveCache" -command "syRemoveCache";


// TD Tools
	menuItem -parent $parent -label "TD Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "TD layer tool..." -command "zlTDTools";
		menuItem -label "File Synchronizer" -command "source yyCheckinCode.mel";
		menuItem -label "Search & Delete Reference Edits" -command "yySNRRE";
		menuItem -divider true;
		menuItem -label "ParticleGen Camera..." -command "zjMXSaveCameraTrack";
	//	menuItem -label "Mushroom" -subMenu true;
	//		menuItem -label "Mushroom Setup..." -command "mrMain";
	//		menuItem -label "Mushroom Connect Field" -command "mrConnectField";
	//		menuItem -label "Mushroom Disconnect Field" -command "mrDisconnectField";
	//		menuItem -label "Mushroom Select Field" -command "mrSelectField";
	//	//	menuItem -label "Mushroom Convert Instance" -command "mrConvertInstance";
	//	//	menuItem -label "Mushroom Update Particle and Spring" -command "mrUpdateParticleAndSpring";
	//		menuItem -label "Uniform Mushroom Names..." -command "zjUniformName";
	//	setParent -menu ..;

		menuItem -label "Select Subordinates by Type..." -command "zjSelbyType";
	//	menuItem -label "Export/Import Render Layers And Matte..." -command zwRenderLayoutIO;
	//	menuItem -enable false -label "Line Smooth..." -command "zjLineSmooth(1)";
		menuItem -label "Check all DYN's sets" -command "source zwWinxCheckSets.mel; zwWinxCheckSetsBatch";
		menuItem -label "Set Soft Contour" -command "zjSetMrLine";
		menuItem -divider true;
		menuItem -label "Cache: Z: => //file-cluster/GDC" -annotation "将Cache 路径中的Z: 替换成//file-cluster/GDC" -command "python \"try:\\n\\treload(idmt.maya.cache)\\nexcept:\\n\\timport idmt.maya.cache\\nidmt.maya.cache.MakeUNC()\"";
		menuItem -label "Replace Cache Path..." -command "zwReplaceCachePath";
		menuItem -divider true;
		menuItem -label "Modify Ribs" -annotation "修改rib 文件里面的路径为绝对路径" -command "source \"//file-cluster/GDC/Resource/Support/Maya/projects/ROMA/zwModifyRib.mel\"; zwModifyRib";
		menuItem -label "贴图:路径修改" -command "source \"//file-cluster/GDC/Resource/Support/Maya/projects/VickytheViking/slCGReplaceTexturePath.mel\";slCGReplaceTexturePath;";



// Check Tools
	menuItem -parent $parent -label "Check Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "Check Mesh Name" -command "kcCheckMeshName";
		menuItem -label "Check Mesh Smooth" -command "kcCheckMeshSmooth";
	//	menuItem -label "Check Texture Map Name" -command "qmCheckMapName";
		menuItem -label "Cross -Check Setup And Texture Files" -command "jjMainCheckFile";
		menuItem -label "Check Same Name" -annotation "检查所选物体中的transform 节点名字是否唯一，结果打印在Script Editor" -command "source dwCheckSameName.mel; dwCheckSameName";
		menuItem -label "Rename Shape's Name as Transform's" -command "source zwRenameShape.mel; zwRenameShape";
		menuItem -label "Check Lighting scene file" -command lr_checkLighting;
	//	menuItem -label "Publish Rendered Images.." -command lr_image_pubonly;
		menuItem -label "Check Useless Mesh" -command "zjCheckGarbage";
	//	menuItem -label "Modify History Record..." -command "source zwCheckVersion.mel; zwCheckVersion";
		menuItem -label "Optimize Lightlinker Nodes" -command "lr_OPTtest";


// Render Tools
	menuItem -parent $parent -label "Render Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		menuItem -label "iRender" -command "source iRenderUI.mel;iRenderOptions";
		menuItem -label "Set Separate Layer..." -command "source \"//file-cluster/GDC/Resource/Support/Maya/scripts/czSetRenderLayer.mel\"; czSetRenderLayer";
		menuItem -label "IlluminaEnv..." -command "hjIlluminaEnv";
		menuItem -label "Create Depth Shader" -command "zjDepthShader";
	//      menuItem -label "Panshel Render Optimize.." -command "source lr_FixPanshelRenderUI.mel;lr_FixPanshelRenderUI;";
	//	menuItem -label "Layer list Tool..." -command "lr_layerlist";
	menuItem -label "Orient Camera..." -command "ycOrientCamera";
		menuItem -label "Reset Render Partition" -command "zwResetRenderPartition";
		menuItem -divider true;
		menuItem -label "Select Components..." -command "kcLineSelectComponentGUI";
		menuItem -label "Delete Line Objects..." -command "mhClsObjRenderLine";
		menuItem -divider true;
		menuItem -label "Setup Contour_shader_tran" -command "source zjContourshader.mel; zjContourConshader";
		menuItem -label "Render Global For Contour_shader_tran" -command "source zjContourshader.mel; zjContourGlsettings";
		menuItem -divider true;
		menuItem -label "Export Camera For Shake..." -command "shakeExport";
		menuItem -label "Composite Blur Images..." -command "zwBlur2D";
		menuItem -divider true;

		menuItem -label "Check Render Scene" -annotation "Check Render Scene" -command ("checkScene 1 5") cleanUpProject;
			menuItem -optionBox true -annotation "Check Scene Option Box" -label "Check Scene Option Box" -command ("checkScene 2 5") cleanUpSceneOptions;
		menuItem -divider true;
		menuItem -label "Read RIB Tool..." -command "readRibTool()";
		menuItem -label "Massive Eidt RIB Tool..." -command "yuEditMassRibTool()";
		menuItem -label "ShadowMap Tex Tool..." -command "yuTexTool()";
		menuItem -label "Disable all BOT's" -command "zwSetIntAttrAll \"file\" \"useCache\" false";



// FrameCycler
//	setParent -menu $parent;
//	menuItem -divider true;
//	menuItem -label "FrameCycler Playblast..." -command "FS_playblast";
//	menuItem -divider true;

//	if ((!`about -batch`) && (float)$version == 8.5 && `getenv "OFFICE_LOCATION"` == "shenzhen")
//	{
//		eval ("zwRBWmenu \"" + $parent + "\"");
//	}

// Help
	menuItem -parent $parent -label "Help" -subMenu true -tearOff true -allowOptionBoxes true IDMTMenuHelp;
		menuItem -label "General Tools" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Update Reference" -command "zjHelpCallback zwUpdateReference";
			setParent -menu ..;
		menuItem -label "Setup Tools" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Import/Export Weight" -command "zjHelpCallback stImportExportWeight";
			setParent -menu ..;
		menuItem -label "Modeling Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		//	menuItem -label "Convert Smooth" -command "zjHelpCallback convertSmooth";
			menuItem -label "Convert to Instance" -command "zjHelpCallback kcConvert2instance";
			menuItem -label "Truncate Mesh Name" -command "zjHelpCallback kcTruncateMeshName";
			setParent -menu ..;
		menuItem -label "Texture Tools" -subMenu true -tearOff true -allowOptionBoxes true;
		//	menuItem -label "Optimize Scene Size" -command "zjHelpCallback zjOptimizeMat";
		//	menuItem -label "Combine Surf Luminance" -command "zjHelpCallback combineSL";
			menuItem -label "Copy Node Attribute" -command "zjHelpCallback zjCopyattr";
			menuItem -label "Connect Switch" -command "zjHelpCallback zjConswitch";
			menuItem -label "PolyTransfer2" -command "zjHelpCallback xws_uvTransfer";
			setParent -menu ..;
		menuItem -label "Lighting Tools" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Select Light -linked Objects" -command "zjHelpCallback kcLightSelLinkedObj";
			menuItem -label "Select Inverse Light -linked Objects" -command "zjHelpCallback kcLightSelLinkedObj";
			menuItem -label "Share Depth Shader" -command "zjHelpCallback zjSharedepth";
			setParent -menu ..;
		menuItem -label "3D Effects" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Cloth Constraint Object" -command "zjHelpCallback zjPrintConstrObj";
			setParent -menu ..;
		menuItem -label "Layout Tools" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Export Camera" -command "zjHelpCallback exportCamera";
			setParent -menu ..;
	//	menuItem -label "TD Tools" -subMenu true -tearOff true -allowOptionBoxes true;
	//		menuItem -label "Mushroom" -command "zjHelpCallback mrMushroom";
	//		setParent -menu ..;
	//	menuItem -label "AIA Tools" -subMenu true -tearOff true -allowOptionBoxes true;
	//	//	menuItem -label "Check Mesh Name" -command "zjHelpCallback kcCheckMeshName";
	//		menuItem -label "Check Mesh Smooth" -command "zjHelpCallback kcCheckMeshSmooth";
	//	//	menuItem -label "Check Texture Map Name" -command "zjHelpCallback qmCheckMapName";
	//		menuItem -label "Check Transform Same Name" -command "zjHelpCallback dwCheckSameName";


// Network Render Tools
		menuItem -parent $parent -label "Network Render" -subMenu true -tearOff true -allowOptionBoxes true;
			menuItem -label "Submit Render Job..." -c "source MusterCheckin.mel; global int $zwMusterIsBatch; $zwMusterIsBatch = 0; MusterCheckin";
			menuItem -label "Assemble Split Images..." -c lr_AssembleImage;
			menuItem -label "Sequence Check..." -c lr_seq_checker;
			menuItem -label "Create Geometry By Net" -c "source yuCreateGeoByNet.mel;yuCreateGeoByNet";
			menuItem -label "Massive Render By Net" -c "source yuMassiveRender.mel;yuMassiveRenderByNet";
			menuItem -label "NetRender Help" -subMenu true;
				menuItem -label "About Explorer(English)" -c ("zjHelpCallback Mexplorer");
				menuItem -label "About Explorer(Chinese)" -c ("zjHelpCallback musterExplorer");
				menuItem -label "About Connector(English)" -c ("zjHelpCallback connectorcn");
				menuItem -label "About Connector(Chinese)" -c ("zjHelpCallback connectoren");
}

global proc autoBackupMenu()
{
	if (!`optionVar -exists "autoBackupEnable"`)
	{
		menuItem -edit -checkBox false autoBackupMenu;
		zwAutoBackup;
	}
	else
	{
		optionVar -intValue "autoBackupEnable" `menuItem -query -checkBox autoBackupMenu`;
		zwAutoBackupProc;
	}
}
/*
global proc zwRBWmenu(string $idmtMenu)
{
	string $parent = `menuItem -parent $idmtMenu -label "RBW" -subMenu true -tearOff true -allowOptionBoxes true`;
	setParent -menu $parent;

	menuItem -label "Load Hair Presets..." -command "py_loadHairPreset; python \"hp.setP2('//file-cluster/GDC/Projects/WinxClub/Project/data/presets/hairPreset', 'directory')\"";
//	menuItem -label "Make Lattice" -command "source DM_makeLattice.mel; multipleDMmakeLattice";
//	menuItem -label "Make Lattice and Group" -command "source DM_makeLatticeAndGroup.mel; DMmakeLatticeAndGroup";
	menuItem -label "Create Hair Light Set" -command "createHairLightSet";
	menuItem -label "Finalize Hair" -command "py_finalizeHair";
	menuItem -label "Set HSQ" -command "py_setHSQ(1)";
	menuItem -label "Random Rebuild Curves..." -command "zwRandomRebuildCurves";

	menuItem -label "Auto Rig" -subMenu true -tearOff true;
		menuItem -label "Save Modeling..." -command "zwRBWpy_save \"py_saveModeling\"";	// py_saveModeling
		menuItem -label "Auto Setup UI..." -command "py_autoSetupUI";
		menuItem -label "Save Setup..." -command "zwRBWpy_save \"py_saveSetup\"";	// py_saveSetup
		menuItem -label "Finalize UI..." -command "py_finalizeUI";
		menuItem -divider true;
		menuItem -label "Load Modeling..." -command "zwRBWpy_save \"py_loadModeling\"";
		menuItem -label "Load Setup..." -command "zwRBWpy_save \"py_loadSetup\"";
		setParent -menu ..;
	menuItem -label "Cloth" -subMenu true -tearOff true;
		menuItem -label "Auto Cloth Rig..." -command "zwRBWdmAutoClothRig";	// dmAutoClothRig
		setParent -menu ..;
	menuItem -label "Hairs" -subMenu true -tearOff true;
		menuItem -label "Reconnect Curve to Surface" -command "py_reconnectCurveToSurface";
		menuItem -label "Control Free Rig..." -command "py_controlFreeRig";
		menuItem -label "Set Driven Ctrls..." -command "py_setDrivenCtrls";
		menuItem -label "Make HScontroller" -command "zwRBWpy_makeHScontroller";	// py_makeHScontroller
		menuItem -label "Finalize Hair Setup" -command "py_finalizeHairSetup";
		setParent -menu ..;
}

global proc zwRBWpy_save(string $command)
{
	if (!`pluginInfo -query -loaded "saveNode"`)
	{
		loadPlugin "saveNode";
	}
	eval $command;
}

global proc zwRBWdmAutoClothRig()
{
	string $path = "//file-cluster/GDC/Resource/Support/Maya/modules/pipelineScripts_20080908/RBW/cloth";
	python ("import sys\npath = '" + $path + "'\nif not path in sys.path:\n\tsys.path.append(path)");
	python ("try:\n\treload(acr)\nexcept:\n\timport autoClothRig as acr ");
	python ("acr.dmAutoClothRig()");
}

global proc zwRBWpy_makeHScontroller()
{
	string $result = `promptDialog -message "Choose a Name" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
	if ($result == "OK")
	{
 		$text = `promptDialog -query -text`;
		py_makeHScontroller $text;
 	}
}
*/

global proc readRibTool()
{
    python("import sys");
    python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT\")");
    python("from yuReadRibTool import *");
    python("yuRendermanTool()");
}

global proc learnAxis(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyLearnRotationAxis.py\")");
}

global proc rotToStdShape(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyRotateToStandardShape.py\")");
}

global proc deletMultiFacets(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyCleanUpMultiFacet.py\")");

}

global proc specialDup2(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyTotalDuplicate.py\")");
}

global proc yySNRRE(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yySearchNReplaceReferenceEdits.py\")");
	python("yySearchNReplaceReferenceEditsGUI()");
}

global proc yuCopyFile()
{
	python("import sys");
	python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yuCopyFiles import *");
	python("winxCopyFileUI()");
}

global proc yyMassivePipeline(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyMassiveToolkitGUI.py\")");
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyMassiveToolkitFunc.py\")");
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyMassiveBuildBipedRig.py\")");
	python("yyMassiveToolkitGUI()");
}

global proc yyCorrectBS(){
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyCorrectShapeForSkinCluster.py\")");
}

global proc yuEditMassRibTool()
{
	python("import sys");
	python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yuEditRibTool import *");
	python("editRibWin()");
}

global proc yuTexTool()
{
	python("import sys");
	python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yuTexDirTool import *");
	python("texDirTool()");
}

global proc yuInstancerToGeoTool()
{
	python("import sys");
	python("sys.path.append(\"//idmt-filer/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yuInstancerToGeo import *");
	python("instancerToGeoWin()");
}

global proc yuCrowdTools()
{
	python("import sys");
	python("sys.path.append(\"//idmt-filer/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yuCrowdTools import *");
	python("yuCrowdToolsUI()");
}

global proc zwMusterTemp()
{
	int $zwMusterTemp = 0;
	if (`optionVar -exists zwMusterTemp`)
	{
		$zwMusterTemp = `optionVar -query zwMusterTemp`;
	}
	if ($zwMusterTemp >= 3)
	{
		return;
	}
	$zwMusterTemp ++;
	int $rs = `idmtDHtmlDlg -width 220 -height 320 -modal -scrollBar false -host "http://app-server/ws/Support/Working/ui/Muster.html"`;
	optionVar -intValue zwMusterTemp $zwMusterTemp;
}

global proc zwTempLog(string $type)
{
	string $info = $type + "\t" + `about -currentDate` + " " + `about -currentTime` + " " + `getenv "USERNAME"` + "\t" + `file -query -shortName -sceneName`;
	zwDebug $info;
}

global proc yuOpenTempFile()
{
	python("import sys");
	python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
	python("from yu_autoOpenTempFile import *");
}

global proc yuCmdSearchCmd()
{
	string $versionNum=`about -version`;
	if(float($versionNum)>=2014)
	{
		python("import maya.cmds as cmds");
		python("import sys");
		python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
		python("import yuCMDSearch");
		python("yuCMDSearch.install()");
	}
	else
	{
		error "请使用Maya 2014以上的版本";
	}
}
global proc yuParticleToHoudini()
{
	python("import sys");
	python("sys.path.append(\"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/yfsScripts\")");
	python("import yu_fx_mdd_obj_exporter");
	python("yu_fx_mdd_obj_exporter.runUI()");
}