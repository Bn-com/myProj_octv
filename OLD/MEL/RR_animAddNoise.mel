global proc RR_animAddNoise()
{
	if(`window -exists animAddNosieUI`)
		{
			deleteUI animAddNosieUI;
		}

	string $noiseUI = `window -title "Add Noise" -menuBar 1 -mxb 1 -s 0 animAddNosieUI`;
	menu -label "help";

	columnLayout -adjustableColumn 1 -cw 1 -rs 5;
		text -label "请选择需要添加Noise的物体";
		textFieldGrp -label "Noise 强度" -text 1 -cw2 100 100 intensity;
		textFieldGrp -label "Noise 频率" -text 1 -cw2 100 100 frequency;
		textFieldGrp -label "起始帧" -text 1001 -cw2 100 100 startFrame;
		textFieldGrp -label "结束帧" -text 1030 -cw2 100 100 endFrame;
		checkBoxGrp -label "Noise 类型:" -ncb 4 -labelArray4 "tx" "ty" "tz" "rXYZ"
								-v1 1 -v2 1 -v3 1 -v4 1 -cw5 100 50 50 50 50 style;
		button -label "添加 Noise" -h 30 -command ("animAddNosie");
		button -label "删除 Noise" -h 30 -command ("animDelNosie");
	setParent..;
	window -e -h 280 -w 320 $noiseUI;
	showWindow $noiseUI;
}

global proc animAddNosie()
{
	float $allmin = `playbackOptions -q -min`;
	float $allmax = `playbackOptions -q -max`;

	string $object[] = `ls -sl`;
	if (!`objExists $object[0]`)
		error "什么物体都没选择!";
	string $parent[] = `listRelatives -p $object[0]`;
	if ($parent[0] !=  "noiseGroup" && $object[0] != "noiseGroup")
	{
		currentTime -e $allmin;
		group -n noiseGroup $object;
		setAttr -lock 1 -keyable 0 -channelBox 0 "noiseGroup.v";
		setAttr -lock 1 -keyable 0 -channelBox 0 "noiseGroup.sx";
		setAttr -lock 1 -keyable 0 -channelBox 0 "noiseGroup.sy";
		setAttr -lock 1 -keyable 0 -channelBox 0 "noiseGroup.sz";
	}

	if (`objExists noiseGroup`)
	{
		setAttr -lock 0 "noiseGroup.tx";
		setAttr -lock 0 "noiseGroup.ty";
		setAttr -lock 0 "noiseGroup.tz";
		setAttr -lock 0 "noiseGroup.rx";
		setAttr -lock 0 "noiseGroup.ry";
		setAttr -lock 0 "noiseGroup.rz";
		cutKey -cl -t ":" -f ":" -at "tx" -at "ty" -at "tz" -at "rx" -at "ry" -at "rz" noiseGroup;
	}

	float $ins = float(`textFieldGrp -q -text intensity`);
	float $fre = float(`textFieldGrp -q -text frequency`);
	int $sf = int(`textFieldGrp -q -text startFrame`);
	int $ef = int(`textFieldGrp -q -text endFrame`);

	int $type1 = `checkBoxGrp -q -v1 style`;
	int $type2 = `checkBoxGrp -q -v2 style`;
	int $type3 = `checkBoxGrp -q -v3 style`;
	int $type4 = `checkBoxGrp -q -v4 style`;



	for($i=$sf; ;)
	{
		float $value = 0.5;
		if($type1)
		{
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.tx;
		}
		if($type2)
		{
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.ty;
		}
		if($type3)
		{
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.tz;
		}
		if($type4)
		{
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.rx;
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.ry;
			setKeyframe  -t $i -v ($value*(float)$ins*(noise($i*rand(5)))) noiseGroup.rz;
		}

		if ($i>$ef)	break;
		$i = $i + (float)$fre;
	}
	setAttr noiseGroup.tx -lock 1;
	setAttr noiseGroup.ty -lock 1;
	setAttr noiseGroup.tz -lock 1;
	setAttr noiseGroup.rx -lock 1;
	setAttr noiseGroup.ry -lock 1;
	setAttr noiseGroup.rz -lock 1;
	select -r noiseGroup;
}

global proc animDelNosie()
{
	if (`objExists noiseGroup` == 0)
	{
		//error "场景中没有Noise组";
		return ;
	}

	string $children[] = `listRelatives -children noiseGroup`;
	string $parent[] = `listRelatives -parent noiseGroup`;
	float $allmin = `playbackOptions -q -min`;

	if((!`objExists $parent[0]`) && (`objExists $children[0]`))
	{
		currentTime -e $allmin;
		setAttr -lock 0 "noiseGroup.tx";
		setAttr -lock 0 "noiseGroup.ty";
		setAttr -lock 0 "noiseGroup.tz";
		setAttr -lock 0 "noiseGroup.rx";
		setAttr -lock 0 "noiseGroup.ry";
		setAttr -lock 0 "noiseGroup.rz";
		setAttr "noiseGroup.tx" 0;
		setAttr "noiseGroup.ty" 0;
		setAttr "noiseGroup.tz" 0;
		setAttr "noiseGroup.rx" 0;
		setAttr "noiseGroup.ry" 0;
		setAttr "noiseGroup.rz" 0;
		parent -w $children;
		delete noiseGroup;
	}

	if((`objExists $parent[0]`) && (`objExists $children[0]`))
	{
		currentTime -e $allmin;
		setAttr -lock 0 "noiseGroup.tx";
		setAttr -lock 0 "noiseGroup.ty";
		setAttr -lock 0 "noiseGroup.tz";
		setAttr -lock 0 "noiseGroup.rx";
		setAttr -lock 0 "noiseGroup.ry";
		setAttr -lock 0 "noiseGroup.rz";
		setAttr "noiseGroup.tx" 0;
		setAttr "noiseGroup.ty" 0;
		setAttr "noiseGroup.tz" 0;
		setAttr "noiseGroup.rx" 0;
		setAttr "noiseGroup.ry" 0;
		setAttr "noiseGroup.rz" 0;
		parent $children $parent[0];
		delete noiseGroup;
	}
}