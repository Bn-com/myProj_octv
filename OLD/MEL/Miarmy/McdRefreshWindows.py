## +
## ===================================================================
## Copyright(C) 2010 - 2012 Basefount Technology (Hong Kong) Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## (Hong Kong) Limitd. ("Basefount") and/or its licensors, which is
## protected by Hong Kong copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right 
## to use, modify, and incorporate this Data into other products for 
## purposes authorized by the Basefount software license agreement, 
## without fee.
##
## The copyright notices in the Software and this entire statement, 
## including the above license grant, this restriction and the 
## following disclaimer, must be included in all copies of the 
## Software, in whole or in part, and all derivative works of 
## the Software, unless such copies or derivative works are solely 
## in the form of machine-executable object code generated by a 
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNTAIN AND/OR ITS LICENSORS 
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNTAIN 
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

## +
## ===================================================================
##  Module Name: McdRefreshWindows.py
##
##  Description:
##    For refreshing windows
##
## ===================================================================
## -

import maya.cmds as cmds
from McdDecisionEditorGUI import *
from McdPlacementEditorGUI import *
from McdActionProxyEditorGUI import *
from McdActionEditorGUI import *
from McdAgentViewerGUI import *
from McdStoryListEditorGUI import *
from McdAgentRBDEmitterGUI import *
from McdVarManagerGUI import *
from McdGroupVarEditorGUI import *
from McdVarPxyManagerGUI import *

def McdRefreshWindows():
    
    selObjs = cmds.ls(sl = True)
    if selObjs == [] or selObjs == None:
        return
    selObj = selObjs[0]
    selType = cmds.nodeType(selObj)
    
    try:
        if selType == "McdDecision":
            winName = "McdDecisionEditor"
            if cmds.window(winName, ex = True):
                McdRefreshDecisionEditor()
            else:
                McdDecisionEditorGUI()
            return
    except:
        pass
    
    try:
        if selType == "McdAgent":
            cmds.deleteUI("McdAgentViewer")
            McdAgentViewerGUI()
            return
        else:
            child = cmds.listRelatives(selObj, c = True)[0]
            if cmds.nodeType(child) == "McdAgent":
                cmds.deleteUI("McdAgentViewer")
                McdAgentViewerGUI()
                return
    except:
        pass
    
    try:
        if selType == "McdAction":
            cmds.deleteUI("McdActionEditor")
            McdActionEditorGUI()
            return
    except:
        pass
    
    try:
        if selType == "McdStoryList":
            cmds.deleteUI("McdStoryListEditor")
            McdStoryListEditorGUI()
            return
    except:
        pass
    
    try:
        if selType == "McdAgentGroup" or selType == "McdVarHost":
            cmds.deleteUI("McdVarManager")
            McdVarManagerGUI()
    except:
        pass
    
    try:
        if selType == "McdVarGroup" or selType == "McdVarHost":
            cmds.deleteUI("McdGroupVarEditor")
            McdGroupVarEditorGUI()
    except:
        pass
    

    try:
        if selType == "McdVarGroup":
            cmds.deleteUI("McdVarPxyManager")
            McdVarPxyManagerGUI()
    except:
        pass

    
    try:
        if selType == "McdPlace":
            cmds.deleteUI("McdPlacementEditor")
            McdPlacementEditorGUI()
            return
        else:
            child = cmds.listRelatives(selObj, c = True)[0]
            if cmds.nodeType(child) == "McdPlace":
                cmds.deleteUI("McdPlacementEditor")
                McdPlacementEditorGUI()
                return
    except:
        pass
        
    try:
        if selType == "McdActionProxy":
            cmds.deleteUI("McdActionProxyEditor")
            McdActionProxyEditorGUI()
            return
    except:
        pass

    try:
        if selType == "McdRBDEmitter":
            cmds.deleteUI("McdAgentRBDEmitter")
            McdAgentRBDEmitterGUI()
            return
        else:
            child = cmds.listRelatives(selObj, c = True)[0]
            if cmds.nodeType(child) == "McdRBDEmitter":
                cmds.deleteUI("McdAgentRBDEmitter")
                McdAgentRBDEmitterGUI()
                return
    except:
        pass
    
    

