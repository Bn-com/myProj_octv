## +
## ===================================================================
## Copyright(C) 2010 - 2012 Basefount Technology (Hong Kong) Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## (Hong Kong) Limitd. ("Basefount") and/or its licensors, which is
## protected by Hong Kong copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right 
## to use, modify, and incorporate this Data into other products for 
## purposes authorized by the Basefount software license agreement, 
## without fee.
##
## The copyright notices in the Software and this entire statement, 
## including the above license grant, this restriction and the 
## following disclaimer, must be included in all copies of the 
## Software, in whole or in part, and all derivative works of 
## the Software, unless such copies or derivative works are solely 
## in the form of machine-executable object code generated by a 
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS 
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNT 
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -


import maya.cmds as cmds
import maya.mel as mel
from McdGeneral import *

import McdGroupVarEditor
reload(McdGroupVarEditor)
from McdGroupVarEditor import *


def McdGroupVarEditorGUI():
    
    winName = "McdGroupVarEditor"
    if cmds.window(winName, ex = True):
        cmds.deleteUI(winName)
    
    globalNode = McdGetMcdGlobalNode()
        
    cmds.window(winName, title = "Variable Connection Editor",rtf =True,menuBar=True, width=250)
    cmds.menu( label='Options')
    cmds.menuItem( label='Refresh contents', c = "McdRefreshGroupVarEditor()")
    cmds.menuItem( label='Help' )
    cmds.menuItem( divider=True )
    cmds.menuItem( label='Exit', c = "McdExitGroupVarEditor()" )

    form = cmds.formLayout()
    tabs = cmds.tabLayout(innerMarginWidth=5, innerMarginHeight=5)
    cmds.formLayout( form, edit=True, attachForm=((tabs, 'top', 0), (tabs, 'left', 0), \
                                                (tabs, 'bottom', 0), (tabs, 'right', 0)) )
    
    #++++++++++++++++++++++++++++ Var List Setup +++++++++++++++++++++++++++++#
    dcNode = ""
    selObj = cmds.ls(sl = True, long = True)
    selType = ""
    if selObj != [] and selObj != None:
        selType = cmds.nodeType(selObj[0])
        if selType == "McdVarGroup" or selType == "McdVarHost":
            dcNode = selObj[0]
            
        
    child0 = cmds.columnLayout(adj = True)
    
    if dcNode != "":
        cmds.rowColumnLayout(nc = 3, cw = [(1,100),(2,100),(3,100)])
        cmds.text(l = "Node Name:")
        try:
            cmds.textField("GrpNodeTF", ed = False, tx = dcNode)
        except:
            pass
        cmds.text(l = "")
        cmds.setParent("..")
    
    
        allConns = cmds.listConnections(dcNode, s = False, d = True, shapes = True)
        if allConns == None:
            allConns = []
            
        allAttrs = cmds.listAttr(dcNode, ud = True)
        if allAttrs == None:
            allAttrs = []
    
        selObj = cmds.ls(sl = True, long = True)
        
        allAGrp = cmds.ls(type = "McdAgentGroup")
        if allAGrp == None or allAGrp == []:
            allAGrp = []
            
        allPlace = cmds.ls(type = "McdPlace")
        if allPlace == None or allPlace == []:
            allPlace = []
            
        allAGrp.extend(allPlace)
        
        if selType == "McdVarGroup":
            cmds.rowColumnLayout(nc = 3, cw = [(1, 200), (2, 200), (3, 200)])
            cmds.text(l = "Attribute List")
            cmds.text(l = "Links")
            cmds.text(l = "All Agent/Place Groups")
            cmds.textScrollList("gv_tsl_attr", numberOfRows = 15, append = allAttrs, ams = True)
            cmds.textScrollList("gv_tsl_link", numberOfRows = 15, append = allConns, ams = True)
            cmds.textScrollList("gv_tsl_agtgrp", numberOfRows = 15, append = allAGrp, ams = True)
            cmds.rowColumnLayout(nc = 2, cw = [(1, 100), (2, 100)])
            cmds.button(l = "Add", c = "addAttributeGV()")
            cmds.button(l = "Delete", c = "delAttributeGV()")
            cmds.setParent("..")
            
            cmds.button(l = "X Remove Link(s)", c = "removeGroupVarLink()")
            cmds.button(l = "<<< Add Link(s)", c = "groupVarAddLink()")
            cmds.setParent("..")
        else:
            cmds.rowColumnLayout(nc = 2, cw = [(1, 200), (2, 200)])
            cmds.text(l = "Links")
            cmds.text(l = "All Agent/Place Groups")
            cmds.textScrollList("gv_tsl_link", numberOfRows = 15, append = allConns, ams = True)
            cmds.textScrollList("gv_tsl_agtgrp", numberOfRows = 15, append = allAGrp, ams = True)
            
            cmds.button(l = "X Remove Link(s)", c = "removeGroupVarLink()")
            cmds.button(l = "<<< Add Link(s)", c = "groupVarAddLink()")
            cmds.setParent("..")
    else:
        cmds.columnLayout(adj  = 1)
        cmds.text(l = "Please select variable host or proxy node")
        cmds.setParent("..")
    
    
    cmds.setParent("..")
    
    
    #+++++++++++++++++++++++++++++++ Instant Tips ++++++++++++++++++++++++++++++++#
    child1 = cmds.columnLayout(adj = True)
    #separator(h = 10)
    cmds.text(l = "Instant Tips for Group Variable Editor", fn = "smallBoldLabelFont", align = "left")
    cmds.text(l = "* Setup group variable in channel box.", align = "left")
    cmds.button(l = "Check detailed help", h = 40)
    
    cmds.setParent( '..' )
    #----------------------------- End Instant Tips -------------------------------#
    
    cmds.tabLayout( tabs, edit=True,tabLabel=((child0, "Agent Variable Setup"),\
                                            (child1, "Instant Tips")))
    cmds.showWindow(winName)



def McdRefreshGroupVarEditor():
    McdGroupVarEditorGUI()

def McdExitGroupVarEditor():
    try:
        cmds.deleteUI("McdGroupVarEditor")
    except:
        pass



