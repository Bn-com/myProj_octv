## +
## ===================================================================
## Copyright(C) 2010 - 2012 Basefount Technology (Hong Kong) Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## (Hong Kong) Limitd. ("Basefount") and/or its licensors, which is
## protected by Hong Kong copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right
## to use, modify, and incorporate this Data into other products for
## purposes authorized by the Basefount software license agreement,
## without fee.
##
## The copyright notices in the Software and this entire statement,
## including the above license grant, this restriction and the
## following disclaimer, must be included in all copies of the
## Software, in whole or in part, and all derivative works of
## the Software, unless such copies or derivative works are solely
## in the form of machine-executable object code generated by a
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNTAIN
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

## +
## ===================================================================
##  Module Name: McdLogicBehaviorPreset
##
##  Description:
##    Miarmy Global
##
## ===================================================================
## -


import maya.cmds as cmds
import maya.mel as mel
from McdGeneral import *
from McdMiarmyGlobal import *

def McdPLB_collideAvoidSoundSimple():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "avoidSoundLfTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    #set  sound range = 20
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 100)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)
    # ------------------------------------------
    newDecision = "avoidSoundRtTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -100)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
    # ------------------------------------------
    newDecision = "avoidSoundFrtSlowDn"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -10)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 10)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 5)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 5)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
    # ------------------------------------------
    

def McdPLB_collideAvoidSound():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "avoidSoundLfTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    #set  sound range = 20
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 35)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 100)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 2)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 2)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -60)
    # ------------------------------------------
    newDecision = "avoidSoundRtTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -100)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", -35)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 3)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 3)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 60)
    # ------------------------------------------
    newDecision = "avoidSoundFrtSlowDn"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -45)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 5)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 5)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 3)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 3)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 90)
        did = "1"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 0)
        cmds.setAttr(dcNode + ".output["        + did + "]", "actionGroupRate:walk", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 0.8)
    # ------------------------------------------
    newDecision = "avoidSoundCloseLfTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 35)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 100)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 10)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 3)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 3)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)
        did = "1"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 0)
        cmds.setAttr(dcNode + ".output["        + did + "]", "actionGroupRate:walk", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 0.5)
    # ------------------------------------------
    newDecision = "avoidSoundCloseRtTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -100)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", -35)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 10)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 3)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 3)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
        did = "1"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 0)
        cmds.setAttr(dcNode + ".output["        + did + "]", "actionGroupRate:walk", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 0.5)
    # ------------------------------------------
    newDecision = "avoidSoundCloseFrtSlowDn"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -35)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 35)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 10)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 10)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "sound.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 8)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 12)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 3)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 3)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
        did = "1"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 0)
        cmds.setAttr(dcNode + ".output["        + did + "]", "actionGroup:stand", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 1)
    # ------------------------------------------

def McdPLB_AvoidSpot():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "avoidSpotLfTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "spot.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)

    newDecision = "avoidSpotRtTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "spot.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -180)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)

def McdPLB_FollowSpot():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "followSpotLfTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "spot.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)

    newDecision = "followSpotRtTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "spot.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -180)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)

def McdPLB_FollowField():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "followFieldLfTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "field.ox", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)

    newDecision = "followFieldRtTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "field.ox", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -180)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 45)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)



def McdPLB_InBoundBlkVis():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "inBoundBlockVisPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "bound.in", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 1)
        #cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 0)
        #cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "vision.mute", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 1)


def McdPLB_FollowTerrain():
    globalNode = McdGetMcdGlobalNode()

    dcNode = ""
    newDecision = "GroundhighGoDownPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        #cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ty", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -200)


    newDecision = "GroundLowGoUpPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 5)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ty", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 200)


    newDecision = "GroundLUpTrunRPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground.dx", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        #cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "rz", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)


    newDecision = "GroundRUpTrunLPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground.dx", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "rz", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)


    newDecision = "GroundBUpTrunFPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground.dz", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        #cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 45)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "rx", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)


    newDecision = "GroundFUpTrunBPreset"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "ground.dz", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        #cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        #cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "rx", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)

#/////////////////////////////////////////////////////////
#
#/////////////////////////////////////////////////////////
def McdPLB_BlankPriority():
    globalNode = McdGetMcdGlobalNode()
    activeAgentName = McdGetActiveAgentName()
    dcsnName = ["priority1St","priority2Nd","priority3Rd","priority4Th"]
    dcsn =[]
    for name in dcsnName:
        #McdGetOrCreateDecisionGrp(activeAgentName, 1)
        McdCreateDecision(name, activeAgentName)
        dcsn.append(cmds.ls(sl=1)[0])
    i=1
    for obj in dcsn[:-1]:
        cmds.parent(dcsn[i],obj)
        i=i+1
#/////////////////////////////////////////////////////////
#
#/////////////////////////////////////////////////////////
def McdPLB_RoadFlow():
    globalNode = McdGetMcdGlobalNode()
    dcNode = ""
    newDecision = "followRoadFlowRtTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "road.flow", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -180)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)
    ###
    newDecision = "followRoadFlowLfTurnLf"
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "road.flow", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
#/////////////////////////////////////////////////////////
#
#/////////////////////////////////////////////////////////
def McdPLB_Road():
    globalNode = McdGetMcdGlobalNode()
    dcNode = ""
    newDecision = "followRoadRtTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "road.ox", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -180)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)
    ###
    newDecision = "followRoadLfTurnLf"
    McdCreateDecision(newDecision, activeAgentName)
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "road.ox", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 180)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 30)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 30)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
#/////////////////////////////////////////////////////////
#
#/////////////////////////////////////////////////////////
def McdPLB_AvoidZone():
    globalNode = McdGetMcdGlobalNode()

    newDecision = "avoidZoneTurnRt"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 80)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 10)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 10)

        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", -120)

    newDecision = "avoidZoneTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -80)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 0)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 20)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 20)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 10)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 10)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)

    newDecision = "avoidZoneFrntTurnLf"
    activeAgentName = McdGetActiveAgentName()
    McdGetOrCreateDecisionGrp(activeAgentName, 1)
    McdCreateDecision(newDecision, activeAgentName)

    dcNode = ""
    dcNodeTemp = cmds.ls(sl = True)
    if dcNodeTemp != [] and dcNodeTemp != None:
        dcNode = dcNodeTemp[0]
        sid = "0"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.x", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMin[" + sid + "]", -15)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 15)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 5)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 5)
        sid = "1"
        cmds.setAttr(dcNode + ".active["        + sid + "]", 1)
        cmds.setAttr(dcNode + ".input["         + sid + "]", "zone.d", type = "string")
        cmds.setAttr(dcNode + ".inInfMin["      + sid + "]", 1)
        cmds.setAttr(dcNode + ".inInfMax["      + sid + "]", 0)
        cmds.setAttr(dcNode + ".inputValueMax[" + sid + "]", 15)
        cmds.setAttr(dcNode + ".fuzzyIn["       + sid + "]", 10)
        cmds.setAttr(dcNode + ".fuzzyOut["      + sid + "]", 10)
        did = "0"
        cmds.setAttr(dcNode + ".outputActive["  + did + "]", 1)
        cmds.setAttr(dcNode + ".output["        + did + "]", "ry", type = "string")
        cmds.setAttr(dcNode + ".outputValue["   + did + "]", 120)
        
    
def McdSaveLogic():
    dir = mel.eval("getenv MCD_LOGIC_PATH;")
    if dir == "" or dir == None:
        dir = ""
    
    selObjs = cmds.ls(sl = True)
    if MIsBlank(selObjs):
        cmds.confirmDialog(t = "Abort", m = "Please select one or more decision nodes")
        return
    
    fileName = cmds.fileDialog2(startingDirectory = dir, fileFilter="Maya Ascii (*.ma)")
    
    if fileName == None or fileName == "" or fileName == []:
        return
    
    exeObjs = []
    for i in range(len(selObjs)):
        if cmds.nodeType(selObjs[i]) == "McdDecision":
            exeObjs.append(selObjs[i])
            
    dupObjs = cmds.duplicate(exeObjs, rr = True)
    if MIsBlank(dupObjs):
        cmds.confirmDialog(t = "Abort", m = "Cannot duplicate and save out.")
        return
    
    cmds.parent(w = True)
    
    # renaming selected:
    allRenameObj = cmds.ls(sl = True)
    if MIsBlank(allRenameObj):
        return
    for i in range(len(allRenameObj)):
        newName1 = allRenameObj[i].split('|')[-1]
        if newName1.find("_decision_") > 0:
            newName = newName1.split("_decision_")[0]
            cmds.rename(allRenameObj[i], newName)
    
    # renaming children:    
    allRenameObj = cmds.ls(sl = True)
    if MIsBlank(allRenameObj):
        return
    for i in range(len(allRenameObj)):
        allCN = cmds.listRelatives(allRenameObj[i], ad = True, c = True, p = False, f = True)
        
        if not MIsBlank(allCN):
            for j in range(len(allCN)):
                newName1 = allCN[j].split('|')[-1]
                if newName1.find("_decision_") > 0:
                    newName = newName1.split("_decision_")[0]
                    cmds.rename(allCN[j], newName)
        
    cmds.file(fileName, exportSelected = True, type = "mayaAscii")
    
    cmds.delete()
    
    
def McdLoadLogic():
    dir = mel.eval("getenv MCD_LOGIC_PATH;")
    if dir == "" or dir == None:
        dir = ""
    
    fileName = cmds.fileDialog2(startingDirectory = dir, fileFilter="Maya Ascii (*.ma)", fm = 1)

    if fileName == None or fileName == "" or fileName == []:
        return

    activeAgentName = McdGetActiveAgentName()
    if activeAgentName == "":
        cmds.confirmDialog(t = "Abort", m = "Please active agent type in Agent Manager.")
        return
        
    decRoot = cmds.ls("Decision_" + activeAgentName)
    if MIsBlank(decRoot):
        stat = cmds.confirmDialog(t = "Warning!", m = "Cannot find the node root node:\n\n Decision_" + activeAgentName, b = ["Continue", "Cancel"])
        if stat == "Cancel":
            return

    cmds.file( fileName, i = True, type = "mayaAscii", ra = True, rpr = "MCDIMPORTLOGIC", lrd = "all")
    
    allImpObjs = cmds.ls("MCDIMPORTLOGIC*", type = "McdDecision")
    if MIsBlank(allImpObjs):
        cmds.confirmDialog(t = "Abort", m = "Nothing imported.")
        return 
    
    exeObjs = []
    for i in range(len(allImpObjs)):
        allParents = cmds.listRelatives(allImpObjs[i], c = 0, p = 1)
        if MIsBlank(allParents):
            exeObjs.append(allImpObjs[i])
            
    cmds.select(exeObjs)
    # renaming selected:
    allRenameObj = cmds.ls(sl = True)
    if MIsBlank(allRenameObj):
        return
    for i in range(len(allRenameObj)):
        nakedName = allRenameObj[i].split("|")[-1]
        newName = nakedName + "_decision_" + activeAgentName
        cmds.rename(allRenameObj[i], newName)
    
    # renaming children:    
    allRenameObj = cmds.ls(sl = True)
    if MIsBlank(allRenameObj):
        return
    for i in range(len(allRenameObj)):
        allCN = cmds.listRelatives(allRenameObj[i], ad = True, c = True, p = False, f = True)
        
        if not MIsBlank(allCN):
            for j in range(len(allCN)):
                nakedName = allCN[j].split("|")[-1]
                newName = nakedName + "_decision_" + activeAgentName
                cmds.rename(allCN[j], newName)
    
    if not MIsBlank(decRoot):
        allRenameObj = cmds.ls(sl = True)
        cmds.parent(allRenameObj, decRoot[0])
    
    # ------------------------------------------
    try:
        # delete the suffix:
        allRenameObj = cmds.ls(sl = True)
        if MIsBlank(allRenameObj):
            return
        for i in range(len(allRenameObj)):
            nakedName = allRenameObj[i].split("|")[-1]
            newName = nakedName.split("MCDIMPORTLOGIC_")[-1]
            cmds.rename(allRenameObj[i], newName)
        
        # renaming children:    
        allRenameObj = cmds.ls(sl = True)
        if MIsBlank(allRenameObj):
            return
        for i in range(len(allRenameObj)):
            allCN = cmds.listRelatives(allRenameObj[i], ad = True, c = True, p = False, f = True)
            
            if not MIsBlank(allCN):
                for j in range(len(allCN)):
                    nakedName = allCN[j].split("|")[-1]
                    newName = nakedName.split("MCDIMPORTLOGIC_")[-1]
                    cmds.rename(allCN[j], newName)
    except:
        cmds.confirmDialog(t = "Abort", m = "Cannot rename automatically, please rename manually.")
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    