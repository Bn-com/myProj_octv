## +
## ===================================================================
## Copyright(C) 2010 - 2012 Basefount Technology (Hong Kong) Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## (Hong Kong) Limitd. ("Basefount") and/or its licensors, which is
## protected by Hong Kong copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right 
## to use, modify, and incorporate this Data into other products for 
## purposes authorized by the Basefount software license agreement, 
## without fee.
##
## The copyright notices in the Software and this entire statement, 
## including the above license grant, this restriction and the 
## following disclaimer, must be included in all copies of the 
## Software, in whole or in part, and all derivative works of 
## the Software, unless such copies or derivative works are solely 
## in the form of machine-executable object code generated by a 
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS 
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNT 
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

import maya.cmds as cmds
from McdGeneral import *
from McdGroupVarEditorGUI import *

def McdVarMngGetNodeNameFromGUI():
    agentGroupName = cmds.textField("GrpNodeTF", q = True, tx = True)
    return agentGroupName
    
def removeGroupVarLink():
    sels = cmds.textScrollList("gv_tsl_link", q = True, si = True)
    if MIsBlank(sels):
        return
    
    nodeName = McdVarMngGetNodeNameFromGUI()
    
    allConns = cmds.listConnections(nodeName, p = True)
    conns = []
    for i in range(len(allConns)):
        conn = allConns[i].split(".")[0]
        if conn in sels:
            conns.append(allConns[i])
    
    for i in range(len(conns)):
        cmds.disconnectAttr(nodeName + ".toAgentGroup", conns[i])   
    
    McdGroupVarEditorGUI()
        
def groupVarAddLink():
    allLinks = cmds.textScrollList("gv_tsl_link", q = True, ai = True)
    if allLinks == None:
        allLinks = []
    
    sels = cmds.textScrollList("gv_tsl_agtgrp", q = True, si = True)
    if MIsBlank(sels):
        return
    
    nodeName = McdVarMngGetNodeNameFromGUI()
    
    for i in range(len(sels)):
        if sels[i] not in allLinks:
            count = 0
            while(1):
                try:
                    cmds.connectAttr(nodeName + ".toAgentGroup", sels[i] + ".groupVar[" + str(count) + "]")
                    break
                except:
                    count += 1
                    pass
                
    McdGroupVarEditorGUI()
    
    
def addAttributeGV():
    nodeName = McdVarMngGetNodeNameFromGUI()
    
    option = cmds.promptDialog(t="Add attribute",m = "Please specify the attribute name: ", \
                                                button = ["Add", "Cancel"],\
                                                defaultButton = "Add", cancelButton = "Cancel", \
                                                dismissString = "Cancel")
    if option == "Add":
        attrName = cmds.promptDialog(query=True, text=True)
        try:
            cmds.addAttr(nodeName, ln = attrName, at = "float", k = True)
        except:
            cmds.confirmDialog(t = "Error", m = "Cannot add attribute, maybe input name is incorrect or repeated");
            return
    
    McdGroupVarEditorGUI()
    
def delAttributeGV():
    
    nodeName = McdVarMngGetNodeNameFromGUI()
    allAttrs = cmds.textScrollList("gv_tsl_attr", q = True, si = True)
    if allAttrs == None:
        return
    
    for i in range(len(allAttrs)):
        try:
            cmds.deleteAttr(n = nodeName, at = allAttrs[i])
        except:
            pass
    
    McdGroupVarEditorGUI()
    
    
    
    
    

