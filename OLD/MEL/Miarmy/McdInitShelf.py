## +
## ===================================================================
## Copyright(C) 2010 - 2012 Basefount Technology (Hong Kong) Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## (Hong Kong) Limitd. ("Basefount") and/or its licensors, which is
## protected by Hong Kong copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right
## to use, modify, and incorporate this Data into other products for
## purposes authorized by the Basefount software license agreement,
## without fee.
##
## The copyright notices in the Software and this entire statement,
## including the above license grant, this restriction and the
## following disclaimer, must be included in all copies of the
## Software, in whole or in part, and all derivative works of
## the Software, unless such copies or derivative works are solely
## in the form of machine-executable object code generated by a
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNTAIN
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

## +
## ===================================================================
##  Module Name: McdInitShelf.py
##
##  Description:
##    initialize the shelf of Miarmy
##
##  Reference:
##    # http://etoia.free.fr/?p=1771
##    # http://ewertb.soundlinker.com/mel/mel.030.php
## ===================================================================
## -

import maya.mel as mel
import maya.cmds as cmds
from McdMainGUI import *

def McdInitShelf():

    xpm = False
    if int(mel.eval("getApplicationVersionAsFloat")) <= 2010:
        xpm = True
        
    Miarmy2011 = False
    if int(mel.eval("getApplicationVersionAsFloat")) <= 2011:
        Miarmy2011 = True
        
    if not xpm:
        try:
            if cmds.shelfLayout("Miarmy", q = True, exists = True):
                cmds.deleteUI("Miarmy")
        
            topLevelShelf = mel.eval('string $m = $gShelfTopLevel')
            cmds.shelfLayout("Miarmy", p = topLevelShelf)
        
            shelves = cmds.shelfTabLayout(topLevelShelf, query=True, tabLabelIndex=True)
            miarmyShelfIndex = -1
            for i in range(len(shelves)):
                if shelves[i] == "Miarmy":
                    miarmyShelfIndex = i
                    break
        
            if miarmyShelfIndex == -1:
                return
            #
            try:
                for index, shelf in enumerate(shelves):
                    cmds.optionVar(stringValue=('shelfName%d' % (index+1), str(shelf)))
            except:
                pass
            #
            
            annotationList = []
            labelList = []
            imageLabelList=[]
            commandList = []
            imageList = []
            #
            annotationList.append("Miarmy Ready!")
            labelList.append("GO")
            imageLabelList.append("")
            commandList.append("McdSelectMcdGlobal()")
            imageList.append("miarmyready.png")
            #
            annotationList.append("Miarmy UI")
            labelList.append("Miarmy UI")
            imageLabelList.append("")
            commandList.append("import McdMainGUI as myuis\nreload(myuis)\nmyuis.McdMainGUI()")
            imageList.append("miarmyUI.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Sound Visible")
            labelList.append("SdVis")
            imageLabelList.append("")
            commandList.append("soundRangeSwitch()")
            imageList.append("soundVisible.png")
            #
            annotationList.append("Vision Visible")
            labelList.append("ViVis")
            imageLabelList.append("")
            commandList.append("visionRangeSwitch()")
            imageList.append("visionVisible.png")
            #
            annotationList.append("HP Visible")
            labelList.append("HPVis")
            imageLabelList.append("")
            commandList.append("HPSwitch()")
            imageList.append("hpvis.png")
            #
            annotationList.append("Action Transition Visible")
            labelList.append("actVis")
            imageLabelList.append("")
            commandList.append("actionSwitch()")
            imageList.append("actiontransvis.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Miarmy Tools")
            labelList.append("Tools")
            imageLabelList.append("")
            commandList.append("McdMiarmyToolsGUI()")
            imageList.append("miarmytools.png")
            #
            annotationList.append("Miarmy Global")
            labelList.append("MiGlb")
            imageLabelList.append("")
            commandList.append("McdMiarmyGlobalGUI()")
            imageList.append("miarmyglobal.png")
            #
            annotationList.append("Physics Global")
            labelList.append("PhGlb")
            imageLabelList.append("")
            commandList.append("McdPhysicsGlobalGUI()")
            imageList.append("phyglobal.png")
            #
            annotationList.append("Render Global")
            labelList.append("RdSet")
            imageLabelList.append("")
            commandList.append("McdRenderSettingGUI()")
            imageList.append("renderglobal.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Place")
            labelList.append("Place")
            imageLabelList.append("")
            commandList.append("placementAgent()")
            imageList.append("placementAgent.png")
            #
            annotationList.append("de-place")
            labelList.append("De-pl")
            imageLabelList.append("")
            commandList.append("dePlacementAgent()")
            imageList.append("dePlacementAgent.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
                
            #
            annotationList.append("Brain Viewer")
            labelList.append("BrainV")
            imageLabelList.append("")
            commandList.append("McdBrainViewerGUI()")
            imageList.append("brainviewer.png")
            #
            annotationList.append("Transition Map")
            labelList.append("transMap")
            imageLabelList.append("")
            commandList.append("McdTransitionMapViewerGUI()")
            imageList.append("transmap.png")
            #
            annotationList.append("Agent Viewer")
            labelList.append("AgtVi")
            imageLabelList.append("")
            commandList.append("McdAgentViewerGUI()")
            imageList.append("agentviewer.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
    
            #
            annotationList.append("Agent Manager")
            labelList.append("AgtM")
            imageLabelList.append("")
            commandList.append("import McdAgentManagerGUI as agent\nreload(agent)\nagent.McdAgentManagerGUI()")
            imageList.append("agentmanager.xpm")
            #
            annotationList.append("Terrain Manager")
            labelList.append("TerrM")
            imageLabelList.append("")
            commandList.append("McdTerrainManagerGUI()")
            imageList.append("terrainmanager.png")
            #
            annotationList.append("Particle Emitter Manager")
            labelList.append("PEMngr")
            imageLabelList.append("")
            commandList.append("McdAgentParticleEmitterGUI()")
            imageList.append("particlemanager.png")
            #
            annotationList.append("RBD Manager")
            labelList.append("RBDM")
            imageLabelList.append("")
            commandList.append("McdAgentRBDEmitterGUI()")
            imageList.append("rbdmanager.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Action Editor")
            labelList.append("ActEd")
            imageLabelList.append("")
            commandList.append("McdActionEditorGUI()")
            imageList.append("actionEditor.png")
            #
            annotationList.append("Action Proxy Editor")
            labelList.append("APxEd")
            imageLabelList.append("")
            commandList.append("McdActionProxyEditorGUI()")
            imageList.append("actionProxyEditor.png")
            #
            annotationList.append("Story List Editor")
            labelList.append("StoEd")
            imageLabelList.append("")
            commandList.append("McdStoryListEditorGUI()")
            imageList.append("storyEditor.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Make a Decide")
            labelList.append("Decide")
            imageLabelList.append("")
            commandList.append("McdCreateDecisionCmd()")
            imageList.append("createDecision.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Create Space Node")
            labelList.append("space")
            imageLabelList.append("")
            commandList.append("McdCreateSolverSpace()")
            imageList.append("sspace.png")
            #
            annotationList.append("Create Road from Curve")
            labelList.append("road")
            imageLabelList.append("")
            commandList.append("McdCreateRoad()")
            imageList.append("road.png")
            annotationList.append("Create Bound")
            labelList.append("bound")
            imageLabelList.append("")
            commandList.append("McdCreateBound()")
            imageList.append("bound.png")
            annotationList.append("Create Spot")
            labelList.append("spot")
            imageLabelList.append("")
            commandList.append("McdCreateSpot()")
            imageList.append("spot.png")
            annotationList.append("Create Wind")
            labelList.append("wind")
            imageLabelList.append("")
            commandList.append("McdCreateWind()")
            imageList.append("wind.png")
            annotationList.append("Create Zone")
            labelList.append("zone")
            imageLabelList.append("")
            commandList.append("McdCreateZone()")
            imageList.append("zone.png")
            annotationList.append("Select Zone Node")
            labelList.append("SelZo")
            imageLabelList.append("")
            commandList.append("McdGetZoneNode()")
            imageList.append("selectzonenode.png")
            #
            annotationList.append("Create Box Kine Prim")
            labelList.append("kinebox")
            imageLabelList.append("")
            commandList.append("createPxKineBox()")
            imageList.append("kinebox.png")
            
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Agent Match")
            labelList.append("match")
            imageLabelList.append("")
            commandList.append("oAgentMatchAgent()")
            imageList.append("agentmatch.png")
            #
            annotationList.append("Agent Return")
            labelList.append("retur")
            imageLabelList.append("")
            commandList.append("oAgentResume()")
            imageList.append("agentreturn.png")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("lock camera")
            labelList.append("Look")
            imageLabelList.append("")
            commandList.append("duplicateCamAndParentLook()")
            imageList.append("lookCamera.png")
            #
            annotationList.append("interactive playback")
            labelList.append("play")
            imageLabelList.append("")
            imageList.append("intp.png")
            commandList.append('mel.eval("InteractivePlayback");')
        
        
        
            for i in range(len(annotationList)):
                if labelList[i] == "":
                    cmds.shelfButton(p = shelves[miarmyShelfIndex])
                else:
                    cmds.shelfButton(p = shelves[miarmyShelfIndex], \
                                   annotation = annotationList[i], \
                                   imageOverlayLabel = imageLabelList[i], \
                                   image = imageList[i], \
                                   style = "iconAndTextHorizontal", \
                                   command = commandList[i])
        except:
            print "Initialize shelf skipped or failed."
    else:
            
        try:
            if cmds.shelfLayout("Miarmy", q = True, exists = True):
                cmds.deleteUI("Miarmy")
        
            topLevelShelf = mel.eval('string $m = $gShelfTopLevel')
            cmds.shelfLayout("Miarmy", p = topLevelShelf)
        
            shelves = cmds.shelfTabLayout(topLevelShelf, query=True, tabLabelIndex=True)
            miarmyShelfIndex = -1
            for i in range(len(shelves)):
                if shelves[i] == "Miarmy":
                    miarmyShelfIndex = i
                    break
        
            if miarmyShelfIndex == -1:
                return
            #
            try:
                for index, shelf in enumerate(shelves):
                    cmds.optionVar(stringValue=('shelfName%d' % (index+1), str(shelf)))
            except:
                pass
            #
            
            annotationList = []
            labelList = []
            imageLabelList=[]
            commandList = []
            imageList = []
            #
            annotationList.append("Miarmy Ready!")
            labelList.append("GO")
            imageLabelList.append("")
            commandList.append("McdSelectMcdGlobal()")
            imageList.append("miarmyready.xpm")

            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Sound Visible")
            labelList.append("SdVis")
            imageLabelList.append("")
            commandList.append("soundRangeSwitch()")
            imageList.append("soundVisible.xpm")
            #
            annotationList.append("Vision Visible")
            labelList.append("ViVis")
            imageLabelList.append("")
            commandList.append("visionRangeSwitch()")
            imageList.append("visionVisible.xpm")
            #
            annotationList.append("HP Visible")
            labelList.append("HPVis")
            imageLabelList.append("")
            commandList.append("HPSwitch()")
            imageList.append("hpvis.xpm")
            #
            annotationList.append("Action Transition Visible")
            labelList.append("actVis")
            imageLabelList.append("")
            commandList.append("actionSwitch()")
            imageList.append("actiontransvis.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Miarmy Tools")
            labelList.append("Tools")
            imageLabelList.append("")
            commandList.append("McdMiarmyToolsGUI()")
            imageList.append("miarmytools.xpm")
            #
            annotationList.append("Miarmy Global")
            labelList.append("MiGlb")
            imageLabelList.append("")
            commandList.append("McdMiarmyGlobalGUI()")
            imageList.append("miarmyglobal.xpm")
            #
            annotationList.append("Physics Global")
            labelList.append("PhGlb")
            imageLabelList.append("")
            commandList.append("McdPhysicsGlobalGUI()")
            imageList.append("phyglobal.xpm")
            #
            annotationList.append("Render Global")
            labelList.append("RdSet")
            imageLabelList.append("")
            commandList.append("McdRenderSettingGUI()")
            imageList.append("renderglobal.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Place")
            labelList.append("Place")
            imageLabelList.append("")
            commandList.append("placementAgent()")
            imageList.append("placementAgent.xpm")
            #
            annotationList.append("de-place")
            labelList.append("De-pl")
            imageLabelList.append("")
            commandList.append("dePlacementAgent()")
            imageList.append("dePlacementAgent.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
                
            #
            annotationList.append("Brain Viewer")
            labelList.append("BrainV")
            imageLabelList.append("")
            commandList.append("McdBrainViewerGUI()")
            imageList.append("brainviewer.xpm")
            #
            annotationList.append("Transition Map")
            labelList.append("transMap")
            imageLabelList.append("")
            commandList.append("McdTransitionMapViewerGUI()")
            imageList.append("transmap.xpm")
            #
            annotationList.append("Agent Viewer")
            labelList.append("AgtVi")
            imageLabelList.append("")
            commandList.append("McdAgentViewerGUI()")
            imageList.append("agentviewer.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
    
            #
            annotationList.append("Agent Manager")
            labelList.append("AgtM")
            imageLabelList.append("")
            commandList.append("McdAgentManagerOldGUI()")
            imageList.append("agentmanager.xpm")
            #
            annotationList.append("Terrain Manager")
            labelList.append("TerrM")
            imageLabelList.append("")
            commandList.append("McdTerrainManagerGUI()")
            imageList.append("terrainmanager.xpm")
            #
            annotationList.append("Particle Emitter Manager")
            labelList.append("PEMngr")
            imageLabelList.append("")
            commandList.append("McdAgentParticleEmitterGUI()")
            imageList.append("particlemanager.xpm")
            #
            annotationList.append("RBD Manager")
            labelList.append("RBDM")
            imageLabelList.append("")
            commandList.append("McdAgentRBDEmitterGUI()")
            imageList.append("rbdmanager.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Action Editor")
            labelList.append("ActEd")
            imageLabelList.append("")
            commandList.append("McdActionEditorGUI()")
            imageList.append("actionEditor.xpm")
            #
            annotationList.append("Action Proxy Editor")
            labelList.append("APxEd")
            imageLabelList.append("")
            commandList.append("McdActionProxyEditorGUI()")
            imageList.append("actionProxyEditor.xpm")
            #
            annotationList.append("Story List Editor")
            labelList.append("StoEd")
            imageLabelList.append("")
            commandList.append("McdStoryListEditorGUI()")
            imageList.append("storyEditor.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Make a Decide")
            labelList.append("Decide")
            imageLabelList.append("")
            commandList.append("McdCreateDecisionCmd()")
            imageList.append("createDecision.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Create Space Node")
            labelList.append("space")
            imageLabelList.append("")
            commandList.append("McdCreateSolverSpace()")
            imageList.append("sspace.xpm")
            #
            annotationList.append("Create Road from Curve")
            labelList.append("road")
            imageLabelList.append("")
            commandList.append("McdCreateRoad()")
            imageList.append("road.xpm")
            annotationList.append("Create Bound")
            labelList.append("bound")
            imageLabelList.append("")
            commandList.append("McdCreateBound()")
            imageList.append("bound.xpm")
            annotationList.append("Create Spot")
            labelList.append("spot")
            imageLabelList.append("")
            commandList.append("McdCreateSpot()")
            imageList.append("spot.xpm")
            annotationList.append("Create Wind")
            labelList.append("wind")
            imageLabelList.append("")
            commandList.append("McdCreateWind()")
            imageList.append("wind.xpm")
            annotationList.append("Create Zone")
            labelList.append("zone")
            imageLabelList.append("")
            commandList.append("McdCreateZone()")
            imageList.append("zone.xpm")
            annotationList.append("Select Zone Node")
            labelList.append("SelZo")
            imageLabelList.append("")
            commandList.append("McdGetZoneNode()")
            imageList.append("selectzonenode.xpm")
            #
            annotationList.append("Create Box Kine Prim")
            labelList.append("kinebox")
            imageLabelList.append("")
            commandList.append("createPxKineBox()")
            imageList.append("kinebox.xpm")
            
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("Agent Match")
            labelList.append("match")
            imageLabelList.append("")
            commandList.append("oAgentMatchAgent()")
            imageList.append("agentmatch.xpm")
            #
            annotationList.append("Agent Return")
            labelList.append("retur")
            imageLabelList.append("")
            commandList.append("oAgentResume()")
            imageList.append("agentreturn.xpm")
            #
            annotationList.append("")
            labelList.append("")
            imageLabelList.append("")
            commandList.append("")
            imageList.append("")
            if not Miarmy2011:
                annotationList.append("")
                labelList.append("")
                imageLabelList.append("")
                commandList.append("")
                imageList.append("")
            #
            annotationList.append("lock camera")
            labelList.append("Look")
            imageLabelList.append("")
            commandList.append("duplicateCamAndParentLook()")
            imageList.append("lookCamera.xpm")
            #
            annotationList.append("interactive playback")
            labelList.append("play")
            imageLabelList.append("")
            imageList.append("intp.xpm")
            commandList.append('mel.eval("InteractivePlayback");')
        
        
        
            for i in range(len(annotationList)):
                if labelList[i] == "":
                    cmds.shelfButton(p = shelves[miarmyShelfIndex])
                else:
                    cmds.shelfButton(p = shelves[miarmyShelfIndex], \
                                   annotation = annotationList[i], \
                                   imageOverlayLabel = imageLabelList[i], \
                                   image = imageList[i], \
                                   style = "iconAndTextHorizontal", \
                                   command = commandList[i])
        except:
            print "Initialize shelf skipped or failed."







































