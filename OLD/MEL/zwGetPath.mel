// 根据文件名得到各种路径
global proc string zwGetPath(string $type, string $sceneName)
{
	string $rs = "";

	if ($sceneName == "")
	{
		$sceneName = `file -query -sceneName -shortName`;
	}
	$sceneName = `match "[^/\\@]+$" $sceneName`;
	if (`match "^[0-9]" $sceneName` != "")	// moebius -> TTMS
	{
		$sceneName = "ts_" + $sceneName;
	}
	string $project = zwGetProject($sceneName);
	string $mode = zwGetMode($sceneName);

	string $format = "";
	switch ($type)
	{
	case "camera":
		if (zwIsRainbowProject($project))
		{
			$format = "//serverone/CONTENT_4_GLOBAL/PRJ_winxII/MC_winxII/scenes/cameras/sequence_<Episode>/<ProjectShort>_<Episode>_<Shot>_cam.ma";
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/scenes/Animation/episode_<Episode>/episode_camera/<ProjectShort>_<Episode>_<Sequence>_<Shot>_cam.ma";
		}
		else
		{
			$format = "<Repository>/Project/scenes/Animation/episode_<Episode>/episode_camera/<ProjectShort>_<Episode>_<Shot>_cam.ma";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "stereo_cams_approved":
		$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/stereo_cams_approved/seq_<Episode>/sc_<Shot>/";
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "cameraName":
		if ($project == "LORDoftheRINGS")
		{
			$format = "<Sequence>_<Shot>_ShotCam";
		}
		else if ($project == "Enyo" || zwHasSeq($project))
		{
			$format = "cam_<Episode>_<Sequence>_<Shot>";
		}
		else
		{
			$format = "cam_<Episode>_<Shot>";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "data":
		if (zwIsRainbowProject($project))
		{
			$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/data";
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/data/episode_<Episode>/sequence_<Sequence>/scene_<Shot>";
		}
		else
		{
			$format = "<Repository>/Project/data/episode_<Episode>/scene_<Shot>";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "hair":
		if (zwIsRainbowProject($project))
		{
			$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/data";
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/data/episode_<Episode>/sequence_<Sequence>/scene_<Shot>/" + $type;
		}
		else
		{
			$format = "<Repository>/Project/data/episode_<Episode>/scene_<Shot>/" + $type;
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "geoCache":
	case "fluid":
	case "nCloth":	// ?
	case "nClothCache":
		if (zwIsRainbowProject($project))
		{
			$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/data/cache";
		}
		else if ($project == "DiveOllyDive5" && $type == "geoCache")
		{
			$format = "L:/Projects/DiveOllyDive5/Project/data/GeoCache/<Episode>/<Shot>";
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/data/episode_<Episode>/sequence_<Sequence>/scene_<Shot>/" + $type;
		}
		else
		{
			$format = "<Repository>/Project/data/episode_<Episode>/scene_<Shot>/" + $type;
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "GeoCache":
		if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/data/" + $type + "/<Episode>/<Sequence>/<Shot>/" + `match "[^.]+" $sceneName`;
		}
		else
		{
			$format = "<Repository>/Project/data/" + $type + "/<Episode>/<Shot>/" + `match "[^.]+" $sceneName`;
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "scene":
		if ($project == "Jonalu")
		{
			$format = "<Repository>/Project/jonalu/episodes/epd_<Episode>/epd_<Episode>_scn_<Sequence>/epd_<Episode>_scn_<Sequence>_sht_<Shot>/maya/final";
		}
		else if (zwIsRainbowProject($project))
		{
			if ($mode == "lighting")
			{
				$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/scenes/<Mode>/<Character>";
			}
			else
			{
				$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/scenes/<Mode>";
			}
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/scenes/Animation/episode_<Episode>/sequence_<Sequence>/scene_<Shot>/<Mode>";
		}
		else
		{
			$format = "<Repository>/Project/scenes/Animation/episode_<Episode>/scene_<Shot>/<Mode>";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "history":
		$rs = zwGetPath("scene", $sceneName);
		if (zwIsRainbowProject($project))
		{
			if ($project == "WinxClubII" && $mode == "layout")
			{
				$rs += "/history";
			}
			else
			{
				$rs += "/tmp";
			}
		}
		else
		{
			$rs += "/history";
		}
		break;
	case "ImageOutputDir":
		if ($project == "")
		{
			$project = `match "^[0-9a-zA-Z]+" $sceneName`;
			if ($project == "")
			{
				return "";
			}
		}
		string $z = "//file-cluster/GDC";
		if ($project == "MechaPunks" || $project == "Kobi" || $project == "XingYungu")
		{
			$z = "L:";
		}
		string $folder = $z + "/Netrender/Scenes/" + $project;
		if (!`filetest -d $folder`)
		{
			$folder = $z + "/Netrender/Scenes/Others/" + $project;
		}

		if ($project == "Bratz")
		{
			$format = $folder + "/<Parity>/ep<Episode>/<Shot>/<Mode>";
		}
		else if (zwIsRainbowProject($project))
		{
			if (`match "_DYN[._]" $sceneName` != "")
			{
				$format = $folder + "/Check/sq_<Episode>/sc_<Shot>";
			}
			else
			{
				$format = $folder + "/<Parity>/sq_<Episode>/sc_<Shot>";
			}
		}
		else if (tolower($project) == "dp")
		{
			$format = $folder + "/sc_<Episode>";
		}
		else if (zwHasSeq($project))
		{
			$format = $folder + "/<Parity>/ep_<Episode>/seq_<Sequence>/sc_<Shot>";
		}
		else
		{
			$format = $folder + "/<Parity>/ep_<Episode>/sc_<Shot>";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "repository":
		$format = "<Repository>";
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "RibBase":
	//	$format = "sq_<Episode>_sc_<Shot>";
		$format = "sq_<Episode>";
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "scenes":
		if ($project == "Jonalu")
		{
			$format = "<Repository>/Project/jonalu/elements";
		}
		else
		{
			$format = "<Repository>/Project/scenes";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	case "particles":
		if (zwIsRainbowProject($project))
		{
			$format = "//file-cluster/GDC/Projects/ROMA/PRJ_roma/SHOT_roma/sq_<Episode>/roma_sq_<Episode>_sc_<Shot>/particles";
		}
		else if (zwHasSeq($project))
		{
			$format = "<Repository>/Project/particles/episode_<Episode>/sequence_<Sequence>/scene_<Shot>";
		}
		else
		{
			$format = "<Repository>/Project/particles/episode_<Episode>/scene_<Shot>";
		}
		$rs = `zwGetPathFormat $format $sceneName`;
		break;
	default:
		$rs = `zwGetPathFormat $type $sceneName`;
		if ($rs == $type)
		{
			$rs = "";
		}
		break;
	}

	// 重庆老是不正确，只好加个双保险
	if (`match "[<>]" $rs` != "")
	{
		$rs = "";
	}

	return $rs;
}

// 根据文件名得到Episode、Sequence、Shot信息，从而组合成路径
global proc string zwGetPathFormat(string $format, string $sceneName)
{
	string $rs = "";

	if ($sceneName == "")
	{
		$sceneName = `file -query -sceneName -shortName`;
	}
	$sceneName = `match "[^/\\]+$" $sceneName`;
	if (`match "^[0-9]" $sceneName` != "")	// moebius -> TTMS
	{
		$sceneName = "ts_" + $sceneName;
	}
	$sceneName = `match "^[^.]+" $sceneName`;

	string $project = zwGetProject($sceneName);
	string $repository = zwGetRepository($project);
	string $projectShort = zwGetProjectShort($project);
	string $mode = zwGetMode($sceneName);

	string $buf[];
	int $size = `tokenize $sceneName "_" $buf`;

	string $episode = "";
	string $sequence = "";
	string $shot = "";
	if ($project == "Enyo" || $project == "LilLarikkins" || zwHasSeq($project))
	{
		if ($size > 3)
		{
			$episode = $buf[1];
			$sequence = $buf[2];
			$shot = $buf[3];
		}
	}
	else if ($project == "Jonalu")
	{
		if ($size > 5)
		{
			$episode = $buf[1];
			$sequence = $buf[3];
			$shot = $buf[5];
		}
	}
	else if (zwIsRainbowProject($project))
	{
		if ($mode == "layout")
		{
			if ($size > 4)
			{
				$episode = $buf[3];
				$shot = $buf[4];
			}
		}
		else
		{
			if ($size > 2)
			{
				$episode = $buf[1];
				$shot = `match "[0-9a-zA-Z]+" $buf[2]`;
			}
		}
	}
	else
	{
		if ($size > 2)
		{
			$episode = $buf[1];
			$shot = $buf[2];
		}
	}

	string $character = "";
	if ($mode == "lighting")
	{
	//	if ($size > 5)
	//	{
	//		$character = $buf[5];
	//	}
		if ($size > 3)
		{
			$character = $buf[3];
		}
	}

	string $parity = `zwGetParity $episode`;

	$rs = $format;
	while (`match "<Project>" $rs` != "")
	{
		if ($project == "")
		{
			return "";
		}
		$rs = `substitute "<Project>" $rs $project`;
	}
	while (`match "<Repository>" $rs` != "")
	{
		if ($repository == "")
		{
			return "";
		}
		$rs = `substitute "<Repository>" $rs $repository`;
	}
	while (`match "<ProjectShort>" $rs` != "")
	{
		if ($projectShort == "")
		{
			return "";
		}
		$rs = `substitute "<ProjectShort>" $rs $projectShort`;
	}
	while (`match "<Parity>" $rs` != "")
	{
		if ($parity == "")
		{
			return "";
		}
		$rs = `substitute "<Parity>" $rs $parity`;
	}
	while (`match "<Episode>" $rs` != "")
	{
		if ($episode == "")
		{
			return "";
		}
		$rs = `substitute "<Episode>" $rs $episode`;
	}
	while (`match "<Sequence>" $rs` != "")
	{
		if ($sequence == "" && `match "http:" $format` == "")	// zwAssetFile.mel
		{
			return "";
		}
		$rs = `substitute "<Sequence>" $rs $sequence`;
	}
	while (`match "<Shot>" $rs` != "")
	{
		if ($shot == "")
		{
			return "";
		}
		$rs = `substitute "<Shot>" $rs $shot`;
	}
	while (`match "<Mode>" $rs` != "")
	{
		if ($mode == "")
		{
			return "";
		}
		$rs = `substitute "<Mode>" $rs $mode`;
	}
	while (`match "<Character>" $rs` != "")
	{
		if ($character == "")
		{
			return "";
		}
		$rs = `substitute "<Character>" $rs $character`;
	}
	return $rs;
}

// true: Z:\Projects\LilLarikkins\Project\scenes\Animation\episode_002\scene_101\anim
// false: \\Serverone\CONTENT_4_GLOBAL\PRJ_winxII\SHOT_winxII\SQ_018c\winxII_sq_018c_sc_021\scenes\animation
global proc int zwGetPathIsOldShot(string $project)
{
	string $projects[] = {"WinxClub",
				"RainbowRiders",
				"BubbleGuppies",
				"Strawberry",
				"ROMA",
				"Enyo",
				"Empty",
				"Jonalu",
				"DiveOllyDive2",
				"Lionelville",
				"SportLets",
				"Tinpo",
				"LilLarikkins",
				"Orla"};
	for ($i=0; $i<size($projects); $i++)
	{
		if ($projects[$i] == $project)
		{
			return true;
		}
	}

	return false;
}

global proc string zwGetRepository(string $project)
{
	string $repository = "";

	if ($project == "Enyo")	// 外包
	{
		$repository = `getenv "IDMT_PROJECTS"`;
		if ($repository == "")
		{
			$repository = "//file-cluster/GDC/Projects";
		}
		$repository += "/" + $project;
	}
	else
	{
		string $str = zwGetProjects();
		string $buf[];
		tokenize $str "|" $buf;
		for ($i=0; $i<size($buf); $i+=7)
		{
			if ($buf[$i+1] == $project)
			{
				$repository = `substituteAllString $buf[$i+3] "\\" "/"`;
				break;
			}
		}
	}

	return $repository;
}