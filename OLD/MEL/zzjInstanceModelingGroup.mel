global proc zzjInstanceModelingGroup()
{
	global string $newPosition;
	string $sl[]=`ls -l -sl`;
	$newPosition = getParentPosition($sl[0]);
	dup($sl[0]);
	
}

global proc string getParentPosition(string $pos)
{
	string $parents[]=`listRelatives -f -p $pos`;
	if (`size $parents`)	return $parents[0];
	else return "";
}

global proc dup(string $obj)
{
	global string $newPosition;
	
//	建立同级组
	string $newGroup[] = `duplicate -po $obj`;

//	parent
	string $parentPosition =getParentPosition($newGroup[0]);
	if ($parentPosition != $newPosition) parent $newGroup[0] $newPosition;

//	记录新位置
	string $stopPosition = $newPosition;	
	$newPosition += "|"+$newGroup[0];


//获得下级物体
	string $children[]=`listRelatives -c -f $obj`;	
	
//是否组
	for ($c in $children)
	{
		if (ifGroup($c))
		{
			dup($c);
		}
		else
		{
			string $ins [] = `instance $c`;
			parent $ins[0] $newPosition;
		}
	}
	$newPosition =$stopPosition;
}


global proc int ifGroup(string $gn)
{
	int $onlyTransforms = 1;
	string $groupChildren[] = `listRelatives -children -f $gn`;	
	if ( `nodeType $gn` != "transform" )
	{
		$onlyTransforms = 0;
	}
	else if(	size( $groupChildren ) == 0  )
	{
		$onlyTransforms = 0;
	}
	else 
	{
		for ( $child in $groupChildren )
		{
			if ( `nodeType $child` != "transform" )
			{
				$onlyTransforms = 0;
				break;
			}
		}
	}
	return $onlyTransforms;
}
