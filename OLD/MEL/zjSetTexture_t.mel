/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjSetTexture_t() 
{
	if (`window -exists zjSelTxwin`)
		deleteUI zjSelTxwin;

	window -title "Select Objects with Texture Attribute" zjSelTxwin;
		columnLayout -adjustableColumn true -rowSpacing 5;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Select Objects with Texture Attribute..." -command "zjHelpCallback zjSetTexture_t";
				setParent ..;
			frameLayout -label "Select Objects with ModifyTexture Attribute" -labelAlign "top" -cll true
					-borderStyle "etchedIn";
					string $form = `formLayout`;
					string $b1 = `button -label "Select under Group"  -w 100 -command  "zjSetMtSelu"`;
					string $b2 = `button -label "Select All"  -w 100 -command  "zjSetMtSela"`;
					formLayout -edit
						-attachForm	$b1	"top"	10
						-attachForm	$b1	"left"	0
						-attachPosition	$b1	"right"	0	45

						-attachForm	$b2	"top"	10
						-attachControl	$b2	"left"	5	$b1
						-attachForm	$b2	"right"	0
					$form;
					setParent ..;
				setParent ..;
			setParent ..;

			frameLayout -label "Select Objects with RedoTexture Attribute" -labelAlign "top" -cll true
					-borderStyle "etchedIn";
					string $form = `formLayout`;
					string $b1 = `button -label "Select under Group"  -w 100 -command  "zjSetRtSelu"`;
					string $b2 = `button -label "Select All"  -w 100 -command  "zjSetRtSela"`;
					formLayout -edit
						-attachForm	$b1	"top"	10
						-attachForm	$b1	"left"	0
						-attachPosition	$b1	"right"	0	45

						-attachForm	$b2	"top"	10
						-attachControl	$b2	"left"	5	$b1
						-attachForm	$b2	"right"	0
					$form;
					setParent ..;
				setParent ..;
			setParent ..;

	window -edit -width 300 -height 180 zjSelTxwin;

	showWindow zjSelTxwin;
}

//selct objects with modifyTexture attribute under group
global proc zjSetMtSelu()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	select -clear;
	for ($node in $buf)
	{
		string $children[] = `listRelatives -allDescendents -noIntermediate -type transform $node`;
		if (size($children) == 0)
		{
			if (`attributeExists "modifyTexture" $node`)
				select -add $node;
		}
		else
		{
			for ($item in $children)
			{
				if (`attributeExists "modifyTexture" $item`)
					select -add $item;
			}
		}
	}
}

//selct all objects with modifyTexture attribute
global proc zjSetMtSela()
{
	select -clear;
	string $buf[] = `ls -long -ni -transforms`;
	for ($node in $buf)
	{
		if (`attributeExists "modifyTexture" $node`)
			select -add $node;
	}
}

//selct objects with redoTexture attribute under group
global proc zjSetRtSelu()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	select -clear;
	for ($node in $buf)
	{
		string $children[] = `listRelatives -allDescendents -noIntermediate -type transform $node`;
		if (size($children) == 0)
		{
			if (`attributeExists "redoTexture" $node`)
				select -add $node;
		}
		else
		{
			for ($item in $children)
			{
				if (`attributeExists "redoTexture" $item`)
					select -add $item;
			}
		}
	}
}

//selct all objects with redoTexture attribute
global proc zjSetRtSela()
{
	select -clear;
	string $buf[] = `ls -long -ni -transforms`;
	for ($node in $buf)
	{
		if (`attributeExists "redoTexture" $node`)
			select -add $node;
	}
}