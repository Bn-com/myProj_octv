//////////////////////////////////////////////////////////
//
//	Script Name: ddGrowTools
//	Verision: 0.01 beta
//	Author: Julii FreeMAN, SZ-CN
//	Date Created: June 10 2006
//	Changed Projcet Date: June 22 2006
//	Last Updated: September 13 2006
//	Update/Change this file at: Julii FreeMAN
//	Note:Bratz Setup Tools Pack 包括以下东东
//		生长
//		处理proxy hair
//		添加smooth Node工具
//		创建层工具
//
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
// Procdures Name: ddAddDrivenGrow
// 
// 设置生长驱动
//
// Arguments :
//	string $jointHead
//	string $growCon
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGATAddDrivenGrow(string $jointHead,string $growCon)
{
 int $i ;
 float $unit,$floatTemp,$countChain,$valueField ;
 string $selected[],$jointChain[] ;

 select -hierarchy $jointHead ;
 $jointChain = `ls -sl` ;
 $countChain = `size $jointChain` ;
 $countChain -- ;

 select -clear ;
 $valueField = 10 ;
 $unit = $valueField / $countChain ;
 //setAttr ($growCon + ".grow") 0 ;
 print ("$valueField:" +$valueField + "\n");
 print ("$countChain:" +$countChain + "\n");
 print ("unit:" +$unit + "\n");

 for($i=0;$i<$countChain;$i++)
 {
  //$floatTemp = $unit * $i ;
  setAttr ($growCon + ".grow") ($unit * $i) ;
  setAttr ($jointChain[$i] + ".sx") 0 ;
  setAttr ($jointChain[$i] + ".sy") 0 ;
  setAttr ($jointChain[$i] + ".sz") 0 ;

  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sx") ;
  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sy") ;
  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sz") ;

  setAttr ($growCon + ".grow") ($unit * ($i+1)) ;
  setAttr ($jointChain[$i] + ".sx") 1 ;
  setAttr ($jointChain[$i] + ".sy") 1 ;
  setAttr ($jointChain[$i] + ".sz") 1 ;

  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sx") ;
  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sy") ;
  setDrivenKeyframe -currentDriver ($growCon + ".grow") ($jointChain[$i] + ".sz") ;

 }
}

//////////////////////////////////////////////////////////
// Procdures Name: ddAddDrivenGrowCMD
// 
// 设置生长驱动
//
// Arguments :
//
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGATAddDrivenGrowCMD()
{
 string $selected[],$boot ;

 $selected = `ls -sl` ;
 //$boot = `textFieldGrp -query -text ddGATgrowConObjectField` ;

 for ($boot in $selected)
 {
  if (!`attributeExists "grow" $boot`)
  {
   addAttr -ln grow -at double  -min 0 -max 10 -dv 0 $boot ;
   setAttr -e -keyable true ($boot + ".grow") ;
  }
  ddGATAddDrivenGrow $boot $boot ;

 }

}

//////////////////////////////////////////////////////////
// Procdures Name: ddGATCreateJointChain
// 
// 顺着curve的EP成生joint chain
//
// Arguments: NULL
//	string $baseCurve 用来生成jointChain的curve
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGATCreateJointChain(string $baseCurve)
{
 int $curveSpans,$loop ;
 string $currentJoint,$previousJoint ;

 $curveSpans = `getAttr ($baseCurve + ".spans")` ;
 
 select -clear ;
 source ddJointOnCurve ;

 $currentJoint = `ddEP2Joint ($baseCurve + ".ep[0]")` ;
 for($loop=1;$loop<=$curveSpans;$loop++)
 {
  $previousJoint = $currentJoint ;
  $currentJoint = `ddEP2Joint ($baseCurve + ".ep[" + $loop + "]")` ;
  //parent $currentJoint $previousJoint ;
 }
}

//////////////////////////////////////////////////////////
// Procdures Name: ddGATCreateJointChainCMD
// 
// 顺着curve的EP成生joint chain 组合 
//
// Arguments: NULL
//
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGATCreateJointChainCMD()
{
 string $curve[],$tmp ;

 //$selected = `ls -sl` ;
 $curve = `filterExpand -expand true -selectionMask 9 ` ;//过滤出所有选择中的curve
 for($tmp in $curve)
 {
  ddGATCreateJointChain $tmp ;
 }

 select -clear ;
}
//////////////////////////////////////////////////////////
// Procdures Name: ddGATGetSel
// 
// get selected object
//
// Arguments: NULL
//
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGATGetSel()
{
 string $selected[] ;
 $selected = `ls -sl` ;
 textFieldGrp -edit -text $selected[0] ddGATgrowConObjectField ;
}

//////////////////////////////////////////////////////////
// Procdures Name: ddAddDrivenGrow
// 
// 设置生长驱动
//
// Arguments:
//	string $jointHead
//	string $growCon
// Return : NULL
//////////////////////////////////////////////////////////
global proc ddGrowAniToolsUI()
{
 //初始化面板
 if(`window -ex ddGrowAniToolsUI`)
 {
  deleteUI ddGrowAniToolsUI ;
  if(`windowPref -exists ddGrowAniToolsUI`)
  {
   windowPref -remove ddGrowAniToolsUI ;
  }
 }
 
 window -width 460
	-height 200
	-title "durdur's Toyboxes Grow Tools v0.10 beta"
	ddGrowAniToolsUI ;

 columnLayout -w 460 -adjustableColumn true ;
  button -label "create joint chain"
	 
	 -command "ddGATCreateJointChainCMD" ;
  separator ;
  /*
  rowLayout -numberOfColumns 2
           -columnWidth2 390 80;
	textFieldGrp -label "Orient object"
		     -editable true
		     -annotation "Second Axis World Orientation Object."
		     ddGATgrowConObjectField ;
	button -label "Get"
	       -width 36
	       -command "ddGATGetSel()" ;
  setParent.. ;
  */
  button -label "add driven"
	 
	 -command "ddGATAddDrivenGrowCMD" ;
 showWindow ddGrowAniToolsUI ;

}

//End of file.