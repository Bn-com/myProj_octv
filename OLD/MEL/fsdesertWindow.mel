global proc fsdesertWindow()
{
if(`window -exists desertWindow`)
	deleteUI desertWindow;
window  -t "沙漠工具v1.0"
	-wh 290 257
	-mxb 0
	-resizeToFitChildren 0
	desertWindow;
menuBarLayout;
menu -l "编辑";
	menuItem -l "重设" -c resetCmd reset;
menu -l "帮助";
	menuItem -l "沙漠帮助..." -command "zjHelpCallback fsDesertWindow" helpDesert;
scrollLayout -childResizable 1 mainSol;
columnLayout -adj 1 mainCol;
frameLayout -l "沙漠参数"
	    -collapsable 0
	    -collapse 1
	    -borderStyle "etchedIn"
	    desertFrame;
columnLayout;
rowLayout -nc 2 
	  -columnAttach 1 "left" 2
	  -cal 2 "center"
	  -cw 1 110
	  -cw 2 100
	  frameRow;

	textFieldGrp -l "起始帧" 
		     -columnAlign2 "left" "left"
		     -cw 1 45
		     -cw 2 50	
		     startFrame;
	textFieldGrp -l "角色动画起始帧" 
		     -columnAlign2 "left" "left"
		     -cw 1 94
		     -cw 2 50
		     charStartFrame;
	setParent..;
rowLayout -nc 2 
	  -columnAttach 1 "left" 2
	  -cal 2 "center"
	  -cw 1 110
	  -cw 2 140
	  particleRow;
	  
	  textFieldGrp  -l "粒子个数"
			-cl2 "left" "left"
			-cw 1 57
			-cw 2 50
			particleRate;
	  textFieldGrp  -l "沙漠发射器名称"
			-cl2 "left" "left"
			-cw 1 94
			-cw 2 50
		        desertEmit;
	 
	  setParent..;
//separator -style "in" -h 5 -w 400 spe1;

colorSliderGrp  -label "沙漠颜色" 
		-columnAttach 1  "left" 2
		-columnAttach 2  "left" 2
		-columnWidth3 50 50 160
		-adjustableColumn 2
		-rgb 0.808 0.703 0.461
		desertColor;
separator -style "in" -h 5 -w 400 spe2;
intFieldGrp -numberOfFields 1
 		-label "脚的个数"
		-columnAttach 1 "left" 0
		-columnAttach 2 "left" 2
		-columnWidth2 55 50 
		-adjustableColumn 2
		-value1 0 
		foots;

rowLayout -nc 2 
	  -columnAttach 1 "left" 0
	  -cal 2 "center"
	  -cw 1 110
	  -cw 2 100
	  fluidDensityRow;

	  floatFieldGrp -nf 1 
			-l "流体密度" 
			-columnAttach 1 "left" 0
			-columnAttach 2 "left" 2
			-columnWidth2 55 50 
			-adjustableColumn 2
			-v1 -1.0 
			fluidDensity;
	  button -l "确定" -w 50 -c ("desertFluidCmd 1") densityBut;
	  setParent..;
rowLayout -nc 2 
	  -columnAttach 1 "left" 0
	  -cal 2 "center"
	  -cw 1 112
	  -cw 2 100
	  footPrintDepthRow;

	  floatFieldGrp -nf 1 
			-l "脚印深浅度" 
			-columnAttach 1 "left" 0
			-columnAttach 2 "left" 2
			-columnWidth2 60 50 
			-adjustableColumn 2
			-v1 1.5 
			footPrintDepth;
	  button -l "确定" -w 50 -c ("desertFluidCmd 2") depthBut;
	  setParent..;
separator -style "in" -h 5 -w 400 spe3;
button -l "创建脚印" -w 270 -c footprintCmd footprintBut;
button -l "创建沙漠粒子" -w 270 -c desertCmd particleBut;

setParent..;
setParent..;
showWindow desertWindow;
}

global proc footprintCmd()
{
	global string $fluidName;
	float $footPrintDepth=`floatFieldGrp -q -v1 footPrintDepth`;
	int $startFrame=`textFieldGrp -q -text startFrame`;
	$fluidName=`shadingNode -asTexture fluidTexture3D`;
	//string $fluidPlace2D=`shadingNode -asUtility place2dTexture`;
	//connectAttr ($fluidPlace2D+".outUV") ($fluidName+".uv");
	//connectAttr ($fluidPlace2D+".outUvFilterSize") ($fluidName+".uvFilterSize");
	connectAttr time1.outTime ($fluidName+".currentTime");
	string $fluidParent[]=`listRelatives -p $fluidName`;
	setAttr ($fluidName+".is2d") 1;
	setAttr ($fluidName+".startFrame") $startFrame;
	setAttr ($fluidName+".solver") 2;
	setAttr ($fluidName+".densityScale") 1;
	setAttr ($fluidName+".boundaryX") 0;
	setAttr ($fluidName+".boundaryY") 0;
	setAttr ($fluidName+".boundaryZ") 0;
	setAttr ($fluidName+".velocityDamp") 0.02;
	setAttr ($fluidName+".renderInterpolator") 3;
	setAttr ($fluidName+".edgeDropoff") 0.008;
	setAttr ($fluidName+".alphaGain") $footPrintDepth;
	setAttr ($fluidName+".resolution") 500 500 1;
	setAttr ($fluidName+".densityMethod") 1;
	setAttr ($fluidName+".velocityMethod") 0;
	setAttr ($fluidName+".shadedDisplay") 0;
	setAttr ($fluidName+".boundaryDraw") 4;
	setAttr ($fluidName+".wireframeDisplay") 0;
	setAttr ($fluidParent[0]+".rotateX") -90;
	string $ocean=`shadingNode -n desertShader -asShader oceanShader`;
	sets -renderable true -noSurfaceShader true -empty -name ($ocean+"SG");
	connectAttr -f ($ocean+".outColor") ($ocean+"SG.surfaceShader");
	connectAttr -f ($ocean+".displacement") ($ocean+"SG.displacementShader");
	expression -s ($ocean+".time=time;")  -o $ocean -ae 1 -uc all ;
	setAttr ($ocean+".waveHeight[0].waveHeight_Position") 0;
	setAttr ($ocean+".waveHeight[0].waveHeight_FloatValue") 0.04;
	setAttr ($ocean+".waveHeight[1].waveHeight_Interp") 1;
	setAttr ($ocean+".waveHeight[1].waveHeight_Position") 1;
	setAttr ($ocean+".waveHeight[1].waveHeight_FloatValue") 0.08;
	removeMultiInstance -break true ($ocean+".wavePeaking[1]");
	setAttr ($ocean+".wavePeaking[0].wavePeaking_Position") 0;
	setAttr ($ocean+".wavePeaking[0].wavePeaking_FloatValue") 0;
	connectAttr -f ($fluidName+".outAlpha") ($ocean+".waveHeightOffset");
	setAttr ($ocean+".foamThreshold") 0.545;
	setAttr ($ocean+".bumpBlur") 0.07;
	setAttr ($ocean+".waterColor") -type double3 0.949 0.949 0.949 ;
	setAttr ($ocean+".refractiveIndex") 5.628;
	setAttr ($ocean+".diffuse") 0.785;
	setAttr ($ocean+".ambientColor") -type double3 .107 .129 .134 ;
	setAttr ($ocean+".troughShadowing") 0;
	setAttr ($ocean+".translucence") 0;
	setAttr ($ocean+".specularity") 0.091;
	setAttr ($ocean+".eccentricity") 0.901;
	setAttr ($ocean+".reflectivity") 0.364;
	setAttr ($ocean+".environment[0].environment_Position") 0;
	setAttr ($ocean+".environment[0].environment_Color") -type double3 0.428 0.464 0.529 ;
	setAttr ($ocean+".environment[1].environment_Position") 0.493;
	setAttr ($ocean+".environment[1].environment_Color") -type double3 0.608 0.666 0.7 ;
	setAttr ($ocean+".environment[2].environment_Position") 0.964;
	setAttr ($ocean+".environment[2].environment_Color") -type double3 0.583 0.615 0.739 ;
	setAttr ($ocean+".waveSpeed") 0;
	setAttr ($ocean+".numFrequencies") 3.9;
	setAttr ($ocean+".waveDirSpread") 0.545;
	setAttr ($ocean+".waveLengthMin") 1.158;
	setAttr ($ocean+".waveLengthMax") 12;
}

global proc desertCmd()
{	
	string $desertEmitName=`textFieldGrp -q -text desertEmit`;
	string $particleRate=`textFieldGrp -q -text particleRate`;
	string $deserts[]=`particle -n ("desert")`;
	float $rgb[]=`colorSliderGrp  -q -rgb desertColor`;
	addAttr -is true -ln "colorRed" -dv 0.0 -at double ($deserts[0]+"Shape");
	setAttr -keyable true ($deserts[0]+"Shape.colorRed") $rgb[0];
	addAttr -is true -ln "colorGreen" -dv 0.0 -at double ($deserts[0]+"Shape");
	setAttr -keyable true ($deserts[0]+"Shape.colorGreen") $rgb[1];
	addAttr -is true -ln "colorBlue" -dv 0.0 -at double ($deserts[0]+"Shape");
	setAttr -keyable true ($deserts[0]+"Shape.colorBlue") $rgb[2];
	int $foots=`intFieldGrp -q -v1 foots`;
	string $desert=$deserts[0];
	string $desertemit[];
	string $desertEmits[];
	clear ($desertEmits);
	string $spheres[];
	int $startFrame=`textFieldGrp -q -text startFrame`;
	int $charStartFrame=`textFieldGrp -q -text charStartFrame`;
	setAttr ($desert+".startFrame") $startFrame;
	for($i=0;$i<$foots;$i++)
	{
		$desertemit=`emitter -pos 0 0 0 -type omni -r 0 -n ($desertEmitName+"_"+$i)`;
		$desertEmits[size($desertEmits)]=$desertemit[0];
		connectDynamic -em $desertemit $desert;
	
	}

		for($j=0;$j<$foots;$j++)
	{
		string $Sphere[]=`sphere -ax 0 1 0 -n ("ball_"+$j)`;
		$spheres[size($spheres)]=$Sphere[0];
	}

	for($i=0;$i<size($spheres);$i++)
	{
		parentConstraint   -weight 1 $spheres[$i] $desertEmits[$i];
		string $expression_1="global float $dist[3];\r\nfloat $tx="+$spheres[$i]+".translateX;\r\n";
		string $expression_2="float $ty="+$spheres[$i]+".translateY;\r\n";
		string $expression_3="float $tz="+$spheres[$i]+".translateZ;\r\n";
		string $expression_4="float $oldtx;\r\nfloat $oldty;\r\nfloat $oldtz;\r\nfloat $speed;\r\n";
		string $expression_5="if(frame<="+$startFrame+")\r\n{\r\n\t";
		string $expression_6="clear $dist;\r\n\t$oldtx=0;\r\n\t$oldty=0;\r\n\t";
		string $expression_7="$oldtz=0;\r\n}\r\n$dist[0]=$tx-$oldtx;\r\n$dist[1]=$ty-$oldty;\r\n";
		string $expression_8="$dist[2]=$tz-$oldtz;\r\n\r\n$oldtx="+$spheres[$i]+".translateX;\r\n";
		//string $expression_9="$dist[2]=$tz-$oldtz;\r\n\r\n$oldtx="+$spheres[$i]+".translateX;\r\n";
		string $expression_10="$oldty="+$spheres[$i]+".translateY;\r\n$oldtz="+$spheres[$i]+".translateZ;\r\n\r\n";
		string $expression_11="if(frame<="+$charStartFrame+")\r\n{\r\n\r\n\t"+$desertEmits[$i]+".rate=0;\r\n\r\n}\r\n";
		string $expression_12="else if($dist[1]<=0||$dist[2]<0)\r\n{\t\r\n\t\r\n\t"+$desertEmits[$i]+".rate=20;\r\n}\r\n";
		string $expression_13="else\r\n{\r\n\t$speed=mag(<<$dist[0],$dist[1],$dist[2]>>);\r\n\t";
		string $expression_14=$desertEmits[$i]+".rate="+$particleRate+"*$speed;\r\n}";
		expression  -s ($expression_1+$expression_2+$expression_3+$expression_4+$expression_5+$expression_6+$expression_7+$expression_8
				+$expression_10+$expression_11+$expression_12+$expression_13+$expression_14);

	}
}

global proc desertFluidCmd(int $input)
{	
	global string $fluidName;
	float $fluidDensity=`floatFieldGrp -q -v1 fluidDensity`;
	float $footPrintDepth=`floatFieldGrp -q -v1 footPrintDepth`;
	string $fluidEmits[]=`ls -type fluidEmitter`;
	if($input==1)
	{

		for($eachEmitter in $fluidEmits)
		{
			string $locatorName[]=`spaceLocator -p 0 0 0`;
			setAttr ($eachEmitter+".fluidDropoff") 0;
			setAttr ($eachEmitter+".fluidDensityEmission") $fluidDensity;
			parentConstraint $eachEmitter $locatorName[0];
		}
	}
	if($input==2)
	{
	
		//setAttr ($fluidName+".alphaGain") $footPrintDepth;
		string $fluidExpression_1="float $randDepth=int(rand(1,30));\r\n";
		string $fluidExpression_2=$fluidName+".alphaGain="+$footPrintDepth+"*$randDepth;\r\n";
		expression -s ($fluidExpression_1+$fluidExpression_2);
	}

}

global proc resetCmd()
{
	textFieldGrp -e 
		     -text " "
		     startFrame;
	textFieldGrp -e
		     -text " "
		     charStartFrame;
	
	textFieldGrp    -e
			-text " "
			particleRate;
	textFieldGrp    -e
			-text " "
		        desertEmit;
	
	colorSliderGrp  -e
			-rgb 0.808 0.703 0.461
			desertColor;

	intFieldGrp     -e 
 			-value1 0 
			foots;

	floatFieldGrp   -e
			-v1 -1.0 
			fluidDensity;

	floatFieldGrp   -e
			-v1 1.5 
			footPrintDepth;
}
