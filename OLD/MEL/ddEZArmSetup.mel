//////////////////////////////////////////////////////////
//
//	Script Name: ddEZArmSetup
//	Verision: 0.01 beta
//	Author: Julii FreeMAN, SZ-CN
//	Date Created: July 21 2004
//	Changed Projcet Date: March 3 2007
//	Last Updated: March 3 2007
//	Update/Change this file at: Julii FreeMAN
//	Note:EZ 手部设置
//
//////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////
// Procdures Name: ddEZArmSetup
// 
// 手臂设置
// Arguments:
//  $charName 角色名
//////////////////////////////////////////////////////////

global proc ddEZArmSetup(string $charName,string $side)
{
	float $temp[3],$tempJointPosition[3],$conSize ;
	string $constraintName[] ;

	//create arm ik and hand ik
	ikHandle -solver ikRPsolver -sj ($charName + "_arm_" + $side) -ee ($charName + "_wrist_" + $side) -n ($charName + "_armHandle_" + $side) -s sticky ;
	ikHandle -solver ikRPsolver -sj ($charName + "_wrist_" + $side) -ee ($charName + "_hand_" + $side) -n ($charName + "_hand_ikHandle_" + $side) -s sticky ;

	//query wrist world position
	$temp = `xform -q -ws -t ($charName + "_wrist_" + $side)` ;

	source ddCreateController ;
	//calculate controller size 计算控制器的大小
	source ddMath ;
	$conSize = `ddObjectDistance ($charName + "_elbow_" + $side) ($charName + "_wrist_" + $side)`/2.5 ;
	
	//create ik control locator & amend rotate
	ddCreateController ($charName + "_world_wristCon_" + $side) cube $conSize ;
	addAttr -ln twist -at double ($charName + "_world_wristCon_" + $side) ;
	setAttr -e -keyable true ($charName + "_world_wristCon_" + $side + ".twist") ;
	move -r $temp[0] $temp[1] $temp[2] ($charName + "_world_wristCon_" + $side) ;
	select -r ($charName + "_wrist_" + $side) ;
	select -tgl ($charName + "_world_wristCon_" + $side) ;
	$constraintName = `orientConstraint -weight 1` ;
	delete $constraintName[0] ;

	//craete fk control locator
	ddCreateController ($charName + "_wristCon_" + $side) ball $conSize;
	addAttr -ln solverEnable -at bool ($charName + "_wristCon_" + $side);
	setAttr -e -keyable true ($charName + "_wristCon_" + $side + ".solverEnable") ;
	select -r ($charName + "_wristCon_" + $side) ;
	group -n ($charName + "_wristCon_group_" + $side) ;
	select -r ($charName + "_wristCon_group_" + $side) ;
	move -r $temp[0] $temp[1] $temp[2];
	select -r ($charName + "_wristCon_group_" + $side) ;
	select -tgl ($charName + "_elbow_" + $side) ;
	parent;
	select -r ($charName + "_wrist_" + $side) ;
	select -tgl ($charName + "_wristCon_group_" + $side) ;
	$constraintName = `orientConstraint -weight 1 ` ;
	delete $constraintName[0] ;

 //set fk rotate control
 select -r ($charName + "_wristCon_" + $side);
 select -tgl ($charName + "_wrist_" + $side);
 orientConstraint -weight 1 ;

 //set ik translate and rotate control
 select -r ($charName + "_world_wristCon_" + $side) ;
 select -tgl ($charName + "_armHandle_" + $side);
 pointConstraint -weight 1;
 select -r ($charName + "_hand_ikHandle_" + $side) ;
 select -tgl ($charName + "_world_wristCon_" + $side) ;
 parent ;

 //set switch
 connectAttr -f ($charName + "_world_wristCon_" + $side + ".twist" ) ($charName + "_armHandle_" + $side + ".twist") ;
 if(`attributeExists "ikBlend" ($charName + "_armHandle_" + $side)`)
 {
  connectAttr -f ($charName + "_wristCon_" + $side + ".solverEnable") ($charName + "_armHandle_" + $side + ".ikBlend") ;
  connectAttr -f ($charName + "_wristCon_" + $side + ".solverEnable") ($charName + "_hand_ikHandle_" + $side + ".ikBlend") ;
 }
 else if(`attributeExists "solverEnable" ($charName + "_armHandle_" + $side)`)
 {
  connectAttr -f ($charName + "_wristCon_" + $side + ".solverEnable") ($charName + "_armHandle_" + $side + ".solverEnable") ;
  connectAttr -f ($charName + "_wristCon_" + $side + ".solverEnable") ($charName + "_hand_ikHandle_" + $side + ".solverEnable") ;
 }

 //account poleVector position
 $tempJointPosition = `xform -q -ws -t ($charName + "_arm_" + $side)` ;
 $temp[0] = $tempJointPosition[0] + `getAttr ($charName + "_armHandle_" + $side + ".poleVectorX")` ;
 $temp[1] = $tempJointPosition[1] + `getAttr ($charName + "_armHandle_" + $side + ".poleVectorY")` ;
 $temp[2] = $tempJointPosition[2] + `getAttr ($charName + "_armHandle_" + $side + ".poleVectorZ")` ;

 //create pole locator
 spaceLocator -p 0 0 0 -n ($charName + "_poleLoc_" + $side) ;
 select -r ($charName + "_poleLoc_" + $side) ;
 move -r $temp[0] $temp[1] $temp[2] ;
 select -tgl ($charName + "_arm_" + $side) ;
 parent ;

}


//End of file.