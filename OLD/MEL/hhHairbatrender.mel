//∆¡‰÷
/*
global proc hhHairbatrender()
{
	hhcamset();
	hhofflight();
	string $cams[]=`ls -type "camera"`;
	string $sname=`file -q -sn -shn`;
	string $buf[];
	tokenize $sname "_" $buf;
	string $path="//File-cluster/gdc/Projects/Strawberry/Strawberry_Scratch/effect/xiaohuan/"+$buf[1]+"_"+$buf[2]+"/";
	sysFile -md $path;
	for($cam in $cams)
	{
		string $rable=`getAttr ($cam+".renderable")`;
		if($rable!=0)
		{
			string $startfram=`playbackOptions -q -min`;
			string $endfram =`playbackOptions -q -max`;
			int $s=$startfram;
			int $e=$endfram;
			global string $gMainProgressBar;
			progressBar -edit -beginProgress -isInterruptable true -status "BuffaloRender ..." -maxValue $e $gMainProgressBar;
			setMayaSoftwareFrameExt(1, 0);
			setAttr "defaultRenderGlobals.imageFormat" 32;
			for($i=$s;$i<$e;$i++)
			{
				if (`progressBar -query -isCancelled $gMainProgressBar`)
				{
					progressBar -edit -endProgress $gMainProgressBar;
					return;
				}

				currentTime $i ;

				int $startFrame = `getAttr "defaultRenderGlobals.startFrame"`;
				setAttr "defaultRenderGlobals.startFrame" $i;
				string $images[] = `renderSettings -firstImageName`;
				setAttr "defaultRenderGlobals.startFrame" $startFrame;
				progressBar -edit -step 1 $gMainProgressBar;
				setAttr( "defaultRenderGlobals.currentRenderer" ) -typ "string" "mayaSoftware";
				setMayaSoftwareFrameExt(3, 0);
				setAttr "defaultRenderQuality.edgeAntiAliasing" 3;
				string $shortname=`file -q -sn -shn`;
				string $filename = `substitute ".mb" $shortname ("_hair."+$i+".png")`;
				source "renderWindowPanel.mel";
				renderWindowRenderCamera redoPreviousRender renderView $cam;
				string $renderedImageName = `optionVar -query "renderedImageName"`;
				sysFile -move ($path+ $filename) $renderedImageName;
			}
		}
	}
}
*/
//∫ÛÃ®‰÷
global proc hhHairbatrender()
{
	hhcamset();
	hhofflight();
	//hhhairset();
	string $cams[]=`ls -type "camera"`;
	string $sname=`file -q -sn -shn`;
	string $buf[];
	tokenize $sname "_" $buf;
	string $path="d:/dy/"+$buf[1]+"_"+$buf[2];
	sysFile -md $path;
	for($cam in $cams)
	{
		string $rable=`getAttr ($cam+".renderable")`;
		if($rable!=0)
		{
			//setAttr "defaultRenderGlobals.startFrame" $s;
			string $c[]=`listRelatives -p $cam`;
			int $s = `getAttr defaultRenderGlobals.startFrame`;
			int $e = `getAttr defaultRenderGlobals.endFrame`;
			//global string $gMainProgressBar;
			//progressBar -edit -beginProgress -isInterruptable true -status "BuffaloRender ..." -maxValue $e $gMainProgressBar;
			setMayaSoftwareFrameExt(1, 0);
			setAttr "defaultRenderGlobals.imageFormat" 32;
			setAttr( "defaultRenderGlobals.currentRenderer" ) -typ "string" "mayaSoftware";
			setMayaSoftwareFrameExt(3, 0);
			setAttr "defaultRenderQuality.edgeAntiAliasing" 3;
			int $time=`currentTime -q`;
			currentTime ($time+1);
			$sceneName=`file -q -sn`;
			//string $cmd =  "D:\\Alias\\MAYA2009x64\\bin\\render.exe"+" -r sw -rd \""+ substituteAllString($path, "/", "\\") + "\" -cam "+ $c[0]+" -s " +$s+" -e " + $e+" -x 640"+" -y 360"+" \"" + substituteAllString($sceneName, "/", "\\") + "\"";
			string $cmd =  "D:\\Alias\\MAYA2009x64\\bin\\render.exe"+" -r sw -rd \""+ substituteAllString($path, "/", "\\") + "\" -s " +$s+" -e " + $e+" -x 640"+" -y 360"+" \"" + substituteAllString($sceneName, "/", "\\") + "\"";
			//print $cmd;
			system ("\"" + $cmd + "\"");
		}
	}
}


global proc hhcamset()
{
	string $cams[]=`ls -type "camera"`;
	for ($c in $cams )
	{
		if(`match "persp" $c`==""||`match "top" $c`==""||`match "front" $c`==""||`match "side" $c`=="")
		{
			setAttr ($c+".renderable") 1;
		}
		else
		{
			setAttr ($c+".renderable") 0;
		}
	}
}
global proc hhofflight()
{
	string $lights[]=`ls -type light`;
	for($light in $lights)
	{
	 string $tr[]=`listRelatives -p $light`;
	 delete $tr;
	}
	setAttr "defaultRenderGlobals.enableDefaultLight" 1;
}

global proc hhhairset()
{
	string $hairs[]=`ls -type hairSystem`;
	for($h in $hairs)
	{
		string $clump=$h+".hairsPerClump";
		string $segments=$h+".subSegments";
		if (`objExists $clump`)
		{
			int $c=`getAttr $clump`;
			int $s=`getAttr $segments`;
			setAttr $clump ($c/2);
			setAttr $segments ($s/2);
		}
	}
}