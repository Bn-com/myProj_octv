/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc connSwitch(string $sel[])
{
	for ( $i=0; $i<size($sel); $i++)
	{
		string	$shadername = $sel[$i];
		string  $names[];
		int $namecount = `tokenize $shadername "_" $names`;
		string $suffix = $names[$namecount-1];
		string	$shader = `substitute $suffix $shadername "SG"`;
		
		if (`objExists $shader`)
		{
			//CHECK FOR POLY MESHES
			string $shapes[];
			clear $shapes;
			int $k = 0;
			//********************************************************
			string $myshapes[] = `sets -q -nodesOnly $shader`;
			for ($sh in $myshapes)
			{
				if (`nodeType $sh` == "mesh"||`nodeType $sh` == "nurbsSurface")
				{
					$shapes[$k++] = $sh;
				}
				else if (`nodeType $sh` == "transform")
				{
					string $shps[] = `listRelatives -c -path -type shape $sh`;
					$shapes[$k++] = $shps[0];
				}
			}
			string $tempshapes[];
			clear $tempshapes;	
			$tempshapes= stringArrayRemoveDuplicates($shapes);
			string $temp[];
			clear $temp;	
			int $p = 0;
			for ($item in $tempshapes)
			{
				string $dup[] = `ls -l $item`;
				for ($j in $dup)
				{
					$temp[$p++] = $j;
				}
			}
			$shapes = stringArrayRemoveDuplicates($temp);
			string $tricons[] = `listConnections -s 1 -d 0 $sel[$i]`;
			string $intriples[] = `ls ($sel[$i]+".input[*].inShape")`;

			int $d = 0;
			for($c=0;$c<`size $shapes`;$c++)
			{
				string $trans[] = `listRelatives -allParents -pa $shapes[$c]`;
				for($t=0;$t<`size $trans`;$t++)
				{
					string $trans_parts[];
					int $trans_tok = tokenize($trans[$t], "|", $trans_parts);
					string $trans_ramp;
					if($trans_tok>1)
					{
						$trans_ramp = ($trans_parts[0]+"_"+$trans_parts[$trans_tok-1]);
					}
					else
					{
						$trans_ramp = $trans[$t];
					}
				
					//if(`objExists ($shadername+"_colorFile.outColor")`&&`objExists ($shadername+".input["+$d+"].inTriple")`&&(`isConnected ($shadername+"_colorFile.outColor") ($shadername+".input["+$d+"].inTriple")`))
					//{
						if(`objExists ($shapes[$c]+".instObjGroups["+$t+"]")`&&`objExists ($shadername+".input["+$d+"].inShape")`&&`isConnected ($shapes[$c]+".instObjGroups["+$t+"]") ($shadername+".input["+$d+"].inShape")`==0)
						{
							//CONNECT SURFACE TO SHADING SWITCH
							print ("\nCONNECTING TRANSFORM: "+$shapes[$c]+".instObjGroups["+$t+"] TO SWITCH: "+$shadername+".input["+$d+"].inShape\n");
							connectAttr -f ($shapes[$c]+".instObjGroups["+$t+"]") ($shadername+".input["+$d+"].inShape");
						}
					//}
					$d++;
				}
				clear $trans;
			}
		}
		else warning ("Please rename the ShadingSwitch--"+$shadername+"\n");
	}
}

//main
global proc zjConnectswitch()
{
	/////////////////////////////////////////////////////////
	//triple switch
	string $sel[] = `ls -type tripleShadingSwitch`;
	connSwitch($sel);

	///////////////////////////////////////////////////////////////////////////////////
	//double switch
	string $sel[] = `ls -type doubleShadingSwitch`;
	connSwitch($sel);

	///////////////////////////////////////////////////////////////////////////////////
	//single switch
	string $sel[] = `ls -type singleShadingSwitch`;
	connSwitch($sel);

}




