global proc zzyCreatePaintableFlow()
//
//函数描述：
//         创建可绘制粒子曲面运动方向贴图的粒子流。
//
{
	
	string $asSelect[]=`filterExpand -ex true -sm 10 -sm 12`;
	string $asSelectObjectShape[];
	clear  $asSelectObjectShape;

	if(size($asSelect)!=1)
	{
		error "Please select single Ploygon or Nurbs object";
	}

	
	string $sObjectType=`objectType $asSelect[0]`;

	if($sObjectType== "mesh" || $sObjectType == "nurbsSurface" ) 
	{
		$asSelectObjectShape[0]=$asSelect[0];
		string $asTemp[]=`listRelatives -p $asSelect[0]`;
		$asSelect[0]=$asTemp[0];
	}
	else
	{
		$asSelectObjectShape=`listRelatives -s $asSelect[0]`;

	}
	
	//选择物体，从物体曲面发射粒子。
	string $asFlowEmitter[]=`emitter -type surface -r 100 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 `;
  
	string $asFlowParticle[]=`particle`;
	string $asFlowPartilceShape[]=`listRelatives -s $asFlowParticle[0]`;

	connectDynamic -em $asFlowEmitter[1] $asFlowParticle[0];

	//把曲面设为物体的goal曲面。
	goal -w 1 -utr 0   -g $asSelect[0]  $asFlowParticle[0];

	//parentUV, goalU goalV 
	setAttr ($asFlowEmitter[1]+".needParentUV") 1;

	addAttr -ln goalU	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln goalU0	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln goalV	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln goalV0	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln parentU	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln parentU0	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln parentV	-dt doubleArray		$asFlowPartilceShape[0];
	addAttr -ln parentV0	-dt doubleArray		$asFlowPartilceShape[0];

	addAttr -ln "moveUV"  -dt vectorArray  $asFlowPartilceShape[0];
	setAttr -e-keyable true ($asFlowPartilceShape[0]+".moveUV");

	addAttr -ln "step"  -at double  -min 0 -max 1 -dv 0.01 $asFlowPartilceShape[0];
	setAttr -e-keyable true ($asFlowPartilceShape[0]+".step");
	
	addAttr -ln "stepPP0"  -dt doubleArray  $asFlowPartilceShape[0];
	addAttr -ln "stepPP"  -dt doubleArray  $asFlowPartilceShape[0];
	setAttr -e-keyable true ($asFlowPartilceShape[0]+".stepPP");

	setAttr ($asFlowPartilceShape[0]+".lifespanMode") 3;


	dynExpression -s "goalU=parentU;\r\ngoalV=parentV;" -c $asFlowPartilceShape[0];
	dynExpression -s "stepPP = step;\r\n\r\nvector $move = ( moveUV - <<.5,.5,0>> ) * stepPP;\r\n\r\ngoalU += $move.x;\r\ngoalV += $move.y;\r\n\r\nif ($move.z > 0) lifespanPP = 0;" -rbd $asFlowPartilceShape[0];


	//给曲面新的材质球
	string $sFlowShader=`shadingNode -asShader lambert`;

	string $sFlowShaderSG=($sFlowShader+"SG");
	sets -renderable true -noSurfaceShader true -empty -name $sFlowShaderSG;
	connectAttr -f ($sFlowShader+".outColor") ($sFlowShaderSG+".surfaceShader");
	sets -edit -forceElement $sFlowShaderSG $asSelectObjectShape[0];

	//创建方向贴图和发射贴图
	string $sDirectionBrushTextureFile=`shadingNode -asTexture file`;
	string $sPlace2dTexture1=`shadingNode -asUtility place2dTexture`;
	connectAttr -f ($sPlace2dTexture1+".outUV")		($sDirectionBrushTextureFile+".uvCoord");
	connectAttr -f ($sPlace2dTexture1+".outUvFilterSize")	($sDirectionBrushTextureFile+".uvFilterSize"); 
	connectAttr -f ($sPlace2dTexture1+".coverage")		($sDirectionBrushTextureFile+".coverage"); 
	connectAttr -f ($sPlace2dTexture1+".translateFrame")	($sDirectionBrushTextureFile+".translateFrame"); 
	connectAttr -f ($sPlace2dTexture1+".rotateFrame")	($sDirectionBrushTextureFile+".rotateFrame"); 
	connectAttr -f ($sPlace2dTexture1+".mirrorU")		($sDirectionBrushTextureFile+".mirrorU"); 
	connectAttr -f ($sPlace2dTexture1+".mirrorV")		($sDirectionBrushTextureFile+".mirrorV"); 
	connectAttr -f ($sPlace2dTexture1+".stagger")		($sDirectionBrushTextureFile+".stagger"); 
	connectAttr -f ($sPlace2dTexture1+".wrapU")		($sDirectionBrushTextureFile+".wrapU"); 
	connectAttr -f ($sPlace2dTexture1+".wrapV")		($sDirectionBrushTextureFile+".wrapV"); 
	connectAttr -f ($sPlace2dTexture1+".repeatUV")		($sDirectionBrushTextureFile+".repeatUV"); 
	connectAttr -f ($sPlace2dTexture1+".vertexUvOne")	($sDirectionBrushTextureFile+".vertexUvOne"); 
	connectAttr -f ($sPlace2dTexture1+".vertexUvTwo")	($sDirectionBrushTextureFile+".vertexUvTwo"); 
	connectAttr -f ($sPlace2dTexture1+".vertexUvThree")	($sDirectionBrushTextureFile+".vertexUvThree"); 
	connectAttr -f ($sPlace2dTexture1+".vertexCameraOne")	($sDirectionBrushTextureFile+".vertexCameraOne"); 
	connectAttr -f ($sPlace2dTexture1+".noiseUV")		($sDirectionBrushTextureFile+".noiseUV"); 
	connectAttr -f ($sPlace2dTexture1+".offset")		($sDirectionBrushTextureFile+".offset"); 
	connectAttr -f ($sPlace2dTexture1+".rotateUV")		($sDirectionBrushTextureFile+".rotateUV");
	connectAttr -force ($sDirectionBrushTextureFile+".outColor") ($sFlowShader+".color");



	string $sEmitterTextureFile=`shadingNode -asTexture file`;
	string $sPlace2dTexture2=`shadingNode -asUtility place2dTexture`;
	connectAttr -f ($sPlace2dTexture2+".outUV")		($sEmitterTextureFile+".uvCoord");
	connectAttr -f ($sPlace2dTexture2+".outUvFilterSize")	($sEmitterTextureFile+".uvFilterSize"); 
	connectAttr -f ($sPlace2dTexture2+".coverage")		($sEmitterTextureFile+".coverage"); 
	connectAttr -f ($sPlace2dTexture2+".translateFrame")	($sEmitterTextureFile+".translateFrame"); 
	connectAttr -f ($sPlace2dTexture2+".rotateFrame")	($sEmitterTextureFile+".rotateFrame"); 
	connectAttr -f ($sPlace2dTexture2+".mirrorU")		($sEmitterTextureFile+".mirrorU"); 
	connectAttr -f ($sPlace2dTexture2+".mirrorV")		($sEmitterTextureFile+".mirrorV"); 
	connectAttr -f ($sPlace2dTexture2+".stagger")		($sEmitterTextureFile+".stagger"); 
	connectAttr -f ($sPlace2dTexture2+".wrapU")		($sEmitterTextureFile+".wrapU"); 
	connectAttr -f ($sPlace2dTexture2+".wrapV")		($sEmitterTextureFile+".wrapV"); 
	connectAttr -f ($sPlace2dTexture2+".repeatUV")		($sEmitterTextureFile+".repeatUV"); 
	connectAttr -f ($sPlace2dTexture2+".vertexUvOne")	($sEmitterTextureFile+".vertexUvOne"); 
	connectAttr -f ($sPlace2dTexture2+".vertexUvTwo")	($sEmitterTextureFile+".vertexUvTwo"); 
	connectAttr -f ($sPlace2dTexture2+".vertexUvThree")	($sEmitterTextureFile+".vertexUvThree"); 
	connectAttr -f ($sPlace2dTexture2+".vertexCameraOne")	($sEmitterTextureFile+".vertexCameraOne"); 
	connectAttr -f ($sPlace2dTexture2+".noiseUV")		($sEmitterTextureFile+".noiseUV"); 
	connectAttr -f ($sPlace2dTexture2+".offset")		($sEmitterTextureFile+".offset"); 
	connectAttr -f ($sPlace2dTexture2+".rotateUV")		($sEmitterTextureFile+".rotateUV");
	connectAttr -force ($sEmitterTextureFile+".outColor")	($sFlowShader+".incandescence");

	string $asArrayMapper[]=`arrayMapper -target $asFlowPartilceShape[0] -destAttr moveUV -inputU goalU -inputV goalV `;
	connectAttr -f ($sDirectionBrushTextureFile+".outColor") ($asArrayMapper[0]+".computeNodeColor");
	connectAttr -f ($sDirectionBrushTextureFile+".message")  ($asArrayMapper[0]+".computeNode");

	
	//art3dPaintCtx -e -floodselect art3dPaintContext;
	
	connectAttr -f ($sEmitterTextureFile+".outColor") ($asFlowEmitter[1]+".textureRate");
	setAttr ($asFlowEmitter[1]+".enableTextureRate") 1;

	select -r $asSelectObjectShape[0];
	select -add $sFlowShader;
	
	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr Incandescence `currentCtx`;
	art3dPaintCtx  -e -rgbflood 0 0 0 `currentCtx`;
	art3dPaintCtx -e -floodselect  `currentCtx`;
	art3dPaintAssignFileTexture( "art3dFileTextureFrame");
	art3dPaintAssignFileTextureNow;
	art3dPaintHardwareSetup;
	autoUpdateAttrEd;
	updateAnimLayerEditor("AnimLayerTab");
	statusLineUpdateInputField;
	//zzyFloodPaintBlackTexture


	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr Color `currentCtx`;
	//colorSliderGrp -e -rgb 0.5 0.5 1 art3dFloodColorSlider;
	art3dPaintCtx  -e -rgbflood 0.5 0.5 1 `currentCtx`;
	art3dPaintCtx -e -floodselect  `currentCtx`;
	
	//zzyFloodPaintBlueTexture;
	zzySetDirectionBrush;



}

global proc zzySetDirectionBrush()
//
//函数描述：
//         设置3D paint Tool 方向笔刷
//
{
	brushPresetSetup();
	bPset "time" 1; 
	bPset "globalScale" 1.450555676; 
	bPset "depth" 0; 
	bPset "modifyDepth" 1; 
	bPset "modifyColor" 1; 
	bPset "modifyAlpha" 1; 
	bPset "illuminated" 0; 
	bPset "castShadows" 0; 
	bPset "branches" 0; 
	bPset "twigs" 0; 
	bPset "buds" 0; 
	bPset "leaves" 1; 
	bPset "flowers" 0; 
	bPset "brushType" 0; 
	bPset "brushWidth" 0.05000000075; 
	bPset "screenspaceWidth" 0; 
	bPset "stampDensity" 10; 
	bPset "softness" 0; 
	bPset "edgeAntialias" 1; 
	bPset "blurIntensity" 4; 
	bPset "color1R" 0; 
	bPset "color1G" 0; 
	bPset "color1B" 0; 
	bPset "color2R" 1; 
	bPset "color2G" 1; 
	bPset "color2B" 1; 
	bPset "transparency1R" 0; 
	bPset "transparency1G" 0; 
	bPset "transparency1B" 0; 
	bPset "transparency2R" 0; 
	bPset "transparency2G" 0; 
	bPset "transparency2B" 0; 
	bPset "incandescence1R" 0; 
	bPset "incandescence1G" 0; 
	bPset "incandescence1B" 0; 
	bPset "incandescence2R" 0; 
	bPset "incandescence2G" 0; 
	bPset "incandescence2B" 0; 
	bPset "specularColorR" 1; 
	bPset "specularColorG" 1; 
	bPset "specularColorB" 1; 
	bPset "specular" 0; 
	bPset "specularPower" 10; 
	bPset "translucence" 0.2; 
	bPset "glow" 0; 
	bPset "glowColorR" 0.5; 
	bPset "glowColorG" 0.5; 
	bPset "glowColorB" 0.5; 
	bPset "glowSpread" 3; 
	bPset "shaderGlow" 0; 
	bPset "hueRand" 0; 
	bPset "satRand" 0; 
	bPset "valRand" 0; 
	bPset "rootFade" 0; 
	bPset "tipFade" 0; 
	bPset "fakeShadow" 0; 
	bPset "shadowOffset" 0.5; 
	bPset "shadowDiffusion" 0.1; 
	bPset "shadowTransparency" 0.8; 
	bPset "backShadow" 0; 
	bPset "brightnessRand" 0; 
	bPset "centerShadow" 0; 
	bPset "depthShadowType" 0; 
	bPset "depthShadow" 0; 
	bPset "depthShadowDepth" 0; 
	bPset "realLights" 0; 
	bPset "lightDirectionX" 0.5; 
	bPset "lightDirectionY" 0.5; 
	bPset "lightDirectionZ" -0.5; 
	bPset "gapSize" 0; 
	bPset "gapSpacing" 1; 
	bPset "gapRand" 0; 
	bPset "flowSpeed" 0; 
	bPset "timeClip" 0; 
	bPset "strokeTime" 0; 
	bPset "startTime" 0; 
	bPset "endTime" 1000; 
	bPset "tubes" 1; 
	bPset "tubeCompletion" 0; 
	bPset "tubesPerStep" 5; 
	bPset "tubeRand" 0; 
	bPset "startTubes" 0; 
	bPset "lengthMax" 0.0001; 
	bPset "lengthMin" 0.0001; 
	bPset "segments" 1; 
	bPset "tubeWidth1" 0; 
	bPset "tubeWidth2" 0; 
	bPset "widthRand" 0; 
	bPset "widthBias" 0; 
	bPset "lengthFlex" 0; 
	bPset "segmentLengthBias" 0; 
	bPset "segmentWidthBias" 0; 
	bPset "tubeDirection" 1; 
	bPset "elevationMin" 0; 
	bPset "elevationMax" 0; 
	bPset "azimuthMin" 0; 
	bPset "azimuthMax" 0; 
	bPset "flatness1" 0; 
	bPset "flatness2" 0; 
	bPset "twist" 0.65686; 
	bPset "twistRate" 0; 
	bPset "twistRand" 1; 
	bPset "spiralMin" 0; 
	bPset "spiralMax" 0; 
	bPset "spiralDecay" 0; 
	bPset "displacementDelay" 0.2; 
	bPset "wiggle" 0; 
	bPset "wiggleFrequency" 3; 
	bPset "wiggleOffset" 0; 
	bPset "curl" 0; 
	bPset "curlFrequency" 1; 
	bPset "curlOffset" 0; 
	bPset "noise" 0; 
	bPset "noiseFrequency" 0.2; 
	bPset "noiseOffset" 0; 
	bPset "splitMaxDepth" 0; 
	bPset "splitRand" 0; 
	bPset "splitAngle" 0; 
	bPset "splitSizeDecay" 1; 
	bPset "splitBias" 0; 
	bPset "splitTwist" 0; 
	bPset "startBranches" 0; 
	bPset "numBranches" 1; 
	bPset "branchDropout" 0; 
	bPset "middleBranch" 0; 
	bPset "minSize" 0.0001; 
	bPset "pathFollow" 0; 
	bPset "pathAttract" 0; 
	bPset "curveFollow" 0; 
	bPset "curveAttract" 0; 
	bPset "curveMaxDist" 0; 
	bPset "uniformForceX" 0; 
	bPset "uniformForceY" 0; 
	bPset "uniformForceZ" 0; 
	bPset "turbulenceType" 0; 
	bPset "turbulenceInterpolation" 0; 
	bPset "turbulence" 0.2; 
	bPset "turbulenceFrequency" 0.2; 
	bPset "turbulenceSpeed" 0.5; 
	bPset "turbulenceOffsetX" 0; 
	bPset "turbulenceOffsetY" 0; 
	bPset "turbulenceOffsetZ" 0; 
	bPset "random" 0; 
	bPset "gravity" 0; 
	bPset "momentum" 1; 
	bPset "deflection" 0; 
	bPset "deflectionMin" 0; 
	bPset "deflectionMax" 0.3; 
	bPset "twigsInCluster" 1; 
	bPset "twigDropout" 0; 
	bPset "twigAngle1" 90; 
	bPset "twigAngle2" 80; 
	bPset "twigTwist" 0; 
	bPset "twigLength" 0.5; 
	bPset "twigStart" 0.5; 
	bPset "numTwigClusters" 4; 
	bPset "twigBaseWidth" 0.4; 
	bPset "twigTipWidth" 0.2; 
	bPset "leavesInCluster" 1; 
	bPset "leafDropout" 0; 
	bPset "leafAngle1" 51.177; 
	bPset "leafAngle2" 116.472; 
	bPset "leafTwist" 0; 
	bPset "leafSegments" 10; 
	bPset "leafStart" 0; 
	bPset "numLeafClusters" 1; 
	bPset "leafFlatness" 0.5;
	bPset "leafLength" 0.0083058;
	bPset "leafBaseWidth" 0; 
	bPset "leafTipWidth" 0.08824;
	bPset "leafSizeDecay" 0;
	bPset "leafTranslucence" 0.7;
	bPset "terminalLeaf" 0;
	bPset "leafColor1R" 0; 
	bPset "leafColor1G" 0; 
	bPset "leafColor1B" 0; 
	bPset "leafColor2R" 0; 
	bPset "leafColor2G" 0; 
	bPset "leafColor2B" 0; 
	bPset "leafHueRand" 0; 
	bPset "leafSatRand" 0; 
	bPset "leafValRand" 0; 
	bPset "leafUseBranchTex" 0; 
	bPset "budSize" 0.03; 
	bPset "budColorR" 0.400000006;
	bPset "budColorG" 0.8000000119; 
	bPset "budColorB" 0.200000003; 
	bPset "petalsInFlower" 1; 
	bPset "petalDropout" 0; 
	bPset "flowerAngle1" 75;
	bPset "flowerAngle2" 25;
	bPset "flowerTwist" 0.23;
	bPset "petalSegments" 5; 
	bPset "flowerStart" 1; 
	bPset "numFlowers" 10; 
	bPset "petalFlatness" 1;
	bPset "petalLength" 0.2; 
	bPset "petalBaseWidth" 0.05;
	bPset "petalTipWidth" 0.1; 
	bPset "flowerSizeDecay" 0.7;
	bPset "flowerTranslucence" 0.7;
	bPset "petalColor1R" 0.8000000119;
	bPset "petalColor1G" 0.200000003;
	bPset "petalColor1B" 0.1000000015;
	bPset "petalColor2R" 1; 
	bPset "petalColor2G" 1; 
	bPset "petalColor2B" 1; 
	bPset "flowerHueRand" 0;
	bPset "flowerSatRand" 0; 
	bPset "flowerValRand" 0; 
	bPset "flowerUseBranchTex" 1;
	bPset "simplifyMethod" 2;
	bPset "colorLengthMap" 0;
	bPset "transpLengthMap" 0; 
	bPset "incandLengthMap" 0; 
	bPset "widthLengthMap" 0; 
	bPset "splitLengthMap" 0; 
	bPset "mapColor" 0;
	bPset "mapOpacity" 0; 
	bPset "textureType" 0;
	bPset "mapMethod" 2; 
	bPset "texColorScale" 1;
	bPset "texColorOffset" 0; 
	bPset "texOpacityScale" 1;
	bPset "texOpacityOffset" 0;
	bPset "texColor1R" 1;
	bPset "texColor1G" 1; 
	bPset "texColor1B" 1; 
	bPset "texColor2R" 0;
	bPset "texColor2G" 0; 
	bPset "texColor2B" 0; 
	bPset "texAlpha1" 1;
	bPset "texAlpha2" 0;
	bPset "texUniformity" 0.5;
	bPset "fringeRemoval" 1;
	bPset "repeatU" 1; 
	bPset "repeatV" 1; 
	bPset "offsetU" 0; 
	bPset "offsetV" 0; 
	bPset "blurMult" 1;
	bPset "smear" 0.1; 
	bPset "smearU" 0; 
	bPset "smearV" 0; 
	bPset "useFrameExtension" 0; 
	bPset "frameExtension" 1; 
	bPset "fractalRatio" 0.7; 
	bPset "fractalAmplitude" 1; 
	bPset "fractalThreshold" 0; 
	bPsetName "imageName" "";
	bPsetName "leafImage" "";
	bPsetName "flowerImage" "";
	bPsetName "creationScript" "";
	bPsetName "runtimeScript" "directionBrush";
	brushPresetApply();
	presetSetPressure 1 0 0 1;
	presetSetPressure 2 0 0 1;
	presetSetPressure 3 0 0 1;
	rename (getDefaultBrush()) dirBrush;

	source "//file-cluster/GDC/Resource/Support/Maya/scripts/directionBrush55.mel";

	commandEcho -state off;

}




global proc zzySetBlueBrush()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	string $sDefaultBrush=`getDefaultBrush`;
	brushPresetSetup();
	bPset "time" 1; 
	bPset "globalScale" 1.450555676; 

	bPset "color1R" 0.5; 
	bPset "color1G" 0.5; 
	bPset "color1B" 1; 
	//bPset "color2R" 1; 
	//bPset "color2G" 1; 
	//bPset "color2B" 1; 
	setAttr ($sDefaultBrush+".tubes") 0;
	//rename (getDefaultBrush()) blueBrush; 

}

global proc zzySetWhiteBrush()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	string $sDefaultBrush=`getDefaultBrush`;
	brushPresetSetup();
	bPset "time" 1; 
	bPset "globalScale" 1.450555676; 

	bPset "color1R" 1; 
	bPset "color1G" 1; 
	bPset "color1B" 1; 

	setAttr ($sDefaultBrush+".tubes") 0;
	//rename (getDefaultBrush()) blueBrush; 

}

global proc zzySetBlackBrush()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	string $sDefaultBrush=`getDefaultBrush`;
	brushPresetSetup();
	bPset "time" 1; 
	bPset "globalScale" 1.450555676; 

	bPset "color1R" 0; 
	bPset "color1G" 0; 
	bPset "color1B" 0; 

	setAttr ($sDefaultBrush+".tubes") 0;
	//rename (getDefaultBrush()) blueBrush; 

}

global proc zzyPaintEmitterTexture()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr `attributeToPaint_uiToMel("Incandescence")` `currentCtx`;
	//art3dPaintCtx  -e -rgbflood 0 0 0 `currentCtx`;

	//art3dPaintCtx -e -floodselect  `currentCtx`;

	zzySetWhiteBrush;


}

global proc zzyPaintDirectionTexture()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr `attributeToPaint_uiToMel("Color")` `currentCtx`;
	zzySetDirectionBrush;
}

global proc zzyFloodPaintBlueTexture()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr `attributeToPaint_uiToMel("Color")` `currentCtx`;
	//colorSliderGrp -e -rgb 0.5 0.5 1 art3dFloodColorSlider;
	art3dPaintCtx  -e -rgbflood 0.5 0.5 1 `currentCtx`;

	

	art3dPaintCtx -e -floodselect  `currentCtx`;

}



global proc zzyFloodPaintBlackTexture()
//
//
//
//
{
	zzyIsSelectPloygonOrNurbs;
	Art3dPaintTool;
	toolPropertyWindow;
	art3dPaintCtx -e -painttxtattr `attributeToPaint_uiToMel("Incandescence")` `currentCtx`;
	//colorSliderGrp -e -rgb 0.5 0.5 1 art3dFloodColorSlider;
	art3dPaintCtx  -e -rgbflood 0 0 0 `currentCtx`;

	art3dPaintCtx -e -floodselect  `currentCtx`;

}

global proc zzyIsSelectPloygonOrNurbs()
//
//
//
//
{
	string $asSelect[]=`filterExpand -ex true -sm 10 -sm 12`;
	if(size($asSelect)!=1)
	{
		error "Please select single Ploygon or Nurbs object";
	}

}


global proc zzyPaintableFlowWindow()
//
//
//
//
{
	if(`window -q -ex PaintableFlow`)
		deleteUI PaintableFlow;
	window -title "PaintableFlow"  PaintableFlow;

	columnLayout -adjustableColumn true;
	    button -label "CreatePaintableFlow"   -command "zzyCreatePaintableFlow";
	    button -label "PaintEmitterTexture"   -command "zzyPaintEmitterTexture";
	    button -label "PaintDirectionTexture" -command "zzyPaintDirectionTexture";
	    button -label "FloodPaintBlackTexture"-command "zzyFloodPaintBlackTexture";
	    button -label "FloodPaintBlueTexture" -command "zzyFloodPaintBlueTexture";
	    button -label "SetBlueBrush"          -command "zzySetBlueBrush";
	    button -label "SetWhiteBrush"	  -command "zzySetWhiteBrush";
	    button -label "SetBlackBrush"	  -command "zzySetBlackBrush";
	    button -label "SetDirectionBrush"	  -command "zzySetDirectionBrush";
	
	showWindow PaintableFlow;
}