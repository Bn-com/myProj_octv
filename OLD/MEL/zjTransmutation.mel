/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjTransmutation()
{
    if (!`window -exists TransmutationWin`)
       {
	        window  -title "Transmutation" -resizeToFitChildren true TransmutationWin;
              
		formLayout -numberOfDivisions 100 formLayout1;

		textScrollList -doubleClickCommand "ApplySelFile "
                               fileList;

		textField -text ""	 txt; 

		button   -label "New" -w 80 -h 25 -command "Addfiles " 
		         Addfiles;
		button   -label "Apply" -h 27 -command "ApplySelFile " 
		         ApplyFile;
		button   -label "Delete"  -h 27 -command "Remfiles " 
		         Remfiles;
		button   -label "Close" -h 27 -command ("deleteUI -window  TransmutationWin" )
		         cancel;

		formLayout -edit

			-attachForm	Remfiles	"left"		5	
			-attachPosition	Remfiles	"right"		0       33
			-attachForm	Remfiles	"bottom"	5

			-attachControl	ApplyFile	"left"		5	Remfiles
			-attachForm	ApplyFile	"bottom"	5
			-attachPosition	ApplyFile	"right"	        0	66

			-attachControl	cancel		"left"		5	ApplyFile
			-attachForm	cancel		"bottom"	5
			-attachPosition	cancel		"right"		0       99
		
			-attachForm	Addfiles	"right"		5	
			-attachControl	Addfiles	"bottom"	4	Remfiles
		
			-attachForm	txt	        "left"	        5
			-attachControl 	txt             "right"	        5	Addfiles
			-attachControl	txt     	"bottom"	5	Remfiles
	
			-attachForm	fileList	"top"   	5       
			-attachForm	fileList	"left"		5	
			-attachControl	fileList	"bottom"	5       Addfiles
			-attachForm	fileList	"right"	        5




		formLayout1;
	
	 showWindow TransmutationWin;
	 getitems;
        }
}

proc string getpath()
{
     string $path = `internalVar -userPrefDir`;
     string $buffer[];
     tokenize $path "/" $buffer;
     $path= strip(`substitute ($buffer[size($buffer)-1]+"/") $path ""`+"presets/");
     return $path;
}

global proc  getitems()
{

     textScrollList -edit -removeAll fileList;
     $path = getpath();
     string $filearray[] = `getFileList -folder $path `;
     for($i=0; $i<size($filearray); $i++){
	  textScrollList -edit -append $filearray[$i] fileList;
     }
}

proc string Get(string $obj,string $array[])
{
    string $one;
    int $vcount[] = `polyEvaluate -v `;
    for ($i=0;$i<size($array) ;$i++ )
    {
        if ($obj+"_"+$vcount[0]==$array[$i])
        {
           $one =  $array[$i];
	   break;
	}
    }
    return $one;

}
proc doit(string $obj,string $prefix)
{
        int $vcount[] = `polyEvaluate -v `;
	$filePath = getpath()+$prefix+"_"+$vcount[0];
	$fileId = `fopen $filePath "a"`;		
	for ($k=0;$k<$vcount[0];$k++)
	{
		$coordx = "getAttr " + $obj+".pnts["+$k+"].pntx";
		$x =` eval $coordx`;

		$coordy = "getAttr " + $obj+".pnts["+$k+"].pnty";
		$y =` eval $coordy`;

		$coordz = "getAttr " + $obj+".pnts["+$k+"].pntz";
		$z =` eval $coordz`;
		
                $str1 = "setAttr "+ ".pnts["+$k+"].pntx "+ $x+";\n";
                $str2 = "setAttr "+ ".pnts["+$k+"].pnty "+ $y+";\n";
                $str3 = "setAttr "+ ".pnts["+$k+"].pntz "+ $z+";\n";

		fprint $fileId $str1;
		fprint $fileId $str2;
		fprint $fileId $str3;
	}
	fclose $fileId;

}

global proc Addfiles ()
{
     string $nodes[] = `selectedNodes -dagObjects`;
     if (size($nodes)==1&&`nodeType $nodes[0]`=="mesh")
     {

	     string $prefix = `textField -q -text txt`;
	     $eff = ` nodePreset -isValidName $prefix`;
	     if ($eff!=0)
	     {
		     string $allf[] = `textScrollList -query -allItems  fileList`;

		     string $get = Get($prefix,$allf);
		     if (size($get)>0)
		     {
		       $conf = `confirmDialog -title "Confirm" -message "This will replace the existing item,are you sure?"
					-button "Yes" -button "No" -defaultButton "Yes"
					-cancelButton "No" -dismissString "No"`;
		       if ($conf ==  "Yes")
			  doit($nodes[0],$prefix);
		     }else 
			  doit($nodes[0],$prefix);
                     getitems;
	     }else {
  		 print "Invalid name!";
	     }
      }else { 
         print "Please Select at least one vertex of polygon shape!";
    }
}
global proc Remfiles ()
{
	string $Todel[] = `textScrollList -query -si fileList`;
        if (size($Todel)>0)
        {
		textScrollList -e -removeItem $Todel fileList;
		$file = getpath()+$Todel[0];
		sysFile -delete $file; 
	}
}

global proc ApplySelFile ()
{

     string $nodes[] = `selectedNodes -dagObjects`;
     if (size($nodes)==1)
     {
	string $sel[] = `textScrollList -query -si fileList`;
        if (size($sel)>0)
        {
                print "Transmutation.";

		$np = strip($sel[0]);
		$ac = "source "+ $np;
                eval $ac;
	}
     }
}


