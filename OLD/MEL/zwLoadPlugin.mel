/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


// return the plugin version if success or -1 fail
global proc float zwLoadPlugin(string $pluginName)
{
	float $pluginVer = -1;

// get application version
	//string $version = `about -version`;
	string $version = `about -apiVersion` / 100;
	$version = `match "[0-9]+(\.[0-9]){0,1}" $version`;
	if (`about -apiVersion` == "201650")
	{
		$version = "2016.5";
	}
	if (`about -is64`)
	{
		$version += "-x64";
	}

// already loaded?
	string $buf[] = `pluginInfo -query -listPlugins`;
	int $i;
	for ($i=0; $i<size($buf); $i++)
	{
		if (`gmatch $buf[$i] ($pluginName + "*")`)
		{
			string $str = `substitute ($pluginName + "[.]" + $version + "[.]") $buf[$i] ""`;
			$pluginVer = zwLoadPluginStr2Float($str);
			return $pluginVer;
		}
	}

// set PATH
	string $pluginPath = `getenv "DEV_PATH"` + "/bin";
	string $path = `getenv "PATH"`;
	if (!`gmatch $path ("*" + $pluginPath + "*")`)
	{
		if ($path != "")
		{
			$path += ";";
		}
		$path += $pluginPath;
		putenv "PATH" $path;
	}

// get the latest plugin
	string $plugin;
	$buf = `getFileList -filespec ($pluginPath + "/" + $pluginName + "." + $version + ".*.mll")`;
	for ($i=0; $i<size($buf); $i++)
	{
		string $str = `substitute ($pluginName + "[.]" + $version + "[.]") $buf[$i] ""`;
		$str = `substitute "[.]mll$" $str ""`;
		float $ver = zwLoadPluginStr2Float($str);
		if ($ver > $pluginVer)
		{
			$pluginVer = $ver;
			$plugin = $buf[$i];
		}
	}
	if ($pluginVer == -1)
	{
		return -1;
	}

// debug
	string $idmtCmd = `getenv "idmtCmd"`;	// idmtCmd.8.5.8.mll
	if ($idmtCmd != "")
	{
		$plugin = $idmtCmd;
	}

// load it
	catch(`loadPlugin -quiet ($pluginPath + "/" + $plugin)`);
	if (!`pluginInfo -query -loaded $plugin`)
	{
	//	int $fileId = `fopen "\\\\file-cluster\\GDC\\Scratch\\TD\\debug.txt" "a"`;
	//	if ($fileId != 0)
	//	{
	//		fprint $fileId (`about -currentDate` + " " + `about -currentTime` + " " + `getenv "COMPUTERNAME"` + " " + `about -version` + " " + `about -operatingSystemVersion` + "\r\n");
	//		fclose $fileId;
	//	}
		return -1;
	}

	return $pluginVer;
}

global proc float zwLoadPluginStr2Float(string $str)
{
	if ($str == "")
	{
		return 0;
	}
	return (float)$str;
}