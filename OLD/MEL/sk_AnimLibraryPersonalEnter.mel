/*
名称：动作库/个人动作库 补充工具(jmsnk)
个人库用法：
            在sk_AnimLibraryProjectTransform添加项目及数字
            并在sk_AnimLibraryPersonalEnter的sk_AnimLibraryProjectList添加对应菜单
            最后输入sk_AnimLibraryPersonalEnter(完整项目名)
公用库用法：
            slAnimPoseLibraryProject_Enter(完整项目名，"")
*/
// 私库进入
global proc sk_AnimLibraryPersonalEnter(string $pro)
{
    if(`window -ex sk_AnimLibraryPersonalUI`)
    	deleteUI sk_AnimLibraryPersonalUI;
    if(`window -ex sk_AnimLibraryPersonaAnimAddlUI`)
    	deleteUI sk_AnimLibraryPersonaAnimAddlUI;
        window -t "个人专用库" -menuBar 1 -rtf 1 sk_AnimLibraryPersonalUI;
        menu -label "说明";
        	menuItem -label "帮助" -c sk_m8_help;
        	   
        //处理私库标记
      	global int $sk_AnimLibraryPersonalList ;
      	$sk_AnimLibraryPersonalList = 0;


        columnLayout;
            columnLayout -adjustableColumn 1;
                 rowLayout -numberOfColumns 3   -columnWidth3 150 150 150;
		                optionMenuGrp -adjustableColumn 1 -columnWidth 150 150 -cc "sk_AnimLibraryPersonalListUpdate"  sk_AnimLibraryProjectList;
		                    menuItem  -label   "ZoomWhiteDolphin";
		                    menuItem  -label   "Zorro";
		                    menuItem  -label   "Calimero";
		                    menuItem  -label   "HeroFactory";
		                    menuItem  -label   "Strawberry";
		                    menuItem  -label   "ShunLiu";
		                    menuItem  -label   "Yoda";
		                    menuItem  -label   "Ninjiago";
		                    menuItem  -label   "Dod";
		                int $pro_select = sk_AnimLibraryProjectTransform($pro);
		                optionMenuGrp -e -select $pro_select  sk_AnimLibraryProjectList;
          
		            		string $animCmd = "sk_AnimLibraryPersonalAnimAdd(\"" + $pro + "\")";
		                button  -en 0 -w 150 -h 30  -l "双击【类型名】入库" ;
		                
		                textField -w 150 -h 30 -bgc 0 1 0  -text "输入导出动画的名字" sk_AnimNameTextFiled;
            			setParent..;
            setParent..;
            

            columnLayout;
            	rowLayout -numberOfColumns 3   -columnWidth3 150 150 150;
            			//创建新库
	                button  -w 150 -h 30  -l "新    库" -c "sk_AnimLibraryPersonalCreate" ;
	                //创建新角色
	                button  -w 150 -h 30  -l "新 角 色" -c "sk_AnimLibraryPersonalCreate_CHR" ;
	                //创建新类
	                button  -w 150 -h 30  -l "新 类 型" -c "sk_AnimLibraryPersonalCreate_TYPE" ;
	            setParent..;   
            setParent..;

            columnLayout;
            	rowLayout -numberOfColumns 3   -columnWidth3 150 150 150;
            		//私库名
                textScrollList -width 150 -numberOfRows 10 -allowMultiSelection 0 -selectCommand "sk_AnimLibraryPersonalListUpdate_Lv2;textScrollList -e -removeAll sk_AnimLibraryPersonalList_Lv3;" -doubleClickCommand "sk_AnimLibraryPersonalListSelectCMD"  sk_AnimLibraryPersonalList_Lv1;
                
                //私库内角色
            		textScrollList -width 150 -numberOfRows 10 -allowMultiSelection 0 -selectCommand "sk_AnimLibraryPersonalListUpdate_Lv3" -doubleClickCommand "sk_AnimLibraryPersonalListSelectCMD"  sk_AnimLibraryPersonalList_Lv2;
                
                //私库内新类型
            		textScrollList -width 150 -numberOfRows 10 -allowMultiSelection 0 -doubleClickCommand "sk_AnimLibraryPersonalListAnimAddSelectCMD"  sk_AnimLibraryPersonalList_Lv3;
                
                
                string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
                sk_AnimLibraryPersonalListUpdate();            
                //注意地址
                //source "//file-cluster/GDC/Resource/Support/Maya/projects/ZoomWhiteDolphin/slAnimPoseLibraryProject_Enter.mel";
                source "//file-cluster/GDC/Resource/Support/Maya/scripts/slAnimPoseLibraryProject_Enter.mel";
            		
            	setParent..;
            setParent..;
        setParent..;
        	
    showWindow sk_AnimLibraryPersonalUI;
}
//项目标志转换
global proc int sk_AnimLibraryProjectTransform(string $pro)
{
    int $select = 1;
    if($pro == "ZoomWhiteDolphin")
    {
        $select  = 1;
    }
    if($pro == "Zorro")
    {
        $select  = 2;
    }
    if($pro == "Calimero")
    {
        $select  = 3;
    }
    if($pro == "HeroFactory")
    {
        $select  = 4;
    }
    if($pro == "Strawberry")
    {
        $select  = 5;
    }
    if($pro == "ShunLiu")
    {
        $select  = 6;
    }
    if($pro == "Yoda")
    {
        $select  = 7;
    }
    if($pro == "Ninjiago")
    {
        $select  = 8;
    }
    if($pro == "Dod")
    {
        $select  = 9;
    }
    return $select;
}

//库创建
global proc sk_AnimLibraryPersonalCreate()
{
    string $text;
    string $result = `promptDialog
        -title "新建自定义动作库"
        -message "请输入您要创建的动作库名"
        -button "创建" -button "退出"
        -defaultButton "创建" -cancelButton "退出"
        -dismissString "退出"`;
    
    if ($result == "创建")
     {
     		
        //$text = `promptDialog -query -text`;
        //string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
        //slAnimPoseLibraryProject_Enter($project,$text);
        //开始创建角色文件夹
        $text = `promptDialog -query -text`;
		    //项目名
		    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
				//私库名
		    string $name = $text;
		   	//创建目录
		   	string $path = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\动作库\\";
		   	sysFile -makeDir $path;      
		   	string $path = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\Pose\\";
		   	sysFile -makeDir $path;      
        sk_AnimLibraryPersonalListUpdate();
    }
}

//角色创建
global proc sk_AnimLibraryPersonalCreate_CHR()
{
    string $text;
    string $result = `promptDialog
        -title "确保选取上一级再创建"
        -message "【确保选取上一级】请输入创建的角色库名"
        -button "创建" -button "退出"
        -defaultButton "创建" -cancelButton "退出"
        -dismissString "退出"`;
    
    if ($result == "创建")
     {
        //开始创建角色文件夹
        $text = `promptDialog -query -text`;
		    //项目名
		    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
				//私库名
		    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
		    string $name = $item[0];
				//角色名
		    string $chr = $text;
		   	//动画名
		   	string $fileName = `textField -q -text sk_AnimNameTextFiled`;
		   	//创建目录
		   	string $path = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\动作库\\" +$chr+"\\";
		   	sysFile -makeDir $path;
        sk_AnimLibraryPersonalListUpdate_Lv2();
    }
}

//类型创建
global proc sk_AnimLibraryPersonalCreate_TYPE()
{
    string $text;
    string $result = `promptDialog
        -title "确保选取上一级再创建"
        -message "【确保选取上一级】请输入创建的类型库名"
        -button "创建" -button "退出"
        -defaultButton "创建" -cancelButton "退出"
        -dismissString "退出"`;
    
    if ($result == "创建")
     {
        //开始创建角色文件夹
        $text = `promptDialog -query -text`;
		    //项目名
		    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
				//私库名
		    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
		    string $name = $item[0];
				//角色名
		    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv2`;
		    string $chr = $item[0];
				//类型名
		    string $type = $text;
		   	//动画名
		   	//创建目录
		   	string $path = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\动作库\\" +$chr+"\\"+ $type + "\\";
		   	sysFile -makeDir $path;
        sk_AnimLibraryPersonalListUpdate_Lv3();
    }
}

//更新列表
global proc sk_AnimLibraryPersonalListUpdate()
{
	
		//主列表更
    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
    
    string $path =  "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\" ;
    string $infoDir[] = `getFileList - folder $path`;
    
    textScrollList -e -removeAll sk_AnimLibraryPersonalList_Lv1;
    
    for( $dir in $infoDir)
    {
        textScrollList -e -append $dir sk_AnimLibraryPersonalList_Lv1;
    }


}

//2级列表更新
global proc sk_AnimLibraryPersonalListUpdate_Lv2()
{
		//主列表处理
    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
    string $itemSel_Lv1[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
    
    string $path =  "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\" + $itemSel_Lv1[0] + "\\动作库\\";
    string $infoDir[] = `getFileList - folder $path`;
    
    textScrollList -e -removeAll sk_AnimLibraryPersonalList_Lv2;
    
    if(size($infoDir) != 0)
    {
        for( $dir in $infoDir)
        {
            if($dir != "bak")
            {
            		//必须是文件夹
            		string $checks[];
            		tokenize $dir "."  $checks;
           			if( size($checks) == 1)
           			{
                	textScrollList -e -append $dir sk_AnimLibraryPersonalList_Lv2;
                }
            }
        }
    }	
}

//3级列表更新
global proc sk_AnimLibraryPersonalListUpdate_Lv3()
{	
		//主列表处理
    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
    string $itemSel_Lv1[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
    string $itemSel_Lv2[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv2`;
    
    string $path =  "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\" + $itemSel_Lv1[0] + "\\动作库\\" + $itemSel_Lv2[0] +"\\";
    string $infoDir[] = `getFileList - folder $path`;
    
    textScrollList -e -removeAll sk_AnimLibraryPersonalList_Lv3;
    
    if(size($infoDir) != 0)
    {
        for( $dir in $infoDir)
        {
            if($dir != "bak")
            {
            		//必须是文件夹
            		string $checks[];
            		tokenize $dir "."  $checks;
           			if( size($checks) == 1)
           			{
                	textScrollList -e -append $dir sk_AnimLibraryPersonalList_Lv3;
                }
            }
        }
    }	
}


//进库命令
global proc sk_AnimLibraryPersonalListSelectCMD()
{
    //项目名
    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
		//私库名
    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
    
    slAnimPoseLibraryProject_Enter($project,$item[0]);
    
}

//输入$project，$name为空时进入主库
global proc slAnimPoseLibraryProject_Enter(string $project , string $name )
{
	//source "ddAnimationPanelUI.mel";
	
	global string $anzovinInterfaceCurrentCharacterNamespace;
	
	string $fmCamera = "FM_faceMapCam";
	string $reCamera = "re_cam_faceRigging";

	string $view = "";
	int $selectView = 0;
	
	string $woPath  = "";
	string $woAnPath = "";
  if($name !="")
  {
		$woPath = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\" + $name + "\\Pose\\";
		$woAnPath = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\动作库\\";
	}
	else
	{
		$woPath = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation\\Pose\\";
		$woAnPath = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation\\动作库\\";
	}
	sysFile -makeDir $woPath;
	sysFile -makeDir $woAnPath;

	string $characters[] = slAnimPoseLibraryGetCharacter();
	
	if(`window -exists slAnimPoseLibraryWin`)
		deleteUI slAnimPoseLibraryWin;
	if(`modelPanel -exists slAnimPoseLibraryWin_fmView`)
		deleteUI -panel slAnimPoseLibraryWin_fmView;
	
	window -title "Pose Library " -in "PL" -menuBar  true -mxb 1 -mnb 1 slAnimPoseLibraryWin;

		paneLayout -configuration "vertical2" slAnimPoseLibraryWin_panel;
			
			string $child1 = `formLayout`;
				string $row1 = `rowLayout -nc 5 -cw5 40 50 10 50 40`;
					string $t1 = `text -l "Start" -w 40 `;
					string $sf = `textField  -text  "" -w 50 -en 0 slAnimPoseLibraryWin_An_start`;
					string $sp = `separator -st "single" -w 10 -h 20`;
					string $ef = `textField  -text  "" -w 50 -en 0 slAnimPoseLibraryWin_An_end`;
					string $t2 = `text -l "End" -w 40`;
				setParent ..;
				string $cb1 = `checkBox -l "entire curve" -v 1 slAnimPoseLibraryWin_An_ec`;
					checkBox -e -onc "textField -e -en 0 slAnimPoseLibraryWin_An_start;textField -e -en 0 slAnimPoseLibraryWin_An_end;" 
							     -ofc  "textField -e -en 1 slAnimPoseLibraryWin_An_start;textField -e -en 1 slAnimPoseLibraryWin_An_end;" slAnimPoseLibraryWin_An_ec;
				string $cb2 = `checkBox -l "cycle"	-v 1 -en 1 slAnimPoseLibraryWin_An_rp`;
				string $cb3 = `checkBox -l "connect" -v 1 -en 1 slAnimPoseLibraryWin_An_cn`;
				string $omg1 = `optionMenuGrp -adj 2 -label "Path: " -columnWidth2 40 600 -columnAlign 1 "right" -cc "" `;
					menuItem -l $woAnPath;
					optionMenuGrp -e -v $woAnPath $omg1;
				string $fr1 = `frameLayout -bv false -lv false`;
						string $sh1 = `shelfLayout -cwh 60 90 -st "iconAndTextVertical"`;
							string $sb1 = `shelfButton -annotation "please select correct path" -style "iconAndTextVertical" -image1 "commandButton.xpm" -l "null" -fn "boldLabelFont"`;
							slAnimPoseLibraryFaceGetCharListAn($omg1,$fr1);
					setParent ..;
				setParent ..;
			setParent ..;
			formLayout -edit
				-af	$row1	"top"	10
				-af	$row1	"left"	2
				-ap	$row1	"right"	1	50
				
				-af	$cb1		"top"	10
				-ac	$cb1		"left"	10	$row1
				
				-af	$cb2		"top"	10
				-ac	$cb2		"left"	10	$cb1

				-af	$cb3		"top"	10
				-ac	$cb3		"left"	10	$cb2

				-ac	$omg1	"top"	5	$row1
				-af	$omg1	"left"	2
				-ap	$omg1	"right"	1	99

				-ac	$fr1		"top"	5	$omg1
				-af	$fr1		"left"	2
				-af	$fr1		"right"	2
				-af	$fr1		"bottom"	2
			$child1;
			setParent slAnimPoseLibraryWin_panel;

			string $child2 = `formLayout `;
				checkBox -label "Key"		-value 1	slAnimPoseLibraryWin_Keyable;
				checkBox -label "Mirror"	-value 0	slAnimPoseLibraryWin_Mirrorable;
				floatSliderGrp -label "Value" -field true -cw 1 40 -cw 2 40 -cw 3 10 -adj 3
						-minValue 0 -maxValue 2.0 -fieldMinValue 0 -fieldMaxValue 10 -value 1 slAnimPoseLibraryWin_KeyValue;
				optionMenuGrp 	-label "Path: " -columnWidth2 40 600 -columnAlign 1 "right"  
						-cc "slAnimPoseLibraryFaceGetTab;slAnimPoseLibraryUpdatOptionVar;" slAnimPoseLibraryWin_CustomPath;
					menuItem -label "   ";
					if (`optionVar -ex slAnimPoseLibraryWin_path`)
					{
						string $children[] = `optionMenuGrp -q -ill  slAnimPoseLibraryWin_CustomPath`;
							deleteUI $children;
						
						string $path[] = `optionVar -q slAnimPoseLibraryWin_path`;
						for ($item in $path)
						{
							menuItem -label $item ;
							optionMenuGrp -e -v $item  slAnimPoseLibraryWin_CustomPath;	
						}
					}
				slAnimPoseLibrarySetPath $woPath "";
				optionMenuGrp -e -v $woPath slAnimPoseLibraryWin_CustomPath;
				//button -label "Browse" -c "slAnimPoseLibraryGetPath;slAnimPoseLibraryFaceGetTab;" -en false slAnimPoseLibraryWin_Browse;
				//button -label "Creat New Facial..." -c "slAnimPoseLibraryCreateNew" -en false slAnimPoseLibraryWin_CreateNew;
				frameLayout -bv false -lv false slAnimPoseLibraryWin_Custom_fr;
						shelfLayout -cwh 60 90 -st "iconAndTextVertical" slAnimPoseLibraryWin_CustomBut;
							shelfButton -annotation "please select correct path" -style "iconAndTextVertical" -image1 "commandButton.xpm" -l "null" -fn "boldLabelFont";
							slAnimPoseLibraryFaceGetCharList();
					setParent ..;
				setParent ..;
			setParent ..;
			formLayout -edit
				-af		slAnimPoseLibraryWin_KeyValue		"top"		10
				-af		slAnimPoseLibraryWin_KeyValue		"left"		2
				-ap		slAnimPoseLibraryWin_KeyValue		"right"		1	50	
				
				-af		slAnimPoseLibraryWin_Keyable		"top"		10
				-ac		slAnimPoseLibraryWin_Keyable		"left"		10	slAnimPoseLibraryWin_KeyValue

				-af		slAnimPoseLibraryWin_Mirrorable		"top"		10
				-ac		slAnimPoseLibraryWin_Mirrorable		"left"		10	slAnimPoseLibraryWin_Keyable
				
				-ac		slAnimPoseLibraryWin_CustomPath		"top"		5	slAnimPoseLibraryWin_Keyable
				-af		slAnimPoseLibraryWin_CustomPath		"left"		5
				-af		slAnimPoseLibraryWin_CustomPath		"right"		10	

				//-ac		slAnimPoseLibraryWin_Browse			"top"		5	slAnimPoseLibraryWin_Keyable
				//-ac		slAnimPoseLibraryWin_Browse			"right"		10	slAnimPoseLibraryWin_CreateNew

				//-ac		slAnimPoseLibraryWin_CreateNew		"top"		5	slAnimPoseLibraryWin_Keyable
				//-af		slAnimPoseLibraryWin_CreateNew		"right"		2
				
				-ac		slAnimPoseLibraryWin_Custom_fr		"top"		5	slAnimPoseLibraryWin_CustomPath
				-af		slAnimPoseLibraryWin_Custom_fr		"left"		2
				-af		slAnimPoseLibraryWin_Custom_fr		"right"		2
				-af		slAnimPoseLibraryWin_Custom_fr		"bottom"	2
			$child2;
			setParent slAnimPoseLibraryWin_panel;

	showWindow slAnimPoseLibraryWin;
}

//动画入库双击命令
global proc sk_AnimLibraryPersonalListAnimAddSelectCMD()
{
    //项目名
    string $project = `optionMenuGrp -q -value  sk_AnimLibraryProjectList`;
		//私库名
    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv1`;
    string $name = $item[0];
		//角色名
    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv2`;
    string $chr = $item[0];
		//类型名
    string $item[] = ` textScrollList -q -selectItem sk_AnimLibraryPersonalList_Lv3`;
    string $type = $item[0];
   	//动画名
   	string $fileName = `textField -q -text sk_AnimNameTextFiled`;
   	//创建目录
   	string $path = "\\\\file-cluster\\GDC\\Projects\\" + $project + "\\"+ $project + "_Scratch\\Animation_Personal\\"+ $name +"\\动作库\\" +$chr+"\\"+ $type + "\\";
   	sysFile -makeDir $path;
   	//创建动画文件
		slAnimImportForSet_simpe($path +$fileName );
		
		print"\n";
		print"==========！！！成功创建动画数据！！！==========";
		print"\n";
}


//创建动画记录文件
global proc slAnimImportForSet_simpe(string $fileName)
{
	string $file;
	if (endsWith($fileName,".sla"))
		$file = $fileName;
	else if (endsWith($fileName,".*"))
		$file = `substituteAllString $fileName ".*" ".sla"`;
	else 
		$file = $fileName+".sla";
	
	string $select[] = `ls -sl`;
	int $hi = 3;
	string $objs[];
	if (`objExists $select[0]`)
	{
		if ($hi == 1)
			$objs = $select;
		else if ($hi == 2)
		{
			string $buff[];
			int $num = `tokenize $select[0] ":" $buff`;
			string $pre = `substring $select[0] 1 (size($select[0])-size($buff[$num-1]))`;
			string $sets[] = `ls -type objectSet ($pre+"*")`;
			for ($set in $sets)
			{
				$objs = stringArrayCatenate($objs, `sets -q $set`);
			}
		}
		else if ($hi == 3)
		{
			string $useful[];
			string $allchild[] = `listRelatives -f -ad -type transform $select[0]`;
			for ($child in $allchild)
			{
				string $keys[] = `listAttr -k $child`;
				string $nonKeys[] = `listAttr -cb $child`;
				if ((size($keys) || size($nonKeys)) && !size(`ls -type constraint $child`))
				{
					 string $sn[] = `ls -sn $child`;
					 $useful[size($useful)] = $sn[0];
				}
			}
			
			$objs = stringArrayCatenate($select,$useful);
		}
	}
	
	string $mayaVersion = `about -v`;
	string $linearUnit = `currentUnit -q -f -l`;
	string $angularUnit = `currentUnit -q -f -a`;
	string $timeUnit = `currentUnit -q -f -t`;
	

	$fileId = `fopen $file "w"`;
	fprint $fileId "ImportExportAnimationForSets v 1.0   (Author: wanshoulong)\n";
	fprint $fileId ("mayaVersion  "+$mayaVersion+";\n");
	fprint $fileId ("linearUnit  "+$linearUnit+";\n");
	fprint $fileId ("angularUnit  "+$angularUnit+";\n");
	fprint $fileId ("timeUnit  "+$timeUnit+";\n");

	for ($obj in $objs)
	{
		if (`objectType -isType "transform" $obj` || `objectType -isType "joint" $obj`)
		{
			string $keys[] =`listAttr -k $obj`;
			string $nonKeys[] = `listAttr -cb $obj`;
			string $allAttr[] = stringArrayCatenate($keys,$nonKeys);

			for ($key in $allAttr)
			{
				string $animCurv[] ;
				if (`objExists ($obj+"."+$key)`)
					$animCurv = `listConnections -s true -d false ($obj+"."+$key)`;
				if (`objExists $animCurv[0]` && isAnimCurve($animCurv[0]))
				{
					fprint $fileId ("anim "+$obj+"."+$key+"\n{\n");

					float $time[] = `keyframe -q -tc $animCurv[0]`;
					float $value[] = `keyframe -q -vc $animCurv[0]`;
					string $inputType[] = `keyTangent -q -itt $animCurv[0]`;
					string $outputType[] = `keyTangent -q -ott $animCurv[0]`;
					int $lock[] = `keyTangent -q -l $animCurv[0]`;
					int $weightLock[] = `keyTangent -q -wl $animCurv[0]`;
					float $inputAngle[] = `keyTangent -q -ia $animCurv[0]`;
					float $inputWeight[] = `keyTangent -q -iw $animCurv[0]`;
					float $outputAngle[] = `keyTangent -q -oa $animCurv[0]`;
					float $outputWeight[] = `keyTangent -q -ow $animCurv[0]`;


					for ($i=0;$i<size($time) ;$i++ )
					{
						fprint $fileId ("	"+$time[$i]+" "+$value[$i]+" "+$inputType[$i]+" "+$outputType[$i]+" "+$weightLock[$i]);
						if (($inputType[$i] == "fixed" || $outputType[$i] == "fixed") && $weightLock[$i])
							fprint $fileId (" "+$inputAngle[$i]+" "+$outputAngle[$i]);
						else if (($inputType[$i] == "fixed" || $outputType[$i] == "fixed") && !$weightLock[$i])
							fprint $fileId (" "+$inputAngle[$i]+" "+$inputWeight[$i]+" "+$outputAngle[$i]+" "+$outputWeight[$i]);
						fprint $fileId ";\n";
					}

					fprint $fileId "}\n";
				}
				else if (`objExists ($obj+"."+$key)`)
				{
					//print ($obj+"."+$key+"\n");
					if (`getAttr -type ($obj+"."+$key)` != "double3")
					{
						string $value = getAttr ($obj+"."+$key);
						fprint $fileId ("non-anim "+$obj+"."+$key+"	"+$value+";\n");
					}
				}
			}

			string $expShapes[] = `listHistory $obj` ;
			if (size($expShapes) && `objectType -isType "nurbsCurve" $expShapes[0]` && `getAttr ($expShapes[0]+".dispCV")` == 1)
			{
				float $pointNum = `getAttr ($expShapes[0]+".spans")`;
				for ($j=0;$j<=($pointNum+1);$j++)
				{
					string $keys[] = `listAttr -k ($expShapes[0]+".cv["+$j+"]")`;
					for ($key in $keys)
					{
						string $animCurv[] = `listConnections -type animCurve -s 1 -d 0 ($expShapes[0]+"."+$key)`;
						if (`size $animCurv` && isAnimCurve($animCurv[0]))
						{
							fprint $fileId ("anim "+$expShapes[0]+"."+$key+"\n{\n");

							float $time[] = `keyframe -q -tc $animCurv[0]`;
							float $value[] = `keyframe -q -vc $animCurv[0]`;
							string $inputType[] = `keyTangent -q -itt $animCurv[0]`;
							string $outputType[] = `keyTangent -q -ott $animCurv[0]`;
							int $lock[] = `keyTangent -q -l $animCurv[0]`;
							int $weightLock[] = `keyTangent -q -wl $animCurv[0]`;
							float $inputAngle[] = `keyTangent -q -ia $animCurv[0]`;
							float $inputWeight[] = `keyTangent -q -iw $animCurv[0]`;
							float $outputAngle[] = `keyTangent -q -oa $animCurv[0]`;
							float $outputWeight[] = `keyTangent -q -ow $animCurv[0]`;


							for ($i=0;$i<size($time) ;$i++ )
							{
								fprint $fileId ("	"+$time[$i]+" "+$value[$i]+" "+$inputType[$i]+" "+$outputType[$i]+" "+$weightLock[$i]);
								if (($inputType[$i] == "fixed" || $outputType[$i] == "fixed") && $weightLock[$i])
									fprint $fileId (" "+$inputAngle[$i]+" "+$outputAngle[$i]);
								else if (($inputType[$i] == "fixed" || $outputType[$i] == "fixed") && !$weightLock[$i])
									fprint $fileId (" "+$inputAngle[$i]+" "+$inputWeight[$i]+" "+$outputAngle[$i]+" "+$outputWeight[$i]);
								fprint $fileId ";\n";
							}

							fprint $fileId "}\n";
						}
						else 
						{
							//print ($obj+"."+$key+"\n");
							if (`getAttr -type ($expShapes[0]+"."+$key)` != "double3")
							{
								string $value = getAttr ($expShapes[0]+"."+$key);
								fprint $fileId ("non-anim "+$expShapes[0]+"."+$key+"	"+$value+";\n");
							}
						}
					}
				}
			}
		}
	}
	fclose $fileId;
}