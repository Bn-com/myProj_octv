/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ‘¯«Ï√Ò
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


// this is a case which is suitable to expand for other field checking
global proc int checkMapTypeField ( string $tf )
{
	if ( `gmatch $tf "color"` == 1 )
		return 1;
	if ( `gmatch $tf "color[1-9]"` == 1 )
		return 1;

	if ( `gmatch $tf "bump"` == 1 )
		return 1;
	if ( `gmatch $tf "bump[1-9]"` == 1 )
		return 1;

	if ( `gmatch $tf "spec"` == 1 )
		return 1;
	if ( `gmatch $tf "spec[1-9]"` == 1 )
		return 1;
	
	return 0;
}

// calling for checking a filename, may use to check a particular file
// then get error info from its return value
global proc int checkMapName ( string $filename )
{
	string $div[], $tmp;
	int $cnt = `tokenize $filename "." $div`;
	if ( $div[ $cnt - 1 ] != "iff" )
		return 1;	// ERROR: it isn't an IFF file

	$tmp = $div[0];
	$cnt = `tokenize $tmp "_" $div`;
	if ( $cnt < 3 || $cnt > 6 )
		return 2;	// ERROR: name fields count is less than 3 or more than 6

	if ( size( $div[ $cnt - 1 ] ) != 1 || `gmatch $div[ $cnt - 1 ] "[hmlsv]"` == 0 )
		return 3;	// ERROR: resolution field has mistake

	if ( checkMapTypeField( $div[ $cnt - 2 ] ) == 0 )
		if ( $cnt > 3 )
		{
			if ( `gmatch $div[ $cnt - 2 ] "s[0-9][0-9][0-9]s[0-9][0-9][0-9]"` == 0 )
				return 4;	// ERROR: sceneshot field has mistake
			else
				if ( checkMapTypeField( $div[ $cnt - 3 ] ) == 0 )
					return 5;	// ERROR: type field has mistake
		}
		else			// $div[1], $cnt = 3
			return 5;	// ERROR: type field has mistake

	return 0;
}

// check all file nodes in scene about filename rules
global proc qmCheckMapName ()
{
	string $allfilenode[] = `ls -l -type "file"`;
	string $divname[], $filename;
	int $count = size($allfilenode);
	int $i, $j, $stat;
	print "\n <<Incorrect Texture Map>>\n\tFilename\t\t\t\t[Nodename]\n";
	for ( $i = 0; $i < $count; $i ++ )
	{
		$filename = `getAttr ( $allfilenode[$i] + ".fileTextureName" )`;
		if ( $filename == "" )
		{
			print( "FILENAME IS EMPTY\t\t\t\t[" + $allfilenode[$i] + "]\n" );
			continue;
		}
		$filename = substituteAllString($filename, "/", "\\");
		$j = `tokenize $filename "\\" $divname`;
		$filename = $divname[ $j - 1 ];
		$stat = checkMapName( $filename );
		if ( $stat > 0 )
			print( $filename + "\t\t[" + $allfilenode[$i] + "]\n" );
//		else
//			print("CORRECT: " + $filename + "\t\t[" + $allfilenode[$i] + "]\n" );
	}
}
