/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwPanshelSortSame()
{
	string $grp[];
	int $lock[];

	string $lod[] = {"hi", "md", "lo", "fa"};
	string $attr[] = {"translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ", "scaleX", "scaleY", "scaleZ", "rotatePivotX", "rotatePivotY", "rotatePivotZ", "scalePivotX", "scalePivotY", "scalePivotZ", "rotatePivotTranslateX", "rotatePivotTranslateY", "rotatePivotTranslateZ", "scalePivotTranslateX", "scalePivotTranslateY", "scalePivotTranslateZ"};

	string $select[] = `ls -long -sl -transforms -dagObjects`;
	for ($i=0; $i<size($select); $i++)
	{
		if (!`objExists $select[$i]`)
			continue;

		string $buf[] = `listRelatives -fullPath -shapes $select[$i]`;
		if (size($buf))
		{
			$select[$i] = "";
			continue;
		}

		tokenize $select[$i] "|" $buf;
		string $short = $buf[size($buf)-1];
		string $parent = `substitute ("|" + $short + "$") $select[$i] ""`;

		for ($j=0; $j<size($lod); $j++)
		{
			if (`match ("[0-9a-zA-Z_]+_c_" + $lod[$j] + "_geo[0-9]*$") $short` == $short)
			{
				$short = `substitute "[0-9]*$" $short ""`;
				clear $grp;
				for ($k=$i; $k<size($select); $k++)
				{
					if (!`objExists $select[$k]`)
						continue;
					
					string $buf[] = `listRelatives -fullPath -shapes $select[$k]`;
					if (size($buf))
					{
						$select[$k] = "";
						continue;
					}

					tokenize $select[$k] "|" $buf;
					if (`match ($short + "[0-9]*$") $buf[size($buf)-1]` == $buf[size($buf)-1])
					{
						string $oldParent = `substitute ("|" + $buf[size($buf)-1] + "$") $select[$k] ""`;
						if ($oldParent == $parent)
							$grp[size($grp)] = $select[$k];
						else
						{
							for ($l=0; $l<size($attr); $l++)
							{
								$lock[$l] = `getAttr -lock ($select[$k] + "." + $attr[$l])`;
								setAttr -lock false ($select[$k] + "." + $attr[$l]);
							}

							if ($parent == "")
								$buf = `parent -world $select[$k]`;
							else
								$buf = `parent $select[$k] $parent`;
							$grp[size($grp)] = $buf[0];

							for ($l=0; $l<size($attr); $l++)
								setAttr -lock $lock[$l] ($grp[size($grp)-1] + "." + $attr[$l]);

							if ($oldParent != "")
							{
								$buf = `listRelatives -fullPath -children $oldParent`;
								if (!size($buf))
								{
									$buf = `listRelatives -fullPath -parent $oldParent`;
									delete $oldParent;
									if (size($buf))
									{
										$oldParent = $buf[0];
										$buf = `listRelatives -fullPath -children $oldParent`;
										if (!size($buf))
											delete $oldParent;
									}
								}
							}
						}
						$select[$k] = "";
					}
				}
				for ($l=0; $l<size($grp); $l++)
					$grp[$l] = `rename $grp[$l] "zwPanshelSortSame"`;
				for ($l=0; $l<size($grp); $l++)
				{
					if ($l == 0)
						$grp[$l] = `rename $grp[$l] $short`;
					else
						$grp[$l] = `rename $grp[$l] ($short + $l)`;
					reorder -back $grp[$l];
					print ($grp[$l] + "\n");
				}
				break;
			}
		}
	}

	print "\n\n";

	for ($i=0; $i<size($select); $i++)
	{
		if (!`objExists $select[$i]`)
			continue;

		string $buf[] = `listRelatives -fullPath -shapes $select[$i]`;
		if (size($buf))
		{
			$select[$i] = "";
			continue;
		}

		tokenize $select[$i] "|" $buf;
		string $short = $buf[size($buf)-1];
		string $parent = `substitute ("|" + $short + "$") $select[$i] ""`;

		for ($j=0; $j<size($lod); $j++)
		{
			if (`match ("[0-9a-zA-Z_]+_c_" + $lod[$j] + "_all[0-9]*$") $short` == $short)
			{
				$short = `substitute ("_c_" + $lod[$j] + "_all[0-9]*$") $short ""`;
				for ($k=$i; $k<size($select); $k++)
				{
					if (!`objExists $select[$k]`)
						continue;

					tokenize $select[$k] "|" $buf;
					for ($l=0; $l<size($lod); $l++)
					{
						if (`match ($short + "_c_" + $lod[$l] + "_all[0-9]*$") $buf[size($buf)-1]` == $buf[size($buf)-1])
						{
							string $oldParent = `substitute ("|" + $buf[size($buf)-1] + "$") $select[$k] ""`;
							string $name = `substitute "[0-9]*$" $buf[size($buf)-1] ""`;
							if ($oldParent != $parent)
							{
								for ($l=0; $l<size($attr); $l++)
								{
									$lock[$l] = `getAttr -lock ($select[$k] + "." + $attr[$l])`;
									setAttr -lock false ($select[$k] + "." + $attr[$l]);
								}

								if ($parent == "")
									$buf = `parent -world $select[$k]`;
								else
									$buf = `parent $select[$k] $parent`;
								$select[$k] = $buf[0];

								for ($l=0; $l<size($attr); $l++)
									setAttr -lock $lock[$l] ($select[$k] + "." + $attr[$l]);

								if ($oldParent != "")
								{
									$buf = `listRelatives -fullPath -children $oldParent`;
									if (!size($buf))
									{
										$buf = `listRelatives -fullPath -parent $oldParent`;
										delete $oldParent;
										if (size($buf))
										{
											$oldParent = $buf[0];
											$buf = `listRelatives -fullPath -children $oldParent`;
											if (!size($buf))
												delete $oldParent;
										}
									}
								}
							}
							$name = `rename $select[$k] $name`;
							reorder -back $name;
							print ($name + "\n");
							$select[$k] = "";
							break;
						}
					}
				}
				break;
			}
		}
	}
}