global proc zzjSplitCamera()
{
	if (`window -ex zzjSplitCameraUI`) deleteUI zzjSplitCameraUI;
		
	window -title "摄像机分割工具" -s 0 -mxb false zzjSplitCameraUI;
	columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 250;
		radioCollection "zzjSplitCameraRadioCollection";
		frameLayout -label "左右分割";
			rowLayout -numberOfColumns 3 -columnWidth3 100 75 150 -adjustableColumn 2;
			    gridLayout -numberOfColumns 2 -cellWidthHeight 45 75;
			        button -l "A";button -l "B";
				setParent..;
				radioButton -label "选择" "zzjSplitCameraRadioCollection1";
		    setParent..;
		setParent..;
		frameLayout -label "上下分割";
			rowLayout -numberOfColumns 3 -columnWidth3 100 75 150 -adjustableColumn 2;
			    columnLayout -columnAttach "both" 0  -columnWidth 90;
			        button -l "A" -h 37;button -l "B" -h 37;
				setParent..;
				radioButton -label "选择" "zzjSplitCameraRadioCollection2";
		    setParent..;
		setParent..;
		frameLayout -label "分割4份";
			rowLayout -numberOfColumns 3 -columnWidth3 100 75 150 -adjustableColumn 2;
			    gridLayout -numberOfColumns 2 -cellWidthHeight 45 37;
			        button -l "A";button -l "B";button -l "C";button -l "D";        
				setParent..;
				radioButton -label "选择" "zzjSplitCameraRadioCollection3";
		    setParent..;
		setParent..;
		frameLayout -label "分割9份" -en 1;
			rowLayout -numberOfColumns 3 -columnWidth3 100 75 150 -adjustableColumn 2;
			    gridLayout -numberOfColumns 3 -cellWidthHeight 30 25;
			        button -l "A";button -l "B";button -l "C";button -l "D"; 
			        button -l "E";button -l "F";button -l "G";button -l "H";button -l "I";                    
				setParent..;
				radioButton -label "选择" "zzjSplitCameraRadioCollection4";
		    setParent..;
		setParent..;
		radioCollection -edit -select "zzjSplitCameraRadioCollection1" "zzjSplitCameraRadioCollection";
		separator -height 8 -style "double";
		button -l "---  ROCK  ---" -c "zzjSplitCameraCMD";
		
		window -e -w 450 -h 535 zzjSplitCameraUI;
	showWindow zzjSplitCameraUI;
	
}

global proc zzjSplitCameraCMD()
{
	string $selectType=`radioCollection -q -select zzjSplitCameraRadioCollection`;
	switch ($selectType) {
	 case "zzjSplitCameraRadioCollection1":
	 zzjSplitCameraCMD_A();
	 break;
	 case "zzjSplitCameraRadioCollection2":
	 zzjSplitCameraCMD_B();
	 break;
	 case "zzjSplitCameraRadioCollection3":
	 zzjSplitCameraCMD_C();
	 break;
	 case "zzjSplitCameraRadioCollection4":
	  zzjSplitCameraCMD_D();
	 break;
	}

	
}


//		zzjSplitCameraCMD_SetAttr("cam_split_camA","split_camA",1,1,1,1,200,100)
global proc zzjSplitCameraCMD_SetAttr(string $cam,string $layer,float $aH,float $aV,float $oH,float $oV,int $width,int $height)
{
	setAttr ($cam+".horizontalFilmAperture") $aH;
	setAttr ($cam+".horizontalFilmOffset") $oH;
	setAttr ($cam+".verticalFilmAperture") $aV;
	setAttr ($cam+".verticalFilmOffset") $oV;
	
	select -r $cam;
	createRenderLayer -makeCurrent -name $layer;
	editRenderLayerAdjustment ($cam+".renderable");
	setAttr  ($cam+".renderable") 1;
	
	editRenderLayerAdjustment "defaultResolution.width";
	editRenderLayerAdjustment "defaultResolution.height";

	setAttr "defaultResolution.width" $width;
	setAttr "defaultResolution.height" $height;
	setAttr "defaultResolution.pixelAspect" 1;


}



global proc zzjSplitCameraCMD_A()
{
	string $sl[]=`ls -sl`;
	if (`size $sl`!=1) {error "请选择一个摄像机";}
	if (`nodeType $sl[0]`!="camera"){
		string $children[] = `listRelatives -children $sl[0]`;
		if (`nodeType $children[0]`!="camera") {error "请选择一个摄像机";}
		else {pickWalk -d up;}
	}
	
	string $newsl[]=`ls -sl`;
	string $nA=$newsl[0]+"_split_camA";
	string $nB=$newsl[0]+"_split_camB";
	string $camA[] = `duplicate -rr -n $nA`;
	string $camB[] = `duplicate -rr -n $nB`;
	
	parentConstraint $sl[0] $camA[0];
	parentConstraint $sl[0] $camB[0];

	string $allCameras[]=`ls -type "camera"`;
	for ($c in $allCameras){
		setAttr  ($c+".renderable") 0;	
	}

	float $aH=`getAttr ($newsl[0]+".horizontalFilmAperture")`;
	float $aV=`getAttr ($newsl[0]+".verticalFilmAperture")`;
	float $oH=`getAttr ($newsl[0]+".horizontalFilmOffset")`;
	float $oV=`getAttr ($newsl[0]+".verticalFilmOffset")`;
	
	int $width=`getAttr "defaultResolution.width"`;
	int $height=`getAttr "defaultResolution.height"`;


	zzjSplitCameraCMD_SetAttr($camA[0],"split_camA",   $aH/2,   $aV,   $aH/-4,   $oV   ,  $width/2   ,   $height ) ;
	zzjSplitCameraCMD_SetAttr($camB[0],"split_camB",   $aH/2,   $aV,   $aH/4,   $oV   ,  $width/2   ,   $height ) ;


}




global proc zzjSplitCameraCMD_B()
{
	string $sl[]=`ls -sl`;
	if (`size $sl`!=1) {error "请选择一个摄像机";}
	if (`nodeType $sl[0]`!="camera"){
		string $children[] = `listRelatives -children $sl[0]`;
		if (`nodeType $children[0]`!="camera") {error "请选择一个摄像机";}
		else {pickWalk -d up;}
	}
	
	string $newsl[]=`ls -sl`;
	string $nA=$newsl[0]+"_split_camA";
	string $nB=$newsl[0]+"_split_camB";
	string $camA[] = `duplicate -rr -n $nA`;
	string $camB[] = `duplicate -rr -n $nB`;
	
	parentConstraint $sl[0] $camA[0];
	parentConstraint $sl[0] $camB[0];

	string $allCameras[]=`ls -type "camera"`;
	for ($c in $allCameras){
		setAttr  ($c+".renderable") 0;	
	}

	float $aH=`getAttr ($newsl[0]+".horizontalFilmAperture")`;
	float $aV=`getAttr ($newsl[0]+".verticalFilmAperture")`;
	float $oH=`getAttr ($newsl[0]+".horizontalFilmOffset")`;
	float $oV=`getAttr ($newsl[0]+".verticalFilmOffset")`;
	
	int $width=`getAttr "defaultResolution.width"`;
	int $height=`getAttr "defaultResolution.height"`;


	zzjSplitCameraCMD_SetAttr($camA[0],"split_camA",   $aH,   $aV/2,   $oH,   $aV/4   ,  $width   ,   $height/2 ) ;
	zzjSplitCameraCMD_SetAttr($camB[0],"split_camB",   $aH,   $aV/2,   $oH,   $aV/-4   ,  $width   ,   $height/2 ) ;


}

global proc zzjSplitCameraCMD_C()
{
	string $sl[]=`ls -sl`;
	if (`size $sl`!=1) {error "请选择一个摄像机";}
	if (`nodeType $sl[0]`!="camera"){
		string $children[] = `listRelatives -children $sl[0]`;
		if (`nodeType $children[0]`!="camera") {error "请选择一个摄像机";}
		else {pickWalk -d up;}
	}
	
	string $newsl[]=`ls -sl`;
	string $nA=$newsl[0]+"_split_camA";
	string $nB=$newsl[0]+"_split_camB";
	string $nC=$newsl[0]+"_split_camC";
	string $nD=$newsl[0]+"_split_camD";
	string $camA[] = `duplicate -rr -n $nA`;
	string $camB[] = `duplicate -rr -n $nB`;
	string $camC[] = `duplicate -rr -n $nC`;
	string $camD[] = `duplicate -rr -n $nD`;
	
	parentConstraint $sl[0] $camA[0];
	parentConstraint $sl[0] $camB[0];
	parentConstraint $sl[0] $camC[0];
	parentConstraint $sl[0] $camD[0];

	string $allCameras[]=`ls -type "camera"`;
	for ($c in $allCameras){
		setAttr  ($c+".renderable") 0;	
	}

	float $aH=`getAttr ($newsl[0]+".horizontalFilmAperture")`;
	float $aV=`getAttr ($newsl[0]+".verticalFilmAperture")`;
	float $oH=`getAttr ($newsl[0]+".horizontalFilmOffset")`;
	float $oV=`getAttr ($newsl[0]+".verticalFilmOffset")`;
	
	int $width=`getAttr "defaultResolution.width"`;
	int $height=`getAttr "defaultResolution.height"`;




	zzjSplitCameraCMD_SetAttr($camA[0],"split_camA",   $aH/2,   $aV/2,   $aH/-4,   $aV/4   ,  $width/2   ,   $height/2 ) ;
	zzjSplitCameraCMD_SetAttr($camB[0],"split_camB",   $aH/2,   $aV/2,   $aH/4,   $aV /4  ,  $width/2   ,   $height/2 ) ;
	
	zzjSplitCameraCMD_SetAttr($camC[0],"split_camC",   $aH/2,   $aV/2,   $aH/-4,   $aV/-4   ,  $width/2   ,   $height/2 ) ;
	zzjSplitCameraCMD_SetAttr($camD[0],"split_camD",   $aH/2,   $aV/2,   $aH/4,   $aV /-4  ,  $width/2   ,   $height/2 ) ;
}

global proc zzjSplitCameraCMD_D()
{
	string $sl[]=`ls -sl`;
	if (`size $sl`!=1) {error "请选择一个摄像机";}
	if (`nodeType $sl[0]`!="camera"){
		string $children[] = `listRelatives -children $sl[0]`;
		if (`nodeType $children[0]`!="camera") {error "请选择一个摄像机";}
		else {pickWalk -d up;}
	}
	
	string $newsl[]=`ls -sl`;
	string $nA=$newsl[0]+"_split_camA";
	string $nB=$newsl[0]+"_split_camB";
	string $nC=$newsl[0]+"_split_camC";
	string $nD=$newsl[0]+"_split_camD";
	string $nE=$newsl[0]+"_split_camE";
	string $nF=$newsl[0]+"_split_camF";
	string $nG=$newsl[0]+"_split_camG";
	string $nH=$newsl[0]+"_split_camH";	
	string $nI=$newsl[0]+"_split_camI";		
	string $camA[] = `duplicate -rr -n $nA`;
	string $camB[] = `duplicate -rr -n $nB`;
	string $camC[] = `duplicate -rr -n $nC`;
	string $camD[] = `duplicate -rr -n $nD`;
	string $camE[] = `duplicate -rr -n $nE`;
	string $camF[] = `duplicate -rr -n $nF`;
	string $camG[] = `duplicate -rr -n $nG`;
	string $camH[] = `duplicate -rr -n $nH`;
	string $camI[] = `duplicate -rr -n $nI`;
	
	parentConstraint $sl[0] $camA[0];
	parentConstraint $sl[0] $camB[0];
	parentConstraint $sl[0] $camC[0];
	parentConstraint $sl[0] $camD[0];
	parentConstraint $sl[0] $camE[0];
	parentConstraint $sl[0] $camF[0];
	parentConstraint $sl[0] $camG[0];
	parentConstraint $sl[0] $camH[0];
	parentConstraint $sl[0] $camI[0];	
	
	string $allCameras[]=`ls -type "camera"`;
	for ($c in $allCameras){
		setAttr  ($c+".renderable") 0;	
	}

	float $aH=`getAttr ($newsl[0]+".horizontalFilmAperture")`;
	float $aV=`getAttr ($newsl[0]+".verticalFilmAperture")`;
	float $oH=`getAttr ($newsl[0]+".horizontalFilmOffset")`;
	float $oV=`getAttr ($newsl[0]+".verticalFilmOffset")`;
	
	int $width=`getAttr "defaultResolution.width"`;
	int $height=`getAttr "defaultResolution.height"`;



	zzjSplitCameraCMD_SetAttr($camA[0],"split_camA",   $aH/3,   $aV/3,   $aH/-3,   $aV/3   ,  $width/3   ,   $height/3 ) ;
	zzjSplitCameraCMD_SetAttr($camB[0],"split_camB",   $aH/3,   $aV/3,   0,  			 $aV/3  ,  $width/3   ,   $height/3 ) ;	
	zzjSplitCameraCMD_SetAttr($camC[0],"split_camC",   $aH/3,   $aV/3,   $aH/3,   $aV/3   ,  $width/3   ,   $height/3 ) ;
	
	zzjSplitCameraCMD_SetAttr($camD[0],"split_camD",  $aH/3,   $aV/3,   $aH/-3,   0  , 		   $width/3   ,   $height/3 ) ;
	zzjSplitCameraCMD_SetAttr($camE[0],"split_camE",   $aH/3,   $aV/3,   0,  			 0   ,			$width/3   ,   $height/3 ) ;
	zzjSplitCameraCMD_SetAttr($camF[0],"split_camF",   $aH/3,   $aV/3,   $aH/3,      0  ,  		$width/3   ,   $height/3 ) ;	
	
	zzjSplitCameraCMD_SetAttr($camG[0],"split_camG",   $aH/3,   $aV/3,   $aH/-3,   $aV/-3   ,  $width/3   ,   $height/3 ) ;
	zzjSplitCameraCMD_SetAttr($camH[0],"split_camH",   $aH/3,   $aV/3,   0		,   $aV/-3  ,  $width/3   ,   $height/3 ) ;	
	zzjSplitCameraCMD_SetAttr($camI[0],"split_camI",      $aH/3,   $aV/3,   $aH/3,   $aV/-3  ,  $width/3   ,   $height/3 ) ;	
	
	
	
}