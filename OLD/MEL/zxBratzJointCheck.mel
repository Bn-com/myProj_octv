/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÀîÕ×ÐË
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zxBratzJointCheck()
{
	float $timebuf = `currentTime -q`;

	currentTime -31;

	//string  $folder = "D:\\fm\\R&D\\taks1\\sence\\texture_ok\\New_Project\\data\\";

	string  $folder = "Z:\\Resource\\Groups\\Production\\R&D\\fm\\";

	string $file = $folder + "bratz_jointcheck_data_8_22.txt";

	int $fileId=`fopen $file "r"`;

	if ( !$fileId )

	error("Fail to open " + $file);

	string $origin_skeleton_abspath_data = `fgetline $fileId`;

	while ( size( $origin_skeleton_abspath_data ) > 0 ) 
	{ 
		string $buf[];

		tokenize($origin_skeleton_abspath_data, $buf);

		$origin_skeleton_abspath_data = `fgetline $fileId`;

		string $current_skeleton_fullpath[] = `ls -l $buf[0]`;


		
		if (size ($current_skeleton_fullpath))

		   {		
						
			string $skeleton_fullpath_name[] =  $current_skeleton_fullpath;

			
			string $skeleton_name_translateX = ($skeleton_fullpath_name[0] + ".translateX");

			string $skeleton_name_translateY = ($skeleton_fullpath_name[0] + ".translateY");

			string $skeleton_name_translateZ = ($skeleton_fullpath_name[0] + ".translateZ");

			string $skeleton_name_rotateX = ($skeleton_fullpath_name[0] + ".rotateX");
										   
			string $skeleton_name_rotateY = ($skeleton_fullpath_name[0] + ".rotateY");
										   
			string $skeleton_name_rotateZ = ($skeleton_fullpath_name[0] + ".rotateZ");

			string $skeleton_name_scaleX = ($skeleton_fullpath_name[0] + ".scaleX");
										 
			string $skeleton_name_scaleY = ($skeleton_fullpath_name[0] + ".scaleY");
										 
			string $skeleton_name_scaleZ = ($skeleton_fullpath_name[0] + ".scaleZ");

			
			float $skeleton_tx = `getAttr  $skeleton_name_translateX`;

			float $skeleton_ty = `getAttr  $skeleton_name_translateY`;

			float $skeleton_tz = `getAttr  $skeleton_name_translateZ`;

			float $skeleton_rx = `getAttr  $skeleton_name_rotateX`;

			float $skeleton_ry = `getAttr  $skeleton_name_rotateY`;

			float $skeleton_rz = `getAttr  $skeleton_name_rotateZ`;

			float $skeleton_sx = `getAttr  $skeleton_name_scaleX`;

			float $skeleton_sy = `getAttr  $skeleton_name_scaleY`;

			float $skeleton_sz = `getAttr  $skeleton_name_scaleZ`;


			float $buf_tx = $buf[1];

			float $buf_ty = $buf[2];

			float $buf_tz = $buf[3];

			float $buf_rx = $buf[4];

			float $buf_ry = $buf[5];

			float $buf_rz = $buf[6];

			float $buf_sx = $buf[7];

			float $buf_sy = $buf[8];

			float $buf_sz = $buf[9];


			int $abs_tx = (abs($skeleton_tx - $buf_tx)<0.001);
							         
			int $abs_ty = (abs($skeleton_ty - $buf_ty)<0.001);
							         
			int $abs_tz = (abs($skeleton_tz - $buf_tz)<0.001);
							         
			int $abs_rx = (abs($skeleton_rx - $buf_rx)<0.001);
							         
			int $abs_ry = (abs($skeleton_ry - $buf_ry)<0.001);
							         
			int $abs_rz = (abs($skeleton_rz - $buf_rz)<0.001);
							         
			int $abs_sx = (abs($skeleton_sx - $buf_sx)<0.001);
							         
			int $abs_sy = (abs($skeleton_sy - $buf_sy)<0.001);
							         
			int $abs_sz = (abs($skeleton_sz - $buf_sz)<0.001);


			if (!($abs_tx && $abs_ty && $abs_tz && $abs_rx && $abs_ry && $abs_rz && $abs_sx && $abs_sy && $abs_sz))

			   {
		
				string $current_skeleton_fullpath_data = ($skeleton_fullpath_name[0] + " " + " " + " " + 
									 "tx" + " " + $skeleton_tx + " " + "ty" + " " + $skeleton_ty + " " + "tz" + " " + $skeleton_tz + " " + 
									 "rx" + " " + $skeleton_rx + " " + "ry" + " " + $skeleton_ry + " " + "rz" + " " + $skeleton_rz + " " + 
									 "sx" + " " + $skeleton_sx + " " + "sy" + " " + $skeleton_sy + " " + "sz" + " " + $skeleton_sz + "\n");
				
				string $origin_skeleton_fullpath_data = ($skeleton_fullpath_name[0] + " " + " " + " " + 
									 "tx" + " " + $buf[1] + " " + "ty" + " " + $buf[2] + " " + "tz" + " " + $buf[3] + " " + 
									 "rx" + " " + $buf[4] + " " + "ry" + " " + $buf[5] + " " + "rz" + " " + $buf[6] + " " + 
									 "sx" + " " + $buf[7] + " " + "sy" + " " + $buf[8] + " " + "sz" + " " + $buf[9] + "\n");


				print ("current_skeleton_data" + " " + " " + $current_skeleton_fullpath_data
				      +"origin_skeleton_data" + " " + " " + " " + $origin_skeleton_fullpath_data + "\n" );
			   }
		  
		   }
			
	

	}

	currentTime $timebuf;

						                   
}						    