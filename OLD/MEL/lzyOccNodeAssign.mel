global proc lzyOccNodeAssign()
{
//custom render setting
setAttr "defaultRenderGlobals.currentRenderer" -type "string" "mentalRay";


//create occNode
if( `objExists mib_amb_occlusion1` )
{select -r mib_amb_occlusion1;doDelete;}
string $occNode = `createNode mib_amb_occlusion`;
setAttr ($occNode + ".samples") 256;
setAttr ($occNode + ".max_distance") 100;




//list all lambert
string $lambertList[] = `ls -exactType "lambert"`;

for($eachLambert in $lambertList)
{
	if($eachLambert == "lambert1")continue;

//set lambert attrbute
connectAttr -force ($occNode + ".outValue") ($eachLambert + ".color");
disconnectAttr  ($occNode + ".outValue") ($eachLambert + ".color");
setAttr ($eachLambert + ".color") -type double3 1 1 1 ;

connectAttr -force ($occNode + ".outValue") ($eachLambert + ".transparency");
disconnectAttr  ($occNode + ".outValue") ($eachLambert + ".transparency");
setAttr ($eachLambert + ".transparency") -type double3 0 0 0 ;

connectAttr -force ($occNode + ".outValue") ($eachLambert + ".ambientColor");
disconnectAttr  ($occNode + ".outValue") ($eachLambert + ".ambientColor");
setAttr ($eachLambert + ".ambientColor") -type double3 0 0 0 ;

connectAttr -force ($occNode + ".spread") ($eachLambert + ".diffuse");
disconnectAttr  ($occNode + ".spread") ($eachLambert + ".diffuse");
setAttr ($eachLambert + ".diffuse") 0;

connectAttr -force ($occNode + ".spread") ($eachLambert + ".translucence");
disconnectAttr  ($occNode + ".spread") ($eachLambert + ".translucence");
setAttr ($eachLambert + ".translucence") 0;

setAttr ($eachLambert + ".hideSource") 0;
setAttr ($eachLambert + ".glowIntensity") 0;
setAttr ($eachLambert + ".matteOpacityMode") 2;
setAttr ($eachLambert + ".matteOpacity") 1;

//connect occ to incandescence
connectAttr -force ($occNode + ".outValue") ($eachLambert + ".incandescence");
}






//list all blinn
string $blinnList[] = `ls -exactType "blinn"`;

for($eachBlinn in $blinnList)
{
//set blinn attrbute
connectAttr -force ($occNode + ".outValue") ($eachBlinn + ".color");
disconnectAttr  ($occNode + ".outValue") ($eachBlinn + ".color");
setAttr ($eachBlinn + ".color") -type double3 1 1 1 ;

connectAttr -force ($occNode + ".outValue") ($eachBlinn + ".transparency");
disconnectAttr  ($occNode + ".outValue") ($eachBlinn + ".transparency");
setAttr ($eachBlinn + ".transparency") -type double3 0 0 0 ;

connectAttr -force ($occNode + ".outValue") ($eachBlinn + ".ambientColor");
disconnectAttr  ($occNode + ".outValue") ($eachBlinn + ".ambientColor");
setAttr ($eachBlinn + ".ambientColor") -type double3 0 0 0 ;

connectAttr -force ($occNode + ".spread") ($eachBlinn + ".diffuse");
disconnectAttr  ($occNode + ".spread") ($eachBlinn + ".diffuse");
setAttr ($eachBlinn + ".diffuse") 0;

connectAttr -force ($occNode + ".spread") ($eachBlinn + ".translucence");
disconnectAttr  ($occNode + ".spread") ($eachBlinn + ".translucence");
setAttr ($eachBlinn + ".translucence") 0;

connectAttr -force ($occNode + ".outValue") ($eachBlinn + ".specularColor");
disconnectAttr  ($occNode + ".outValue") ($eachBlinn + ".specularColor");
setAttr ($eachBlinn + ".specularColor") -type double3 0 0 0 ;

connectAttr -force ($occNode + ".spread") ($eachBlinn + ".reflectivity");
disconnectAttr  ($occNode + ".spread") ($eachBlinn + ".reflectivity");
setAttr ($eachBlinn + ".reflectivity") 0;

setAttr ($eachBlinn + ".hideSource") 0;
setAttr ($eachBlinn + ".glowIntensity") 0;
setAttr ($eachBlinn + ".matteOpacityMode") 2;
setAttr ($eachBlinn + ".matteOpacity") 1;

//connect occ to incandescence
connectAttr -force ($occNode + ".outValue") ($eachBlinn + ".incandescence");
}





//creat occ layer
if(`objExists occ`){select -r occ;doDelete;}
select -all;
createRenderLayer -name "occ" -number 1 -noRecurse `ls -selection`;
editRenderLayerGlobals -currentRenderLayer occ;
editRenderLayerAdjustment -layer occ mib_amb_occlusion1.samples;
editRenderLayerAdjustment -layer occ mib_amb_occlusion1.output_mode;
setAttr "mib_amb_occlusion1.samples" 256;
setAttr "mib_amb_occlusion1.output_mode" 0;



//creat normal layer
if(`objExists nrm`){select -r nrm;doDelete;}
select -all;
createRenderLayer -name "nrm" -number 1 -noRecurse `ls -selection`;
editRenderLayerGlobals -currentRenderLayer nrm;
editRenderLayerAdjustment -layer nrm mib_amb_occlusion1.samples;
editRenderLayerAdjustment -layer nrm mib_amb_occlusion1.output_mode;
setAttr "mib_amb_occlusion1.samples" 64;
setAttr "mib_amb_occlusion1.output_mode" 2;

print "暂时只支持lambert和blinn材质球";

}