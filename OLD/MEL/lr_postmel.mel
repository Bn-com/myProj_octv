/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ¿Ó»Ò
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//
//   Name:         lr_postmel  
//   Usage:        lr_postmel foldername
//   Description:  this script is used to auto convert mayarender file to Dailes File( JPG and UYVY),
//                 the script will be run as maya post_render script.
//   
//   Created by:   Larry
//   Date:         2002.5.20
//
//
////////////////////////////////////////////////////////////


global proc lr_postmel(string $dailypath,string $slate,int $ef)
{
  //  source "lr_postmel.mel";
      
    string $prefix = `getAttr defaultRenderGlobals.imageFilePrefix`;      
    int $pad = `getAttr "defaultRenderGlobals.extensionPadding"`;
    string $proj = `workspace -q -act`;
    if($proj == "default")
    {
        $proj = `getenv USERPROFILE` + "/My Documents/maya/projects/default";
    }
    
    string $imgpath = $proj + "/images/";
    
    string $prefix = `getAttr defaultRenderGlobals.imageFilePrefix`;
    
    string $imageType;
	int $imageNum = `getAttr "defaultRenderGlobals.imageFormat"`;
        if($imageNum == 7)
        {
            $imageType = "iff";
        }else if($imageNum == 19)
        {
            $imageType ="tga";
        }else if($imageNum == 8)
        {
            $imageType = "jpg";
        }
    
    if(size($prefix) == 0)
    {
    	string $sceneName = `file -q -sn`;
	    if (size($sceneName) == 0) 
	    {
                $prefix = "untitled";
	    }else {
                string $buffer[];
	        tokenize $sceneName "/\\" $buffer;
	        string $tail = $buffer[size($buffer) - 1];
	        tokenize $tail "." $buffer;
	        $tail = $buffer[0];
	        $prefix = $tail;
	     }
    }
    
    string $cf = getcurrentframe();
    string $mayaout = $imgpath + $prefix + "." + $cf + "." + $imageType;
    
    string $outjpg  = $dailypath + "/jpg/"  + $prefix + "." + $cf + ".jpg";
    string $outuyvy = $dailypath + "/uyvy/" + $prefix + "." + $cf + ".uyvy";
      
      print ("The Current Frame: "  + $mayaout +  "\n");
      print ("Converting to " + $outjpg + " .......\n");
      convert_JPEG($mayaout,$outjpg,$imageType);
      print ("Converting to " + $outuyvy + " ........\n");
      convert_UYVY($outjpg,$outuyvy);
    	   
//  check if need to creat slate.txt

      int $fnow =  `currentTime -query`; 
      if($fnow == $ef)
      {
      	 Create_Slate($dailypath,$slate);
      } 	   
	
}


global proc string getcurrentframe()
{
    string $frame_name;
    int $pad = `getAttr "defaultRenderGlobals.extensionPadding"`;
    string $cf = `currentTime -query`;
    int $i;
    for ($i=size($cf); $i<$pad; $i++) 
    {
	$cf = "0"+$cf;
    }
    return $cf;

}

//postmel;


global proc int convert_JPEG(string $input,string $output,string $ext)
{
   chdir "c:/";

   string $cmd = "imgcvt -f " + $ext + " -t jpg \"" + $input + "\" \"" + $output + "\"";
 //  print ($cmd + "\n");
   string $result = `system($cmd)`;
   if($result != "")
   {
      warning ("Error convert jpg file " + $output);
      print $result;
      return 0;
   }
  
   return 1;	
}


global proc int convert_UYVY(string $input,string $output)
{
   chdir "c:/";
   string $exec  = `getenv "DEV_PATH"` + "/Others/ImageMagick-5.4.6-Q16/convert.exe ";


   $cmd = $exec + "\"" + $input + "\" \"" + $output + "\"";
   $cmd = substituteAllString($cmd, "/", "\\");
   
//   print ($cmd + "\n");
   if(!`filetest -f $input`)
   {
     warning ("Can not find file " + $input);
     return 0;
   }
   string $result = `system($cmd)`;
   if($result != "")
   {
      warning ("Can not convert" + $input); 	
      print $result;
      return 0;
   }
   return 1;
}

global proc int Create_Slate(string $path,string $slate)
{

   string $filename = $path + "/slate.txt";
   $fileID = `fopen $filename "w"`;  
   fprint $fileID $slate; 
   fclose $fileID;	
   return 1;
}