// Copyright (C) 1997-2014 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc AniGeoCacheMenu ( string $parent ) {

	setParent -menu $parent;
	if( `menu -q -ni $parent` != 0 ) {
		//
		//	Menu is built already - just return
		//
		return;
	}
	
	// Cache menu
	//
	if(!`about -evalVersion`) {
	    menuItem -l (uiRes("m_AniGeoCacheMenu.kCreateCache"))
			-image "createCache.png"
		    -annotation (getRunTimeCommandAnnotation("geometryCache"))
		    -c "geometryCache"
		    -dmc "performCreateGeometryCache 2 \"add\""
		    geometryCacheItem;
            menuItem -optionBox true
				-image "createCache.png"
                -annotation (getRunTimeCommandAnnotation("geometryCacheOpt"))
                -c "geometryCacheOpt"
                geometryCacheOptItem;
    }
	
	menuItem -l (uiRes("m_AniGeoCacheMenu.kAttachGeomCache"))
		-image "importCache.png"
		-annotation (getRunTimeCommandAnnotation("attachGeometryCache"))
		-c "attachGeometryCache"
		attachGeometryCacheItem;
		
	menuItem -l (uiRes("m_AniGeoCacheMenu.kExportCache"))
		-image "exportCache.png"
		-annotation (getRunTimeCommandAnnotation("geometryExportCache"))
		-c "geometryExportCache"
		-dmc "performCreateGeometryCache 2 \"export\""
		geometryExportCacheItem;
	menuItem -optionBox true
		-image "exportCache.png"
		-annotation (getRunTimeCommandAnnotation("geometryExportCacheOpt"))
		-c "geometryExportCacheOpt"
		geometryExportCacheOptItem;
	
	menuItem -divider true;

	menuItem -l (uiRes("m_AniGeoCacheMenu.kDisableAllCache"))
		-image "disableAllCaches.png"
		-c "setCacheEnable 0 0 {}"
		disableAllGeometryCacheItem;

	menuItem -l (uiRes("m_AniGeoCacheMenu.kEnableAllCache"))
		-image "enableAllCaches.png"
		-c "setCacheEnable 1 0 {}"
		enableAllGeometryCacheItem;
		
	menuItem -divider true;

    if(!`about -evalVersion`) {
	    menuItem -l (uiRes("m_AniGeoCacheMenu.kReplaceCache"))
			-image "replaceCache.png"
		    -annotation (getRunTimeCommandAnnotation("geometryReplaceCache"))
		    -c "geometryReplaceCache"
		    -dmc "performCreateGeometryCache 2 \"replace\""
		    geometryReplaceCacheItem;
            menuItem -optionBox true
				-image "replaceCache.png"
                -annotation (getRunTimeCommandAnnotation("geometryReplaceCacheOpt"))
                -c "geometryReplaceCacheOpt"
                geometryReplaceCacheOptItem;

	    menuItem -l (uiRes("m_AniGeoCacheMenu.kMergeCache"))
			-image "mergeCache.png"
		    -annotation (getRunTimeCommandAnnotation("geometryMergeCache"))
		    -c "geometryMergeCache"
		    -dmc "performCreateGeometryCache 2 \"merge\""
		    geometryMergeCacheItem;
            menuItem -optionBox true
				-image "mergeCache.png"
                -annotation (getRunTimeCommandAnnotation("geometryMergeCacheOpt"))
                -c "geometryMergeCacheOpt"
                geometryMergeCacheOptItem;
    	
	    menuItem -l (uiRes("m_AniGeoCacheMenu.kDeleteCache"))
			-image "deleteCache.png"
		    -annotation (getRunTimeCommandAnnotation("deleteGeometryCache"))
		    -c "deleteGeometryCache"
		    geometryDeleteCacheItem;
            menuItem -optionBox true
				-image "deleteCache.png"
                -annotation (getRunTimeCommandAnnotation("geometryDeleteCacheOpt"))
                -c "geometryDeleteCacheOpt"
                geometryDeleteCacheOptItem;

	    menuItem -l (uiRes("m_AniGeoCacheMenu.kAppendCache"))
			-image "appendCache.png"
		    -annotation( getRunTimeCommandAnnotation("geometryAppendCache") )
		    -c "geometryAppendCache"
		    geometryAppendCacheItem;
		    menuItem -optionBox true
				-image "appendCache.png"
			    -annotation ( getRunTimeCommandAnnotation("geometryAppendCacheOpt") )
			    -c "geometryAppendCacheOpt"
			    geometryAppendCacheOptItem;

	    menuItem -l (uiRes("m_AniGeoCacheMenu.kReplaceCacheFrames"))
			-image "replaceCacheFrame.png"
		    -annotation( getRunTimeCommandAnnotation("geometryReplaceCacheFrames") )
		    -c "geometryReplaceCacheFrames"
		    geometryReplaceCacheFramesItem;
		    menuItem -optionBox true
				-image "replaceCacheFrame.png"
			    -annotation ( getRunTimeCommandAnnotation("geometryReplaceCacheFramesOpt") )
			    -c "geometryReplaceCacheFramesOpt"
			    geometryReplaceCacheFramesOptItem;
    	
	    menuItem -l (uiRes("m_AniGeoCacheMenu.kDeleteCacheFrames"))
			-image "deleteCacheFrame.png"
		    -annotation( getRunTimeCommandAnnotation("geometryDeleteCacheFrames") )
		    -c "geometryDeleteCacheFrames"
		    geometryDeleteCacheFramesItem;
		    menuItem -optionBox true
				-image "deleteCacheFrame.png"
			    -annotation ( getRunTimeCommandAnnotation("geometryDeleteCacheFramesOpt") )
			    -c "geometryDeleteCacheFramesOpt"
			    geometryDeleteCacheFramesOptItem;

	    menuItem -l (uiRes("m_AniGeoCacheMenu.kDeleteHistoryAheadGeomCache"))
			-image "deleteCacheHistory.png"
		    -annotation( getRunTimeCommandAnnotation("deleteHistoryAheadOfGeomCache") )
		    -c "deleteHistoryAheadOfGeomCache"
		    deleteHistoryAheadOfGeomCacheItem;
    		
	    menuItem -divider true;

	    menuItem -l (uiRes("m_AniGeoCacheMenu.kPaintCache"))
		    -annotation (getRunTimeCommandAnnotation("PaintCacheTool"))
		    -image "paintCacheWeights.png"
		    -c "PaintGeomCacheTool"
		    geometryPaintCacheItem;
            menuItem -optionBox true
		    -image "paintCacheWeights.png"
                -annotation (getRunTimeCommandAnnotation("PaintCacheToolOptions"))
                -c "PaintGeomCacheToolOptions"
                geometryPaintCacheOptItem;

    }
}
