/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///



global proc zjCrowdCreateParticleM()
{
	string $selected[] = `ls -selection`;

	if (size($selected) != 1)
		error("Select the locator group node");

	string $children[] = `listRelatives -fullPath -children $selected[0]`;

	int $count = 0;
	vector $crowdPos[];
	clear $crowdPos;

	for ($item in $children)
		if (kcIsType($item, "locator"))
		{
			float $pos[] = `xform -q -worldSpace -rp $item`;	
			$crowdPos[$count] = <<$pos[0], $pos[1], $pos[2]>>;			
			$count++;
		}

	// CREATE PARTICLE SYSTEM

	string $cmd = "particle";

	for ($i = 0; $i < size($crowdPos); $i++)
	{
		vector $pos = $crowdPos[$i];
		$cmd +=" -position " + $pos.x + " " + $pos.y + " " + $pos.z; 
	}

	string $result[] = eval($cmd);
	setAttr ($result[0] + ".particleRenderType") 4;		// set render type to sphere

	setAttr ($result[0] + ".startFrame") 43;
	kcParticleAddAttr($result[1], "rotationPP", "vectorArray");
	kcParticleAddAttr($result[1], "objIndex", "doubleArray");
	kcParticleAddAttr($result[1], "lookat", "vectorArray");

	//creation expression for particleShape
	string $exp = "\tif (particleId == 0)\r\n\t\tseed(2.088388129e-009);";
	$exp += "\r\r\tstring $crowdLocators[] = `listRelatives -fullPath -c " + $selected[0] + "`;";
	$exp += "\r\r\t// find the location of its associated locator and set the position to that";
	$exp += "\r\tstring $myLoc = $crowdLocators[(int)particleId];";
	$exp += "\r\tfloat $p[] = `xform -q -sp -worldSpace $myLoc`;";
	$exp += "\r\tfloat $r[] = `xform -q -rotation -worldSpace $myLoc`;";
	$exp += "\r\tposition = <<$p[0], $p[1], $p[2]>>;";
	$exp += "\r\r\tfloat $rot[] = `xform -q -rp $myLoc`;";
	$exp += "\r\tfloat $rad = $rot[1] * 3.14159/180;";
	$exp += "\r\t//rotationPP = <<cos($rad), 0, -sin($rad)>>;";
	$exp += "\r\trotationPP = <<$r[0], $r[1], $r[2]>>;";
	dynExpression -creation -string $exp $result[0];

}
