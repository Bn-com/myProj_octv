global proc string zwCreateSpotLight()
{
string $light = `spotLight`;
if ( "transform" != `nodeType $light` ) {
  string $parents[] = `listRelatives -parent $light`;
  $light = $parents[0];
}
string $locatorShapeList[] = `spaceLocator -p 0 0 0`;
string $locatorShape = $locatorShapeList[0];
string $target = $locatorShape;
string $lookAt = `createNode -name ($light+"_group") "lookAt"`;

setAttr ".aimVector" -type double3 0 0 -1;

connectAttr ($target+".tx") ($lookAt+".target[0].targetTranslateX");
connectAttr ($target+".ty") ($lookAt+".target[0].targetTranslateY");
connectAttr ($target+".tz") ($lookAt+".target[0].targetTranslateZ");
connectAttr ($target+".rp") ($lookAt+".target[0].targetRotatePivot");
connectAttr ($target+".rpt") ($lookAt+".target[0].targetRotateTranslate");
connectAttr ($target+".pm") ($lookAt+".target[0].targetParentMatrix");

connectAttr ($light+".pim") ($lookAt+".constraintParentInverseMatrix");
connectAttr ($light+".t") ($lookAt+".constraintTranslate");
connectAttr ($light+".rp") ($lookAt+".constraintRotatePivot");
connectAttr ($light+".rpt") ($lookAt+".constraintRotateTranslate");

connectAttr ($lookAt+".constraintRotateX") ($light+".rotateX");
connectAttr ($lookAt+".constraintRotateY") ($light+".rotateY");
connectAttr ($lookAt+".constraintRotateZ") ($light+".rotateZ");

connectAttr ($lookAt+".distanceBetween") ($light+".centerOfIllumination");

	return $light;
}