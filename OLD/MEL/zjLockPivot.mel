/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÕÔÖ¾½Ü
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjLockPivot() 
{
	string $win = "zjLockPivotWin";
	if (!`window -q -exists $win`)
	{
		window -title "Lock Pivot" -resizeToFitChildren true $win;
		columnLayout -adjustableColumn true -rowSpacing 5;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Lock Pivot..." -command "zjHelpCallback zjLockPivot";
				setParent ..;
				string $form = `formLayout`;
				string $t1 = `text -label "Lock  " -font "boldLabelFont"`;
				string $b1 = `button -label "Objects under Group" -command  "zjLkOjgp"`;
				string $b2 = `button -label "Selected Object"	 -command  "zjLkOj"`;
				string $b3 = `button -label "Select Objects"	 -command  "zjSelLkOj"`;
				string $t2 = `text -label "Unlock  " -font "boldLabelFont"`;
				string $b4 = `button -label "Objects under Group" -command  "zjUlkOjgp"`;
				string $b5 = `button -label "Selected Object"	  -command  "zjUlkOj"`;
				string $b6 = `button -label "Select Objects"	  -command  "zjSelUlkOj"`;
				formLayout -edit
					-attachForm	$t1	"top"	0
					-attachForm	$t1	"left"	0

					-attachControl	$b1	"top"	10	$t1
					-attachForm	$b1	"left"	0
					-attachPosition	$b1	"right"	0	33

					-attachControl	$b2	"top"	10	$t1
					-attachControl	$b2	"left"	0	$b1
					-attachPosition	$b2	"right"	0	66

					-attachControl	$b3	"top"	10	$t1
					-attachControl	$b3	"left"	0	$b2
					-attachPosition	$b3	"right"	0	100
					
					-attachControl	$t2	"top"	10	$b2
					-attachForm	$t2	"left"	0
					-attachPosition	$t2	"right"	0	25

					-attachControl	$b4	"top"	10	$t2
					-attachForm	$b4	"left"	0
					-attachPosition	$b4	"right"	0	33

					-attachControl	$b5	"top"	10	$t2
					-attachControl	$b5	"left"	0	$b4
					-attachPosition	$b5	"right"	0	66

					-attachControl	$b6	"top"	10	$t2
					-attachControl	$b6	"left"	0	$b5
					-attachPosition	$b6	"right"	0	100
				$form;
			setParent ..;
		setParent ..;

		showWindow $win;
	}
}


//lock objects under group
global proc zjLkOjgp()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	for ($node in $buf)
	{
		setAttr -lock 1 ($node + ".rotatePivotX");
		setAttr -lock 1 ($node + ".rotatePivotY");
		setAttr -lock 1 ($node + ".rotatePivotZ");
		setAttr -lock 1 ($node + ".scalePivotX");
		setAttr -lock 1 ($node + ".scalePivotY");
		setAttr -lock 1 ($node + ".scalePivotZ");
		setAttr -lock 1 ($node + ".rotatePivotTranslateX");
		setAttr -lock 1 ($node + ".rotatePivotTranslateY");
		setAttr -lock 1 ($node + ".rotatePivotTranslateZ");
		setAttr -lock 1 ($node + ".scalePivotTranslateX");
		setAttr -lock 1 ($node + ".scalePivotTranslateY");
		setAttr -lock 1 ($node + ".scalePivotTranslateZ");

		string $children[] = `listRelatives -allDescendents -noIntermediate -type transform $node`;
		for ($item in $children)
		{
			setAttr -lock 1 ($item + ".rotatePivotX");
			setAttr -lock 1 ($item + ".rotatePivotY");
			setAttr -lock 1 ($item + ".rotatePivotZ");
			setAttr -lock 1 ($item + ".scalePivotX");
			setAttr -lock 1 ($item + ".scalePivotY");
			setAttr -lock 1 ($item + ".scalePivotZ");
			setAttr -lock 1 ($node + ".rotatePivotTranslateX");
			setAttr -lock 1 ($node + ".rotatePivotTranslateY");
			setAttr -lock 1 ($node + ".rotatePivotTranslateZ");
			setAttr -lock 1 ($node + ".scalePivotTranslateX");
			setAttr -lock 1 ($node + ".scalePivotTranslateY");
			setAttr -lock 1 ($node + ".scalePivotTranslateZ");
		}
	}
}

//lock selcted object
global proc zjLkOj()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	for ($node in $buf)
	{
		setAttr -lock 1 ($node + ".rotatePivotX");
		setAttr -lock 1 ($node + ".rotatePivotY");
		setAttr -lock 1 ($node + ".rotatePivotZ");
		setAttr -lock 1 ($node + ".scalePivotX");
		setAttr -lock 1 ($node + ".scalePivotY");
		setAttr -lock 1 ($node + ".scalePivotZ");
		setAttr -lock 1 ($node + ".rotatePivotTranslateX");
		setAttr -lock 1 ($node + ".rotatePivotTranslateY");
		setAttr -lock 1 ($node + ".rotatePivotTranslateZ");
		setAttr -lock 1 ($node + ".scalePivotTranslateX");
		setAttr -lock 1 ($node + ".scalePivotTranslateY");
		setAttr -lock 1 ($node + ".scalePivotTranslateZ");
	}
}

//selcte objects whose attributes been locked
global proc zjSelLkOj()
{
	select -clear;
	string $buf[] = `ls -ni -transforms`;
	string $list[];
	clear $list;
	for ($node in $buf)
	{
		if (`getAttr -lock ($node + ".rotatePivotX")`)
		{
			$list[size($list)] = $node;
		}
	}
	string $cams[] = `listCameras`;
	$list = stringArrayRemove($cams, $list);

	if (size($list)>0)
	{
		select -r $list;
	}
}

//unlock objects under group
global proc zjUlkOjgp()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	for ($node in $buf)
	{
		setAttr -lock 0 ($node + ".rotatePivotX");
		setAttr -lock 0 ($node + ".rotatePivotY");
		setAttr -lock 0 ($node + ".rotatePivotZ");
		setAttr -lock 0 ($node + ".scalePivotX");
		setAttr -lock 0 ($node + ".scalePivotY");
		setAttr -lock 0 ($node + ".scalePivotZ");
		setAttr -lock 0 ($node + ".rotatePivotTranslateX");
		setAttr -lock 0 ($node + ".rotatePivotTranslateY");
		setAttr -lock 0 ($node + ".rotatePivotTranslateZ");
		setAttr -lock 0 ($node + ".scalePivotTranslateX");
		setAttr -lock 0 ($node + ".scalePivotTranslateY");
		setAttr -lock 0 ($node + ".scalePivotTranslateZ");
	
		string $children[] = `listRelatives -allDescendents -noIntermediate -type transform $node`;
		for ($item in $children)
		{
			setAttr -lock 0 ($item + ".rotatePivotX");
			setAttr -lock 0 ($item + ".rotatePivotY");
			setAttr -lock 0 ($item + ".rotatePivotZ");
			setAttr -lock 0 ($item + ".scalePivotX");
			setAttr -lock 0 ($item + ".scalePivotY");
			setAttr -lock 0 ($item + ".scalePivotZ");
			setAttr -lock 0 ($node + ".rotatePivotTranslateX");
			setAttr -lock 0 ($node + ".rotatePivotTranslateY");
			setAttr -lock 0 ($node + ".rotatePivotTranslateZ");
			setAttr -lock 0 ($node + ".scalePivotTranslateX");
			setAttr -lock 0 ($node + ".scalePivotTranslateY");
			setAttr -lock 0 ($node + ".scalePivotTranslateZ");
		}
	}
}

//unlock selcted object
global proc zjUlkOj()
{
	string $buf[] = `ls -selection -long -ni -transforms`;
	for ($node in $buf)
	{
		setAttr -lock 0 ($node + ".rotatePivotX");
		setAttr -lock 0 ($node + ".rotatePivotY");
		setAttr -lock 0 ($node + ".rotatePivotZ");
		setAttr -lock 0 ($node + ".scalePivotX");
		setAttr -lock 0 ($node + ".scalePivotY");
		setAttr -lock 0 ($node + ".scalePivotZ");
		setAttr -lock 0 ($node + ".rotatePivotTranslateX");
		setAttr -lock 0 ($node + ".rotatePivotTranslateY");
		setAttr -lock 0 ($node + ".rotatePivotTranslateZ");
		setAttr -lock 0 ($node + ".scalePivotTranslateX");
		setAttr -lock 0 ($node + ".scalePivotTranslateY");
		setAttr -lock 0 ($node + ".scalePivotTranslateZ");
	}
}

//selcte objects whose attributes been unlocked
global proc zjSelUlkOj()
{
	select -clear;
	string $buf[] = `ls -ni -transforms`;
	string $list[];
	clear $list;
	for ($node in $buf)
	{
		if (!`getAttr -lock ($node + ".rotatePivotX")`)
		{
			$list[size($list)] = $node;
		}
	}
	string $cams[] = `listCameras`;
	$list = stringArrayRemove($cams, $list);

	if (size($list)>0)
	{
		select -r $list;
	}
}
