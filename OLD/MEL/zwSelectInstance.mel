/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: »ÆÖÙÎ¬
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwSelectInstance()
{
	if(!`window -exists selectInstance`)
	{
		window -title "Select Instance" selectInstance;
			columnLayout -adjustableColumn true;
				rowLayout -numberOfColumns 2 -columnWidth2 85 85 -columnAlign2 "center" "center";
					button -width 85 -label "Select All" -command "selectInstanceProc \"all\"";
					button -width 85 -label "Select Souce" -command "selectInstanceProc \"source\"";
				setParent..;
			button -width 170 -label "Instance -> Copy" -command "instanceToCopy";
			button -width 85 -label "Help" -command "zjHelpCallback zwSelectInstance";
	}
	showWindow selectInstance;
	window -edit -width 178 -height 95 selectInstance;
}

global proc selectInstanceProc(string $type)
{
	string $str, $buffer[];
	$buffer = `ls -selection`;
	if(size($buffer) != 0)
	{
		$buffer = `listRelatives -fullPath -children $buffer[0]`;
		if($type == "all")
			$buffer = `listRelatives -fullPath -allParents $buffer[0]`;
		else if($type == "source")
			$buffer = `listRelatives -fullPath -parent $buffer[0]`;
		select -clear;
		string $str;
		for ($str in $buffer)
			select -add $str;
	}
}

global proc instanceToCopy()
{
	string $str, $buf[], $buffer[], $buffer1[];
	$buffer = `ls -selection`;
	for ($str in $buffer)
	{
		select -replace $str;
		$buffer1 = `duplicate -returnRootsOnly`;
		//delete $str;
		tokenize $str "|" $buf;
		rename $buffer1[0] $buf[size($buf)-1];
	}
	delete $buffer;
	for ($str in $buffer)
		select -add $str;
}