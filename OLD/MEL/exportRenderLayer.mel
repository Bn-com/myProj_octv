//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2009-11-12
//
//	Update/Change: WansHoulOng
//	Last Updated: 2009-11-25
//	Description:
//				
//////////////////////////////////////////////////////////

global proc string[] slExportRenderLayerWithSelected()
{
	string $renderLayers[] = `ls -type renderLayer`;
	string $selectLayers[] ={};
	for($rl in $renderLayers)
	{
		if (!gmatch($rl,"*default*") && `renderLayerButton -q -s $rl`)
			$selectLayers[size($selectLayers)] = $rl;
	}
	select -add  $selectLayers;

	//string $relatingLayers[] = slExportRenderLayerWithSelectedObj();
	return $selectLayers;
}

global proc string[] slExportRenderLayerWithSelectedObj()
{
	string $sels[] = `ls -sl`;
	string $exportRenderLayers[]={};
	for($sel in $sels)
	{
		string $children[] = `listRelatives -f -ad $sel`;
		$children = stringArrayCatenate($children,{$sel});
		for($child in $children)
		{
			string $renderLayers[] = `listConnections -type renderLayer $child`;
			$exportRenderLayers = stringArrayCatenate($exportRenderLayers,$renderLayers);
		}
	}
	$exportRenderLayers = stringArrayRemoveDuplicates($exportRenderLayers);

	for ($renderLayer in $exportRenderLayers)
	{
		if (gmatch($renderLayer,"*default*"))
		{
			$exportRenderLayers = stringArrayRemove({$renderLayer},$exportRenderLayers);
		}
	}
	select -add $exportRenderLayers;
	
	return $exportRenderLayers;
}