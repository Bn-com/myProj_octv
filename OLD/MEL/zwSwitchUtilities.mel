/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwSwitchUtilities()
{
	string $str, $buf[], $buf1[];
	if(`window -exists switchUtilities`)
		deleteUI switchUtilities;
	window -title "Switch Utilities" -width 600 -height 300 switchUtilities;
		string $formLayout1 = `formLayout`;
			string $optionMenuGrp1 = `optionMenuGrp -label "Switch:" -columnWidth 1 60 -columnAlign 1 "right" -adjustableColumn 2`;
				$buf = `ls -type singleShadingSwitch`;
					appendStringArray  $buf1 $buf `size($buf)`;
					$buf = `ls -type doubleShadingSwitch`;
					appendStringArray  $buf1 $buf `size($buf)`;
					$buf = `ls -type tripleShadingSwitch`;
					appendStringArray  $buf1 $buf `size($buf)`;
					for ($str in $buf1)
					{
						if (!`attributeExists group $str`)
							addAttr -longName "group" -dataType "string" $str;
						$buf = `listConnections -source false -plugs true ($str + ".output")`;
						if(`size $buf`)
						{
							$buf[0] = `substituteAllString $buf[0] "." "_"`;
						//	$str = `rename $str $buf[0]`;
						}
						menuItem -label $str;
					}
				
			setParent $formLayout1;
			string $formLayout2 = `formLayout`;
				string $button1 = `button -label "Select SG"`;
				string $button2 = `button -label "Add Selected"`;
				string $button3 = `button -label "Remove Selected"`;
				setParent..;
			formLayout -edit
				-attachForm	$button1	"left"		0
				-attachPosition	$button1	"right"		0	33

				-attachControl	$button2	"left"		0	$button1
				-attachPosition	$button2	"right"		0	67

				-attachControl	$button3	"left"		0	$button2
				-attachForm	$button3	"right"		0
			$formLayout2;

			string $formLayout3 = `formLayout`;
				setParent..;

			string $scrollLayout1 = `scrollLayout -horizontalScrollBarThickness 0 scrollLayout1`;
				columnLayout;
					string $columnLayout1 = `columnLayout`;
						setParent..;
					string $columnLayout2 = `columnLayout`;
						setParent..;
					setParent..;
				setParent..;

			string $button4 = `button -label "Select Highlighted"`;
			string $button5 = `button -label "Select All"`;
			string $button6 = `button -label "Group"`;
			string $button7 = `button -label "UnGroup"`;
			string $button8 = `button -label "Refresh"`;
			string $button9 = `button -label "Help" -command "zjHelpCallback zwSwitchUtilities"`;

		formLayout -edit
			-attachForm	$optionMenuGrp1	"left"		0

			-attachControl	$formLayout2	"left"		0	$optionMenuGrp1
			-attachForm	$formLayout2	"right"		0

			-attachControl	$formLayout3	"top"		5	$optionMenuGrp1
			-attachForm	$formLayout3	"left"		0
			-attachForm	$formLayout3	"right"		0

			-attachForm	$button4	"left"		0
			-attachForm	$button4	"bottom"	0
			-attachPosition	$button4	"right"		0	17

			-attachControl	$button5	"left"		0	$button4
			-attachForm	$button5	"bottom"	0
			-attachPosition	$button5	"right"		0	34

			-attachControl	$button6	"left"		0	$button5
			-attachForm	$button6	"bottom"	0
			-attachPosition	$button6	"right"		0	51

			-attachControl	$button7	"left"		0	$button6
			-attachForm	$button7	"bottom"	0
			-attachPosition	$button7	"right"		0	68

			-attachControl	$button8	"left"		0	$button7
			-attachForm	$button8	"bottom"	0
			-attachPosition	$button8	"right"		0	84

			-attachControl	$button9	"left"		0	$button8
			-attachForm	$button9	"bottom"	0
			-attachForm	$button9	"right"		0

			-attachControl	$scrollLayout1	"top"		5	$formLayout3
			-attachForm	$scrollLayout1	"left"		0
			-attachControl	$scrollLayout1	"bottom"	0	$button4
			-attachForm	$scrollLayout1	"right"		0
		$formLayout1;
	optionMenuGrp -edit -changeCommand ("switchUtilitiesSelectSwitch " + $optionMenuGrp1 + " " + $formLayout3 + " " + $columnLayout1 + " " + $columnLayout2) $optionMenuGrp1;
	
	button -edit -command ("switchUtilitiesSelectSG "		+ $optionMenuGrp1)									$button1;
	button -edit -command ("switchUtilitiesAddSelected "		+ $optionMenuGrp1 + " " + $formLayout3 + " " + $columnLayout1 + " " + $columnLayout2)	$button2;
	button -edit -command ("switchUtilitiesRemoveSelected "		+ $optionMenuGrp1 + " " + $formLayout3 + " " + $columnLayout1 + " " + $columnLayout2)	$button3;
	button -edit -command ("switchUtilitiesSelectHighlighted "	+ $optionMenuGrp1 + " " + $columnLayout2)						$button4;
	button -edit -command ("switchUtilitiesSelectAll "		+ $optionMenuGrp1)									$button5;
	button -edit -command ("switchUtilitiesGroup "			+ $optionMenuGrp1 + " " + $formLayout3 + " " + $columnLayout1 + " " + $columnLayout2)	$button6;
	button -edit -command ("switchUtilitiesUnGroup "		+ $optionMenuGrp1 + " " + $columnLayout1 + " " + $columnLayout2)			$button7;
	button -edit -command "switchUtilitiesRefresh"														$button8;

	switchUtilitiesSelectSwitch $optionMenuGrp1 $formLayout3 $columnLayout1 $columnLayout2;
	showWindow switchUtilities;
}

global proc switchUtilitiesSelectSwitch(string $optionMenuGrp1, string $formLayout3, string $columnLayout1, string $columnLayout2)
{
	string $str, $switchNode, $script, $control, $command, $buf[], $buf1[];
	int $i, $count;

	$buf = `formLayout -query -childArray $formLayout3`;
	for($str in $buf)
		deleteUI $str;
	$buf = `columnLayout -query -childArray $columnLayout1`;
	for($str in $buf)
		deleteUI $str;
	$buf = `columnLayout -query -childArray $columnLayout2`;
	for($str in $buf)
		deleteUI $str;

	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		$buf = `listAttr -multi ($switchNode + ".input")`;
		$buf1 = `listAttr -multi ($switchNode + ".input[0]")`;
		$count = size($buf)/size($buf1);

		setParent $formLayout3;
		if(`nodeType $switchNode` == "singleShadingSwitch")
			attrFieldSliderGrp -attribute ($switchNode + ".default") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth 1 60 -columnWidth 4 30 attrFieldSliderGrpSingle;
		else if(`nodeType $switchNode` == "doubleShadingSwitch")
		{
			string $attrFieldSliderGrp1 = `attrFieldSliderGrp -attribute ($switchNode + ".defComp1") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth 1 60 -columnWidth 4 30 -label "Default"`;
			string $attrFieldSliderGrp2 = `attrFieldSliderGrp -attribute ($switchNode + ".defComp2") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth 1 10 -columnWidth 4 30 -label ""`;
			formLayout -edit
				-attachControl	$attrFieldSliderGrp2	"left"	0	$attrFieldSliderGrp1
			$formLayout3;
		}
		else if(`nodeType $switchNode` == "tripleShadingSwitch")
			attrColorSliderGrp -attribute ($switchNode + ".default") -columnAlign 1 "right" -columnWidth 1 60 -columnWidth 4 30 attrFieldSliderTriple;

		
		$script = `getAttr ($switchNode + ".group")`;

		setParent $columnLayout2;
		for ($i=0; $i<$count; $i++)
		{
			rowLayout -visible (!`gmatch $script ("*\t" + $i + "[\t\n]*")` && !`gmatch $script ("*\t" + $i)`) -numberOfColumns 4 -columnAlign 2 "center" -columnWidth4 28 180 250 250;
			$buf = `listConnections ($switchNode + ".input[" + $i + "].inShape")`;
			if(size($buf))
			{
				checkBox -label "";
				button -label $buf[0] -annotation $buf[0] -width 180 -command ("select " + $buf[0]);
				if(`nodeType $switchNode` == "singleShadingSwitch")
					attrFieldSliderGrp -attribute ($switchNode + ".input[" + $i + "].inSingle") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label "";
				else if(`nodeType $switchNode` == "doubleShadingSwitch")
				{
					attrFieldSliderGrp -attribute ($switchNode + ".input[" + $i + "].inComp1") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label "";
					attrFieldSliderGrp -attribute ($switchNode + ".input[" + $i + "].inComp2") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label "";
				}
				else if(`nodeType $switchNode` == "tripleShadingSwitch")
					attrColorSliderGrp -attribute ($switchNode + ".input[" + $i + "].inTriple") -columnWidth4 15 70 135 30 -label "";
			}
			else
				substitute ("\t" + $i) $script "";
			setParent..;
		}

		setParent $columnLayout1;
		tokenize $script "\n" $buf;
		$script = "";
		for ($str in $buf)
		{
			tokenize $str "\t" $buf1;
			if (`size $buf1` > 1)
			{
				$script +=  $str + "\n";
				rowLayout -numberOfColumns 5 -columnAlign 2 "center" -columnWidth5 28 180 250 250 50;
					checkBox -label "" -onCommand ("switchUtilitiesCheck 1 \"" + $str + "\" " + $columnLayout2) -offCommand ("switchUtilitiesCheck 0 \"" + $str + "\" " + $columnLayout2);
					button -label $buf1[0] -width 180 -annotation $buf1[0] -command ("switchUtilitiesSelectGroup " + $switchNode + " \"" + $str + "\"");
					if(`nodeType $switchNode` == "singleShadingSwitch")
					{
						$control = `attrFieldSliderGrp -attribute ($switchNode + ".input[" + $buf1[1] + "].inSingle") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label ""`;
						$command = "switchUtilitiesComposite inSingle \"" + $str + "\" " + $switchNode;
						attrFieldSliderGrp -edit -changeCommand $command $control;
						eval $command;
						$command = "switchUtilitiesConnectAll inSingle \"" + $str + "\" " + $switchNode;
						button -label "All" -command $command;
					}
					else if(`nodeType $switchNode` == "doubleShadingSwitch")
					{
						$control = `attrFieldSliderGrp -attribute ($switchNode + ".input[" + $buf1[1] + "].inComp1") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label ""`;
						$command = "switchUtilitiesComposite inComp1 \"" + $str + "\" " + $switchNode;
						attrFieldSliderGrp -edit -changeCommand $command -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 $control;
						eval $command;
						$control = `attrFieldSliderGrp -attribute ($switchNode + ".input[" + $buf1[1] + "].inComp2") -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 -label ""`;
						$command = "switchUtilitiesComposite inComp2 \"" + $str + "\" " + $switchNode;
						attrFieldSliderGrp -edit -changeCommand $command -fieldMinValue -1000 -fieldMaxValue 1000 -sliderMinValue 0 -sliderMaxValue 1 -columnWidth4 15 70 135 30 $control;
						eval $command;
						$command = "switchUtilitiesConnectAll inComp1 \"" + $str + "\" " + $switchNode + ";" + "switchUtilitiesConnectAll inComp2 \"" + $str + "\" " + $switchNode + ";";
						button -label "All" -command $command;
					}
					else if(`nodeType $switchNode` == "tripleShadingSwitch")
					{
						$control = `attrColorSliderGrp -attribute ($switchNode + ".input[" + $buf1[1] + "].inTriple") -columnWidth4 15 70 135 30 -label ""`;
						$command = "switchUtilitiesConnectAll inTriple \"" + $str + "\" " + $switchNode;
						button -label "All" -command $command;
						eval $command;
					}
					setParent..;
			}
		}
		setAttr -type "string" ($switchNode + ".group") $script;
	}
}

global proc switchUtilitiesSelectSG(string $optionMenuGrp1)
{
	string $switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		string $shadingGroups[];
		string $visited[];
		clear $visited;
		switchUtilitiesDownStreamNetwork( $switchNode, $shadingGroups, $visited );
		if (`size $shadingGroups`)
		{
			select -clear;
			for ($group in $shadingGroups)
			{
				string $surface[] = `listConnections ($group+".dagSetMembers")`;
				select -add $surface;
			}
		}
		else
			warning ($switchNode + " is not connected to a shading group.");
	}
}

global proc switchUtilitiesAddSelected(string $optionMenuGrp1, string $formLayout3, string $columnLayout1, string $columnLayout2)
{
	string $switchNode, $buf[], $buf1[], $selection[];
	int $count;

	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		switchUtilitiesRefreshScript $switchNode;

		$buf = `listAttr -multi ($switchNode + ".input")`;
		$buf1 = `listAttr -multi ($switchNode + ".input[0]")`;
		$count = size($buf)/size($buf1);

		int $nextAvailable = -1;
		string $currentSurfaces[];
		string $switchConnections[] = `listConnections -connections true -plugs true ($switchNode+".input")`;
		for ($i = 0; $i < size($switchConnections); $i += 2)
		{
			if (match("\\.inShape$", $switchConnections[$i]) != "")
				$currentSurfaces[size($currentSurfaces)] = $switchConnections[$i+1];
		}
		string $shadingGroups[];
		string $visited[];
		clear $visited;
		switchUtilitiesDownStreamNetwork( $switchNode, $shadingGroups, $visited );
		if (size($shadingGroups) == 0)
		{
			warning ($switchNode+" is not connected to a shading group.");
			return;
		}
		for ($group in $shadingGroups)
		{
			string $surface[] = `listConnections ($group+".dagSetMembers")`;
			string $surfaces[] = `listConnections -plugs true ($group+".dagSetMembers")`;
			$selection = `ls -sl`;
			for ($i=0; $i<size($surface); $i++)
			{
				if(`stringArrayCount $surface[$i] $selection`)
				{
					if (`stringArrayCount $surfaces[$i] $currentSurfaces`)
						warning ($surface[$i] + " is already connected to " + $switchNode);
					else
					{
						string $shapePlug, $shadePlug;
						while (true)
						{
							$nextAvailable += 1;
							$shapePlug = $switchNode + ".input[" + $nextAvailable + "].inShape";
							if(`nodeType $switchNode` == "singleShadingSwitch")
								$shadePlug = $switchNode + ".input[" + $nextAvailable + "].inSingle";
							else if(`nodeType $switchNode` == "doubleShadingSwitch")
								$shadePlug = $switchNode + ".input[" + $nextAvailable + "].inDouble";
							else if(`nodeType $switchNode` == "tripleShadingSwitch")
								$shadePlug = $switchNode + ".input[" + $nextAvailable + "].inTriple";
							string $shape[] = `listConnections $shapePlug`;
							string $shade[] = `listConnections $shadePlug`;
							if (size($shape) == 0 && size($shade) == 0)
								break;
						}
						connectAttr $surfaces[$i] $shapePlug;
						$currentSurfaces[size($currentSurfaces)] = $surfaces[$i];

					}
					$buf[size($buf)] = $surface[$i];
				}
			}
		}
		$buf = `stringArrayRemove $buf $selection`;
		for ($str in $buf)
			warning ($str + " is not connected to " + $switchNode);
		switchUtilitiesSelectSwitch $optionMenuGrp1 $formLayout3 $columnLayout1 $columnLayout2;
	}
}

global proc switchUtilitiesRemoveSelected(string $optionMenuGrp1, string $formLayout3, string $columnLayout1, string $columnLayout2)
{
	string $switchNode, $shapePlug, $shadePlug, $buf[], $buf1[], $selection[];
	int $row, $count;
	$selection = `ls -sl`;
	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		switchUtilitiesRefreshScript $switchNode;

		$buf = `listAttr -multi ($switchNode + ".input")`;
		$buf1 = `listAttr -multi ($switchNode + ".input[0]")`;
		$count = size($buf)/size($buf1);

		for ($row=0; $row<$count; $row++)
		{
			$shapePlug = $switchNode + ".input[" + $row + "].inShape";
			if(`nodeType $switchNode` == "singleShadingSwitch")
				$shadePlug = $switchNode + ".input[" + $row + "].inSingle";
			else if(`nodeType $switchNode` == "doubleShadingSwitch")
				$shadePlug = $switchNode + ".input[" + $row + "].inDouble";
			else if(`nodeType $switchNode` == "tripleShadingSwitch")
				$shadePlug = $switchNode + ".input[" + $row + "].inTriple";
			
			$buf = `listConnections $shapePlug`;
			if(`stringArrayCount $buf[0] $selection`)
			{
				$selection = `stringArrayRemove $buf $selection`;
				string $shapeCons[] = `listConnections -plugs true $shapePlug`;
				for ($item in $shapeCons)
					disconnectAttr $item $shapePlug;
				string $shadeCons[] = `listConnections -plugs true $shadePlug`;
				for ($item in $shadeCons)
					disconnectAttr $item $shadePlug;
			}
		}
		for ($item in $selection)
			warning ($item + " is not connected to " + $switchNode);
		switchUtilitiesSelectSwitch $optionMenuGrp1 $formLayout3 $columnLayout1 $columnLayout2;
	}
}

global proc switchUtilitiesSelectHighlighted(string $optionMenuGrp1, string $columnLayout2)
{
	string $switchNode, $buf[], $buf1[], $buf2[];
	int $i;
	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		switchUtilitiesRefreshScript $switchNode;

		$buf = `columnLayout -query -childArray $columnLayout2`;
		select -clear;
		for ($i=0; $i<size($buf); $i++)
		{
			$buf1 = `listConnections ($switchNode + ".input[" + $i + "].inShape")`;
			if(size($buf1))
			{
				$buf2 = `rowLayout -query -childArray $buf[$i]`;
				if(`checkBox -query -value $buf2[0]`)
					select -add $buf1[0];
			}
		}
	}
}

global proc switchUtilitiesSelectAll(string $optionMenuGrp1)
{
	string $switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		string $buf[] = `listConnections ($switchNode + ".input")`;
		select $buf;
	}
}

global proc switchUtilitiesGroup(string $optionMenuGrp1, string $formLayout3, string $columnLayout1, string $columnLayout2)
{
	string $str, $switchNode, $name, $buf[], $buf1[], $buf2[];
	int $i, $j;
	
	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		switchUtilitiesRefreshScript $switchNode;

		$buf = `columnLayout -query -childArray $columnLayout2`;
		for ($i=0; $i<size($buf); $i++)
		{
			$buf1 = `rowLayout -query -childArray $buf[$i]`;
			if(`size $buf1`)
			{
				if(`checkBox -query -value $buf1[0]`)
					$str = $str + "\t" + $i;
			}
		}
		if($str != "")
		{
			if(`promptDialog -title "Switch Utilities" -message "Group Name:" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"` == "OK")
			{
				switchUtilitiesConnect $switchNode $columnLayout2;
				$name = `promptDialog -q`;
				$name += "_grp";
				$str = $name + "\t" + $str;
				$name = `getAttr ($switchNode + ".group")`;
				tokenize $name "\n" $buf;
				$buf1 = `columnLayout -query -childArray $columnLayout1`;
				for ($i=0; $i<size($buf1); $i++)
				{
					$buf2 = `rowLayout -query-childArray $buf1[$i]`;
					if(!`checkBox -query -value $buf2[0]`)
						$str = $str + "\n" + $buf[$i];
				}
				setAttr -type "string" ($switchNode + ".group") $str;
				switchUtilitiesSelectSwitch $optionMenuGrp1 $formLayout3 $columnLayout1 $columnLayout2;
			}
		}
	}
}

global proc switchUtilitiesConnect(string $switchNode, string $columnLayout2)
{
	string $source[], $source1[], $buf[], $buf1[];
	int $i, $j;
	
	$buf = `columnLayout -query -childArray $columnLayout2`;
	for ($i=0; $i<size($buf); $i++)
	{
		$buf1 = `rowLayout -query -childArray $buf[$i]`;
		if(`size $buf1`)
		{
			if(`checkBox -query -value $buf1[0]`)
			{
				if(`nodeType $switchNode` == "singleShadingSwitch")
				{
					if(!size($source))
						$source = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inSingle")`;
				}
				else if(`nodeType $switchNode` == "doubleShadingSwitch")
				{
					if(!size($source))
						$source = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inComp1")`;
					if(!size($source1))
						$source1 = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inComp2")`;
				}
				else if(`nodeType $switchNode` == "tripleShadingSwitch")
				{
					if(!size($source))
						$source = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inTriple")`;
				}
			}
		}
	}
	for ($i=0; $i<size($buf); $i++)
	{
		$buf1 = `rowLayout -query -childArray $buf[$i]`;
		if(`size $buf1`)
		{
			if(`checkBox -query -value $buf1[0]`)
			{
				if(`nodeType $switchNode` == "singleShadingSwitch")
				{
					if (size($source))
					{
						$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inSingle")`;
						for ($j=0; $j<size($buf2); $j++)
							disconnectAttr $buf2[$j] ($switchNode + ".input[" + $i + "].inSingle");
						connectAttr $source[0] ($switchNode + ".input[" + $i + "].inSingle");
					}
				}
				else if(`nodeType $switchNode` == "doubleShadingSwitch")
				{
					if (size($source))
					{
						$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inComp1")`;
						for ($j=0; $j<size($buf2); $j++)
							disconnectAttr $buf2[$j] ($switchNode + ".input[" + $i + "].inComp1");
						connectAttr $source[0] ($switchNode + ".input[" + $i + "].inComp1");
					}
					if (size($source1))
					{
						$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inComp2")`;
						for ($j=0; $j<size($buf2); $j++)
							disconnectAttr $buf2[$j] ($switchNode + ".input[" + $i + "].inComp2");
						connectAttr $source1[0] ($switchNode + ".input[" + $i + "].inComp2");
					}
				}
				else if(`nodeType $switchNode` == "tripleShadingSwitch")
				{
					if (size($source))
					{
						$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $i + "].inTriple")`;
						for ($j=0; $j<size($buf2); $j++)
							disconnectAttr $buf2[$j] ($switchNode + ".input[" + $i + "].inTriple");
						connectAttr $source[0] ($switchNode + ".input[" + $i + "].inTriple");
					}
				}
			}
		}
	}
}

global proc switchUtilitiesUnGroup(string $optionMenuGrp1, string $columnLayout1, string $columnLayout2)
{
	string $switchNode, $str, $buf[], $buf1[], $buf2[];
	int $i;
	
	$switchNode = `optionMenuGrp -query -value $optionMenuGrp1`;
	if (`objExists $switchNode`)
	{
		switchUtilitiesRefreshScript $switchNode;

		$str = `getAttr ($switchNode + ".group")`;
		tokenize $str "\n" $buf;
		$str = "";
		$buf1 = `columnLayout -query -childArray $columnLayout1`;
		for ($i=0; $i<size($buf1); $i++)
		{
			$buf2 = `rowLayout -query-childArray $buf1[$i]`;
			if(`checkBox -query -value $buf2[0]`)
				deleteUI $buf1[$i];
			else
				$str = $str + "\n" + $buf[$i];
		}
		setAttr -type "string" ($switchNode + ".group") `strip $str`;

		$buf = `columnLayout -query -childArray $columnLayout2`;
		for ($i=0; $i<size($buf); $i++)
			rowLayout -edit -visible (!`gmatch $str ("*\t" + $i + "[\t\n]*")` && !`gmatch $str ("*\t" + $i)`) $buf[$i];
	}
}

global proc switchUtilitiesRefresh()
{
	deleteUI switchUtilities;
	zwSwitchUtilities;
}

global proc switchUtilitiesDownStreamNetwork( string $node, string $result[], string $visited[] )
{
	if (`objectType $node` == "shadingEngine")
	{
		if (!`stringArrayCount $node $result`)
			$result[size($result)] = $node;
	}
	else
	{
		if(!`stringArrayCount $node $visited`)
		{
			$visited[size($visited)] = $node;
			string $connections[] = `listConnections -connections true -source false -destination true $node`;
			for ($i = 0; $i < size($connections); $i += 2)
			{
				string $srcPlug = $connections[$i];
				string $dstNode = $connections[$i + 1];
				string $buffer[];
				tokenize $srcPlug "." $buffer;
				if ($buffer[size($buffer)-1] != "message")
					switchUtilitiesDownStreamNetwork($dstNode, $result, $visited);
			}
		}
	}
}

global proc switchUtilitiesCheck(int $value, string $str, string $columnLayout2)
{
	string $buf[], $buf1[];
	int $i;
	$buf = `columnLayout -query -childArray $columnLayout2`;
	for ($i=0; $i<size($buf); $i++)
	{
		if(`gmatch $str ("*\t" + $i + "[\t\n]*")` || `gmatch $str ("*\t" + $i)`)
		{
			$buf1 = `rowLayout -query -childArray $buf[$i]`;
			checkBox -edit -value $value $buf1[0];
		}
	}
}

global proc switchUtilitiesComposite(string $type, string $str, string $switchNode)
{

	string $str, $buf[], $buf1[], $buf2[];
	int $i;
	float $value;

	tokenize $str "\t" $buf;

	$value = `getAttr ($switchNode + ".input[" + $buf[1] + "]." + $type)`;
	for($i=1; $i<size($buf); $i++)
	{
		$str = $switchNode + ".input[" + $buf[$i] + "]." + $type;
		$buf1 = `listConnections ($switchNode + ".input[" + $buf[$i] + "].inShape")`;
		if(size($buf1))
		{
			$buf2 = `listConnections -plugs true $str`;
			if (!size($buf2))
				setAttr $str $value;
		}
	}
}

global proc switchUtilitiesConnectAll(string $type, string $str, string $switchNode)
{
	string $str, $buf[], $buf1[], $buf2[], $source[];
	int $i, $j;
	float $value[];

	tokenize $str "\t" $buf;
	$source = `listConnections -plugs true ($switchNode + ".input[" + $buf[1] + "]." + $type)`;
	for($i=1; $i<size($buf); $i++)
	{
		$buf1 = `listConnections ($switchNode + ".input[" + $buf[$i] + "].inShape")`;
		if(size($buf1))
		{
			$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $buf[$i] + "]." + $type)`;
			for ($j=0; $j<size($buf2); $j++)
				disconnectAttr $buf2[$j] ($switchNode + ".input[" + $buf[$i] + "]." + $type);
			if (size($source))
				connectAttr $source[0] ($switchNode + ".input[" + $buf[$i] + "]." + $type);
		}
	}

	if ($type == "inTriple")
	{
		$value = `getAttr ($switchNode + ".input[" + $buf[1] + "]." + $type)`;
		for($i=1; $i<size($buf); $i++)
		{
			$buf1 = `listConnections ($switchNode + ".input[" + $buf[$i] + "].inShape")`;
			if(size($buf1))
			{
				$buf2 = `listConnections -plugs true ($switchNode + ".input[" + $buf[$i] + "]." + $type)`;
				if (!size($buf2))
					setAttr ($switchNode + ".input[" + $buf[$i] + "]." + $type) $value[0] $value[1] $value[2];
			}
		}
	}
}

global proc switchUtilitiesSelectGroup(string $switchNode, string $str)
{
	string $buf[], $buf1[];
	int $i;
	select -clear;
	tokenize $str "\t" $buf;
	for ($i=1; $i<size($buf); $i++)
	{
		$buf1 = `listConnections ($switchNode + ".input[" + $buf[$i] + "].inShape")`;
		if (`objExists $buf1[0]`)
			select -add $buf1[0];
	}
}

global proc switchUtilitiesRefreshScript(string $switchNode)
{
	string $script, $buf[], $buf1[], $buf2[];
	int $i, $j;
	
	$script = `getAttr ($switchNode + ".group")`;
	tokenize $script "\n" $buf;
	$script = "";
	for ($i=0; $i<size($buf); $i++)
	{
		if(`tokenize $buf[$i] "\t" $buf1` > 1)
		{
			$script += "\n" + $buf1[0];
			for ($j=1; $j<size($buf1); $j++)
			{
				$buf2 = `listConnections ($switchNode + ".input[" + $buf1[$j] + "].inShape")`;
				if(size($buf2))
					$script += "\t" + $buf1[$j];
			}
		}
	}
	setAttr -type "string" ($switchNode + ".group") $script;

}