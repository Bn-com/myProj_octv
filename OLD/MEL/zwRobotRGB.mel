global proc zwRobotRGBProc(string $objs[], string $namespace, string $shader)
{
	select -clear;
	for ($shape in $objs)
	{
		string $str = `match "[^:]+$" $shape`;
		string $deformed = `substitute "[.]" $str "Deformed."`;
		if ($deformed == $str)
		{
			$deformed += "Deformed";
		}
		string $path[] = `ls -long ($namespace + ":" + $shape)`;
		$deformed = `substring $path[0] 1 (size($path[0]) - size($namespace + ":" + $shape))` + $deformed;
		if (`objExists $deformed`)
		{
			select -add $deformed;
		}
		else
		{
			select -add ($namespace + ":" + $shape);
		}
	}
	hyperShade -assign $shader;
}

global proc zwRobotRGB()
{
	string $rs[] = {"PelvisShape", "Body_sphereShape", "Thigh_RShape", "Thigh_LShape", "BodyShape", "Shoulder_01_LShape", "Shoulder_01_RShape", "Head_sphere_RShape", "Arm_RShape", "Head_sphere_LShape", "Foot_finger_R_0Shape1", "_cut_:polySurfaceShape216", "Foot_RShape", "Foot_finger_R_0Shape2", "_cut_:polySurfaceShape217", "Foot_LShape", "Foot_finger_L_0Shape1", "_cut_:polySurfaceShape219", "Foot_finger_L_0Shape2", "_cut_:polySurfaceShape218", "NeckShape", "Head_01.f[0:1]", "Head_01.f[4:5]", "Head_01.f[7]", "Head_01.f[9:11]", "Head_01.f[13:17]", "Head_01.f[20:21]", "Head_01.f[23]", "Head_01.f[25:26]", "Head_01.f[28:199]", "Head_01.f[222:741]", "Head_0Shape2", "Arm_LShape", "Hand_index03_RShape", "Hand_index02_RShape", "Hand_inch02_RShape", "Hand_index01_RShape", "Hand_inch01_RShape", "Hand_medium01_RShape", "Hand_medium02_RShape", "Hand_medium03_RShape", "Hand_RShape", "Hand_01_RShape", "Hand_medium03_LShape", "Hand_medium02_LShape", "Hand_medium01_LShape", "Hand_index02_LShape", "Hand_index03_LShape", "Hand_index01_LShape", "Hand_inch02_LShape", "Hand_LShape", "Hand_inch01_LShape", "Hand_01_LShape", "MSH_sword.f[0:1737]", "MSH_sword.f[1746:1753]", "MSH_sword.f[1910:1913]", "MSH_sword.f[1930:1933]", "MSH_sword.f[1951]", "MSH_sword.f[1953]", "MSH_sword.f[1955]", "MSH_sword.f[1957]", "MSH_sword.f[1959:1960]", "MSH_sword.f[1963:1964]", "MSH_sword.f[1967]", "MSH_sword.f[1969]", "MSH_sword.f[1971]", "MSH_sword.f[1973]", "MSH_sword.f[1975]", "MSH_sword.f[1977]", "MSH_sword.f[1979]", "MSH_sword.f[1981]", "MSH_sword.f[1986:1997]", "polySurfaceShape242", "polySurfaceShape243", "polySurfaceShape180", "polySurfaceShape177", "polySurfaceShape173", "polySurfaceShape170", "polySurfaceShape172", "polySurfaceShape167", "polySurfaceShape164", "polySurfaceShape166", "polySurfaceShape149", "polySurfaceShape155", "polySurfaceShape152", "polySurfaceShape146", "polySurfaceShape154", "polySurfaceShape148", "polySurfaceShape162", "polySurfaceShape159", "polySurfaceShape223", "polySurfaceShape241", "polySurfaceShape244", "polySurfaceShape245", "polySurfaceShape246", "polySurfaceShape247"};
	string $gs[] = {"Head_01.f[2:3]", "Head_01.f[6]", "Head_01.f[8]", "Head_01.f[12]", "Head_01.f[18:19]", "Head_01.f[22]", "Head_01.f[24]", "Head_01.f[27]", "Head_01.f[200:221]"};
	string $bs[] = {"MSH_sword.f[1738:1745]", "MSH_sword.f[1754:1909]", "MSH_sword.f[1914:1929]", "MSH_sword.f[1934:1950]", "MSH_sword.f[1952]", "MSH_sword.f[1954]", "MSH_sword.f[1956]", "MSH_sword.f[1958]", "MSH_sword.f[1961:1962]", "MSH_sword.f[1965:1966]", "MSH_sword.f[1968]", "MSH_sword.f[1970]", "MSH_sword.f[1972]", "MSH_sword.f[1974]", "MSH_sword.f[1976]", "MSH_sword.f[1978]", "MSH_sword.f[1980]", "MSH_sword.f[1982:1985]", "MSH_sword.f[1998:2041]"};

	if (!`objExists "robot_rgb"`)
	{
		error "robot_rgb ‰÷»æ≤„≤ª¥Ê‘⁄£°";
	}

	string $ex[] = `ls -type surfaceShader "Red_surfaceShader"`;
	if (size($ex) == 0)
	{		
		string $sdrred = `shadingNode -asShader -name Red_surfaceShader surfaceShader`;
		//sets -e -forceElement ($sdrred+"SG");
		setAttr ($sdrred+".outColor") -type float3 1.0 0.0 0.0;
		setAttr ($sdrred+".outMatteOpacity") -type float3 0.0 0.0 0.0;
	}
	//greenshade
	string $ex[] = `ls -type surfaceShader "Green_surfaceShader"`;
	if (size($ex) == 0)
	{		
		string $sdrgreen = `shadingNode -asShader -name Green_surfaceShader surfaceShader`;
		setAttr ($sdrgreen+".outColor") -type float3 0.0 1.0 0.0;
		setAttr ($sdrgreen+".outMatteOpacity") -type float3 0.0 0.0 0.0;
	}
	//create blueshade
	string $ex[] = `ls -type surfaceShader "Blue_surfaceShader"`;
	if (size($ex) == 0)
	{		
		string $sdrblur	= `shadingNode -asShader -name Blue_surfaceShader surfaceShader`;
		setAttr ($sdrblur+".outColor") -type float3 0.0 0.0 1.0;
		setAttr ($sdrblur+".outMatteOpacity") -type float3 0.0 0.0 0.0;
	}

	string $currentRenderLayer = `editRenderLayerGlobals -query -currentRenderLayer`;
	if ($currentRenderLayer != "robot_rgb")
	{
		editRenderLayerGlobals -currentRenderLayer "robot_rgb";
	}

	string $namespaces[];
	clear $namespaces;
	string $buf[] = `editRenderLayerMembers -query "robot_rgb"`;
	$buf = `ls -dag -type "mesh" $buf`;
	for ($obj in $buf)
	{
		$obj = `match "[^|]+$" $obj`;
		string $namespace = `substitute ":[^:]+$" $obj ""`;
		$namespace = `substitute ":_cut_$" $namespace ""`;
		if ($namespace == $obj)
		{
			continue;
		}

		int $find = false;
		for ($i=0; $i<size($namespaces); $i++)
		{
			if ($namespaces[$i] == $namespace)
			{
				$find = true;
				break;
			}
		}
		if (!$find)
		{
			$namespaces[size($namespaces)] = $namespace;

			zwRobotRGBProc $rs $namespace "Red_surfaceShader";
			zwRobotRGBProc $gs $namespace "Green_surfaceShader";
			zwRobotRGBProc $bs $namespace "Blue_surfaceShader";

			select -clear;
		}
	}

	if ($currentRenderLayer != "robot_rgb")
	{
		editRenderLayerGlobals -currentRenderLayer $currentRenderLayer;
	}
}