// Preset version 4.0
// This file generated by Maya using the nodePreset command.
// Edit this file at your own risk.
//
proc cachingSet()
{
	setAttr ".caching" no;
}

proc isHistoricallyInterestingSet()
{
	setAttr ".isHistoricallyInteresting" 2;
}

proc nodeStateSet()
{
	setAttr ".nodeState" 0;
}

proc binMembershipSet()
{
	setAttr ".binMembership" -type "string" "";
}

proc contrastRSet()
{
	setAttr ".contrastR" 0.10000000149011612;
}

proc contrastGSet()
{
	setAttr ".contrastG" 0.10000000149011612;
}

proc contrastBSet()
{
	setAttr ".contrastB" 0.10000000149011612;
}

proc contrastASet()
{
	setAttr ".contrastA" 0.10000000149011612;
}

proc sampleLockSet()
{
	setAttr ".sampleLock" yes;
}

proc minSamplesSet()
{
	setAttr ".minSamples" -2;
}

proc maxSamplesSet()
{
	setAttr ".maxSamples" 0;
}

proc minObjectSamplesSet()
{
	setAttr ".minObjectSamples" -128;
}

proc maxObjectSamplesSet()
{
	setAttr ".maxObjectSamples" 127;
}

proc volumeSamplesSet()
{
	setAttr ".volumeSamples" 1;
}

proc filterSet()
{
	setAttr ".filter" 0;
}

proc filterWidthSet()
{
	setAttr ".filterWidth" 1;
}

proc filterHeightSet()
{
	setAttr ".filterHeight" 1;
}

proc jitterSet()
{
	setAttr ".jitter" no;
}

proc scanlineSet()
{
	setAttr ".scanline" 1;
}

proc rapidSamplesCollectSet()
{
	setAttr ".rapidSamplesCollect" 0;
}

proc rapidSamplesMotionSet()
{
	setAttr ".rapidSamplesMotion" 1;
}

proc rapidSamplesShadingSet()
{
	setAttr ".rapidSamplesShading" 1;
}

proc rayTracingSet()
{
	setAttr ".rayTracing" yes;
}

proc maxReflectionRaysSet()
{
	setAttr ".maxReflectionRays" 6;
}

proc maxRefractionRaysSet()
{
	setAttr ".maxRefractionRays" 6;
}

proc maxRayDepthSet()
{
	setAttr ".maxRayDepth" 2;
}

proc maxShadowRayDepthSet()
{
	setAttr ".maxShadowRayDepth" 2;
}

proc shadowMethodSet()
{
	setAttr ".shadowMethod" 3;
}

proc shadowMapsSet()
{
	setAttr ".shadowMaps" 1;
}

proc rebuildShadowMapsSet()
{
	setAttr ".rebuildShadowMaps" 0;
}

proc motionBlurShadowMapsSet()
{
	setAttr ".motionBlurShadowMaps" yes;
}

proc traceShadowMapsSet()
{
	setAttr ".traceShadowMaps" no;
}

proc windowShadowMapsSet()
{
	setAttr ".windowShadowMaps" no;
}

proc biasShadowMapsSet()
{
	setAttr ".biasShadowMaps" 0;
}

proc motionBlurSet()
{
	setAttr ".motionBlur" 0;
}

proc motionBlurBySet()
{
	setAttr ".motionBlurBy" 1;
}

proc motionStepsSet()
{
	setAttr ".motionSteps" 1;
}

proc shutterSet()
{
	setAttr ".shutter" 1;
}

proc shutterDelaySet()
{
	setAttr ".shutterDelay" 0;
}

proc timeContrastRSet()
{
	setAttr ".timeContrastR" 0.20000000298023224;
}

proc timeContrastGSet()
{
	setAttr ".timeContrastG" 0.20000000298023224;
}

proc timeContrastBSet()
{
	setAttr ".timeContrastB" 0.20000000298023224;
}

proc timeContrastASet()
{
	setAttr ".timeContrastA" 0.20000000298023224;
}

proc causticsSet()
{
	setAttr ".caustics" yes;
}

proc causticsGeneratingSet()
{
	setAttr ".causticsGenerating" 0;
}

proc causticsReceivingSet()
{
	setAttr ".causticsReceiving" 0;
}

proc causticFilterTypeSet()
{
	setAttr ".causticFilterType" 0;
}

proc causticFilterKernelSet()
{
	setAttr ".causticFilterKernel" 1.1000000238418579;
}

proc causticAccuracySet()
{
	setAttr ".causticAccuracy" 300;
}

proc causticRadiusSet()
{
	setAttr ".causticRadius" 1;
}

proc causticScaleASet()
{
	setAttr ".causticScaleA" 1;
}

proc causticScaleSet()
{
	setAttr ".causticScale" -type "float3" 1 1 1 ;
}

proc photonVolumeAccuracySet()
{
	setAttr ".photonVolumeAccuracy" 64;
}

proc photonVolumeRadiusSet()
{
	setAttr ".photonVolumeRadius" 0;
}

proc photonAutoVolumeSet()
{
	setAttr ".photonAutoVolume" no;
}

proc maxReflectionPhotonsSet()
{
	setAttr ".maxReflectionPhotons" 5;
}

proc maxRefractionPhotonsSet()
{
	setAttr ".maxRefractionPhotons" 5;
}

proc maxPhotonDepthSet()
{
	setAttr ".maxPhotonDepth" 5;
}

proc photonMapFilenameSet()
{
	setAttr ".photonMapFilename" -type "string" "";
}

proc photonMapVisualizerSet()
{
	setAttr ".photonMapVisualizer" no;
}

proc photonMapRebuildSet()
{
	setAttr ".photonMapRebuild" yes;
}

proc globalIllumSet()
{
	setAttr ".globalIllum" no;
}

proc globalIllumGeneratingSet()
{
	setAttr ".globalIllumGenerating" 0;
}

proc globalIllumReceivingSet()
{
	setAttr ".globalIllumReceiving" 0;
}

proc globalIllumAccuracySet()
{
	setAttr ".globalIllumAccuracy" 300;
}

proc globalIllumRadiusSet()
{
	setAttr ".globalIllumRadius" 1;
}

proc globalIllumScaleASet()
{
	setAttr ".globalIllumScaleA" 1;
}

proc globalIllumScaleSet()
{
	setAttr ".globalIllumScale" -type "float3" 1 1 1 ;
}

proc finalGatherSet()
{
	setAttr ".finalGather" no;
}

proc finalGatherFastSet()
{
	setAttr ".finalGatherFast" no;
}

proc finalGatherRaysSet()
{
	setAttr ".finalGatherRays" 100;
}

proc finalGatherMinRadiusSet()
{
	setAttr ".finalGatherMinRadius" 0;
}

proc finalGatherMaxRadiusSet()
{
	setAttr ".finalGatherMaxRadius" 0;
}

proc finalGatherViewSet()
{
	setAttr ".finalGatherView" no;
}

proc finalGatherScaleASet()
{
	setAttr ".finalGatherScaleA" 1;
}

proc finalGatherScaleSet()
{
	setAttr ".finalGatherScale" -type "float3" 1 1 1 ;
}

proc finalGatherFilenameSet()
{
	setAttr ".finalGatherFilename" -type "string" "";
}

proc finalGatherMergeFilesSet()
{
}

proc finalGatherMapVisualizerSet()
{
	setAttr ".finalGatherMapVisualizer" no;
}

proc finalGatherRebuildSet()
{
	setAttr ".finalGatherRebuild" 1;
}

proc finalGatherFilterSet()
{
	setAttr ".finalGatherFilter" 0;
}

proc finalGatherFalloffStartSet()
{
	setAttr ".finalGatherFalloffStart" 0;
}

proc finalGatherFalloffStopSet()
{
	setAttr ".finalGatherFalloffStop" 0;
}

proc finalGatherTraceDiffuseSet()
{
	setAttr ".finalGatherTraceDiffuse" 0;
}

proc finalGatherTraceReflectionSet()
{
	setAttr ".finalGatherTraceReflection" 1;
}

proc finalGatherTraceRefractionSet()
{
	setAttr ".finalGatherTraceRefraction" 1;
}

proc finalGatherTraceDepthSet()
{
	setAttr ".finalGatherTraceDepth" 2;
}

proc diagnoseGridSet()
{
	setAttr ".diagnoseGrid" 0;
}

proc diagnoseGridSizeSet()
{
	setAttr ".diagnoseGridSize" 1;
}

proc diagnoseSamplesSet()
{
	setAttr ".diagnoseSamples" no;
}

proc diagnosePhotonSet()
{
	setAttr ".diagnosePhoton" 0;
}

proc diagnosePhotonDensitySet()
{
	setAttr ".diagnosePhotonDensity" 0;
}

proc diagnoseBspSet()
{
	setAttr ".diagnoseBsp" 0;
}

proc diagnoseFinalgSet()
{
	setAttr ".diagnoseFinalg" no;
}

proc lensShadersSet()
{
	setAttr ".lensShaders" yes;
}

proc volumeShadersSet()
{
	setAttr ".volumeShaders" yes;
}

proc geometryShadersSet()
{
	setAttr ".geometryShaders" yes;
}

proc outputShadersSet()
{
	setAttr ".outputShaders" yes;
}

proc mergeSurfacesSet()
{
	setAttr ".mergeSurfaces" yes;
}

proc autoVolumeSet()
{
	setAttr ".autoVolume" yes;
}

proc renderHairSet()
{
	setAttr ".renderHair" yes;
}

proc renderPassesSet()
{
	setAttr ".renderPasses" yes;
}

proc displacementShadersSet()
{
	setAttr ".displacementShaders" yes;
}

proc displacePresampleSet()
{
	setAttr ".displacePresample" yes;
}

proc maxDisplaceSet()
{
	setAttr ".maxDisplace" 0;
}

proc facesSet()
{
	setAttr ".faces" 2;
}

proc hardwareSet()
{
	setAttr ".hardware" 0;
}

proc hardwareCgSet()
{
	setAttr ".hardwareCg" yes;
}

proc hardwareGLSet()
{
	setAttr ".hardwareGL" yes;
}

proc hardwareFastSet()
{
	setAttr ".hardwareFast" yes;
}

proc hardwareForceSet()
{
	setAttr ".hardwareForce" no;
}

proc userFrameBuffer0Set()
{
	setAttr ".userFrameBuffer0Mode" 0;
	setAttr ".userFrameBuffer0Type" 2;
}

proc userFrameBuffer1Set()
{
	setAttr ".userFrameBuffer1Mode" 0;
	setAttr ".userFrameBuffer1Type" 2;
}

proc userFrameBuffer2Set()
{
	setAttr ".userFrameBuffer2Mode" 0;
	setAttr ".userFrameBuffer2Type" 2;
}

proc userFrameBuffer3Set()
{
	setAttr ".userFrameBuffer3Mode" 0;
	setAttr ".userFrameBuffer3Type" 2;
}

proc userFrameBuffer4Set()
{
	setAttr ".userFrameBuffer4Mode" 0;
	setAttr ".userFrameBuffer4Type" 2;
}

proc userFrameBuffer5Set()
{
	setAttr ".userFrameBuffer5Mode" 0;
	setAttr ".userFrameBuffer5Type" 2;
}

proc userFrameBuffer6Set()
{
	setAttr ".userFrameBuffer6Mode" 0;
	setAttr ".userFrameBuffer6Type" 2;
}

proc userFrameBuffer7Set()
{
	setAttr ".userFrameBuffer7Mode" 0;
	setAttr ".userFrameBuffer7Type" 2;
}

proc contourBackgroundSet()
{
	setAttr ".contourBackground" no;
}

proc enableContourColorSet()
{
	setAttr ".enableContourColor" yes;
}

proc contourColorSet()
{
	setAttr ".contourColor" -type "float3" 0 0 0 ;
}

proc contourPriIdxSet()
{
	setAttr ".contourPriIdx" no;
}

proc contourInstanceSet()
{
	setAttr ".contourInstance" no;
}

proc contourMaterialSet()
{
	setAttr ".contourMaterial" no;
}

proc contourLabelSet()
{
	setAttr ".contourLabel" no;
}

proc enableContourDistSet()
{
	setAttr ".enableContourDist" yes;
}

proc contourDistSet()
{
	setAttr ".contourDist" 0;
}

proc enableContourDepthSet()
{
	setAttr ".enableContourDepth" yes;
}

proc contourDepthSet()
{
	setAttr ".contourDepth" 0;
}

proc enableContourNormalSet()
{
	setAttr ".enableContourNormal" yes;
}

proc contourNormalSet()
{
	setAttr ".contourNormal" 0;
}

proc contourNormalGeomSet()
{
	setAttr ".contourNormalGeom" no;
}

proc contourInvNormalSet()
{
	setAttr ".contourInvNormal" no;
}

proc enableContourTexUVSet()
{
	setAttr ".enableContourTexUV" yes;
}

proc contourTexSet()
{
	setAttr ".contourTexU" 0;
	setAttr ".contourTexV" 0;
}

// The following code will be executed by sourcing this file
//
catch(cachingSet());
catch(isHistoricallyInterestingSet());
catch(nodeStateSet());
catch(binMembershipSet());
catch(contrastRSet());
catch(contrastGSet());
catch(contrastBSet());
catch(contrastASet());
catch(sampleLockSet());
catch(minSamplesSet());
catch(maxSamplesSet());
catch(minObjectSamplesSet());
catch(maxObjectSamplesSet());
catch(volumeSamplesSet());
catch(filterSet());
catch(filterWidthSet());
catch(filterHeightSet());
catch(jitterSet());
catch(scanlineSet());
catch(rapidSamplesCollectSet());
catch(rapidSamplesMotionSet());
catch(rapidSamplesShadingSet());
catch(rayTracingSet());
catch(maxReflectionRaysSet());
catch(maxRefractionRaysSet());
catch(maxRayDepthSet());
catch(maxShadowRayDepthSet());
catch(shadowMethodSet());
catch(shadowMapsSet());
catch(rebuildShadowMapsSet());
catch(motionBlurShadowMapsSet());
catch(traceShadowMapsSet());
catch(windowShadowMapsSet());
catch(biasShadowMapsSet());
catch(motionBlurSet());
catch(motionBlurBySet());
catch(motionStepsSet());
catch(shutterSet());
catch(shutterDelaySet());
catch(timeContrastRSet());
catch(timeContrastGSet());
catch(timeContrastBSet());
catch(timeContrastASet());
catch(causticsSet());
catch(causticsGeneratingSet());
catch(causticsReceivingSet());
catch(causticFilterTypeSet());
catch(causticFilterKernelSet());
catch(causticAccuracySet());
catch(causticRadiusSet());
catch(causticScaleASet());
catch(causticScaleSet());
catch(photonVolumeAccuracySet());
catch(photonVolumeRadiusSet());
catch(photonAutoVolumeSet());
catch(maxReflectionPhotonsSet());
catch(maxRefractionPhotonsSet());
catch(maxPhotonDepthSet());
catch(photonMapFilenameSet());
catch(photonMapVisualizerSet());
catch(photonMapRebuildSet());
catch(globalIllumSet());
catch(globalIllumGeneratingSet());
catch(globalIllumReceivingSet());
catch(globalIllumAccuracySet());
catch(globalIllumRadiusSet());
catch(globalIllumScaleASet());
catch(globalIllumScaleSet());
catch(finalGatherSet());
catch(finalGatherFastSet());
catch(finalGatherRaysSet());
catch(finalGatherMinRadiusSet());
catch(finalGatherMaxRadiusSet());
catch(finalGatherViewSet());
catch(finalGatherScaleASet());
catch(finalGatherScaleSet());
catch(finalGatherFilenameSet());
catch(finalGatherMergeFilesSet());
catch(finalGatherMapVisualizerSet());
catch(finalGatherRebuildSet());
catch(finalGatherFilterSet());
catch(finalGatherFalloffStartSet());
catch(finalGatherFalloffStopSet());
catch(finalGatherTraceDiffuseSet());
catch(finalGatherTraceReflectionSet());
catch(finalGatherTraceRefractionSet());
catch(finalGatherTraceDepthSet());
catch(diagnoseGridSet());
catch(diagnoseGridSizeSet());
catch(diagnoseSamplesSet());
catch(diagnosePhotonSet());
catch(diagnosePhotonDensitySet());
catch(diagnoseBspSet());
catch(diagnoseFinalgSet());
catch(lensShadersSet());
catch(volumeShadersSet());
catch(geometryShadersSet());
catch(outputShadersSet());
catch(mergeSurfacesSet());
catch(autoVolumeSet());
catch(renderHairSet());
catch(renderPassesSet());
catch(displacementShadersSet());
catch(displacePresampleSet());
catch(maxDisplaceSet());
catch(facesSet());
catch(hardwareSet());
catch(hardwareCgSet());
catch(hardwareGLSet());
catch(hardwareFastSet());
catch(hardwareForceSet());
catch(userFrameBuffer0Set());
catch(userFrameBuffer1Set());
catch(userFrameBuffer2Set());
catch(userFrameBuffer3Set());
catch(userFrameBuffer4Set());
catch(userFrameBuffer5Set());
catch(userFrameBuffer6Set());
catch(userFrameBuffer7Set());
catch(contourBackgroundSet());
catch(enableContourColorSet());
catch(contourColorSet());
catch(contourPriIdxSet());
catch(contourInstanceSet());
catch(contourMaterialSet());
catch(contourLabelSet());
catch(enableContourDistSet());
catch(contourDistSet());
catch(enableContourDepthSet());
catch(contourDepthSet());
catch(enableContourNormalSet());
catch(contourNormalSet());
catch(contourNormalGeomSet());
catch(contourInvNormalSet());
catch(enableContourTexUVSet());
catch(contourTexSet());
