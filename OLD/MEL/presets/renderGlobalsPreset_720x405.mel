// Preset version 4.0
// This file generated by Maya using the nodePreset command.
// Edit this file at your own risk.
//
proc cachingSet()
{
	setAttr ".caching" no;
}

proc isHistoricallyInterestingSet()
{
	setAttr ".isHistoricallyInteresting" 2;
}

proc nodeStateSet()
{
	setAttr ".nodeState" 0;
}

proc renderAllSet()
{
	setAttr ".renderAll" yes;
}

proc ignoreFilmGateSet()
{
	setAttr ".ignoreFilmGate" yes;
}

proc clipFinalShadedColorSet()
{
	setAttr ".clipFinalShadedColor" yes;
}

proc enableDepthMapsSet()
{
	setAttr ".enableDepthMaps" yes;
}

proc enableDefaultLightSet()
{
	setAttr ".enableDefaultLight" yes;
}

proc enableStrokeRenderSet()
{
	setAttr ".enableStrokeRender" yes;
}

proc onlyRenderStrokesSet()
{
	setAttr ".onlyRenderStrokes" no;
}

proc strokesDepthFileSet()
{
	setAttr ".strokesDepthFile" -type "string" "";
}

proc imageFormatSet()
{
	setAttr ".imageFormat" 7;
}

proc pluginFormatSet()
{
	setAttr ".pluginFormat" -type "string" "";
}

proc gammaCorrectionSet()
{
	setAttr ".gammaCorrection" 1;
}

proc topRegionSet()
{
	setAttr ".topRegion" 352;
}

proc leftRegionSet()
{
	setAttr ".leftRegion" 279;
}

proc bottomRegionSet()
{
	setAttr ".bottomRegion" 205;
}

proc rightRegionSet()
{
	setAttr ".rightRegion" 401;
}

proc useRenderRegionSet()
{
	setAttr ".useRenderRegion" no;
}

proc animationSet()
{
	setAttr ".animation" yes;
}

proc animationRangeSet()
{
	setAttr ".animationRange" 1;
}

proc startFrameSet()
{
	setAttr ".startFrame" 31;
}

proc endFrameSet()
{
	setAttr ".endFrame" 100;
}

proc byFrameSet()
{
	setAttr ".byFrame" 1;
}

proc byFrameStepSet()
{
	setAttr ".byFrameStep" 1;
}

proc modifyExtensionSet()
{
	setAttr ".modifyExtension" no;
}

proc startExtensionSet()
{
	setAttr ".startExtension" 1;
}

proc byExtensionSet()
{
	setAttr ".byExtension" 1;
}

proc extensionPaddingSet()
{
	setAttr ".extensionPadding" 4;
}

proc fieldExtControlSet()
{
	setAttr ".fieldExtControl" 0;
}

proc stereoExtControlSet()
{
	setAttr ".stereoExtControl" 0;
}

proc outFormatControlSet()
{
	setAttr ".outFormatControl" 0;
}

proc oddFieldExtSet()
{
	setAttr ".oddFieldExt" -type "string" "";
}

proc evenFieldExtSet()
{
	setAttr ".evenFieldExt" -type "string" "";
}

proc leftStereoExtSet()
{
	setAttr ".leftStereoExt" -type "string" "";
}

proc rightStereoExtSet()
{
	setAttr ".rightStereoExt" -type "string" "";
}

proc outFormatExtSet()
{
	setAttr ".outFormatExt" -type "string" "";
}

proc useMayaFileNameSet()
{
	setAttr ".useMayaFileName" yes;
}

proc useFrameExtSet()
{
	setAttr ".useFrameExt" no;
}

proc putFrameBeforeExtSet()
{
	setAttr ".putFrameBeforeExt" yes;
}

proc periodInExtSet()
{
	setAttr ".periodInExt" yes;
}

proc imageFilePrefixSet()
{
	setAttr ".imageFilePrefix" -type "string" "";
}

proc compositeSet()
{
	setAttr ".composite" no;
}

proc compositeThresholdSet()
{
	setAttr ".compositeThreshold" 0;
}

proc shadowsObeyLightLinkingSet()
{
	setAttr ".shadowsObeyLightLinking" yes;
}

proc recursionDepthSet()
{
	setAttr ".recursionDepth" 2;
}

proc leafPrimitivesSet()
{
	setAttr ".leafPrimitives" 200;
}

proc subdivisionPowerSet()
{
	setAttr ".subdivisionPower" 0.25;
}

proc subdivisionHashSizeSet()
{
	setAttr ".subdivisionHashSize" 5;
}

proc logRenderPerformanceSet()
{
	setAttr ".logRenderPerformance" no;
}

proc geometryVectorSet()
{
	setAttr ".geometryVector" 20;
}

proc shadingVectorSet()
{
	setAttr ".shadingVector" 60;
}

proc maximumMemorySet()
{
	setAttr ".maximumMemory" 48;
}

proc numCpusToUseSet()
{
	setAttr ".numCpusToUse" 0;
}

proc shadowPassSet()
{
	setAttr ".shadowPass" no;
}

proc iprShadowPassSet()
{
	setAttr ".iprShadowPass" no;
}

proc useFileCacheSet()
{
	setAttr ".useFileCache" yes;
}

proc optimizeInstancesSet()
{
	setAttr ".optimizeInstances" yes;
}

proc reuseTessellationsSet()
{
	setAttr ".reuseTessellations" yes;
}

proc motionBlurSet()
{
	setAttr ".motionBlur" no;
}

proc motionBlurByFrameSet()
{
	setAttr ".motionBlurByFrame" 1;
}

proc applyFogInPostSet()
{
	setAttr ".applyFogInPost" no;
}

proc postFogBlurSet()
{
	setAttr ".postFogBlur" 1;
}

proc preRenderMelSet()
{
	setAttr ".preRenderMel" -type "string" "";
}

proc postRenderMelSet()
{
	setAttr ".postRenderMel" -type "string" "";
}

proc preFurRenderMelSet()
{
	setAttr ".preFurRenderMel" -type "string" "";
}

proc postFurRenderMelSet()
{
	setAttr ".postFurRenderMel" -type "string" "";
}

proc createIprFileSet()
{
	setAttr ".createIprFile" no;
}

proc blurLengthSet()
{
	setAttr ".blurLength" 1;
}

proc blurSharpnessSet()
{
	setAttr ".blurSharpness" 1;
}

proc smoothValueSet()
{
	setAttr ".smoothValue" 2;
}

proc useBlur2DMemoryCapSet()
{
	setAttr ".useBlur2DMemoryCap" yes;
}

proc blur2DMemoryCapSet()
{
	setAttr ".blur2DMemoryCap" 200;
}

proc motionBlurTypeSet()
{
	setAttr ".motionBlurType" 1;
}

proc useDisplacementBoundingBoxSet()
{
	setAttr ".useDisplacementBoundingBox" yes;
}

proc smoothColorSet()
{
	setAttr ".smoothColor" no;
}

proc keepMotionVectorSet()
{
	setAttr ".keepMotionVector" no;
}

proc iprRenderShadingSet()
{
	setAttr ".iprRenderShading" yes;
}

proc iprRenderShadowMapsSet()
{
	setAttr ".iprRenderShadowMaps" yes;
}

proc iprRenderMotionBlurSet()
{
	setAttr ".iprRenderMotionBlur" yes;
}

proc renderLayerEnableSet()
{
	setAttr ".renderLayerEnable" no;
}

proc renderLayerPassEnableSet()
{
	setAttr ".renderLayerPassEnable" no;
}

proc renderGlobalPassEnableSet()
{
	setAttr ".renderGlobalPassEnable" no;
}

proc renderLayerSubdirsSet()
{
	setAttr ".renderLayerSubdirs" no;
}

proc forceTileSizeSet()
{
	setAttr ".forceTileSize" no;
}

proc tileWidthSet()
{
	setAttr ".tileWidth" 64;
}

proc tileHeightSet()
{
	setAttr ".tileHeight" 64;
}

// The following code will be executed by sourcing this file
//
catch(cachingSet());
catch(isHistoricallyInterestingSet());
catch(nodeStateSet());
catch(renderAllSet());
catch(ignoreFilmGateSet());
catch(clipFinalShadedColorSet());
catch(enableDepthMapsSet());
catch(enableDefaultLightSet());
catch(enableStrokeRenderSet());
catch(onlyRenderStrokesSet());
catch(strokesDepthFileSet());
catch(imageFormatSet());
catch(pluginFormatSet());
catch(gammaCorrectionSet());
catch(topRegionSet());
catch(leftRegionSet());
catch(bottomRegionSet());
catch(rightRegionSet());
catch(useRenderRegionSet());
catch(animationSet());
catch(animationRangeSet());
catch(startFrameSet());
catch(endFrameSet());
catch(byFrameSet());
catch(byFrameStepSet());
catch(modifyExtensionSet());
catch(startExtensionSet());
catch(byExtensionSet());
catch(extensionPaddingSet());
catch(fieldExtControlSet());
catch(stereoExtControlSet());
catch(outFormatControlSet());
catch(oddFieldExtSet());
catch(evenFieldExtSet());
catch(leftStereoExtSet());
catch(rightStereoExtSet());
catch(outFormatExtSet());
catch(useMayaFileNameSet());
catch(useFrameExtSet());
catch(putFrameBeforeExtSet());
catch(periodInExtSet());
catch(imageFilePrefixSet());
catch(compositeSet());
catch(compositeThresholdSet());
catch(shadowsObeyLightLinkingSet());
catch(recursionDepthSet());
catch(leafPrimitivesSet());
catch(subdivisionPowerSet());
catch(subdivisionHashSizeSet());
catch(logRenderPerformanceSet());
catch(geometryVectorSet());
catch(shadingVectorSet());
catch(maximumMemorySet());
catch(numCpusToUseSet());
catch(shadowPassSet());
catch(iprShadowPassSet());
catch(useFileCacheSet());
catch(optimizeInstancesSet());
catch(reuseTessellationsSet());
catch(motionBlurSet());
catch(motionBlurByFrameSet());
catch(applyFogInPostSet());
catch(postFogBlurSet());
catch(preRenderMelSet());
catch(postRenderMelSet());
catch(preFurRenderMelSet());
catch(postFurRenderMelSet());
catch(createIprFileSet());
catch(blurLengthSet());
catch(blurSharpnessSet());
catch(smoothValueSet());
catch(useBlur2DMemoryCapSet());
catch(blur2DMemoryCapSet());
catch(motionBlurTypeSet());
catch(useDisplacementBoundingBoxSet());
catch(smoothColorSet());
catch(keepMotionVectorSet());
catch(iprRenderShadingSet());
catch(iprRenderShadowMapsSet());
catch(iprRenderMotionBlurSet());
catch(renderLayerEnableSet());
catch(renderLayerPassEnableSet());
catch(renderGlobalPassEnableSet());
catch(renderLayerSubdirsSet());
catch(forceTileSizeSet());
catch(tileWidthSet());
catch(tileHeightSet());
