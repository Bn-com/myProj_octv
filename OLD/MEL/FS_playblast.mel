//////////////////////////////
//////////////////////////////
///      _________|///////////
///    ///////////////////////
///   |/////////////////////// 
///   |///////////////////////
///     _______|//////////////
///    ///////////////////////
///   |///////////////////////
///   |/////   ____________|//
///   |////   ////////////////
///   |////  /////////////////
///   |////  /////////////////
///___//////_________   //////
//////////////////////   /////
//////////////////////   ///// 
/////////////////////    /////
////////________________//////
//////////////////////////////
//////////////////////////////
//////////////////////////////
/// F A T H O M  S T U D I O S 

//
// Copyright (C) 2001 Fathom Studios.
//
// FATHOM STUDIOS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL FATHOM STUDIOS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.
//
//
//  Fathom Studios Script File
//
//  Creation Date:	May 10, 2001.
//
//
//  Procedure Name:
//	FS_playblast
//
//  Description Name;
//  FS playblast is a utility created to utilize Iridas FrameCycler with the 
//  playblast command in Alias|Wavefront's Maya. Via a simple interface, you 
//  have all of the functionality of the normal playblast command, along with 
//  resampling inside of FrameCycler. To start the script, source it and type 
//  "FS_playblast;". The scale slider effects the percentage of the scale of 
//  the current pane. the default is 50%, or half the size. See the playblast 
//  command documentation for more info on the "Show Ornaments" and "Clear Cache"
//  toggles. If "Playback Range" is not checked, it will playblast the entire
//  range. otherwise, enter the frame range in the fields labled "In" and "Out."
//  If the "Resample" box is checked, enter a scale for X and Y. Inside FrameCycler,
//  this will allow you to stretch the output if desired. Please send any 
//  bug reports or feature requests to support@fathomstudios.com.
//
//  Input Value:
//	none 
//
//  Output Value:
//	None
// 

//

//

global proc int kcFSOpenSoundCB(string $filename, string $fileType)
{
	if ($fileType == "audio")
	{
		textFieldGrp -e -text $filename kcFSSoundField;
	}
	else
		warning("Only choose wav file.");
	$textField=`textFieldGrp -q -text kcFSSoundField`;
	if ($textField=="")
	{
		textFieldGrp -edit -enable false  ycFsIrcpFileField;
		button	-edit -enable false  ycFSBrowseButton;
	}
	else
	{
		textFieldGrp  -edit -enable true  ycFsIrcpFileField;
		button  -edit -enable true  ycFSBrowseButton;
	}

    return 1;
}

global proc kcFSBrowseCB()
{
	fileBrowserDialog -mode 0 -fileCommand "kcFSOpenSoundCB" -fileType "audio" -actionName "Apply";
}


global proc int ycFSSaveIRCP(string $filename, string $fileType)
{
string $buffer[];
int $FilenameSize;
	if ($fileType == "ircp")
	{
		tokenize $filename "." $buffer;
		$FilenameSize = size($buffer);
		int $dotMatch = `gmatch $filename "*.*"`;
		if (($buffer[$FilenameSize-1]!="ircp")&&($buffer[$FilenameSize-1]!="IRCP"))
		{	
			if ($dotMatch==1)
			{
				$filename = "";
				for ($i=0;$i<($FilenameSize-1);$i++)
				{
					$filename = $filename + $buffer[$i]+ ".";
				}
				$filename = $filename + "ircp";
			}
			else
			{
				$filename = $filename + ".ircp";
			}
		}
		textFieldGrp -e -text $filename ycFsIrcpFileField;
	}
	else
		warning("Only choose txt file.");

	string $textField1=`textFieldGrp -q -text kcFSSoundField`;
	if ($textField1=="")
	{
		textFieldGrp -edit -enable false  ycFsIrcpFileField;
		button	-edit -enable false  ycFSBrowseButton;
	}
	else
	{
		textFieldGrp  -edit -enable true  ycFsIrcpFileField;
		button  -edit -enable true  ycFSBrowseButton;
	}
	return 1;
}

global proc ycFSBrowseIRCP()
{
	fileBrowserDialog -mode 1 -fileCommand "ycFSSaveIRCP" -fileType "ircp" -actionName "Save_As" -operationMode "SaveAs";
}

global proc ycFieldChange()
{
	string $textField1=`textFieldGrp -q -text kcFSSoundField`;
	string $movieField1=`textFieldGrp -q -text movieFileName`;
	//print $movieField1;
	if ($textField1!=""&&$movieField1!=""&&`checkBoxGrp -q -value1 saveToFile`==true)
	{
		textFieldGrp  -edit -enable true  ycFsIrcpFileField;
		button  -edit -enable true  ycFSBrowseButton;
	}
	else
	{
		textFieldGrp -edit -enable false  ycFsIrcpFileField;
		button	-edit -enable false  ycFSBrowseButton;
	}
}

global proc playSaveToFile( int $i )
{
	string $textField1=`textFieldGrp -q -text kcFSSoundField`;
	string $movieField1=`textFieldGrp -q -text movieFileName`;
	if( $i ) 
	{
		checkBoxGrp -e -value1 on saveToFile;
		textFieldGrp -e -enable true movieFileName;
		button -e -enable true browser;
		if ($textField1!=""&&$movieField1!="")
		{
		textFieldGrp  -edit -enable true  ycFsIrcpFileField;
		button  -edit -enable true  ycFSBrowseButton;
		}
	} 
	else 
	{
		textFieldGrp -edit -enable false  ycFsIrcpFileField;
		button	-edit -enable false  ycFSBrowseButton;
		checkBoxGrp -e -value1 on viewerOn;
		checkBoxGrp -e -value1 off saveToFile;
		textFieldGrp -e -enable false movieFileName;
		button -e -enable false browser;
	}
}


global proc FS_playblast ()
{
	if (`window -q -ex FS_PlayblastWin`) 
	{	
		showWindow FS_PlayblastWin;
  		return;
 	}

 	global int $range;
 	global int $showOrn;
 	global int $clearCache;
 	global int $resampleOnOff;
 	$range = 0;
 	$showOrn = 1;
 	$clearCache = 1;
 	$resampleOnOff = 0;
 
	int $width = 0;
	int $height = 0;

	if (`objExists defaultResolution`)
	{
		$width = `getAttr defaultResolution.width`;
		$height = `getAttr defaultResolution.height`;
	}

	window  -widthHeight 300 150 -t "FS_Playblast"  FS_PlayblastWin;//-retain

	  columnLayout -cal left -adjustableColumn true -w 300 -h 100 -rowSpacing 3;	    
		menuBarLayout;
			menu -label "Help";
				menuItem -label "Help on Apply FS_playblast..." -command "zjHelpCallback FS_playblast";
			setParent ..;

		rowLayout -numberOfColumns 3 -columnWidth3 140 80 80 -columnAlign3 right left left;
			text -label "   Render Global Res";			
			intField -editable false -width 60 -value $width RglobalX;
			intField -editable false -width 60 -value $height RglobalY; 
		setParent ..;

	    intSliderGrp -label "Scale" -field true -value 100 -minValue 0 -maxValue 100 -sliderStep 10  resolution;
	checkBoxGrp -l "View" -ncb 1 -value1 off -l1 "" 	-offCommand "playSaveToFile true" viewerOn;
	    checkBoxGrp -l "Show Ornaments" -ncb 1               //Create a check box
            -v1 true                                             //Check the box
            -onc ("$showOrn = 1")   //Turn ornaments on
            -ofc ("$showOrn = 0");  //Turn ornaments off
	  //  checkBoxGrp -l "Clear Cache" -ncb 1               //Create a check box
           // -v1 true                                             //Check the box
          //  -onc ("$clearCache = 1")   //Turn cache on
        //   -ofc ("$clearCache = 0");  //Turn chache off
   setParent ..;    
   
   	    // UI for the playback range feature of Playblast
	    separator -height 20 -st "in";
	    rowColumnLayout -cs 4 20 -numberOfColumns 5 -cw 1 200 -cw 2 20 -cw 3 40 -cw 4 20 -cw 5 40;
	      checkBoxGrp -l "Playback Range" -ncb 1 
	      -v1 false
	      -onc ("textField -e -enable true FS_PlayblastIn; textField -e -enable true FS_PlayblastOut; $range = 1")   //Turn range on
              -ofc ("textField -e -enable false FS_PlayblastIn; textField -e -enable false FS_PlayblastOut; $range = 0");  //Turn range off       		 
	      text -label "In";
	      textField -text "0" -enable false FS_PlayblastIn;
	      text -label "Out";
	      textField -text "10" -enable false FS_PlayblastOut;
	    setParent ..;                                            //End of the check box

	    intSliderGrp -label "Step" -field true -value 1 -minValue 1 -maxValue 100 -sliderStep 1  StepNumber;

	// UI for the Resample feature of Framecycler
	    separator -height 20 -st "in";
      rowColumnLayout -cs 4 20 -numberOfColumns 5 -cw 1 200 -cw 2 20 -cw 3 40 -cw 4 20 -cw 5 40;
        checkBoxGrp -l "Resample" -ncb 1 
        -v1 false			//Check the box                         
        -onc ("textField -e -enable true FS_PlayblastResampleX; textField -e -enable true FS_PlayblastResampleY; $resampleOnOff = 1")   //Turn resampling on
        -ofc ("textField -e -enable false FS_PlayblastResampleX; textField -e -enable false FS_PlayblastResampleY; $resampleOnOff = 0");   //Turn resampling off ; 
	      text -label "X";
	      textField -text "100" -enable false FS_PlayblastResampleX;
	      text -label "Y";
	      textField -text "100" -enable false FS_PlayblastResampleY;
	    setParent ..;
      
//		rowColumnLayout -numberOfColumns 1 interface;	
	    //rowColumnLayout -numberOfColumns 1 -width 60 Blaster;
  	separator -height 20 -st "in";

	// Clear cache
	//
		checkBoxGrp -adjustableColumn 2 -columnWidth2 164 200 -label "Remove Temporary Files"
			-numberOfCheckBoxes 1
			-v1 true
			-label1 ""
			    -onc ("$clearCache = 1")   //Turn cache on
			    -ofc ("$clearCache = 0");  //Turn chache off
			clearCache;

	// Save to file
	//
	checkBoxGrp -adjustableColumn 2 -columnWidth2 164 200 -l "Save to File" -ncb 1 -value1 off -onCommand "checkBoxGrp -e -value1 off viewerOn" -l1 "" -cc1 "playSaveToFile #1" 
		saveToFile;

	// Filename
	//
// sound browse
		string $formLayout = `formLayout`;

			if(`about -linux`) {
				textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "Image file prefix" -changeCommand "ycFieldChange" -enable false movieFileName;
			}else{
				textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "Movie file" -changeCommand "ycFieldChange" -enable false movieFileName;
			}
			button -label "Browse..." -align "center" -enable false -command 	"playFileBrowser" browser;

			textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "Sound"		-changeCommand "ycFieldChange"		-text "" kcFSSoundField;
			button -label "Browse..." -command "kcFSBrowseCB" kcFSBrowseButton;

			textFieldGrp -adjustableColumn 2 -enable false -columnWidth2 160 200 -label "FrameCycler Composition File"	-changeCommand "ycFieldChange" -text "" ycFsIrcpFileField;
			button -enable false -label "Browse..." -command "ycFSBrowseIRCP" ycFSBrowseButton;

		setParent ..;

		formLayout -edit

		-attachForm		movieFileName	"top"	5
		-attachForm		movieFileName	"left"	5
		-attachControl		movieFileName	"right"	5	browser

		-attachForm		browser	"top"	5	
		-attachForm		browser	"right"	5

		-attachControl		kcFSSoundField	"top"	5	movieFileName
		-attachForm		kcFSSoundField	"left"	5
		-attachControl		kcFSSoundField	"right"	5	kcFSBrowseButton

		-attachControl		kcFSBrowseButton	"top"	5	browser
		-attachForm		kcFSBrowseButton	"right"	5

		-attachControl		ycFsIrcpFileField	"top"	5	kcFSSoundField
		-attachForm		ycFsIrcpFileField	"left"	5
		-attachControl		ycFsIrcpFileField	"right" 5	ycFSBrowseButton

		-attachControl		ycFSBrowseButton	"top"	5	kcFSBrowseButton	
		-attachForm		ycFSBrowseButton	"right"	5
	$formLayout;

  	separator -height 20 -st "in";

	  button -w 100 -h 25 -align center -l "Make Movies!" -c "FS_playblaster";
  showWindow FS_PlayblastWin;
        
}
//*******************************************************************************
global proc FS_playblaster ()
{

	float $res = `intSliderGrp -q -value resolution`;
	global int $range;
	global int $showOrn;
	global int $clearCache;
	global int $resampleOnOff;
	int $gx = `intField -q -value RglobalX`;
        int $gy = `intField -q -value RglobalY`; 
	int $FS_PlayblastIn = `textField -q -tx FS_PlayblastIn`;
	//print ($FS_PlayblastIn+"\n\n\n\n");				//	0
	int $FS_PlayblastOut = `textField -q -tx FS_PlayblastOut`;
 	//print ($FS_PlayblastOut+"\n\n\n\n");				//	10
	int  $step_num = `intSliderGrp -q -value StepNumber`;
	string $resampleX = `textField -q -tx FS_PlayblastResampleX` + "%";
	string $resampleY = `textField -q -tx FS_PlayblastResampleY` + "%";
	
	int $ycSaveToFile = `checkBoxGrp -q -v1 saveToFile`;
	string $movieFileName = `textFieldGrp -q -tx movieFileName`;
	//print ($step_num+"\n\n\n");				//	1 or 2 or 3 or .......or 100
	string $soundCmd = "";
	string $sound = `textFieldGrp -q -text kcFSSoundField`;

	if (`file -q -exists $sound`)
		$soundCmd = " -s:\"" + $sound + "\" -f24";

	if ($range < 1)
	{
		string $filename;
		string $ExpressionName;
		int $playbackvalue = `playbackOptions -q -ps -by`;
		playbackOptions -by $step_num;	
		$ExpressionName = `expression 
					-s "$step=`intSliderGrp -q -value StepNumber`;	int $time=frame;	int $GetMod=$time%$step;	currentTime ($GetMod*($step-1)+$time);"`;
		if ($movieFileName=="")
		{
			$filename = `playblast  
					-format image 
					-clearCache $clearCache 
					-viewer 0 
					-showOrnaments $showOrn 
					-percent $res 
					-widthHeight $gx $gy`
					;
		}
		if ($ycSaveToFile==1 && $movieFileName!="")
		{
			string $movieFileNameAdd=$movieFileName+".*.iff";
			string $JudgeFile[]=`getFileList -filespec $movieFileNameAdd`;

			if (size($JudgeFile)==0)
			{
				$filename = `playblast  
						-filename $movieFileName 
						-format image 
						-clearCache $clearCache 
						-viewer 0 
						-showOrnaments $showOrn 
						-percent $res 
						-widthHeight $gx $gy`
						;
			}
			else
			{
				system("del \""+$movieFileNameAdd+"\"");
				$filename = `playblast  
						-filename $movieFileName 
						-format image 
						-clearCache $clearCache 
						-viewer 0 
						-showOrnaments $showOrn 
						-percent $res 
						-widthHeight $gx $gy` 
						;
			}
		}

		if ($ycSaveToFile==0 && $movieFileName!="")
		{
			$filename = `playblast 
					-format image 
					-clearCache $clearCache 
					-viewer 0 
					-showOrnaments $showOrn 
					-percent $res 
					-widthHeight $gx $gy` 
					;
		}
		delete $ExpressionName;
		playbackOptions -by $playbackvalue;	

		float $starttime = `playbackOptions -q -min`;
		float $endtime = `playbackOptions -q -max`;

		string $files[];
		tokenize $filename "#" $files;
		//print $filename;
		
			//////////////////////////////////////////////////////////////////////////
			/////           Change FrameCycler program location path below////////////
			//////////////////////////////////////////////////////////////////////////	
			
		string $FramecyclerCmd;
		
		int $JudgeExeFile=`file -q -exists "C:\\Program Files\\IRIDAS Framecycler Standard\\FrameCycler.exe"`;
		if ($JudgeExeFile==1)
		{
		$FramecyclerCmd= "\"C:\\Program Files\\IRIDAS Framecycler Standard\\FrameCycler.exe\"";
		}
		else
		{
		$FramecyclerCmd= "\"C:\\Program Files\\IRIDAS Framecycler Studio Edition\\FrameCycler.exe\"";
		}
		
		if ($resampleOnOff > 0)
		{	
			if (($starttime < 0)&&($endtime < 0))
			{
			//print "444444444444444444";
			int $starttime1 = abs($starttime);
			int $endtime1 = abs($endtime);
			string $cmd = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + $endtime1 + "-" + $starttime1 + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd);
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
			string $cmd = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + $starttime + "-" + $endtime + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			//print $cmd;
			system ($cmd);
			}
			if (($starttime < 0)&&($endtime >= 0))
			{
			//print "222222222222222";
			int $starttime1 = abs($starttime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + "1" + "-" + $starttime1 + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd2);
			string $cmd3 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + "0" + "-" + $endtime + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd3);
			}
		}
		else
		{
			if (($starttime < 0)&&($endtime < 0))
			{
			//print "444444444444444444_44444444444444444";
			$starttime1 = abs($starttime);
			$endtime1 = abs($endtime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + $endtime1 + "-" + $starttime1 + $soundCmd);
			system ($cmd2);
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
			//print "33333333333333_33333333333333333";
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + $starttime + "-" + $endtime + $soundCmd);
			//print $cmd2;		//start "C:\Program Files\IRIDAS Framecycler Standard\FrameCycler.exe" C:\DOCUME~1\yinchen\LOCALS~1\Temp\blast3.#.iff 31-50 -s:"C:/3dsmax42/sounds/ByeByeNow.wav" -f243
			system ($cmd2);
			}
			if (($starttime < 0)&&($endtime >= 0))
			{
			//print "222222222222222_22222222222222222";
			$starttime1 = abs($starttime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + "1" + "-" + $starttime1 + $soundCmd);
			system ($cmd2);
			string $cmd3 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + "0" + "-" + $endtime + $soundCmd);
			system ($cmd3);
			}
		}
		string $QueryTextFile = `textFieldGrp -q -text ycFsIrcpFileField`;
		string $IRCPBuffer[],$TXTBuffer[];
		string $IffFileSequence = $files[0] + "#" + $files[1];
		//print $IffFileSequence;			//	C:\DOCUME~1\yinchen\LOCALS~1\Temp\blast4.#.iff
		string $IffFileResult = substituteAllString($IffFileSequence, "\\", "\\\\");
		//print $IffFileResult;				//	C:\\DOCUME~1\\yinchen\\LOCALS~1\\Temp\\blast5.#.iff
		string $SoundInIRCP = substituteAllString($sound, "/", "\\");

		if ($QueryTextFile!="")
		{
			tokenize $QueryTextFile "." $IRCPBuffer;			//print($QueryTextFile);	C:/Documents and Settings/yinchen/Desktop/test.ircp
			int $IRCPFileSize = size($IRCPBuffer);				//print($IRCPFileSize);		2

			tokenize $QueryTextFile "/" $TXTBuffer;				
			int $TXTFileSize = size($TXTBuffer);				//print($TXTFileSize);		5
			string $QueryIRCPFile = $TXTBuffer[0];
			string $QueryIRCPFile_1 = $TXTBuffer[0];

			for ($i=1;$i<$TXTFileSize;$i++ )
			{
			$QueryIRCPFile = $QueryIRCPFile + "\\" + $TXTBuffer[$i];	
			$QueryIRCPFile_1 = $QueryIRCPFile_1 + "\\\\" + $TXTBuffer[$i];	
			}
			//print $QueryIRCPFile_1;						//C:\\Documents and Settings\\yinchen\\Desktop\\test.ircp
			if (($starttime < 0)&&($endtime < 0))
			{
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "-#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"true\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"false\"</reverse>" + "\n" +
						"       <startframe>\"" + $starttime + "\"</startframe>" + "\n" +
						"       <endframe>\"" + $endtime + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}	
			if (($starttime < 0)&&($endtime >= 0))
			{
				int $start_negative = abs($starttime);
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "-#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"true\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"false\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}	
		}
	}
	else
	{	
		string $filename;
		string $ExpressionName;
		int $playbackvalue = `playbackOptions -q -ps -by`;
		playbackOptions -by $step_num;	
		currentTime $FS_PlayblastIn;
		$ExpressionName = `expression 
					-s "$step=`intSliderGrp -q -value StepNumber`;	int $time=frame;	int $GetMod=$time%$step;	currentTime ($GetMod*($step-1)+$time);"`;
		if ($movieFileName=="")
		{
			$filename = `playblast  
					-startTime $FS_PlayblastIn  -endTime $FS_PlayblastOut 
					-format image 
					-clearCache $clearCache 
					-viewer 0 
					-showOrnaments $showOrn 
					-percent $res` 
					;
		}

		if ($ycSaveToFile==1 && $movieFileName!="")
		{
			string $movieFileNameAdd=$movieFileName+".*.iff";
			string $JudgeFile[]=`getFileList -filespec $movieFileNameAdd`;
			if (size($JudgeFile)==0)
			{
				$filename = `playblast  
						-filename $movieFileName 
						-startTime $FS_PlayblastIn -endTime $FS_PlayblastOut 
						-format image 
						-clearCache $clearCache 
						-viewer 0 
						-showOrnaments $showOrn 
						-percent $res` 
						;
			}
			else
			{
				system("del \""+$movieFileNameAdd+"\"");
				$filename = `playblast  
						-filename $movieFileName 
						-startTime $FS_PlayblastIn -endTime $FS_PlayblastOut 
						-format image 
						-clearCache $clearCache 
						-viewer 0 
						-showOrnaments $showOrn 
						-percent $res` 
						;
			}
		}

		if ($ycSaveToFile==0 && $movieFileName!="")
		{
			$filename = `playblast  
					-startTime $FS_PlayblastIn -endTime $FS_PlayblastOut 
					-format image 
					-clearCache $clearCache 
					-viewer 0 
					-showOrnaments $showOrn 
					-percent $res` 
					;
		}
		delete $ExpressionName;
		playbackOptions -by $playbackvalue;	
		
		float $starttime = $FS_PlayblastIn/$step_num;
		float $endtime = $FS_PlayblastOut/$step_num;

		string $files[];

		tokenize $filename "#" $files;
		string $FramecyclerCmd = "\"C:\\Program Files\\IRIDAS Framecycler Standard\\FrameCycler.exe\"";
		
		if ($resampleOnOff > 0)
		{
			if (($starttime < 0)&&($endtime < 0))
			{
			$starttime1 = abs($starttime);
			$endtime1 = abs($endtime);
			string $cmd = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + $endtime1 + "-" + $starttime1 + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd);
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
			string $cmd = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + $starttime + "-" + $endtime + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd);
			}
			if (($starttime < 0)&&($endtime >= 0))
			{
			//print "222222222222222";
			$starttime1 = abs($starttime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + "1" + "-" + $starttime1 + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd2);
			string $cmd3 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + "0" + "-" + $endtime + $soundCmd) + " " + "-r" + " " + $resampleX + " " + $resampleY;
			system ($cmd3);
			}
		}
		else
		{
			if (($starttime < 0)&&($endtime < 0))
			{
			$starttime1 = abs($starttime);
			$endtime1 = abs($endtime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + $endtime1 + "-" + $starttime1 + $soundCmd);
			system ($cmd2);
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + $starttime + "-" + $endtime + $soundCmd);
			system ($cmd2);
			}
			if (($starttime < 0)&&($endtime >= 0))
			{
			//print "222222222222222";
			$starttime1 = abs($starttime);
			string $cmd2 = ("start " + $FramecyclerCmd + " " + $files[0] + "-#" + $files[1] + " " + "1" + "-" + $starttime1 + $soundCmd);
			system ($cmd2);
			string $cmd3 = ("start " + $FramecyclerCmd + " " + $files[0] + "#" + $files[1] + " " + "0" + "-" + $endtime + $soundCmd);
			system ($cmd3);
			}
		}
		string $QueryTextFile = `textFieldGrp -q -text ycFsIrcpFileField`;
		string $IRCPBuffer[],$TXTBuffer[];
		string $IffFileSequence = $files[0] + "#" + $files[1];
		//print $IffFileSequence;			//	C:\DOCUME~1\yinchen\LOCALS~1\Temp\blast4.#.iff
		string $IffFileResult = substituteAllString($IffFileSequence, "\\", "\\\\");
		//print $IffFileResult;				//	C:\\DOCUME~1\\yinchen\\LOCALS~1\\Temp\\blast5.#.iff
		string $SoundInIRCP = substituteAllString($sound, "/", "\\");

		if ($QueryTextFile!="")
		{
			tokenize $QueryTextFile "." $IRCPBuffer;			//print($QueryTextFile);	C:/Documents and Settings/yinchen/Desktop/test.ircp
			int $IRCPFileSize = size($IRCPBuffer);				//print($IRCPFileSize);		2

			tokenize $QueryTextFile "/" $TXTBuffer;				
			int $TXTFileSize = size($TXTBuffer);				//print($TXTFileSize);		5
			string $QueryIRCPFile = $TXTBuffer[0];
			string $QueryIRCPFile_1 = $TXTBuffer[0];

			for ($i=1;$i<$TXTFileSize;$i++ )
			{
			$QueryIRCPFile = $QueryIRCPFile + "\\" + $TXTBuffer[$i];	
			$QueryIRCPFile_1 = $QueryIRCPFile_1 + "\\\\" + $TXTBuffer[$i];	
			}
			//print $QueryIRCPFile_1;						//C:\\Documents and Settings\\yinchen\\Desktop\\test.ircp
			if (($starttime < 0)&&($endtime < 0))
			{
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "-#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"true\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}
			if (($starttime >= 0)&&($endtime >= 0))
			{
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"false\"</reverse>" + "\n" +
						"       <startframe>\"" + $starttime + "\"</startframe>" + "\n" +
						"       <endframe>\"" + $endtime + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}	
			if (($starttime < 0)&&($endtime >= 0))
			{
				int $start_negative = abs($starttime);
				int $fileID=`fopen $QueryIRCPFile_1 "wt"`;
				fwrite $fileID (
						"<?xml version=\"1.0\" ?>" + "\n\n" +
						"<general>" + "\n" + 
						"  <basefps>\"24\"</basefps>" + "\n" + 
						"</general>" + "\n\n" +
						"<channel>" + "\n" +
						"  <layer>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "-#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"true\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"    <sequence>" + "\n" +
						"       <name>" + "\"" + $files[0] + "#" + $files[1] + "\"" + "</name>" + "\n" +
						"       <reverse>\"false\"</reverse>" + "\n" +
						"       <startframe>\"" + "0" + "\"</startframe>" + "\n" +
						"       <endframe>\"" + "-1" + "\"</endframe>" + "\n" +
						"    </sequence>" + "\n" +
						"  </layer>" + "\n" +
						"  <layer>" + "\n" +
						"  </layer>" + "\n" +
						"</channel>" + "\n\n" +
						"<sound>" + "\n" +
						"  <soundfile>" + "\"" + $SoundInIRCP + "\"" + "</soundfile>" + "\n" +
						"  <offset>\"0\"</offset>" + "\n" +
						"</sound>" + "\n\n\n"
						);
				fclose $fileID;
			}	
		}
	}
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
global proc playFileBrowser()
{
	// only set the working directory if the
	// playblastFile optionVar is not an absolute
	// path
	//
	string $pathname;
	int	$isAbsolute = false;
	if ( `optionVar -exists playblastFile` ) {
		string $filename = `optionVar -q playblastFile`;
		if ( $filename != "" &&
			(substring($filename,1,1) == "/"
			||substring($filename,1,1) == "$") )
		{
			$isAbsolute = true;
		}
	}

	if ( !$isAbsolute ) {

		// get the workspace
		//
		string	$workspace = `workspace -q -fn`;

		// get the project's image directory
		//
		string $fileRules[] = `workspace -q -fr`;
		int $i;
		string $imageDir = ""; // default is current dir
		for ( $i = 0; $i < size($fileRules); $i += 2 ) {
			if ( $fileRules[$i] == "image" ) {
				$imageDir = $fileRules[$i+1];
				break;
			}
		}

		if ( $imageDir != "" ) {
			// set the current working directory
			//
			setWorkingDirectory $workspace "image" $imageDir;
		}
	}
//	fileBrowserDialog -mode 0 -fileCommand "kcFSOpenSoundCB" -fileType "audio" -actionName "Apply";

	// win32 should be "save to" since "open" requires an existing file
	fileBrowser("playblastUpdateMovieName","Accept","",1);
}

global proc int fileBrowser ( string $callBack, string $action, string $type,
							  int $mode)
	//
	//	Description:
	//		This is the main for the projectViewer.
	//
	//	Parameters:
	//		$callBack		- the global callback to be invoked when the action
	//							button is pressed.
	//		$action			- the title for the action button.
	//		$type			- the file type to be highlited in the type
	//							selection menu.
	//		$mode			- 0 for read, 1 for write.
	//							2 for write-segmented (no paths)
	//							4 give directories meaning on action.
	//
{
	global int $gv_displayMode;
	global int $gv_displayHiddenMode;
	global string $gv_CallBackCommand;
	global int $gv_browserMode;
	global string $gv_operationMode;
		
	string $wsNames[];

	// Check for short names
	// These are being phased out of the UI, but we'll
	// strip out the 100 in case there are scripts around
	// which use it still.
	int $catch_oldShortNames = int($mode/100);
	$mode = $mode - 100 * $catch_oldShortNames;

	$gv_browserMode = $mode;

	if (`about -nt`) {
		string $workspace = `workspace -q -fn`;
		// note globals do NOT get set
		fileBrowserDialog -fileCommand  $callBack -m $mode -fileType  $type
			-actionName  $action -operationMode  $gv_operationMode -in $workspace;
		// previous call blocks
		$gv_operationMode="";
		return 1;
	}

	if (`window -exists projectViewerWindow`) {

		// Hide the window to do cosmetics.
		window -e -vis false projectViewerWindow;

		if (`formLayout -ex WSeditForm`) {
			menuItem -e -cb false viewWorkspaceEdit;
			deleteUI WSeditForm;
		}
			
		//
		// Rebuild the popdown list because the translator list might have
		// changed.
		//
		string $typeList[] = `optionMenu -q -ill fileTypePopList`;
		int $index;
		int $count;
			
		$count = size($typeList);
		for ($index = 0; $index < $count; $index++) {
			deleteUI -mi $typeList[$index];
		}

		setParent -m fileTypePopList;

		if ($gv_browserMode == 0 || $gv_browserMode == 4) {
			optionMenu -e -l "Read As:" fileTypePopList;
			if ( $gv_browserMode != 4 )
				menuItem -l "Best Guess" "AnyfileTypeMenu";
		} else {
			optionMenu -e -l "Write As:" fileTypePopList;
		}

		buildFileTypeMenu( $gv_browserMode, $type );
		
		optionMenu -e -select 1 fileTypePopList;
		if (`window -q -i projectViewerWindow`) {	// If window iconic.
			window -e -i false projectViewerWindow;	// restore window.
		} 
		
	} else {
		if (`optionVar -ex fileBrowserDisplayMode`) {
			$gv_displayMode = `optionVar -q fileBrowserDisplayMode`;
		} else {
//			$gv_displayMode = 0;
			$gv_displayMode = 10;
		}

		if (`optionVar -ex fileBrowserDisplayHiddenMode`) {
			$gv_displayHiddenMode = `optionVar -q fileBrowserDisplayHiddenMode`;
		} else {
			$gv_displayHiddenMode = 0;
		}

		launchViewerNew ($action, $type);
		buildControlArea "controlArea";
	}

	$str = `workspace -q -sn`;	// Replacing -lw with -sn. -rams
	$wsNames[0] = $str;

	window -e 
		-t ($action + " ("+$wsNames[0]+")") 
		-iconName $action projectViewerWindow;

	// Special case:  when the mode is "save as", the action button
	// should say "save"
	//
	if ( $action == "Save As" ) $action = "Save";


	if ($gv_browserMode == 4) {
		button -e -l $action -align "center" -w 110
			-c ("pv_doubleClickAction 0") actionOK;
	} else {
		button -e -l $action -align "center" -w 110
			-c ("pv_doubleClickAction 1") actionOK;
	}

	if ($gv_operationMode == "") {
		// There is no options.
		menuItem -e -l "No Options" -c "" fileOptionsMenuItem; 
	} else {
		menuItem -e -l "Options..."
			-c ("{global string $gv_operationMode;"+
				" window -e -vis false projectViewerWindow;"+
				" fileOptions $gv_operationMode (\"projectViewer \"+$gv_operationMode);"+
				" $gv_operationMode = \"\";}") fileOptionsMenuItem;


	}

	pv_setMenuFileType($type, 1);
	$gv_CallBackCommand = $callBack;

	pv_redrawView;

	showWindow projectViewerWindow;

	if (`saveImage -ex fo_saveIcon`) {
		saveImage -e -currentView  fo_saveIcon;		// Update with current view.
	}
	
	return 1;
}

global proc int playblastUpdateMovieName( string $filename, string $fileType )
{
	textFieldGrp -e -fileName $filename movieFileName;
	optionVar -stringValue playblastFile $filename;
	return 1;
}
//system("start \"C:\\Program Files\\IRIDAS Framecycler Standard\\FrameCycler.exe\" C:\\3dsmax42\\sounds\\ww.-#.iff  -reverse");

//FS_playblast;
