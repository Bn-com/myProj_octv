global proc fsBowWindow()
{
	if(`window -exists bowWindow`)
		deleteUI bowWindow;

	window  -t "弓箭"
		-mxb 0
		-wh 265 282
		bowWindow;
	menuBarLayout;
	menu -l "帮助";
		menuItem -label  "工具帮助" -c "zjHelpCallback fsbowWindow" bowWindowHelp;
	scrollLayout -childResizable 1 mainSol;
	columnLayout mainCol;
	frameLayout -l "弓箭参数"
		    -collapsable 0
		    -collapse 1
		    -borderStyle "etchedIn"
		    bowFrame;
	columnLayout;
	rowLayout -nc 2
		  -columnAttach 1 "left" 1
		  -cal 2 "center"
		  -cw 1 115
		  -cw 2 100
		  particleRow;

		  textFieldGrp  -l "粒子名称" 
				-columnAlign2 "left" "left"
			     	-cw 1 57
				-cw 2 55	
				particleTex;
		  textFieldGrp  -l "弓箭名称" 
			     	-columnAlign2 "left" "left"
			     	-cw 1 57
			     	-cw 2 55
				bowNameTex;
		  setParent..;
	separator -h 5 -w 230 -style "in" sep0;
	button -l "执行替代" -w 230 -c intancerCmd;
	separator -h 5 -w 230 -style "in" sep1;
	text -l "添加每粒子属性" -font "boldLabelFont" -align "left" -w 110;
	radioCollection dataRad;
		radioButton -l "矢量类型" -align "left" vecotrRadBut;
		radioButton -l "浮点类型" -align "left" -sl floatRadBut;
	textFieldButtonGrp -l "属性名"
			   -buttonLabel "确实"
			   -buttonCommand addAttrCmd
			   -cal 2 "center" 
			   -columnAttach 1 "left" 2
			   -cw 1 40
			   -cw 2 60
			   attributeName;

	separator -h 5 -w 230 -style "in" sep2;
	text -l "跟随物体" -font "boldLabelFont" -align "left" -w 110;
		  textFieldGrp  -l "物体名称" 
				-columnAttach 1 "left" 1
				-columnAlign2 "left" "center"
				-cw 1 57
			     	-cw 2 70
		        	objectTex;

	checkBox -l "弓箭是否跟跟随物体"
		-align "center"
		bowCheckBox;
	separator -h 5 -w 230 -style "in" sep3;
	button -l "开始执行" -w 230 -c bowCommand;
	setParent..;
	setParent..;
	showWindow bowWindow;
}
global proc bowCommand()
{
	global int $a,$b,$c,$d;
	string $particleName=`textFieldGrp -q -text particleTex`;
	string $bowName=`textFieldGrp -q -text bowNameTex`;
	string $particleShape[]=`listRelatives -shapes $particleName`;
	int $result=`checkBox -q -v bowCheckBox`;
	string $objTex=`textFieldGrp -q -text objectTex`;
	global string $attrs[];
	$attrs=`listAttr $particleShape[0]`;
	
	if($result==1)
	{
		for($eachAttr in $attrs)
		{
			$a=0;
			if($eachAttr=="haha")
			{
				$a=1;
				break;
			}
			
		}
		if($a!=1)
			error "请添加haha属性！";
		for($eachAttr in $attrs)
		{
			$b=0;
			if($eachAttr=="collisionIncomingVelocity")
			{
				$b=1;
				break;
			}
			
		}
		if($b!=1)
			error "请添加collisionIncomingVelocity属性！";
		//creation
		string $creationExpression_1="global string $Gaim;\r\n";
		string $creationExpression_2="global string $Ginst[];\r\n";
		string $creationExpression_3="global float $randDepth;\r\n";
		string $creationExpression_4="$randDepth=rand(0.1,0.5);\r\n";
		string $creationExpression_5="if(id==0)\r\n";
		string $creationExpression_6="{\r\n";
		string $creationExpression_7="	if(!`objExists $Gaim`) $Gaim=\" \";\r\n";
		string $creationExpression_8="	if($Gaim==\" \") $Gaim=`createNode aimConstraint`;\r\n";
		string $creationExpression_9="	for($each in $Ginst)\r\n";
		string $creationExpression_10="	{\r\n";
		string $creationExpression_11="		if(`objExists $each`)\r\n";
		string $creationExpression_12="			delete $each;\r\n";
		string $creationExpression_13="	}\r\n";
		string $creationExpression_14="	clear $Ginst;\r\n";
		string $creationExpression_15="}";
		dynExpression -c -s ($creationExpression_1+$creationExpression_2+$creationExpression_3+$creationExpression_4
				     +$creationExpression_5+$creationExpression_6+$creationExpression_7+$creationExpression_8
				     +$creationExpression_9+$creationExpression_10+$creationExpression_11+$creationExpression_12
				     +$creationExpression_13+$creationExpression_14+$creationExpression_15) $particleShape[0];

		//runtime
		string $runtimeExpression_1="global string $Gaim;\r\n";
		string $runtimeExpression_2="global string $Ginst[];\r\n";
		string $runtimeExpression_3="global float $randDepth;\r\n";
		string $runtimeExpression_4="vector $pos=worldPosition;\r\n";
		string $runtimeExpression_5="vector $vel=haha;\r\n";
		string $runtimeExpression_6="if(mag(collisionIncomingVelocity)<1000)\r\n";
		string $runtimeExpression_7="{\r\n";
		string $runtimeExpression_8="	string $obj[]=`instance "+$bowName+"`;\r\n";
		string $runtimeExpression_9="	float $aimPos[]={$vel.x,$vel.y,$vel.z};\r\n";
		string $runtimeExpression_10="	float $objPos[]={$pos.x,$pos.y,$pos.z};\r\n";
		string $runtimeExpression_11="	setAttr ($obj[0]+\".t\") $objPos[0] $objPos[1] ($objPos[2]+$rand);\r\n";
		string $runtimeExpression_12="	setAttr ($Gaim+\".tg[0].tt\") $aimPos[0] $aimPos[1] $aimPos[2];\r\n";
		string $runtimeExpression_13="	float $rot[]=`getAttr ($Gaim+\".cr\")`;\r\n";
		string $runtimeExpression_14="	setAttr ($obj[0]+\".r\") $rot[0] $rot[1] $rot[2];\r\n";
		string $runtimeExpression_15="	parent $obj[0] "+$objTex+";\r\n";
		string $runtimeExpression_16="	$Ginst[size($Ginst)]=$obj[0];\r\n";
		string $runtimeExpression_17="	lifespanPP=0;\r\n";
		string $runtimeExpression_18="}\r\n";
		string $runtimeExpression_19="haha=worldVelocity;";
		dynExpression -rbd -s ($runtimeExpression_1+$runtimeExpression_2+$runtimeExpression_3+$runtimeExpression_4+
				       $runtimeExpression_5+$runtimeExpression_6+$runtimeExpression_7+$runtimeExpression_8+
				       $runtimeExpression_9+$runtimeExpression_10+$runtimeExpression_11+$runtimeExpression_12
				       +$runtimeExpression_13+$runtimeExpression_14+$runtimeExpression_15+$runtimeExpression_16
				       +$runtimeExpression_17+$runtimeExpression_18+$runtimeExpression_19) $particleShape[0];
	}
	else
	{	
		for($eachAttr in $attrs)
		{
			$a=0;
			if($eachAttr=="haha")
			{
				$a=1;
				break;
			}
			
		}
		if($a!=1)
			error "请添加haha属性！";
		for($eachAttr in $attrs)
		{
			$b=0;
			if($eachAttr=="temp_pos")
			{
				$b=1;
				break;
			}
		}
		if($b!=1)
			error "请添加temp_pos属性！";
		for($eachAttr in $attrs)
		{
			$c=0;
			if($eachAttr=="randDepth")
			{
				$c=1;
				break;
			}
		}
		if($c!=1)
			error "请添加randDepth属性！";
		for($eachAttr in $attrs)
		{
			$d=0;
			if($eachAttr=="custom_velocity")
			{
				$d=1;
				break;
			}
		}
		if($d!=1)
			error "请添加custom_velocity属性！";
		//creation
		string $createExpression_1="haha=0;\r\n";
		string $createExpression_2="randDepth=rand(-0.1,0.5);";
		dynExpression -c -s ($createExpression_1+$createExpression_2) $particleShape[0];
		//runtime
		string $runtimeExpression_2="if(event==0)\r\n{ \r\n";
		string $runtimeExpression_3="  temp_pos=position;\r\n"+"  custom_velocity=velocity;\r\n";
		string $runtimeExpression_4="}\r\n";
		string $runtimeExpression_5="else\r\n";
		string $runtimeExpression_6="{\r\n";
		string $runtimeExpression_7="  if(haha==0)\r\n";
		string $runtimeExpression_8="  {\r\n";
		string $runtimeExpression_9="     temp_pos=position;\r\n";
		string $runtimeExpression_10="    haha=1;\r\n";
		string $runtimeExpression_11=" }\r\n";
		string $runtimeExpression_12=" vector $pos=temp_pos;\r\n";
		string $runtimeExpression_13=" position=<<$pos.x,$pos.y,$pos.z>>+<<0,0,randDepth>>;\r\n}";
		dynExpression -rad -s ($runtimeExpression_2+$runtimeExpression_3+$runtimeExpression_4+
				       $runtimeExpression_5+$runtimeExpression_6+$runtimeExpression_7+$runtimeExpression_8+
				       $runtimeExpression_9+$runtimeExpression_10+$runtimeExpression_11+$runtimeExpression_12
				       +$runtimeExpression_13) $particleShape[0];
	}
}

global proc addAttrCmd()
{
	int $vector=`radioButton -q -sl vecotrRadBut`;
	int $float=`radioButton -q -sl floatRadBut`;
	string $attrName=`textFieldGrp -q -text attributeName`;
	string $particleName=`textFieldGrp -q -text particleTex`;
	string $particleShape[]=`listRelatives -shapes $particleName`;
	if($vector==1)
	{
		addAttr -ln ($attrName+"0")  -dt vectorArray  ($particleShape[0]);
		addAttr -ln $attrName  -dt vectorArray  ($particleShape[0]);
		setAttr -e-keyable true ($particleShape[0]+"."+$attrName);
	}
	else
	{
		addAttr -ln ($attrName+"0")  -dt doubleArray  ($particleShape[0]);
		addAttr -ln $attrName  -dt doubleArray  $particleShape[0];
		setAttr -e-keyable true ($particleShape[0]+"."+$attrName);
	}
}

global proc intancerCmd()
{
	string $particleName=`textFieldGrp -q -text particleTex`;
	string $bowName=`textFieldGrp -q -text bowNameTex`;
	particleInstancer -n bowInstancer -object $bowName $particleName;
}