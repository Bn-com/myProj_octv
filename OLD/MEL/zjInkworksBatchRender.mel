/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc string getcamera ()
{
    string $allCameras[] = `ls -ca`;
    int $numRenderable=0;
    int $camIndex;

    for ($i = 0; $i < size($allCameras); $i++) {
	if (`getAttr ($allCameras[$i] + ".renderable")`) {
		$numRenderable = 1;
		$camIndex = $i;
		break;
	}
    }
    if ($numRenderable == 1) {
         string $whichCamera = $allCameras[$camIndex];
         return $whichCamera;
    }
    return "perspShape";
}

global proc zjInkworksBatchRender()
{
    float $InkBackgroundcolor[3];
    float $Inkcolor[3];
    float $Inkthickness;

    if (`optionVar -ex "InkworksBackgroundColor1"`)
       $InkBackgroundcolor[0] = `optionVar -q "InkworksBackgroundColor1"`; 
    else 
       $InkBackgroundcolor[0] = 1.0; 
    if (`optionVar -ex "InkworksBackgroundColor2"`)
       $InkBackgroundcolor[1] = `optionVar -q "InkworksBackgroundColor2"`; 
    else 
       $InkBackgroundcolor[1] = 1.0; 
    if (`optionVar -ex "InkworksBackgroundColor3"`)
       $InkBackgroundcolor[2] = `optionVar -q "InkworksBackgroundColor3"`; 
    else 
       $InkBackgroundcolor[2] = 1.0; 

    if (`optionVar -ex "InkworksContourColor1"`)
       $Inkcolor[0] = `optionVar -q "InkworksContourColor1"`; 
    else 
       $Inkcolor[0] = 0.0; 
    if (`optionVar -ex "InkworksContourColor2"`)
       $Inkcolor[1] = `optionVar -q "InkworksContourColor2"`; 
    else 
       $Inkcolor[1] = 0.0; 
    if (`optionVar -ex "InkworksContourColor3"`)
       $Inkcolor[2] = `optionVar -q "InkworksContourColor3"`; 
    else 
       $Inkcolor[2] = 0.0; 

    if (`optionVar -ex "InkworksContourThickness"`)
       $Inkthickness = `optionVar -q "InkworksContourThickness"`; 
    else 
       $Inkthickness = 0.200; 


     if (!`window -exists InkworksWin`)
       {
	        window -width 430 -height 180 -title "Inkworks Batch Render" InkworksWin;

		columnLayout -adjustableColumn true;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Inkworks Batch Render..." -command "zjHelpCallback zjInkworksBatchRender";
				setParent ..;
		formLayout -numberOfDivisions 100 formLayout1;

		colorSliderGrp -label "Background Color" 
			       -rgb $InkBackgroundcolor[0] $InkBackgroundcolor[1] $InkBackgroundcolor[2]
			       bcolor;

		colorSliderGrp -label "Ink Color" -rgb $Inkcolor[0] $Inkcolor[1] $Inkcolor[2] icolor;
		floatFieldGrp 
			-label "Thickness"
			-value1 $Inkthickness -pre 3
                        thickness;
                button -label "Batch Render"  -command "IWsBatchrender " rend;
                button -label "Close"  -command "deleteUI -window  InkworksWin" cancel;

		formLayout -edit
			-attachForm	  bcolor	"top"		20

			-attachControl	  icolor	"top"           5	bcolor
			-attachForm	  icolor	"left"		0
 
			-attachControl	  thickness	"top"           5	icolor
			-attachForm	  thickness	"left"		0

			-attachForm	  rend	        "left"		0
			-attachControl	  rend	        "top"		5	thickness
			-attachPosition	  rend      	"right"		0       50
			
			-attachControl	  cancel	"left"		5	rend
			-attachControl	  cancel        "top"		5	thickness
			-attachPosition	  cancel      	"right"		0       100

		formLayout1;
	
	 showWindow InkworksWin;
	}
}


global proc IWsBatchrender()
{

    float $InkBackgroundcolor[]=`colorSliderGrp -q -rgb bcolor`;
    float $Inkcolor[]=` colorSliderGrp -q -rgb icolor`;
    float $Inkthickness = `floatFieldGrp -q -value1 thickness`;

    string $camName = getcamera();
    float $backgdcolorbackup[3] = `getAttr ($camName+".backgroundColor")`; 
    setAttr ($camName+".backgroundColor") -type float3 $InkBackgroundcolor[0] $InkBackgroundcolor[1] $InkBackgroundcolor[2];

    optionVar -floatValue "InkworksBackgroundColor1" $InkBackgroundcolor[0];
    optionVar -floatValue "InkworksBackgroundColor2" $InkBackgroundcolor[1];
    optionVar -floatValue "InkworksBackgroundColor3" $InkBackgroundcolor[2];
    optionVar -floatValue "InkworksContourColor1" $Inkcolor[0];
    optionVar -floatValue "InkworksContourColor2" $Inkcolor[1];
    optionVar -floatValue "InkworksContourColor3" $Inkcolor[2];
    optionVar -floatValue "InkworksContourThickness" $Inkthickness;

    zjInkworksBatchRenderfunction($Inkcolor,$Inkthickness);

    setAttr ($camName+".backgroundColor") -type float3 $backgdcolorbackup[0] $backgdcolorbackup[1] $backgdcolorbackup[2];
}