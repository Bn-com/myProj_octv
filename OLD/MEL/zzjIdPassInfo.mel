global proc zzjIdPassInfo()
{
	if (`window -ex zzjIdPassInfoUI`) deleteUI zzjIdPassInfoUI;
	window -title "idPass" -s 0 -mxb false zzjIdPassInfoUI;

	columnLayout -rs 5 -adj 1;
	rowLayout -numberOfColumns 3 -columnWidth3 55 100 100;
		text -label "   project:" -w 45  -align "left";
	 	textScrollList -numberOfRows 3 -w 100  -allowMultiSelection 0
	 		-append "BubbleGuppies"
	 		-append "ROMA"
	 		-append "Enyo"

	 		-selectItem "BubbleGuppies"
	 		-showIndexedItem 4 zzzz;
	setParent ..;
	columnLayout -rs 5;
		button -l "Get             IDPassInfo" 		-w 160 	-c 	"zzjGetIdPassInfo;";
		button -l "Correct       IDPassInfo" 	-w 160 	-c 	"zzjPromptDialogIdPassInfo;";

	setParent ..;
	rowLayout -numberOfColumns 5
 		-columnWidth5 32 32 32 32 32
 		-columnAlign  1 "right"
		-columnAttach 1 "both" 	0
 		-columnAttach 2 "both"  0
		-columnAttach 3 "both"  0
		-columnAttach 4 "both"  0
		-columnAttach 5 "both"  0;

			button -l "" -h 40 -bgc 1 0 0 -annotation "ColorR" -c "zzjIDPass_Material_Assign(\"colorR\")";
			button -l "" -h 40 -bgc 0 1 0 -annotation "ColorG" -c "zzjIDPass_Material_Assign(\"colorG\")";
			button -l "" -h 40 -bgc 0 0 1 -annotation "ColorB" -c "zzjIDPass_Material_Assign(\"colorB\")";
			button -l "" -h 40 -bgc 1 1 1 -annotation "ColorA" -c "zzjIDPass_Material_Assign(\"colorA\")";
			button -l "" -h 40 -bgc 0 0 0 -annotation "Matte"  -c "zzjIDPass_Material_Assign(\"matte\")";
		setParent ..;
	window -e -w 165 -h 200 zzjIdPassInfoUI;
	showWindow zzjIdPassInfoUI;
}



global proc string getProjectName()
{
	string $temps[]= `textScrollList -q -si zzzz`;
	return $temps[0];
}

global proc string getSlCharName()
{
	string $slObjNames[]=`ls -sl`;
	string $characterName;

	switch(getProjectName())
	{
		case "Enyo":
			string $slObjName=`match "[a-z]*_c[0-9]*[a-z]*" $slObjNames[0]`;
			if (`size $slObjName`==0) error "请选择模型";
//			$characterName=zwGetCharacterNameById(`match "c[0-9]*" $slObjName`);
			break;

		case "ROMA":
//			string $slObjName=`match "[a-z]*_[a-z]*" $slObjNames[0]`;
			string $slObjName=`match "[a-zA-Z]*_[a-zA-Z]*" $slObjNames[0]`;
			if (`size $slObjName`==0) error "请选择模型";
//			$characterName=$slObjName;
			break;

		case "BubbleGuppies":
			string $slObjName=`match "[a-zA-Z]*_c[0-9]*[a-zA-Z]*" $slObjNames[0]`;
			if (`size $slObjName`==0) error "请选择模型";
			string $tmpName=`match "c[0-9]*" $slObjName`;
//			$characterName=`GetCharacterNameById bu $tmpName`;
			break;
	}

//************************************************************************************
	string $root = "//file-cluster/gdc/Resource/Support/Maya/Import/iRender/RenderInfo/"+getProjectName()+"/idPass/" + $slObjName+".txt";
	return $root;
//************************************************************************************
}


global proc zzjGetIdPassInfo()
{

//************************************************************************************
	string $getSlCharName=getSlCharName();
	string $endTmps[]=`getFileList -filespec $getSlCharName`;
	if (`size $endTmps`==0) error "缺少角色的idPass信息，请联系相关负责人";
//************************************************************************************

	int $fileId=`fopen $getSlCharName "r"`;
	string $nextLine = `fgetline $fileId`;

	string $idInfoTmps[];
	clear $idInfoTmps;
	int $idInfoAddTmp=0;
	 	while ( size( $nextLine ) > 0 ) {
//	 		print $nextLine;
			$idInfoTmps[$idInfoAddTmp++]=$nextLine;
	 		$nextLine = `fgetline $fileId`;
	 	}
	 	fclose $fileId;
//	size $idInfoTmps;


	if (!`objExists idmt_IDPass_colorR`) {
		shadingNode -asShader surfaceShader;
		rename `ls -sl` idmt_IDPass_colorR;
		string $sgNodeName=`sets -renderable true -noSurfaceShader true -empty -name surfaceShader1SG`;
		if (`objExists idmt_IDPass_colorRSG`) delete idmt_IDPass_colorRSG;
		rename $sgNodeName idmt_IDPass_colorRSG;
		connectAttr -f idmt_IDPass_colorR.outColor idmt_IDPass_colorRSG.surfaceShader;

		setAttr "idmt_IDPass_colorR.outMatteOpacity" -type double3 0 0 0 ;
		setAttr "idmt_IDPass_colorR.outColor" -type double3 1 0 0 ;
	}
	if (!`objExists idmt_IDPass_colorG`) {
		shadingNode -asShader surfaceShader;
		rename `ls -sl` idmt_IDPass_colorG;
		string $sgNodeName=`sets -renderable true -noSurfaceShader true -empty -name surfaceShader1SG`;
		if (`objExists idmt_IDPass_colorGSG`) delete idmt_IDPass_colorGSG;
		rename $sgNodeName idmt_IDPass_colorGSG;
		connectAttr -f idmt_IDPass_colorG.outColor idmt_IDPass_colorGSG.surfaceShader;

		setAttr "idmt_IDPass_colorG.outMatteOpacity" -type double3 0 0 0 ;
		setAttr "idmt_IDPass_colorG.outColor" -type double3 0 1 0 ;
	}
	if (!`objExists idmt_IDPass_colorB`) {
		shadingNode -asShader surfaceShader;
		rename `ls -sl` idmt_IDPass_colorB;
		string $sgNodeName=`sets -renderable true -noSurfaceShader true -empty -name surfaceShader1SG`;
		if (`objExists idmt_IDPass_colorBSG`) delete idmt_IDPass_colorBSG;
		rename $sgNodeName idmt_IDPass_colorBSG;
		connectAttr -f idmt_IDPass_colorB.outColor idmt_IDPass_colorBSG.surfaceShader;

		setAttr "idmt_IDPass_colorB.outMatteOpacity" -type double3 0 0 0 ;
		setAttr "idmt_IDPass_colorB.outColor" -type double3 0 0 1 ;
	}
	if (!`objExists idmt_IDPass_colorA`) {
		shadingNode -asShader surfaceShader;
		rename `ls -sl` idmt_IDPass_colorA;
		string $sgNodeName=`sets -renderable true -noSurfaceShader true -empty -name surfaceShader1SG`;
		if (`objExists idmt_IDPass_colorASG`) delete idmt_IDPass_colorASG;
		rename $sgNodeName idmt_IDPass_colorASG;
		connectAttr -f idmt_IDPass_colorA.outColor idmt_IDPass_colorASG.surfaceShader;

		setAttr "idmt_IDPass_colorA.outMatteOpacity" -type double3 1 1 1 ;
		setAttr "idmt_IDPass_colorA.outColor" -type double3 0 0 0 ;
	}
	if (!`objExists idmt_IDPass_matte`) {
		shadingNode -asShader lambert;
		rename `ls -sl` idmt_IDPass_matte;
		string $sgNodeName=`sets -renderable true -noSurfaceShader true -empty -name surfaceShader1SG`;
		if (`objExists idmt_IDPass_matteSG`) delete idmt_IDPass_matteSG;
		rename $sgNodeName idmt_IDPass_matteSG;
		connectAttr -f idmt_IDPass_matte.outColor idmt_IDPass_matteSG.surfaceShader;

		setAttr "idmt_IDPass_matte.color" -type double3 0 0 0 ;
		setAttr idmt_IDPass_matte.matteOpacityMode 0;

	}
	editRenderLayerGlobals -currentRenderLayer defaultRenderLayer;
	layerEditorLayerButtonSelect 0 defaultRenderLayer;

	string $renderLayers[]= `ls -type renderLayer "*"`;
//	for($a in $renderLayers)
//	{if ($a=="defaultRenderLayer") continue;catch(`delete $a`);}

	string $smoothNodes[]=`ls -type polySmoothFace`;

	for ($a in $smoothNodes) {catch(`setAttr ($a+".divisions") 0`);}

	for ($i=0;$i<`size $idInfoTmps`;$i+=12)
	{
		string $tmpObjNames[];clear $tmpObjNames;
		$tmpObjNames = stringToStringArray($idInfoTmps[$i+1], " ");
		select -cl;
		for ($x in $tmpObjNames)		select -add $x;
		clear $tmpObjNames;

		string $layerName;
		$layerName= $idInfoTmps[$i];
		$layerName=`match "[0-z]*" $layerName`;

		editRenderLayerGlobals -currentRenderLayer defaultRenderLayer;
		if (`objExists $layerName`) delete $layerName;
		createRenderLayer -name $layerName -number 1 -noRecurse `ls -selection`;
		setAttr "defaultRenderLayer.renderable" 0;

		editRenderLayerGlobals  -currentRenderLayer ($layerName);
		layerEditorLayerButtonSelect 0 ($layerName);

//************************************************************************************

		$tmpObjNames = stringToStringArray($idInfoTmps[$i+3], " ");
		if (`size $tmpObjNames`>1) {
		//	select $tmpObjNames;
		select -cl;
		for ($x in $tmpObjNames)	select -add $x;
		hyperShade -assign idmt_IDPass_colorR;
		}

		if (`size $tmpObjNames`==1 && `size $idInfoTmps[$i+3]`>1) {
		select $idInfoTmps[$i+3];
		hyperShade -assign idmt_IDPass_colorR;}

	clear $tmpObjNames;


		$tmpObjNames = stringToStringArray($idInfoTmps[$i+5], " ");
		if (`size $tmpObjNames`>1) {
		//	select $tmpObjNames;
		select -cl;
		for ($x in $tmpObjNames)	select -add $x;
		hyperShade -assign idmt_IDPass_colorG;
		}

		if (`size $tmpObjNames`==1 && `size $idInfoTmps[$i+5]`>1) {
		select $idInfoTmps[$i+5];
		hyperShade -assign idmt_IDPass_colorG;}

	clear $tmpObjNames;


		$tmpObjNames = stringToStringArray($idInfoTmps[$i+7], " ");
		if (`size $tmpObjNames`>1) {
		//	select $tmpObjNames;
		select -cl;
		for ($x in $tmpObjNames)	select -add $x;
		hyperShade -assign idmt_IDPass_colorB;
		}

		if (`size $tmpObjNames`==1 && `size $idInfoTmps[$i+7]`>1) {
		select $idInfoTmps[$i+7];
		hyperShade -assign idmt_IDPass_colorB;}

	clear $tmpObjNames;


		$tmpObjNames = stringToStringArray($idInfoTmps[$i+9], " ");
		if (`size $tmpObjNames`>1) {
		//	select $tmpObjNames;
		select -cl;
		for ($x in $tmpObjNames)	select -add $x;
		hyperShade -assign idmt_IDPass_colorA;
		}

		if (`size $tmpObjNames`==1 && `size $idInfoTmps[$i+9]`>1) {
		select $idInfoTmps[$i+9];
		hyperShade -assign idmt_IDPass_colorA;}

	clear $tmpObjNames;


		$tmpObjNames = stringToStringArray($idInfoTmps[$i+11], " ");
		if (`size $tmpObjNames`>1) {
		//	select $tmpObjNames;
		select -cl;
		for ($x in $tmpObjNames)	select -add $x;
		hyperShade -assign idmt_IDPass_matte;
		}

		if (`size $tmpObjNames`==1 && `size $idInfoTmps[$i+11]`>1) {
		select $idInfoTmps[$i+11];
		hyperShade -assign idmt_IDPass_matte;}

	clear $tmpObjNames;

		select -cl;
	}
}

global proc zzjPromptDialogIdPassInfo()
{
	string $userName=`getenv "USERNAME"`;
	if (!	(
				$userName=="mahongliang" 	||
				$userName=="liuyulong" 		||
				$userName=="qiuzhenxin" 		||
				$userName=="zhaoluyi" 		||
				$userName=="yingliangquan" 	||
				$userName=="tangliang" 		||
				$userName=="hanbing" 		||
				$userName=="hanhong" 		||
//********************************************************
				$userName=="zhaozhongjie" 	||
				$userName=="zhaozhijie" 		||
				$userName=="yufengsheng" 	||
				$userName=="yangye" 		||
				$userName=="wangyasheng"	||
				$userName=="huojian"		||
				$userName=="wanshoulong"
			)
		)
	error "对不起，你没有权限修改网上的idPass信息";

//************************************************************************************
	string $getSlCharName=getSlCharName();
	string $characterName=`match "[^/]*$" $getSlCharName`;
	string $endTmps[]=`getFileList -filespec $getSlCharName`;
//************************************************************************************

	if (`size $endTmps`==0) zzjWriteIdPassInfo();

	if (`size $endTmps`==1)
	{
		string $tmpMessage="确认要覆盖  "+$characterName+"  的信息吗?";
		string $r=`confirmDialog -message $tmpMessage -button "Yes" -button "No" -defaultButton "Yes" -cancelButton "No" -dismissString "No"`;
		if ($r=="Yes")
		{
			zzjWriteIdPassInfo();
		}
	}
}

global proc zzjWriteIdPassInfo()
{
	string $getSlCharName=getSlCharName();
 	$fileId=`fopen $getSlCharName "w"`;
 	fprint $fileId "";
 	fclose $fileId;

	string $renderLayers[]= `ls -type renderLayer "*"`;
	for($j=0;$j<`size $renderLayers`;$j++)
	{
				if ($renderLayers[$j]== "defaultRenderLayer") continue;
				editRenderLayerGlobals  -currentRenderLayer ($renderLayers[$j]);
				layerEditorLayerButtonSelect 0 ($renderLayers[$j]);
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($renderLayers[$j]+"\r\n");
			 	fclose $fileId;
		//****************************************************************************
				string $objInCurrentRenderLayers[]=`editRenderLayerMembers -q $renderLayers[$j]`;
				for ($i=0;$i<`size $objInCurrentRenderLayers`;$i++)
				{
					$objInCurrentRenderLayers[$i]=`substitute "_*:" $objInCurrentRenderLayers[$i] "*:"`;
					$objInCurrentRenderLayers[$i]=`substitute "RNgroup" $objInCurrentRenderLayers[$i] "*RNgroup"`;
					$objInCurrentRenderLayers[$i]=`substitute "_.RNgroup" $objInCurrentRenderLayers[$i] "*RNgroup"`;

				}
				string $objInCurrentRenderLayer=stringArrayToString($objInCurrentRenderLayers," ");


			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($objInCurrentRenderLayer+"\r\n");
			 	fclose $fileId;
		//****************************************************************************
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId "rChannel\r\n";
			 	fclose $fileId;
				if (`objExists "idmt_IDPass_colorR"`)	hyperShade -objects idmt_IDPass_colorR;
				string $slObjNames[]=`ls -sl`;
				for ($i=0;$i<`size $slObjNames`;$i++)
				{
					$slObjNames[$i]=`substitute "_*:" $slObjNames[$i] "*:"`;
					$slObjNames[$i]=`substitute "RNgroup" $slObjNames[$i] "*RNgroup"`;
					$slObjNames[$i]=`substitute "_.RNgroup" $slObjNames[$i] "*RNgroup"`;

				}
				string $slobjName=stringArrayToString($slObjNames," ");


			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($slobjName+"\r\n");
			 	fclose $fileId;
			 	select -cl  ;
		//****************************************************************************
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId "gChannel\r\n";
			 	fclose $fileId;
				if (`objExists "idmt_IDPass_colorG"`)	hyperShade -objects idmt_IDPass_colorG;
				string $slObjNames[]=`ls -sl`;
				for ($i=0;$i<`size $slObjNames`;$i++)
				{
					$slObjNames[$i]=`substitute "_*:" $slObjNames[$i] "*:"`;
					$slObjNames[$i]=`substitute "RNgroup" $slObjNames[$i] "*RNgroup"`;
					$slObjNames[$i]=`substitute "_.RNgroup" $slObjNames[$i] "*RNgroup"`;
				}
				string $slobjName=stringArrayToString($slObjNames," ");



			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($slobjName+"\r\n");
			 	fclose $fileId;
			 	select -cl  ;
		//****************************************************************************
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId "bChannel\r\n";
			 	fclose $fileId;
				if (`objExists "idmt_IDPass_colorB"`)	hyperShade -objects idmt_IDPass_colorB;
				string $slObjNames[]=`ls -sl`;
				for ($i=0;$i<`size $slObjNames`;$i++)
				{
					$slObjNames[$i]=`substitute "_*:" $slObjNames[$i] "*:"`;
					$slObjNames[$i]=`substitute "RNgroup" $slObjNames[$i] "*RNgroup"`;
					$slObjNames[$i]=`substitute "_.RNgroup" $slObjNames[$i] "*RNgroup"`;
				}
				string $slobjName=stringArrayToString($slObjNames," ");



			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($slobjName+"\r\n");
			 	fclose $fileId;
			 	select -cl  ;
		//****************************************************************************
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId "aChannel\r\n";
			 	fclose $fileId;
				if (`objExists "idmt_IDPass_colorA"`)	hyperShade -objects idmt_IDPass_colorA;
				string $slObjNames[]=`ls -sl`;
				for ($i=0;$i<`size $slObjNames`;$i++)
				{
					$slObjNames[$i]=`substitute "_*:" $slObjNames[$i] "*:"`;
					$slObjNames[$i]=`substitute "RNgroup" $slObjNames[$i] "*RNgroup"`;
					$slObjNames[$i]=`substitute "_.RNgroup" $slObjNames[$i] "*RNgroup"`;
				}
				string $slobjName=stringArrayToString($slObjNames," ");

				$slobjName=`substitute "_*:" $slobjName "*:"`;			//add 2009/2/23


			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($slobjName+"\r\n");
			 	fclose $fileId;
			 	select -cl  ;
		//****************************************************************************
		//****************************************************************************

			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId "mChannel\r\n";
			 	fclose $fileId;
				if (`objExists "idmt_IDPass_matte"`)	hyperShade -objects idmt_IDPass_matte;
				string $slObjNames[]=`ls -sl`;
				for ($i=0;$i<`size $slObjNames`;$i++)
				{
					$slObjNames[$i]=`substitute "_*:" $slObjNames[$i] "*:"`;
					$slObjNames[$i]=`substitute "RNgroup" $slObjNames[$i] "*RNgroup"`;
					$slObjNames[$i]=`substitute "_.RNgroup" $slObjNames[$i] "*RNgroup"`;
				}
				string $slobjName=stringArrayToString($slObjNames," ");

				$slobjName=`substitute "_*:" $slobjName "*:"`;			//add 2009/2/23


			 	$fileId=`fopen $getSlCharName "a"`;
			 	fprint $fileId ($slobjName+"\r\n");
			 	fclose $fileId;
			 	select -cl  ;
		//****************************************************************************
	}
}

global proc zzjIDPass_Material_Assign(string $material)
{
	string $objs[] = `ls -sl`;

	if (!`objExists ("idmt_IDPass_"+$material)`)
	{
		switch ($material)
		{
			case "colorB" :
				shadingNode -asShader surfaceShader -name idmt_IDPass_colorB;
				setAttr "idmt_IDPass_colorB.outColor" -type double3 0 0 1 ;
				setAttr "idmt_IDPass_colorB.outMatteOpacity" -type double3 0 0 0 ;
				break;
			case "colorR" :
				shadingNode -asShader surfaceShader -name idmt_IDPass_colorR;
				setAttr "idmt_IDPass_colorR.outColor" -type double3 1 0 0 ;
				setAttr "idmt_IDPass_colorR.outMatteOpacity" -type double3 0 0 0 ;
				break;
			case "colorG" :
				shadingNode -asShader surfaceShader -name idmt_IDPass_colorG;
				setAttr "idmt_IDPass_colorG.outColor" -type double3 0 1 0 ;
				setAttr "idmt_IDPass_colorG.outMatteOpacity" -type double3 0 0 0 ;
				break;
			case "colorA" :
				shadingNode -asShader surfaceShader -name idmt_IDPass_colorA;
				setAttr "idmt_IDPass_colorA.outColor" -type double3 0 0 0 ;
				setAttr "idmt_IDPass_colorA.outMatteOpacity" -type double3 1 1 1;
				break;
			case "matte" :
				shadingNode -asShader lambert -name idmt_IDPass_matte;
				setAttr "idmt_IDPass_matte.color" -type double3 0 0 0 ;
				setAttr idmt_IDPass_matte.matteOpacityMode 0;
				break;
			case "useBackground" :
				shadingNode -asShader useBackground -name idmt_IDPass_useBackground;
//				setAttr "idmt_IDPass_matte.color" -type double3 0 0 0 ;
//				setAttr idmt_IDPass_matte.matteOpacityMode 0;
				break;

			case "depth" :
				print ("idmt_IDPass_"+$material);
				file -import -type "mayaBinary" (`getenv "DEV_PATH"` + "/Maya/shaders/MOEBIUS_SHADER_DEPTH.mb");
				rename DepthShader "idmt_IDPass_depth";
				shadingNode -asShader surfaceShader -name idmt_IDPass_depth;
				break;
			case "shadow" :
				shadingNode -asShader useBackground -name idmt_IDPass_shadow;
				setAttr "idmt_IDPass_shadow.reflectivity" 0;
				setAttr "idmt_IDPass_shadow.reflectionLimit" 0;
				setAttr "idmt_IDPass_shadow.shadowMask" 1;
				sets -renderable true -noSurfaceShader true -empty -name idmt_IDPass_shadowSG;
				connectAttr -f idmt_IDPass_shadow.outColor idmt_IDPass_shadowSG.surfaceShader;
				break;
			case "AO" :
				if (!`pluginInfo -query -loaded "Mayatomr.mll"`)
					loadPlugin "Mayatomr.mll";
				shadingNode -asShader surfaceShader -name idmt_IDPass_AO;
				mrCreateCustomNode -asTexture "" mib_amb_occlusion;rename idmt_IDPassAO_mib_amb_occlusion;
				setAttr "idmt_IDPassAO_mib_amb_occlusion.samples" 80;
				setAttr "idmt_IDPassAO_mib_amb_occlusion.dark" -type double3 0.2 0.2 0.2;
				setAttr "idmt_IDPassAO_mib_amb_occlusion.max_distance" 5;
				setAttr "idmt_IDPassAO_mib_amb_occlusion.spread" 0.8;
				connectAttr -force idmt_IDPassAO_mib_amb_occlusion.outValue idmt_IDPass_AO.outColor;
				sets -renderable true -noSurfaceShader true -empty -name idmt_IDPass_AOSG;
				connectAttr -f idmt_IDPass_AO.outColor idmt_IDPass_AOSG.surfaceShader;
				break;
			case "lambert" :
				shadingNode -asShader lambert -name idmt_IDPass_lambert;
				setAttr "idmt_IDPass_lambert.color" -type double3 0.5 0.5 0.5 ;
				sets -renderable true -noSurfaceShader true -empty -name idmt_IDPass_lambertSG;
				connectAttr -f idmt_IDPass_lambert.outColor idmt_IDPass_lambertSG.surfaceShader;
				break;



		}
	}

	if (`objExists $objs[0]`)
	{
		select -r $objs;
		switch ($material)
		{
			case "colorB" :
				hyperShade -assign idmt_IDPass_colorB;
				break;
			case "colorR" :
				hyperShade -assign idmt_IDPass_colorR;
				break;
			case "colorG" :
				hyperShade -assign idmt_IDPass_colorG;
				break;
			case "colorA" :
				hyperShade -assign idmt_IDPass_colorA;
				break;
			case "matte" :
				hyperShade -assign idmt_IDPass_matte;
				break;
			case "useBackground" :
				hyperShade -assign idmt_IDPass_useBackground;
				break;

			case "depth" :
				hyperShade -assign idmt_IDPass_depth;
				break;
			case "shadow" :
				hyperShade -assign idmt_IDPass_shadow;
				break;
			case "AO" :
				hyperShade -assign idmt_IDPass_AO;
				break;
			case "lambert" :
				hyperShade -assign idmt_IDPass_lambert;
				break;


		}
	}

}