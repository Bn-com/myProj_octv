/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjConnectZ()
{
	string $exp = "float $depth=DepthShader.depth;
float $near = DepthShader.near;
float $flat = DepthShader.flatmin;
float $flatmax = DepthShader.flatmax;
float $maxv = DepthShader.maxvalue;
float $minv = DepthShader.minvalue;     
float $distance=sqrt(pow(samplerInfo1.pointCameraX,2)+pow(samplerInfo1.pointCameraY,2)+pow(samplerInfo1.pointCameraZ,2)) - $near;
if(DepthShader.ReverseColor == 0)
{
	$distance = 1 -  $distance/($depth - $near);
}else{
	$distance =  $distance/($depth - $near);
}

if($distance < $flat) $distance = $minv;
if($distance > $flatmax) $distance = $maxv;
DepthShader.outColorR=$distance;
DepthShader.outColorG=$distance;
DepthShader.outColorB=$distance;\n";

	string $sl[] = `ls -sl -type surfaceShader`;
	for ($item in $sl)
	{
		string $node[] = `listConnections -s 1 -d 0 -type file $item `;
		disconnectAttr ($node[0] + ".outColor") ($item + ".outColor");
		$exp += "\n" + $item + ".outColorR = $distance * (1.0 - " + $node[0] + ".outAlpha);\n" +
				$item + ".outColorG = $distance * (1.0 - " + $node[0] + ".outAlpha);\n" +
				$item + ".outColorB = $distance * (1.0 - " + $node[0] + ".outAlpha);\n" ;
	}
	string $depthshader[] = `ls -type surfaceShader "DepthShader"`;
	if (`objExists($depthshader[0])`)
	{
		string $exps[] = `listConnections -s 0 -d 1 -type expression $depthshader[0]`;
		if (`objExists($exps[0])`)
			expression -e -s $exp -o $depthshader[0] -alwaysEvaluate 1 -unitConversion all $exps[0];
	}
}