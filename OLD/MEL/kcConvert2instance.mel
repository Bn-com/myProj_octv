/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//
// This tool will make unlock and center the pivots of the objects
//
// Assumption: 
//
// 1) the object to be instanced is not already an instanced object
// 2) all the objects have the same size
//

proc process(string $obj)
{
	// unlock 

	setAttr -keyable on -lock off ($obj + ".tx");
	setAttr -keyable on -lock off ($obj + ".ty");
	setAttr -keyable on -lock off ($obj + ".tz");
	setAttr -keyable on -lock off ($obj + ".rx");
	setAttr -keyable on -lock off ($obj + ".ry");
	setAttr -keyable on -lock off ($obj + ".rz");
	setAttr -keyable on -lock off ($obj + ".sx");
	setAttr -keyable on -lock off ($obj + ".sy");
	setAttr -keyable on -lock off ($obj + ".sz");
	setAttr -keyable on -lock off ($obj + ".v");

	// center pivot

	xform -centerPivots $obj;
}

global proc kcConvert2instance()
{
	// load the plugin

	if (!`pluginInfo -q -loaded -name "computeRotation.mll"`)
		loadPlugin "computeRotation.mll";

	string $selected[] = `ls -long -selection`;

	if (`size $selected` < 2)
		error("Please select 2 or more objects.");

	string $child[] = `listRelatives -fullPath -children $selected[0]`;

	if ((`size $child` != 1) || (`nodeType $child[0]` != "mesh"))
		error("First object has more than 1 child or it is not a mesh.");

	process($selected[0]);

	string $baseShape = $child[0];
	float $basePos[3] = `xform -q -rotatePivot $selected[0]`;

	for ($i = 1; $i < size($selected); $i++)
	{
		process($selected[$i]);

		select $selected[0] $selected[$i];
		float $rot[3] = eval("computeRotation");

		// convert duplicate to instance

		string $child[] = `listRelatives -fullPath -children $selected[$i]`;

		if ((`size $child` == 1) && (`nodeType $child[0]` == "mesh"))
		{
			string $allParents[] = `listRelatives -allParents $child[0]`;

			parent -addObject -shape $baseShape $selected[$i];

			if (`size $allParents` > 1)
			{
			    // already an instance object

//				warning($child[0] + " is already an instanced object.");
//				continue;
			}
			else
			{
				delete $child[0];
			}
		}

		float $pos[3] = `xform -q -rotatePivot $selected[$i]`;

		// set the pivots

		xform -pivots $basePos[0] $basePos[1] $basePos[2] $selected[$i];

		// apply the rotation

		xform -rotation $rot[0] $rot[1] $rot[2] $selected[$i];

		// apply the translation

		xform -translation ($pos[0] - $basePos[0]) ($pos[1] - $basePos[1]) ($pos[2] - $basePos[2]) $selected[$i];
	}

	// restore original selection

	select $selected;
}