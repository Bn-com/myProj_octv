/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: »ÆÖÙÎ¬
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwNamingTool()
{
	string $str, $buffer[];

	if(`window -exists zwNamingTool`)
		deleteUI zwNamingTool;

	window -menuBar true -title "Object Naming Tool" -resizeToFitChildren true zwNamingTool;
		menu -label "Help";
			menuItem -label "Help on Naming Tool..." -command "zjHelpCallback zwNamingTool";

		string $formLayout1 = `formLayout`;
			string $tabLayout = `tabLayout`;
				string $formLayout2 = `formLayout`;
					string $formLayout3 = `formLayout`;    //modified by lijunyan,popup menu don't show in the check boxs;
					popupMenu -button 1 -parent $formLayout3 -postMenuCommandOnce true -postMenuCommand "zwNamingToolMenu \"popupMenuLeft\""  popupMenuLeft;
					popupMenu -button 3 -parent $formLayout3 -postMenuCommandOnce true -postMenuCommand "zwNamingToolMenu \"popupMenuRight\"" popupMenuRight;

					
					string $text1 = `text -label "Object"`;
					string $text2 = `text -label "Side"`;
					string $text3 = `text -label "Lod"`;
					string $text4 = `text -label "Part"`;
					string $text5 = `text -label "Name:"`;
 
 //========modified by zhangben, add suffix "_" checkBox; add a layout to prevent popup menu influence checkbox========¡ý¡ýZB                   
					string $checkLayout = `columnLayout -p $formLayout3`;
					  checkBox  -p $checkLayout  -label "suffix\"_\""
                        				     -cc "SUFFIX_STATE"		    
					                     suffixCB;
  					  checkBox  -p $checkLayout  -label "suAfix\"_ca_\""
    				     -cc "SUAFIX_STATE"		    
                     suffixCA;                    
//========================modified by zhangben, add suffix "_" checkBox;====================================¡ü¡üZB	
									
					
					textField -width 100 -p $formLayout3 textFieldObj;
						popupMenu -button 1 -parent "textFieldObj" -postMenuCommandOnce true -postMenuCommand "zwNamingToolObjMenu \"popupMenuObjLeft\"" popupMenuObjLeft;
						popupMenu -button 3 -parent "textFieldObj" -postMenuCommandOnce true -postMenuCommand "zwNamingToolObjMenu \"popupMenuObjRight\"" popupMenuObjRight;

					string $text6 = `text -label "_" -p $formLayout3`;

					textField -width 50 -p $formLayout3 textFieldSide ;
						popupMenu -button 1 -parent "textFieldSide" -postMenuCommandOnce true -postMenuCommand "zwNamingToolSideMenu \"popupMenuSideLeft\"" popupMenuSideLeft;
						popupMenu -button 3 -parent "textFieldSide" -postMenuCommandOnce true -postMenuCommand "zwNamingToolSideMenu \"popupMenuSideRight\"" popupMenuSideRight;

					string $text7 = `text -label "_" -p $formLayout3`;

					textField -width 50  -p $formLayout3 textFieldLod;
						popupMenu -button 1 -parent "textFieldLod" -postMenuCommandOnce true -postMenuCommand "zwNamingToolLodMenu \"popupMenuLodLeft\"" popupMenuLodLeft;
						popupMenu -button 3 -parent "textFieldLod" -postMenuCommandOnce true -postMenuCommand "zwNamingToolLodMenu \"popupMenuLodRight\"" popupMenuLodRight;

					string $text8 = `text -label "_" -p $formLayout3`;

					textField -width 80 -p $formLayout3 textFieldPart;
						popupMenu -button 1 -parent "textFieldPart" -postMenuCommandOnce true -postMenuCommand "zwNamingToolPartMenu \"popupMenuPartLeft\"" popupMenuPartLeft;
						popupMenu -button 3 -parent "textFieldPart" -postMenuCommandOnce true -postMenuCommand "zwNamingToolPartMenu \"popupMenuPartRight\"" popupMenuPartRight;
//==========================modified by zhangben, add suffix "_" checkBox;	====================================ZB				
					string $text9 = `text -label "_" -p $formLayout3 -vis 0 suffix_TX`; 
//==================================================================================================ZB
//==========================modified by zhangben, add suffix "_ca_" checkBox;	====================================ZB				
					string $text99 = `text -label "_c" -p $formLayout3 -vis 0 suffix_TX01`; 
//==================================================================================================ZB					
					
					//textField -width 80 testTFP;
					//zwNamingTool	
				    formLayout -edit
					
                                       -attachForm		$text1		"top"		10	
					//-attachControl		$text1		"top"		10	$formLayout3
					-attachOppositeControl	$text1		"left"		0	textFieldObj

					-attachOppositeControl	$text2		"left"		0	textFieldSide
					-attachOppositeControl	$text2		"bottom"	0	$text1

					-attachOppositeControl	$text3		"left"		0	textFieldLod
					-attachOppositeControl	$text3		"bottom"	0	$text1

					-attachOppositeControl	$text4		"left"		0	textFieldPart
					-attachOppositeControl	$text4		"bottom"	0	$text1

					-attachOppositeControl	$text4		"left"		0	textFieldPart
					-attachOppositeControl	$text4		"bottom"	0	$text1
					
//==================modified by zhangben, add suffix "_" checkBox;============================================ZB
					 -attachOppositeControl       $checkLayout  "left"     85   $text4 
					 -attachOppositeControl	$checkLayout  "bottom"	0	$text4   
					 -attachForm		$checkLayout	 "top"		12   
//==================================================================================================ZB
					 -attachForm		$text5		"top"		35
                    //zwNamingTool					
					//-attachControl		$text5		"top"		35	$formLayout3
					-attachForm		$text5		"left"		5

					-attachNone		textFieldObj	"top"
					-attachControl		textFieldObj	"left"		5	$text5
					-attachOppositeControl	textFieldObj	"bottom"	0	$text5

					-attachNone		$text6		"top"
					-attachControl		$text6		"left"		5	textFieldObj
					-attachOppositeControl	$text6		"bottom"	0	$text5

					-attachControl		textFieldSide	"left"		5	$text6
					-attachOppositeControl	textFieldSide	"bottom"	0	$text5

					-attachControl		$text7		"left"		5	textFieldSide
					-attachOppositeControl	$text7		"bottom"	0	$text5

					-attachControl		textFieldLod	"left"		5	$text7
					-attachOppositeControl	textFieldLod	"bottom"	0	$text5

					-attachControl		$text8		"left"		5	textFieldLod
					-attachOppositeControl	$text8		"bottom"	0	$text5

					-attachControl		textFieldPart	"left"		5	$text8
					-attachOppositeControl	textFieldPart	"bottom"	0	$text5
//==================modified by zhangben, add suffix "_" checkBox;============================================ZB	
					-attachOppositeControl  $text9  "left" 85   textFieldPart
					-attachOppositeControl  $text9  "bottom" 0 	textFieldPart			
//==================================================================================================ZB
					$formLayout3;
				    setParent $formLayout2;
			        string $radioButtonGrp = `radioButtonGrp -visible false  -numberOfRadioButtons 4 -label "Type:" -labelArray4 "Character" "Prop" "Background" "General" -columnWidth5 50 80 80 80 80 -columnAlign 1 "left" -select 1 type`;
					radioButtonGrp -edit -changeCommand ("zwNamingToolType \"" + $radioButtonGrp + "\"") $radioButtonGrp;				
					string $separator1 = `separator `;
                                      string $separator2 = `separator`;
			        checkBoxGrp -label "Option:" -label1 "rename sub-object (one level only)." -columnWidth2 50 310 checkBoxGrpSub;
			    
                                 formLayout   -edit
				       -attachForm		$radioButtonGrp	"top"		5
					-attachForm		$radioButtonGrp	"left"		5
                                         -attachForm		$separator1	"top"		5
					//-attachControl		$separator1	"top"		5	$formLayout3
					-attachForm		$separator1	"left"		0
					-attachForm		$separator1	"right"		0
			              	-attachControl		$separator2	"top"		10	$formLayout3
					-attachForm		$separator2	"left"		0
					-attachForm		$separator2	"right"		0				
					
					-attachControl		checkBoxGrpSub	"top"		10	$separator2
					-attachForm		checkBoxGrpSub	"left"		5
                                $formLayout2;
				setParent   $tabLayout;
				string $formLayout4 = `formLayout`;
					text -label "* _ [ Find What ] _ *     ->     * _ [ Replace With ] _ *" text1;
					textFieldGrp -columnWidth 1 100 -adjustableColumn 2 -label "Find What:" textFieldGrpFind;
					textFieldGrp -columnWidth 1 100 -adjustableColumn 2 -label "Replace With:" textFieldGrpRep;

					// added by KC (20 Sept 2003)
					checkBox -label "Rename channels in all locators and blendshapes" -value false checkBoxRenameChannel;

					setParent..;
				formLayout -edit
					-attachForm		text1			"top"		20
					-attachForm		text1			"left"		70

					-attachControl		textFieldGrpFind	"top"		20	text1
					-attachForm		textFieldGrpFind	"left"		0
					-attachForm		textFieldGrpFind	"right"		50

					-attachControl		textFieldGrpRep		"top"		5	textFieldGrpFind
					-attachForm		textFieldGrpRep		"left"		0
					-attachForm		textFieldGrpRep		"right"		50

					-attachControl		checkBoxRenameChannel		"top"		5	textFieldGrpRep
					-attachForm		checkBoxRenameChannel		"left"		70
				$formLayout4;

				columnLayout -adjustableColumn true;
					string $textFieldButtonGrp1 = `textFieldButtonGrp -label "Add Prefix" -buttonLabel "OK"`;
					string $textFieldButtonGrp2 = `textFieldButtonGrp -label "Remove Prefix" -buttonLabel "OK"`;
					string $textFieldButtonGrp3 = `textFieldButtonGrp -label "Add Postfix" -buttonLabel "OK"`;
					string $textFieldButtonGrp4 = `textFieldButtonGrp -label "Remove Postfix" -buttonLabel "OK"`;
					string $textFieldButtonGrp5 = `textFieldButtonGrp -label "Select Prefix" -buttonLabel "OK"`;
					textFieldButtonGrp -edit -buttonCommand ("zwNamingToolSuffix 1 \"" + $textFieldButtonGrp1 + "\"") $textFieldButtonGrp1;
					textFieldButtonGrp -edit -buttonCommand ("zwNamingToolSuffix 2 \"" + $textFieldButtonGrp2 + "\"") $textFieldButtonGrp2;
					textFieldButtonGrp -edit -buttonCommand ("zwNamingToolSuffix 3 \"" + $textFieldButtonGrp3 + "\"") $textFieldButtonGrp3;
					textFieldButtonGrp -edit -buttonCommand ("zwNamingToolSuffix 4 \"" + $textFieldButtonGrp4 + "\"") $textFieldButtonGrp4;
					textFieldButtonGrp -edit -buttonCommand ("zxPerfixSel \"" +  $textFieldButtonGrp5 + "\"") $textFieldButtonGrp5;
					setParent..;

				columnLayout -adjustableColumn true;
					button -align "left" -annotation "Ñ¡Ôñ²¢´òÓ¡ÎÊÌâ½Úµã" -label "¼ì²éËùÓÐ½ÚµãÃû×ÖÊÇ·ñÓÉ4 ²¿·ÖÒÔÉÏ×é³É" -command "zwNamingToolCheckTokens";
					button -align "left" -annotation "Ñ¡Ôñ²¢´òÓ¡ÎÊÌâ½Úµã" -label "¼ì²éËùÓÐ½ÚµãÃû×ÖÊÇ·ñ·ûºÏObject_Side_Lod_Part" -command "zwNamingToolCheckObj";
					button -align "left" -annotation "Ñ¡Ôñ²¢´òÓ¡ÎÊÌâ½Úµã" -label "¼ì²éÑ¡Ôñ×é¼°Æä×ÓÎïÌåÃû×ÖÊÇ·ñ¸úÎÄ¼þÃûÏà·û" -command "zwNamingToolCheckGrp";
					setParent..;

				setParent..;
			string $button1 = `button -label "Rename" button1`;
			string $button2 = `button -label "Apply" button2`;
			string $button3 = `button -label "Close" -command "deleteUI zwNamingTool"`;
			setParent..;
		formLayout -edit
			-attachForm		$tabLayout	"top"		0
			-attachForm		$tabLayout	"left"		0
			-attachControl		$tabLayout	"bottom"	5	$button1 
			-attachForm		$tabLayout	"right"		0

			-attachForm		$button1	"left"		5
			-attachForm		$button1	"bottom"	5
			-attachPosition		$button1	"right"		0	33

			-attachControl		$button2	"left"		5	$button1
			-attachForm		$button2	"bottom"	5
			-attachPosition		$button2	"right"		0	66

			-attachControl		$button3	"left"		5	$button2
			-attachForm		$button3	"bottom"	5
			-attachForm		$button3	"right"		5
		$formLayout1;
	
	tabLayout -edit	-tabLabelIndex 1 "Rename Selected" -tabLabelIndex 2 "Rename All" -tabLabelIndex 3 "Affix" -tabLabelIndex 4 "Check Name" -changeCommand ("zwNamingToolSetUI \"" + $tabLayout + "\" \"" + $button1 + "\" \"" + $button2 + "\"") $tabLayout;
	zwNamingToolSetUI $tabLayout $button1 $button2;
    //window -q -wh zwNamingTool
    window -e -wh 437 236 zwNamingTool;
	showWindow zwNamingTool;	
	
}





global proc zwNamingToolMenu(string $menu)
{
	setParent -menu $menu;

	menuItem -label "WinxClub" -subMenu true;

	menuItem -label "MSH_body_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"body_\"	textFieldPart;";

	menuItem -divider true;

	menuItem -label "MSH_eye_L_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"eye_L_\"	textFieldPart;";
	menuItem -label "MSH_eye_R_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"eye_R_\"	textFieldPart;";

	menuItem -divider true;

	menuItem -label "MSH_eyeBrows_L_"	-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"eyeBrows_L_\"	textFieldPart;";
	menuItem -label "MSH_eyeBrows_R_"	-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"eyeBrows_R_\"	textFieldPart;";

	menuItem -divider true;

	menuItem -label "MSH_hair_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"hair_\"	textFieldPart;";
	menuItem -label "MSH_head_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"head_\"	textFieldPart;";

	menuItem -divider true;

	menuItem -label "MSH_teeth_UP_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"teeth_UP_\"	textFieldPart;";
	menuItem -label "MSH_teeth_DWN_"	-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"teeth_DWN_\"	textFieldPart;";

	menuItem -divider true;

	menuItem -label "MSH_tongue_"		-command "textField -edit -text \"MSH\" textFieldObj; textField -edit -text \"\" textFieldSide; textField -edit -text \"\" textFieldLod; textField -edit -text \"tongue_\"	textFieldPart;";
}

global proc zwNamingToolObjMenu(string $menu)
{
//	setParent -menu $menu;

//	menuItem -label "MSH" -command "textField -edit -text \"MSH\" textFieldObj";
	
//Add by zhaozhongjie 
	setParent -menu $menu;
	menuItem -subMenu true -label "Modeling";
 				menuItem -label "MSH - poly surface"		-command "textField -edit -text \"MSH\" textFieldObj";
 				menuItem -label "GRP - group"				-command "textField -edit -text \"GRP\" textFieldObj";
 				menuItem -label "LTC - lattice"				-command "textField -edit -text \"LTC\" textFieldObj";
  				menuItem -label "LTB - lattice base"		-command "textField -edit -text \"LTB\" textFieldObj";
 				menuItem -label "FFD - ffd lattice node"	-command "textField -edit -text \"FFD\" textFieldObj";
 		setParent -menu ..;		
	menuItem -subMenu true -label "Setup";
 				menuItem -label "JNT - joint"				-command "textField -edit -text \"JNT\" textFieldObj";
 				menuItem -label "JNB - joint (body)"		-command "textField -edit -text \"JNB\" textFieldObj";
 				menuItem -label "CTRL - animation control"	-command "textField -edit -text \"CTRL\" textFieldObj";
 				menuItem -label "PIV - animation pivot (mesh cash, parenting)"		-command "textField -edit -text \"PIV\" textFieldObj";
  				menuItem -label "CRV - curve"				-command "textField -edit -text \"CRV\" textFieldObj";
  				menuItem -label "LOC - locator (anim)"		-command "textField -edit -text \"LOC\" textFieldObj";
  				menuItem -label "LOB - locator (body)"		-command "textField -edit -text \"LOB\" textFieldObj";
  				menuItem -label "LOF - locator (face)"		-command "textField -edit -text \"LOF\" textFieldObj";
  				menuItem -label "CLS - cluster"				-command "textField -edit -text \"CLS\" textFieldObj";
  				menuItem -label "CLH - cluster handle"		-command "textField -edit -text \"CLH\" textFieldObj";
  				menuItem -label "SKC - skin cluster"		-command "textField -edit -text \"SKC\" textFieldObj";
  				menuItem -label "GRP - group"				-command "textField -edit -text \"GRP\" textFieldObj";
  				menuItem -label "GEO - geometry"			-command "textField -edit -text \"GEO\" textFieldObj";
  				menuItem -label "SEL - selection set"		-command "textField -edit -text \"SEL\" textFieldObj";
  				menuItem -label "DSP - display layer"		-command "textField -edit -text \"DSP\" textFieldObj";
  				menuItem -label "STG - standin geometry"	-command "textField -edit -text \"STG\" textFieldObj";
  				menuItem -label "IKH - ikhandle"			-command "textField -edit -text \"IKH\" textFieldObj";
  				menuItem -label "PAC - parent constraint"	-command "textField -edit -text \"PAC\" textFieldObj";
  				menuItem -label "POC - point constraint"	-command "textField -edit -text \"POC\" textFieldObj";
  				menuItem -label "ORC - orient constraint"	-command "textField -edit -text \"ORC\" textFieldObj";
  				menuItem -label "SCN - scriptJobNodes"		-command "textField -edit -text \"SCN\" textFieldObj";
  				menuItem -label "EXP - expressions"			-command "textField -edit -text \"EXP\" textFieldObj";
  				menuItem -label "WRP - wrap deformers"		-command "textField -edit -text \"WRP\" textFieldObj";
  				menuItem -label "WIR - wire deformers"		-command "textField -edit -text \"WIR\" textFieldObj";
 		setParent -menu ..;	
 	menuItem -subMenu true -label "HairDress";
 				menuItem -label "FLC - follicle"			-command "textField -edit -text \"FLC\" textFieldObj";
 				menuItem -label "HS - hair system"			-command "textField -edit -text \"HS\" textFieldObj";
 				menuItem -label "OPC - output curve"		-command "textField -edit -text \"OPC\" textFieldObj";
 				menuItem -label "STC - start curve"			-command "textField -edit -text \"STC\" textFieldObj";
 				menuItem -label "PFX - paintEffect node"	-command "textField -edit -text \"PFX\" textFieldObj";
 				menuItem -label "SHN - Shadow Hair Nurbs"	-command "textField -edit -text \"SHN\" textFieldObj";
 				menuItem -label "SLP - scalp geometry"		-command "textField -edit -text \"SLP\" textFieldObj";
 				menuItem -label "BLD - baldness map texture node"	-command "textField -edit -text \"BLD\" textFieldObj";
 				menuItem -label "CLH - haircolor texture node"		-command "textField -edit -text \"CLH\" textFieldObj";
 				menuItem -label "BSH - paintEffect brush node"		-command "textField -edit -text \"BSH\" textFieldObj";
 		setParent -menu ..;	
 	menuItem -subMenu true -label "Maya Nodes";
 				menuItem -label "PVP - poly vertex position node (polyVertexPos)"		-command "textField -edit -text \"PVP\" textFieldObj";
 				menuItem -label "PMA - plusminusaverage node"		-command "textField -edit -text \"PMA\" textFieldObj";
 				menuItem -label "MDI - multiplydivide node"			-command "textField -edit -text \"MDI\" textFieldObj";
 				menuItem -label "REV - reverse node"			-command "textField -edit -text \"REV\" textFieldObj";
 				menuItem -label "RMV - remapvalue node"			-command "textField -edit -text \"RMV\" textFieldObj";
 				menuItem -label "CLA - clamp node"				-command "textField -edit -text \"CLA\" textFieldObj";
 				menuItem -label "CON - condition node"			-command "textField -edit -text \"CON\" textFieldObj";
 				menuItem -label "BLC - blendcolors node"		-command "textField -edit -text \"BLC\" textFieldObj";
 				menuItem -label "PCI - point on curveInfo node"	-command "textField -edit -text \"PCI\" textFieldObj";
 				menuItem -label "SRP - slerp spine node"		-command "textField -edit -text \"SRP\" textFieldObj";
  				menuItem -label "DBT - distance between node"	-command "textField -edit -text \"DBT\" textFieldObj";
 				menuItem -label "SRN - set range node"			-command "textField -edit -text \"SRN\" textFieldObj";
 				menuItem -label "VPC - vector product node"		-command "textField -edit -text \"VPC\" textFieldObj";
  		setParent -menu ..;		
 	menuItem -subMenu true -label "Special Nodes";
 				menuItem -label "POR - pose reader node (comet plugin)"		-command "textField -edit -text \"PVP\" textFieldObj";
  		setParent -menu ..;	
}

global proc zwNamingToolSideMenu(string $menu)
{
	setParent -menu $menu;

	menuItem -label "c" -command "textField -edit -text \"c\" textFieldSide";
	menuItem -label "l" -command "textField -edit -text \"l\" textFieldSide";
	menuItem -label "r" -command "textField -edit -text \"r\" textFieldSide";

	menuItem -divider true;

	menuItem -label "C" -command "textField -edit -text \"C\" textFieldSide";
	menuItem -label "L" -command "textField -edit -text \"L\" textFieldSide";
	menuItem -label "R" -command "textField -edit -text \"R\" textFieldSide";
}

global proc zwNamingToolLodMenu(string $menu)
{
	setParent -menu $menu;

	menuItem -label "an" -command "textField -edit -text \"an\" textFieldLod";
	menuItem -label "cl" -command "textField -edit -text \"cl\" textFieldLod";
	menuItem -label "fa" -command "textField -edit -text \"fa\" textFieldLod";
	menuItem -label "hi" -command "textField -edit -text \"hi\" textFieldLod";
	menuItem -label "lo" -command "textField -edit -text \"lo\" textFieldLod";
	menuItem -label "md" -command "textField -edit -text \"md\" textFieldLod";
}

global proc zwNamingToolPartMenu(string $menu)
{
	setParent -menu $menu;

	menuItem -label "arm"		-command "textField -edit -text \"arm\"		textFieldPart";
	menuItem -label "ball"		-command "textField -edit -text \"ball\"	textFieldPart";
	menuItem -label "body"		-command "textField -edit -text \"body\"	textFieldPart";
	menuItem -label "botteeth"	-command "textField -edit -text \"botteeth\"	textFieldPart";
	menuItem -label "calf"		-command "textField -edit -text \"calf\"	textFieldPart";
	menuItem -label "chest"		-command "textField -edit -text \"chest\"	textFieldPart";
	menuItem -label "cloth"		-command "textField -edit -text \"cloth\"	textFieldPart";
	menuItem -label "cornea"	-command "textField -edit -text \"cornea\"	textFieldPart";
	menuItem -label "eye"		-command "textField -edit -text \"eye\"		textFieldPart";
	menuItem -label "geo"		-command "textField -edit -text \"geo\"		textFieldPart";
	menuItem -label "hand"		-command "textField -edit -text \"hand\"	textFieldPart";
	menuItem -label "iris"		-command "textField -edit -text \"iris\"	textFieldPart";
	menuItem -label "lens"		-command "textField -edit -text \"lens\"	textFieldPart";
	menuItem -label "neck"		-command "textField -edit -text \"neck\"	textFieldPart";
	menuItem -label "pelvis"	-command "textField -edit -text \"pelvis\"	textFieldPart";
	menuItem -label "pupil"		-command "textField -edit -text \"pupil\"	textFieldPart";
	menuItem -label "shoe"		-command "textField -edit -text \"shoe\"	textFieldPart";
	menuItem -label "tearduct"	-command "textField -edit -text \"tearduct\"	textFieldPart";
	menuItem -label "thigh"		-command "textField -edit -text \"thigh\"	textFieldPart";
	menuItem -label "toe"		-command "textField -edit -text \"toe\"		textFieldPart";
	menuItem -label "tongue"	-command "textField -edit -text \"tongue\"	textFieldPart";
	menuItem -label "topteeth"	-command "textField -edit -text \"topteeth\"	textFieldPart";
	menuItem -label "waist"		-command "textField -edit -text \"waist\"	textFieldPart";
	menuItem -label "whiteeye"	-command "textField -edit -text \"whiteeye\"	textFieldPart";
}

global proc zwNamingToolSetUI(string $tabLayout, string $button1, string $button2)
{
	int $selectTabIndex = `tabLayout -query -selectTabIndex $tabLayout`;
	if($selectTabIndex == 1)
	{	
		
		button -edit -enable true -command "zwNamingToolRenameSelected;\ndeleteUI zwNamingTool;" $button1;
		button -edit -enable true -command "zwNamingToolRenameSelected" $button2;
		
	}
	else if($selectTabIndex == 2)
	{
		button -edit -enable true -command "zwNamingToolRenameAll;\ndeleteUI zwNamingTool;" $button1;
		button -edit -enable true -command "zwNamingToolRenameAll" $button2;
	}
	else if($selectTabIndex == 3 || $selectTabIndex == 4)
	{
		button -edit -enable false $button1;
		button -edit -enable false $button2;
	}
}

global proc zwNamingToolType(string $radioButtonGrp)
{
	if (`radioButtonGrp -query -select $radioButtonGrp` == 1)
	{  
//		string $buf[] = `optionMenu -query -itemListLong optionMenuLod`;
//		for ($child in $buf)
//			deleteUI $child;
//		setParent -menu optionMenuLod;
//			menuItem -label "lo";
//			menuItem -label "md";
//			menuItem -label "hi";
//			menuItem -label "an";
//			menuItem -label "cl";
//			menuItem -label "fa";
//		optionMenu -edit -value "lo" optionMenuLod;
		checkBox -edit -enable true checkBoxObj;
//		checkBox -edit -enable true checkBoxLod;
//		checkBox -edit -enable true checkBoxPart;
		checkBoxGrp -edit -enable true -value1 false checkBoxGrpSub;

//		optionMenu -edit -enable true optionMenuSide;
//		optionMenu -edit -enable true optionMenuLod;

		textField -edit -visible true -enable true textFieldLod;
		textField -edit -visible true -enable true textFieldPart;

		button -edit -enable true -command "zwNamingToolRenameSelected;\ndeleteUI zwNamingTool;" button1;
		button -edit -enable true -command "zwNamingToolRenameSelected" button2;




	}


	else if (`radioButtonGrp -query -select $radioButtonGrp` == 4)
	{  

		checkBox -edit -enable false -value true checkBoxObj;
//		checkBox -edit -enable false -value true checkBoxLod;
//		checkBox -edit -enable false -value true checkBoxPart;

		textField -edit -visible true -enable false textFieldLod;
		textField -edit -visible true -enable false textFieldPart;

//		optionMenu -edit -enable false optionMenuSide;
//		optionMenu -edit -enable false optionMenuLod;
//		optionMenu -edit -enable false optionMenuPart;
		checkBoxGrp -edit -enable false -value1 false checkBoxGrpSub;

		button -edit -enable true -command "zxRenameGeneral;\ndeleteUI zwNamingTool;" button1;
		button -edit -enable true -command "zxRenameGeneral" button2;

	}

	else
	{    
//		string $buf[] = `optionMenu -query -itemListLong optionMenuLod`;
//		for ($child in $buf)
//			deleteUI $child;
//		setParent -menu optionMenuLod;
//			menuItem -label "lo";
//			menuItem -label "md";
//			menuItem -label "hi";
//			menuItem -label "an";
//			menuItem -label "fa";
//		optionMenu -edit -value "lo" optionMenuLod;
		checkBox -edit -enable false -value true checkBoxObj;
//		checkBox -edit -enable true -value true checkBoxLod;
//		checkBox -edit -enable true -value true checkBoxPart;

//		optionMenu -edit -enable true optionMenuSide;
//		optionMenu -edit -enable true optionMenuLod;
	
//		textField -edit -visible true -enable true textFieldLod;
//		textField -edit -visible true -enable true textFieldPart;
	
	}


//	zwNamingToolObj "checkBoxObj";
//	zwNamingToolPart "checkBoxLod" "checkBoxPart";
}

global proc zwNamingToolObj(string $checkBox)
{
	if (`checkBox -query -value $checkBox`)
	{
		optionMenu -edit -visible false optionMenuObj;
		textField -edit -visible true textFieldObj;
	}
	else
	{
		optionMenu -edit -visible true optionMenuObj;
		textField -edit -visible false textFieldObj;
	}
}

global proc zwNamingToolPart(string $checkBox1, string $checkBox2)
{
	if (`checkBox -query -value $checkBox1`)
	{
		optionMenu -edit -visible false optionMenuLod;
		textField -edit -visible true textFieldLod;
	}

	else
	{
		optionMenu -edit -visible true -enable true optionMenuLod;
		textField -edit -visible false textFieldLod;
	}
	if (`checkBox -query -value $checkBox2`)
	{
//		optionMenu -edit -visible false optionMenuPart;
		textField -edit -visible true textFieldPart;
	}

	else
	{
//		optionMenu -edit -visible true -enable true optionMenuPart;
		textField -edit -visible false textFieldPart;
	}
	
}

global proc zwNamingToolRenameAll()
{
	string $temp, $newname, $buf[];

	string $findWhat = `textFieldGrp -query -text textFieldGrpFind`;
	if (`match "_+" $findWhat` != $findWhat)
	{
		while (`gmatch $findWhat "_*"` && $findWhat != "_")
			$findWhat = `substring $findWhat 2 (size($findWhat))`;
		while (`gmatch $findWhat "*_"` && $findWhat != "_")
			$findWhat = `substring $findWhat 1 (size($findWhat)-1)`;
		if ($findWhat == "" || $findWhat == "_")
			return;
	}

	string $replaceWith = `textFieldGrp -query -text textFieldGrpRep`;
	if (`match "_+" $replaceWith` != $replaceWith)
	{
		while (`gmatch $replaceWith "_*"` && $replaceWith != "_")
			$replaceWith = `substring $replaceWith 2 (size($replaceWith))`;
		while (`gmatch $replaceWith "*_"` && $replaceWith != "_")
			$replaceWith = `substring $replaceWith 1 (size($replaceWith)-1)`;
		if ($replaceWith == "_")
			return;
	}
	string $split = "_";
	if ($replaceWith == "")
		$split = "";

	string $nodes[] = `ls -long ("*" + $findWhat + "*")`;
	string $readonly[] =`ls -long -readOnly`;
/*	for ($i=0; $i<size($nodes); $i++)
	{
		for ($j=$i+1; $j<size($nodes); $j++)
		{
			if (`tokenize $nodes[$j] "|" $buf`  > `tokenize $nodes[$i] "|" $buf`)
			{
				$temp = $nodes[$i];
				$nodes[$i] = $nodes[$j];
				$nodes[$j] = $temp;
			}
		}
	}

	for ($i=0; $i<size($nodes); $i++)
*/	for ($i=size($nodes)-1; $i>=0; $i--)
	{
		if (!`stringArrayCount $nodes[$i] $readonly` && `objExists $nodes[$i]`)
		{
			tokenize $nodes[$i] "|" $buf;
			$newname = $buf[size($buf)-1];
			if (`match "_+" $findWhat` == $findWhat)
			{
				$newname = `substitute "^_+" $newname ""`;
				$newname = `substitute "_+$" $newname ""`;
				string $str = `substitute $findWhat $newname $replaceWith`;
				while ($newname != $str)
				{
					$newname = $str;
					$str = `substitute $findWhat $newname $replaceWith`;
				}
				evalEcho ("rename \"" + $nodes[$i] + "\" \"" + $newname + "\"");
			}
			else
			{
				if(`gmatch $newname ($findWhat + "_*")`)
					rename $nodes[$i] `substitute ($findWhat + "_") $newname ($replaceWith + $split)`;
				else if(`gmatch $newname ("*_" + $findWhat + "_*")`)
					rename $nodes[$i] `substitute ("_" + $findWhat + "_") $newname ($split + $replaceWith + "_")`;
				else if(`gmatch $newname ("*_" + $findWhat)`)
					rename $nodes[$i] (`substring $newname 1 (size($newname)-size($findWhat)-1)` + $split + $replaceWith);
			}
		}
	}
		
	// added by KC (20 Sept 2003)

	if (`checkBox -query -value checkBoxRenameChannel`)
		kcNamingToolRenameChannel $findWhat $replaceWith;
	print "ok";

}

global proc zwNamingToolRenameSelected()
{
	string $str = `textField -query -text textFieldObj`;
	if (`gmatch $str "*_*"` || $str == "")
	{
		error -showLineNumber true "Object should not have '_' or be empty.";
	}
	string $newName = $str;

	$str = `textField -query -text "textFieldSide"`;
	if ($str != "")
	{
		$newName += "_" + $str;
	}
	
	$str = `textField -query -text textFieldLod`;
//	if (`gmatch $str "*_*"` || $str == "")
//	{
//		error -showLineNumber true "Lod should not have '_' or be empty.";
//	}
	if ($str != "")
	{
		$newName += "_" + $str;
	}

	$str = `textField -query -text textFieldPart`;
//	if (`gmatch $str "*_*"` || $str == "")
//	{
//		error -showLineNumber true "Part should not have '_' or be empty.";
//	}
	if ($str != "")
	{
		$newName += "_" + $str;
	}
//==========modify by zhangben ,add Suffix "_"===========================ZB
    if (`checkBox -q -v suffixCB`==1)
    {
        $newName += "_";             
    }
    
    if (`checkBox -q -v suffixCA`==1)
    {
        $newName += "_ca_";             
    }                                 
//===============================================================ZB

	int $renameSubObject = `checkBoxGrp -query -value1 checkBoxGrpSub`;

	string $selected[] = `ls -long -sl`;
	if (size($selected) != 1)
		error -showLineNumber true "Please select only one object.";

	if ($renameSubObject == true)
	{
		int $i;
		string $subObject[] = `listRelatives -fullPath -children $selected[0]`;
		if(`checkBox -q -v suffixCA`!=1)
		{
    		for ($i=1; $i<=size($subObject); $i++)
    		{
    			string $obj[] = `ls -long ($newName + "_" + $i)`;
    			if (size($obj))
    			{
    				if(!(`stringArrayCount $obj[0] $subObject` && size($obj) == 1))
    				{
    					select $obj;
    					error -showLineNumber true ($newName + "_" + $i + " already exists.");
    				}
    			}
    		}
    		for ($i=0; $i<size($subObject); $i++)
		        rename $subObject[$i] ("namingTool_" + $i);
		        $subObject = `listRelatives -fullPath -children $selected[0]`;
		    for ($i=0; $i<size($subObject); $i++)
			zwNamingToolRename $subObject[$i] ($newName + "_" + ($i + 1));
		}
		else
		{
		     for ($i=1; $i<=size($subObject); $i++)
    		{
    			string $obj[] = `ls -long ($newName  + $i)`;
    			if (size($obj))
    			{
    				if(!(`stringArrayCount $obj[0] $subObject` && size($obj) == 1))
    				{
    					select $obj;
    					error -showLineNumber true ($newName + $i + " already exists.");
    				}
    			}
    		}
    				for ($i=0; $i<size($subObject); $i++)
			rename $subObject[$i] ("namingTool" + $i);
		$subObject = `listRelatives -fullPath -children $selected[0]`;
		for ($i=0; $i<size($subObject); $i++)
			zwNamingToolRename $subObject[$i] ($newName  + ($i + 1));
        }  
	}

	zwNamingToolRename $selected[0] $newName;
	print "ok";
}


global proc zxRenameGeneral()

{

	string $oldnameGrp[] = `ls -sl -l`;

	if(size($oldnameGrp) == 0)
	
	error -showLineNumber true "Please select at least one object.";

	string $nameText = `textField -query -text textFieldObj`;

	string $newName;

	$objNum = 0;

	for ( $i=0 ; $i<size($oldnameGrp) ; $i++ )
	{
		$objNum = $i+1;

		$newName = $nameText + $objNum ;

		rename $oldnameGrp[$i] $newName;

	}



}




global proc zwNamingToolSuffix(int $type, string $textFieldButtonGrp)
{
	string $buf[];

	string $fix = `textFieldButtonGrp -query -text $textFieldButtonGrp`;
	while (`gmatch $fix "_*"` && $fix != "_")
		$fix = `substring $fix 2 (size($fix))`;
	while (`gmatch $fix "*_"` && $fix != "_")
		$fix = `substring $fix 1 (size($fix)-1)`;
	if ($fix == "" || $fix == "_")
		return;

	string $selected[] = `ls -long -sl`;
	string $readonly[] =`ls -long -readOnly -sl`;

	for ($i=0; $i<size($selected); $i++)
	{
		for ($j=$i+1; $j<size($selected); $j++)
		{
			if (`tokenize $selected[$j] "|" $buf`  > `tokenize $selected[$i] "|" $buf`)
			{
				string $temp = $selected[$i];
				$selected[$i] = $selected[$j];
				$selected[$j] = $temp;
			}
		}
	}
	for ($i=0; $i<size($selected); $i++)
	{
		if (!`stringArrayCount $selected[$i] $readonly`)
		{
			tokenize $selected[$i] "|" $buf;
			string $old = $buf[size($buf)-1];
			if ($type == 1)
				zwNamingToolRename $selected[$i] ($fix + "_" + $old);
			else if ($type == 2 && `gmatch $old ($fix + "_*")`)
				zwNamingToolRename $selected[$i] `substring $old (size($fix) + 2) (size($old))`;
			else if ($type == 3)
				zwNamingToolRename $selected[$i] ($old + "_" + $fix);
			else if ($type == 4 && `gmatch $old ("*_" + $fix)`)
				zwNamingToolRename $selected[$i] `substring $old 1 (size($old) - size($fix) - 1)`;
		}
	}
}


global proc zxPerfixSel(string $textFieldButtonGrp)
{
	string $text =`textFieldButtonGrp -query -text $textFieldButtonGrp`;
	string $textadd = $text + "*";
	string $obj[] = `ls -tr $textadd`; 
	select $obj;

}


global proc zwNamingToolCheckTokens()
{
	string $buf[];
	
	select -clear;
	print "\n\n";

	string $readonly[] =`ls -long -readOnly`;
	string $nodes[] = `ls -long`;
	for ($node in $nodes)
	{
		if (!`stringArrayCount $node $readonly`)
		{
			tokenize $node "|" $buf;
			if (`tokenize $buf[size($buf)-1] "_" $buf` < 4)
			{
				select -add $node;
				print ($node + "\n");
			}
		}
	}
	print "\n\n";
}

global proc zwNamingToolCheckObj()
{
	string $file, $buf[];

	select -clear;
	print "\n\n";

	if (`promptDialog -title "Check Name" -message "Object" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"` == "OK")
		$file = `promptDialog -query`;
	else
		return;

	string $readonly[] =`ls -long -readOnly`;
	string $nodes[] = `ls -long`;
	for ($node in $nodes)
	{
		if (!`stringArrayCount $node $readonly`)
		{
			tokenize $node "|" $buf;
			if (`tokenize $buf[size($buf)-1] "_" $buf` < 4)
			{
				select -add $node;
				print ($node + "\n");
			}
			else if ($buf[0] != $file)
			{
				select -add $node;
				print ($node + "\n");
			}
			else if ($buf[1] != "l" && $buf[1] != "c" && $buf[1] != "r")
			{
				select -add $node;
				print ($node + "\n");
			}
			else if ($buf[2] != "lo" && $buf[2] != "md" && $buf[2] != "hi" && $buf[2] != "an" && $buf[2] != "cl" && $buf[2] != "fa")
			{
				select -add $node;
				print ($node + "\n");
			}
		}
	}
	print "\n\n";
}

global proc zwNamingToolCheckGrp()
{
	string $buf[], $buf1[];

	string $selected[] = `ls -long -sl`;
	if (size($selected) != 1)
		error "Please select only one object.";

	string $sceneName = `file -query -sceneName`;
	if ($sceneName == "")
		error "ÎÄ¼þÎ´ÃüÃû";
	tokenize $sceneName "/" $buf;
	$sceneName = $buf[size($buf)-1];
	if (`gmatch $sceneName "ps_*"`)
		$sceneName = `substring $sceneName 4 (size($sceneName))`;
	string $fileName = `match "[a-zA-Z0-9]+_[a-zA-Z0-9]+" $sceneName`;
	if ($fileName == "" || !`gmatch $sceneName ($fileName + "*")`)
		error "ÎÄ¼þÃüÃû´íÎó";
	tokenize $fileName "_" $buf;
	
	select -clear;
	print "\n\n";

	string $readonly[] =`ls -long -readOnly`;
	string $nodes[] = `listRelatives -fullPath -allDescendents $selected[0]`;
	$nodes[size($nodes)] = $selected[0];
	for ($node in $nodes)
	{
		if (!`stringArrayCount $node $readonly`)
		{
			tokenize $node "|" $buf1;
			if (!`gmatch $buf1[size($buf1)-1] ($fileName + "_*")` && !`gmatch $buf1[size($buf1)-1] ($buf[0] + "_*")` && !`gmatch $buf1[size($buf1)-1] ($buf[0] + $buf[1] + "_*")`)
			{
				select -add $node;
				print ($node + "\n");
			}
		}
	}
	print "\n\n";
}

global proc zwNamingToolRename(string $obj, string $name)
{
	string $buf[];

	if (!`objExists $obj`)
		return;

	string $name = `rename $obj $name`;
	tokenize $name "|" $buf;
	$name = $buf[size($buf)-1];

	tokenize $obj "|" $buf;
	$obj = `substring $obj 1 (size($obj)-size($buf[size($buf)-1]))` + $name;

	string $shape[] = `listRelatives -fullPath -shapes $obj`;
	for ($i=0; $i<size($shape); $i++)
		rename $shape[$i] "namingTool_#";
	string $num = `match "[0-9]+$" $name`;
	$name = `substring $name 1 (size($name)-size($num))` + "Shape" + $num;
	$shape = `listRelatives -fullPath -shapes $obj`;
	for ($i=0; $i<size($shape); $i++)
		rename $shape[$i] $name;
}

global proc kcNamingToolRenameChannel(string $findWhat, string $replaceWith)
{
	string $locators[] = `ls -type locator`;

	for ($item in $locators)
	{
		string $transform[] = `listRelatives -path -parent $item`;
		string $attrs[] = `listAttr -userDefined -keyable $transform[0]`;

		for ($attr in $attrs)
		{
			string $newName = `substitute $findWhat $attr $replaceWith`;

			if ($newName != $attr)
				renameAttr ($transform[0] + "." + $attr) $newName;
		}
	}

	string $blendshapes[] = `ls -type blendShape`;

	for ($item in $blendshapes)
	{
		string $alias[] = `aliasAttr -q $item`;

		for ($i = 0; $i < size($alias); $i += 2)
		{
			string $newName = `substitute $findWhat $alias[$i] $replaceWith`;

			if ($newName != $alias[$i])
				aliasAttr $newName ($item + "." + $alias[$i + 1]);
		}
	}
}

//=========================modify by zhangben ,add suffix "_" ,CheckBox Change Command=================ZB
global proc SUFFIX_STATE()
{
int $index = `checkBox -q -v suffixCB` ;
string $te = `text -e -vis $index suffix_TX`;
switch($index)
    {
      case 1:
           print "add suffix \"_\"\n";
           break;
      case 0:
           print "take out suffix \"_\"\n";
           break;
    }
}
//===========================================================================================
global proc SUAFIX_STATE()
{
    int $index = `checkBox -q -v suffixCA` ;
    string $te = `text -e -vis $index suffix_TX01`;
    switch($index)
        {
          case 1:
               print "add suffix \"_ca_\"\n";
               break;
          case 0:
               print "take out suffix \"_ca_\"\n";
               break;
        }
}