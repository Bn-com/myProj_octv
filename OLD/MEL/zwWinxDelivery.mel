global proc zwWinxDelivery()
{
//	string $sceneName = `file -query -sceneName`;
//	string $project = `substitute "/scenes/.*$" $sceneName ""`;
//	workspace -openWorkspace $project;
	string $project = zwGetProject("");
	workspace -openWorkspace ("//file-cluster/GDC/Projects/" + $project + "/Project");

	// reference
	string $references[] = `file -query -reference`;
	for ($reference in $references)
	{
		string $node = `file -query -referenceNode $reference`;

		string $master = $reference;
		if (`match "/rigging/" $master` != "" || `match "/setup/" $master` != "")
		{
			$master = `substitute "/rigging/" $master "/master/"`;
			$master = `substitute "/setup/" $master "/master/"`;
			if (`match "/environments/" $master` != "")
			{
				$master = `substitute "_h_rg" $master "_h_ms_tex"`;
			}
			else
			{
				$master = `substitute "_h_rg" $master "_h_ms_cache"`;
			}
		}
		if ($master != $reference)
		{
			if (`filetest -f $master`)
			{
				$reference = `file -loadReference $node $master`;
			//	$reference = $master;
			}
			else
			{
				int $fileId = `fopen "Z:\\Scratch\\TD\\debug.txt" "a"`;
				if ($fileId != 0)
				{
					fprint $fileId (`file -query -sceneName` + "\r\n");
					fclose $fileId;
				}
				return;
			}
		}

		$reference = `substitute "^.*/scenes/" $reference "scenes/"`;

	//	setAttr ($node + ".fileNames[0]") -type "string" $reference;
		evalEcho ("setAttr \"" + $node + ".fileNames[0]\" -type \"string\" \"" + $reference + "\"");
	}

	zwWinxDeliveryFile "file" "fileTextureName" "sourceimages";	// texture
	zwWinxDeliveryFile "cacheFile" "cachePath" "data";		// Geometry Cache

//	zwWinxDeliveryFile "brush" "imageName" "sourceimages";
//	zwWinxDeliveryFile "brush" "leafImage" "sourceimages";
//	zwWinxDeliveryFile "brush" "flowerImage" "sourceimages";

//	file -rename "E:\\test.mb";
	file -force -save;
}

global proc zwWinxDeliveryFile(string $nodeType, string $attr, string $folder)
{
	string $buf[] = `ls -type $nodeType`;
	for ($node in $buf)
	{
		if (!`reference -isNodeReferenced $node`)
		{
			string $path = `getAttr ($node + "." + $attr)`;
			if (`filetest -f $path` || `filetest -d $path`)
			{
				$path = `substitute ("^.*/" + $folder + "/") $path ($folder + "/")`;
				evalEcho ("setAttr \"" + $node + "." + $attr + "\" -type \"string\" \"" + $path + "\"");
			}
		}
	}
}