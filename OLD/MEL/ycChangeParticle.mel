/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: “¸Í…
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc string[] CreatLocator()
{
	string $singleParticle[]=`ls -sl`;
	string $ReturnValue[];
	if ($singleParticle[0]=="")
	{
		return $singleParticle;
	}
	string $SingleParticle[];
	if (`nodeType $singleParticle[0]`=="particle")
	{
		$SingleParticle=`filterExpand -ex 1 -sm 47 $singleParticle`;
	}
	else
	{
		return $singleParticle;
	}
	if (size($SingleParticle)==1)
	{
		string $LocName[];
		float $ParticlePosition[]=`xform -q -ws -t $SingleParticle[0]`;
		print $ParticlePosition;
		print "\n";
		$LocName=`spaceLocator -p $ParticlePosition[0] $ParticlePosition[1] $ParticlePosition[2]`;
		if (`objExists "YcParticleLocator"`)
		{
			delete YcParticleLocator;
		}
		rename $LocName[0] "YcParticleLocator";
		CenterPivot;
		int $SelectParticleNum=size($SingleParticle);
		$ReturnValue[0]=size($SingleParticle);
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			$ReturnValue[$i+1]=$SingleParticle[$i];
		}
		$ReturnValue[$SelectParticleNum+1]="YcParticleLocator";
		string $ParticleString=$ReturnValue[1];

		addAttr -longName "Particle" -dt "string"  "YcParticleLocator";
		addAttr -longName "PositionX" -attributeType "double"  "YcParticleLocator";
		addAttr -longName "PositionY" -attributeType "double"  "YcParticleLocator";
		addAttr -longName "PositionZ" -attributeType "double"  "YcParticleLocator";

		addAttr -ln OldPosition -at double3  "YcParticleLocator";
		addAttr -ln OldPositionX -at double -p OldPosition  "YcParticleLocator";
		addAttr -ln OldPositionY -at double -p OldPosition  "YcParticleLocator";
		addAttr -ln OldPositionZ -at double -p OldPosition  "YcParticleLocator";
		setAttr -type double3 "YcParticleLocator.OldPosition" 0 0 0;
		setAttr -e -keyable true "YcParticleLocator.OldPosition";
		setAttr -e -keyable true "YcParticleLocator.OldPositionX";
		setAttr -e -keyable true "YcParticleLocator.OldPositionY";
		setAttr -e -keyable true "YcParticleLocator.OldPositionZ";
		
		setAttr -type "string" "YcParticleLocator.Particle" $ParticleString;
	}
	else
	{
		float $ParticleIdPosition[];
		int $PositionNum=0;
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			float $ParticleTempIdPostion[]=`xform -q -ws -t $SingleParticle[$i]`;
			$ParticleIdPosition[$PositionNum]=$ParticleTempIdPostion[0];
			$ParticleIdPosition[$PositionNum+1]=$ParticleTempIdPostion[1];
			$ParticleIdPosition[$PositionNum+2]=$ParticleTempIdPostion[2];
			$PositionNum+=3;
		}
		string $CreateCurve=`curve -d 1 -p $ParticleIdPosition[0] $ParticleIdPosition[1] $ParticleIdPosition[2]`;
		for ($i=1;$i<size($SingleParticle);$i++)
		{
			curve -os -a -p $ParticleIdPosition[$i*3] $ParticleIdPosition[$i*3+1] $ParticleIdPosition[$i*3+2] $CreateCurve;
		}
		select $CreateCurve;
		CenterPivot;
		float $ParticlePosition[]=`xform -q -ws -pivots $CreateCurve`;
		print $CreateCurve;
		$LocName=`spaceLocator -p $ParticlePosition[0] $ParticlePosition[1] $ParticlePosition[2]`;
		if (`objExists "YcParticleLocator"`)
		{
			delete YcParticleLocator;
		}
		rename $LocName[0] "YcParticleLocator";
		CenterPivot;
		int $SelectParticleNum=size($SingleParticle);
		$ReturnValue[0]=size($SingleParticle);
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			$ReturnValue[$i+1]=$SingleParticle[$i];
		}
		$ReturnValue[$SelectParticleNum+1]="YcParticleLocator";
		delete $CreateCurve;
		string $ParticleString=$ReturnValue[1];
		for ($i=2;$i<size($ReturnValue)-1;$i++)
		{
			$ParticleString=$ParticleString+" "+$ReturnValue[$i];
		}
		addAttr -longName "Particle" -dt "string"  "YcParticleLocator";
		addAttr -longName "PositionX" -attributeType "double"  "YcParticleLocator";
		addAttr -longName "PositionY" -attributeType "double"  "YcParticleLocator";
		addAttr -longName "PositionZ" -attributeType "double"  "YcParticleLocator";

		addAttr -ln OldPosition -at double3  "YcParticleLocator";
		addAttr -ln OldPositionX -at double -p OldPosition  "YcParticleLocator";
		addAttr -ln OldPositionY -at double -p OldPosition  "YcParticleLocator";
		addAttr -ln OldPositionZ -at double -p OldPosition  "YcParticleLocator";
		setAttr -type double3 "YcParticleLocator.OldPosition" 0 0 0;
		setAttr -e -keyable true "YcParticleLocator.OldPosition";
		setAttr -e -keyable true "YcParticleLocator.OldPositionX";
		setAttr -e -keyable true "YcParticleLocator.OldPositionY";
		setAttr -e -keyable true "YcParticleLocator.OldPositionZ";
		
		setAttr -type "string" "YcParticleLocator.Particle" $ParticleString;
	}
	AutoMove();
	return $ReturnValue;
}
global proc AutoMove()
{
	if (`objExists "YcParticleLocator"`)
	{
	 expression -o "YcParticleLocator"
		-string  "
			string $ParticleName=`getAttr YcParticleLocator.Particle`;
			string $ParticleNameBuffer[];
			int $ParticleCount=`tokenize $ParticleName \" \" $ParticleNameBuffer`;
			for ($j=0;$j<$ParticleCount;$j++)
			{
				float $ParticlePivots[]=`xform -q -ws -pivots $ParticleNameBuffer[$j]`;
				float $locatorPosiNewX=YcParticleLocator.translateX-YcParticleLocator.OldPositionX; 
				float $locatorPosiNewY=YcParticleLocator.translateY-YcParticleLocator.OldPositionY; 
				float $locatorPosiNewZ=YcParticleLocator.translateZ-YcParticleLocator.OldPositionZ; 
				string $SingParticleBuff[]; 
				int $SingPartNameSplit=`tokenize $ParticleNameBuffer[$j] \".[]\" $SingParticleBuff`; 
				string $SingPartcName=$SingParticleBuff[0]; 
				if ($SingPartNameSplit>3) 
				{ 
					for ($i=0;$i<$SingPartNameSplit-3;$i++) 
					{
						$SingPartcName=$SingPartcName+\".\"+$SingParticleBuff[$i]; 
					} 
				} 
				int $ID=$SingParticleBuff[$SingPartNameSplit-1]; 
				float $PartPosi[]=`xform -q -ws -t $ParticleNameBuffer[$j]`; 
				particle -e -or $ID -at position -vv ($locatorPosiNewX+$PartPosi[0]-$ParticlePivots[0]) ($locatorPosiNewY+$PartPosi[1]-$ParticlePivots[1]) ($locatorPosiNewZ+$PartPosi[2]-$ParticlePivots[2]) $ParticleNameBuffer[$j]; 
			}
			YcParticleLocator.OldPositionX=YcParticleLocator.translateX; 
			YcParticleLocator.OldPositionY=YcParticleLocator.translateY; 
			YcParticleLocator.OldPositionZ=YcParticleLocator.translateZ;
			"  
			-name "YcAutoMoveParticle";
	}
	else
	{
		return;
	}
}
global proc int CreatMultiLocator(int $LocatorId)
{
	//print $LocatorId;
	string $singleParticle[]=`ls -sl`;
	string $ReturnValue[];
	if ($singleParticle[0]=="")
	{
		return -1;
	}
	string $SingleParticle[];
	if (`nodeType $singleParticle[0]`=="particle")
	{
		$SingleParticle=`filterExpand -ex 1 -sm 47 $singleParticle`;
	}
	else
	{
		return -1;
	}
	if (size($SingleParticle)==1)
	{
		string $LocName[];
		float $ParticlePosition[]=`xform -q -ws -t $SingleParticle[0]`;
		$LocName=`spaceLocator -p $ParticlePosition[0] $ParticlePosition[1] $ParticlePosition[2]`;
		if (`objExists ("YcParticleLocator"+$LocatorId)`)
		{
			delete ("YcParticleLocator"+$LocatorId);
		}
		rename $LocName[0] ("YcParticleLocator"+$LocatorId);
		CenterPivot;
		int $SelectParticleNum=size($SingleParticle);
		$ReturnValue[0]=size($SingleParticle);
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			$ReturnValue[$i+1]=$SingleParticle[$i];
		}
		$ReturnValue[$SelectParticleNum+1]="YcParticleLocator"+$LocatorId;
		string $ParticleString=$ReturnValue[1];

		addAttr -longName "Particle" -dt "string"  ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionX" -attributeType "double"  ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionY" -attributeType "double"  ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionZ" -attributeType "double"  ("YcParticleLocator"+$LocatorId);

		addAttr -ln OldPosition -at double3  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionX -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionY -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionZ -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		setAttr -type double3 ("YcParticleLocator"+$LocatorId+".OldPosition") 0 0 0;
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPosition");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionX");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionY");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionZ");
		
		setAttr -type "string" ("YcParticleLocator"+$LocatorId+".Particle") $ParticleString;
	}
	else
	{
		float $ParticleIdPosition[];
		int $PositionNum=0;
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			float $ParticleTempIdPostion[]=`xform -q -ws -t $SingleParticle[$i]`;
			$ParticleIdPosition[$PositionNum]=$ParticleTempIdPostion[0];
			$ParticleIdPosition[$PositionNum+1]=$ParticleTempIdPostion[1];
			$ParticleIdPosition[$PositionNum+2]=$ParticleTempIdPostion[2];
			$PositionNum+=3;
		}
		string $CreateCurve=`curve -d 1 -p $ParticleIdPosition[0] $ParticleIdPosition[1] $ParticleIdPosition[2]`;
		for ($i=1;$i<size($SingleParticle);$i++)
		{
			curve -os -a -p $ParticleIdPosition[$i*3] $ParticleIdPosition[$i*3+1] $ParticleIdPosition[$i*3+2] $CreateCurve;
		}
		select $CreateCurve;
		CenterPivot;
		float $ParticlePosition[]=`xform -q -ws -pivots $CreateCurve`;
		//print $CreateCurve;
		$LocName=`spaceLocator -p $ParticlePosition[0] $ParticlePosition[1] $ParticlePosition[2]`;
		if (`objExists ("YcParticleLocator"+$LocatorId)`)
		{
			delete YcParticleLocator;
		}
		rename $LocName[0] ("YcParticleLocator"+$LocatorId);
		CenterPivot;
		int $SelectParticleNum=size($SingleParticle);
		$ReturnValue[0]=size($SingleParticle);
		for ($i=0;$i<size($SingleParticle);$i++)
		{
			$ReturnValue[$i+1]=$SingleParticle[$i];
		}
		$ReturnValue[$SelectParticleNum+1]=("YcParticleLocator"+$LocatorId);
		delete $CreateCurve;
		string $ParticleString=$ReturnValue[1];
		for ($i=2;$i<size($ReturnValue)-1;$i++)
		{
			$ParticleString=$ParticleString+" "+$ReturnValue[$i];
		}
		addAttr -longName "Particle" -dt "string" ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionX" -attributeType "double"  ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionY" -attributeType "double"  ("YcParticleLocator"+$LocatorId);
		addAttr -longName "PositionZ" -attributeType "double"  ("YcParticleLocator"+$LocatorId);

		addAttr -ln OldPosition -at double3  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionX -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionY -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		addAttr -ln OldPositionZ -at double -p OldPosition  ("YcParticleLocator"+$LocatorId);
		setAttr -type double3 ("YcParticleLocator"+$LocatorId+".OldPosition") 0 0 0;
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPosition");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionX");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionY");
		setAttr -e -keyable true ("YcParticleLocator"+$LocatorId+".OldPositionZ");
		
		setAttr -type "string" ("YcParticleLocator"+$LocatorId+".Particle") $ParticleString;
	}
	MultiAutoMove($LocatorId);
	$LocatorId++;
	return $LocatorId;
}

global proc MultiAutoMove(int $ID)
{
	//print $ID;
	if (`objExists ("YcParticleLocator"+$ID)`)
	{
	 expression -o ("YcParticleLocator"+$ID)
		-string   (
			"string $ParticleName=`getAttr YcParticleLocator"+$ID+".Particle`;\n"
			+"string $ParticleNameBuffer[];\n"
			+"int $ParticleCount=`tokenize $ParticleName \" \" $ParticleNameBuffer`;\n"
			+"for ($j=0;$j<$ParticleCount;$j++)\n"
			+"{\n"
				+"float $ParticlePivots[]=`xform -q -ws -pivots $ParticleNameBuffer[$j]`;\n"
				+"float $locatorPosiNewX=YcParticleLocator"+$ID+".translateX-YcParticleLocator"+$ID+".OldPositionX;\n"
				+"float $locatorPosiNewY=YcParticleLocator"+$ID+".translateY-YcParticleLocator"+$ID+".OldPositionY;\n" 
				+"float $locatorPosiNewZ=YcParticleLocator"+$ID+".translateZ-YcParticleLocator"+$ID+".OldPositionZ;\n" 
				+"string $SingParticleBuff[];\n" 
				+"int $SingPartNameSplit=`tokenize $ParticleNameBuffer[$j] \".[]\" $SingParticleBuff`;\n" 
				+"string $SingPartcName=$SingParticleBuff[0];\n" 
				+"if ($SingPartNameSplit>3)\n" 
				+"{\n" 
					+"for ($i=0;$i<$SingPartNameSplit-3;$i++)\n" 
					+"{\n"
						+"$SingPartcName=$SingPartcName+\".\"+$SingParticleBuff[$i];\n" 
					+"}\n" 
				+"}\n" 
				+"int $ID=$SingParticleBuff[$SingPartNameSplit-1];\n" 
				+"float $PartPosi[]=`xform -q -ws -t $ParticleNameBuffer[$j]`;\n" 
				+"particle -e -or $ID -at position -vv ($locatorPosiNewX+$PartPosi[0]-$ParticlePivots[0]) ($locatorPosiNewY+$PartPosi[1]-$ParticlePivots[1]) ($locatorPosiNewZ+$PartPosi[2]-$ParticlePivots[2]) $ParticleNameBuffer[$j];\n"
			+"}\n"
			+"YcParticleLocator"+$ID+".OldPositionX=YcParticleLocator"+$ID+".translateX;\n" 
			+"YcParticleLocator"+$ID+".OldPositionY=YcParticleLocator"+$ID+".translateY;\n" 
			+"YcParticleLocator"+$ID+".OldPositionZ=YcParticleLocator"+$ID+".translateZ;\n")  
			-name ("YcAutoMoveParticle"+$ID);
	}
	else
	{
		return;
	}
}

global proc CreateNewParticle()
{
	string $multiParticle[]=`ls -sl`;
	int $JudgeSelectedParticle=`gmatch $multiParticle[0] "*]"`;
	//print $multiParticle;
	if (size($multiParticle)==0||$JudgeSelectedParticle==0)
	{
		print "warning:Please select particle";
		return;
	}
	string $MultiParticle[]=`filterExpand -ex 1 -sm 47 $multiParticle`;
	//print $MultiParticle;		  	//particle1.pt[3]
						//particle1.pt[4]
	int $multiParticleNum=size($MultiParticle);
	//print $multiParticleNum;
	//print "\n\n\n\n";
	float $ParticlePosition[];
	int $ParticlePositionNum=3;
	for ($i=0;$i<$multiParticleNum;$i++)
	{
		float $PartPosi[]=`xform -q -ws -t $MultiParticle[$i]`;
		$ParticlePosition[$ParticlePositionNum*$i+0]=$PartPosi[0];
		$ParticlePosition[$ParticlePositionNum*$i+1]=$PartPosi[1];
		$ParticlePosition[$ParticlePositionNum*$i+2]=$PartPosi[2];
	}
	//print $ParticlePosition;
	string $NewParti[]=`particle -jbp 0 0 0 -nj $multiParticleNum -jr 10 -c 1 `;
	//print $NewParti;
	int $ParticlePositionNum=3;
	for ($i=0;$i<$multiParticleNum;$i++)
	{
		particle -e -or $i -at position -vv $ParticlePosition[$ParticlePositionNum*$i+0] $ParticlePosition[$ParticlePositionNum*$i+1] $ParticlePosition[$ParticlePositionNum*$i+2] $NewParti[0] ;
	}
	//print $multiParticleNum;
}
global proc ycChangeParticle()
{
	if (`window -exists ycChangeParticle`)
		deleteUI ycChangeParticle;

	window -title "ycChangeParticle" -menuBar true ycChangeParticle;

	  columnLayout -cal left -adjustableColumn true -w 300 -h 100 -rowSpacing 3;	
			menuBarLayout;
			menu -label "Help";
				menuItem -label "Help on Apply ycChangeParticle..." -command "zjHelpCallback ycChangeParticle";
			setParent ..;
		
			string $Locator[];
			button -label "CreateSingleLocator" -align "center" -command "$Locator=CreatLocator()" CreatSingleLocator;
			button -label "CreateMultiLocator" -align "center" -command "int $LocaNum;$LocaNum=CreatMultiLocator($LocaNum)" CreatMultiLocator;
			button -label "CreateNewParticle" -align "center" -command "CreateNewParticle" CreateNewParticle;
	showWindow ycChangeParticle;
}
//ycChangeParticle;