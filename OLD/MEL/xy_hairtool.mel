global proc xy_hairtool(){if(`window -exists  xy_hairtoolUI`)	deleteUI xy_hairtoolUI;window 	-title "xy_hairtool"        -menuBar true	-wh 400 400	-mxb 0	xy_hairtoolUI;  menu -label "PfxHair" -tearOff true;      menuItem -label "Convert to pfxHair" -command "convertToPfx" ;      menuItem -label "Isoselect pfxHair" -command "CreatCacheIsoselected" ;      menuItem -label "Unisoselect pfxHair" -command "Unsoselected" ;  menu -label "Cache" -tearOff true;      menuItem -label "Creat Cache Rate 1 Iso" -command "CreatCacheIsoselected;doHairDiskCache 1 { \"2\", 1, 1, 10, 1 }";      menuItem -label "Creat Cache Rate 2 Iso" -command "CreatCacheIsoselected;doHairDiskCache 1 { \"2\", 1, 1, 10, 2 }";      menuItem -divider true;      menuItem -label "Creat Cache Rate 1" -command "doHairDiskCache 1 { \"2\", 1, 1, 10, 1 }";      menuItem -label "Creat Cache Rate 2" -command "doHairDiskCache 1 { \"2\", 1, 1, 10, 2 }";      menuItem -divider true;      menuItem -label "Delete Cache" -command "DeleteHairCache";      menuItem -divider true;      menuItem -label "Show Cached Hairsys" -command "ShowCachedHairsys(\"TSLtemphairsys\")";      menuItem -label "Show Nocached Hairsys" -command "ShowNocachedHairsys(\"TSLtemphairsys\")";  menu -label "Constrain" -tearOff true;      menuItem -label "Rubber Band" -command "creatNewCon(0)";      menuItem -label "Transform" -command "creatNewCon(1)";      menuItem -label "Stick" -command "creatNewCon(2)";      menuItem -label "Hair to Hair" -command "creatNewCon(3)";      menuItem -label "Hair Bunch" -command "creatNewCon(4)";           menuItem -label "Collide Sphere" -command "creatNewCon(5)";      menuItem -label "Collide Cube" -command "creatNewCon(6)";      menuItem -divider true;      menuItem -l "Creat Same Constraint" -command "creatSameCon";  menu -label "Help" -helpMenu true;    menuItem -label "About xy_hairtool";formLayout mainform;//-----------------------------------//creat items //----------------------------------- text -label "The static hairSystems " alltext; text -label "The hairSystems for simulation" simtext; text -label "The temporary hairSystems " temptext;  textScrollList -h 300 -allowMultiSelection 1 TSLallhairsys; textScrollList -h 300 -allowMultiSelection 1 TSLsimhairsys; textScrollList -h 300 -allowMultiSelection 1 TSLtemphairsys; button -label "To Sim->"       -c "SelectedToTemp(\"TSLallhairsys\");SelectedToSim(\"TSLallhairsys\");"       tosimbutton;button -label "To Tem=>>"      -c "SelectedToTemp(\"TSLallhairsys\");"       totembutton;button -label "<-To Sta"      -c "SelectedToTemp(\"TSLsimhairsys\");SelectedToSta(\"TSLsimhairsys\");"       tostabutton;button -label "To Tem=>>"       -c "SelectedToTemp(\"TSLsimhairsys\")"       simtotembutton;button -label "Refresh"        -c "populatesimhair;populateallhair;"       refreshbutton;button -label "Clear"        -c "textScrollList -e -ra   TSLtemphairsys"       clearbutton;//--------------- popupMenu -p TSLtemphairsys; menuItem -label "Selcet Hightlight" -command "selectHL(\"TSLtemphairsys\")" ; menuItem -label "Show Hightlight sta/sim" -command "showHLstasim" ; menuItem -divider true; menuItem -label "Convert to pfxHair" -command "convertToPfx" ; menuItem -label "Isoselect pfxHair" -command "CreatCacheIsoselected" ; menuItem -label "Unisoselect pfxHair" -command "Unsoselected" ; menuItem -divider true; menuItem -subMenu true -label "Cache";            menuItem -label "Creat Cache Rate 1" -command "CreatCacheIsoselected;doHairDiskCache 1 { \"2\", 1, 1, 10, 1 }";            menuItem -label "Creat Cache Rate 2" -command "CreatCacheIsoselected;doHairDiskCache 1 { \"2\", 1, 1, 10, 2 }";              menuItem -divider true;           menuItem -label "Creat Cache Rate 1" -command "doHairDiskCache 1 { \"2\", 1, 1, 10, 1 }";           menuItem -label "Creat Cache Rate 2" -command "doHairDiskCache 1 { \"2\", 1, 1, 10, 2 }";           menuItem -divider true;            menuItem -label "Delete Cache" -command "DeleteHairCache";             menuItem -divider true;            menuItem -label "Show Cached Hairsys" -command "ShowCachedHairsys(\"TSLtemphairsys\")";            menuItem -label "Show Nocached Hairsys" -command "ShowNocachedHairsys(\"TSLtemphairsys\")";                        setParent -menu ..; menuItem -divider true; menuItem -subMenu true -label "Create Constraint";            menuItem -label "Rubber Band" -command "creatNewCon(0)";            menuItem -label "Transform" -command "creatNewCon(1)";            menuItem -label "Stick" -command "creatNewCon(2)";            menuItem -label "Hair to Hair" -command "creatNewCon(3)";            menuItem -label "Hair Bunch" -command "creatNewCon(4)";            menuItem -divider true;            menuItem -label "Collide Sphere" -command "creatNewCon(5)";            menuItem -label "Collide Cube" -command "creatNewCon(6)";            setParent -menu ..; menuItem -l "Creat Same Constraint" -command "creatSameCon"; menuItem -divider true; menuItem -subMenu true -label "Simulation Method";            menuItem -label "To Static" -command "SelectedToTemp(\"TSLtemphairsys\");SelectedToSta(\"TSLtemphairsys\")";            menuItem -label "To All Follocles" -command "SelectedToTemp(\"TSLtemphairsys\");SelectedToSim(\"TSLtemphairsys\")";//--------------- popupMenu -p TSLallhairsys; menuItem -label "Selcet Hightlight" -command "selectHL(\"TSLallhairsys\")" ;//--------------- popupMenu -p TSLsimhairsys; menuItem -label "Selcet Hightlight" -command "selectHL(\"TSLsimhairsys\")" ; text -label "+++++++++++++++++++++++++++++++++++use RMB to show submenus+++++++++++++++++++++++++++++++++++" helptext;  //-----------------------------//layout items//-------------------------------formLayout -e	-af alltext top 2    -af alltext left 0    -ap alltext right 2 33		-af simtext top 2    -ac simtext left 2 alltext    -ap simtext right 2 66	-af temptext top 2    -ac temptext left 2 simtext		-ac TSLallhairsys top 2 alltext	-af TSLallhairsys left 0	-ap TSLallhairsys right 2 33	-af TSLallhairsys bottom 50      -ac TSLsimhairsys top 2 alltext	-ac TSLsimhairsys left 2 TSLallhairsys	-ap TSLsimhairsys right 2 66	-af TSLsimhairsys bottom 50     -ac TSLtemphairsys top 2 alltext	-ac TSLtemphairsys left 2 TSLsimhairsys	-af TSLtemphairsys right 2 	-af TSLtemphairsys bottom 50        -ac tosimbutton top 2 TSLallhairsys	-af tosimbutton left 0	-ap tosimbutton right 2 16	-af tosimbutton bottom 25		-ac totembutton top 2 TSLallhairsys	-ac totembutton left 2 tosimbutton	-ap totembutton right  2 33	-af totembutton bottom 25     -ac tostabutton top 2 TSLsimhairsys	-ac tostabutton left 2 totembutton	-ap tostabutton right 2 50	-af tostabutton bottom 25		-ac simtotembutton top 2 TSLsimhairsys	-ac simtotembutton left 2 tostabutton	-ap simtotembutton right  2 66	-af simtotembutton bottom 25	   -ac refreshbutton top 2 TSLtemphairsys	-ac refreshbutton left 2 simtotembutton	-ap refreshbutton right 2 84	-af refreshbutton bottom 25       -ac clearbutton top 2 TSLtemphairsys	-ac clearbutton left 2 refreshbutton 	-af clearbutton right 0	-af clearbutton bottom 25   -ac helptext top 2 clearbutton	-af helptext bottom 2	 mainform; showWindow xy_hairtoolUI;populatesimhair;populateallhair;}//+++++++++++++++++++++++++++++++++++++++++++++++//show helpwindow proc//+++++++++++++++++++++++++++++++++++++++++++++++global proc showHelpWindow(){	if(`window -exists showHelpWindow`)	deleteUI showHelpWindow;window -t  "Help" -mxb 0 showHelpWindow;columnLayout helpform;text -l ("++++++++++++++++++++++++++++++++++++++++++++++\n \n" 	     +"LMB click to select the item.\n \n"	     +"Double LMB click to open Attribute Editer.\n \n"		 +"Ctrl+LMB to add the item to selected list or \n"		 +"remove the item that already in the list. \n \n"		 +"Shift+LMB to select the items between \n" 		 +"you first and last clicks.\n \n"		 +"If you change the Simulation Method,\n"		 +"remmber to click the \"refresh\"button.\n \n"		 +"++++++++++++++++++++++++++++++++++++++++++++++\n \n" 		 +"Sorry for my poor English~xy\n") hptext;showWindow showHelpWindow;}//++++++++++++++++++++++++++++++++++++++++++++++++//populate sim hairsys//++++++++++++++++++++++++++++++++++++++++++++++++global proc populatesimhair(){textScrollList -e -ra TSLsimhairsys;string $allhairsys[] = `ls -type hairSystem`;for ($each in $allhairsys){   int $simmethod = `getAttr ($each+".sim")`;	if($simmethod == 3||$simmethod == 2)    textScrollList -e -a  $each TSLsimhairsys;	textScrollList -e 		-sc "selectreplace(\"TSLsimhairsys\",\"TSLallhairsys\",\"TSLtemphairsys\")" 		-dcc "openaewindow(\"TSLsimhairsys\")"		TSLsimhairsys;}}//++++++++++++++++++++++++++++++++++++++++++++++++//populate all hairsys//++++++++++++++++++++++++++++++++++++++++++++++++global proc populateallhair(){textScrollList -e -ra TSLallhairsys;string $allhairsys[] = `ls -type hairSystem`;for ($each in $allhairsys){   int $simmethod = `getAttr ($each+".sim")`;	if($simmethod == 0||$simmethod == 1)	textScrollList -e -a  $each TSLallhairsys;	textScrollList -e 		-sc "selectreplace(\"TSLallhairsys\",\"TSLsimhairsys\",\"TSLtemphairsys\")" 		-dcc "openaewindow(\"TSLallhairsys\")"		TSLallhairsys;}}//++++++++++++++++++++++++++++++++++++++++++++++++++//select replace//++++++++++++++++++++++++++++++++++++++++++++++++++global proc selectreplace(string $selectedTSL,string $otherTSL,string $anotherTSL){         	textScrollList -e -da $otherTSL;       textScrollList -e -da $anotherTSL;        	string $sleitem[] =`textScrollList -q -si $selectedTSL`;  string $space[] = {"","========>_<========"};  string $list[] = stringArrayRemove($space, $sleitem);  string $shorterList[] = stringArrayRemoveDuplicates($list);	           select -r $shorterList;}//+++++++++++++++++++++++++++++++++++++++++++//open AE Window//+++++++++++++++++++++++++++++++++++++++++++++global proc openaewindow(string $selectedTSL){string $selItem[] = `textScrollList -q -si $selectedTSL`;select -r $selItem[0];openAEWindow;}//+++++++++++++++++++++++++++++++++++++++++++//selected to templist//+++++++++++++++++++++++++++++++++++++++++++++global proc SelectedToTemp(string $selectedTSL){  string $selItem[] = `textScrollList -q -si $selectedTSL`;  int $idpre = `textScrollList -q -ni   TSLtemphairsys`;  for ($each in $selItem)   {   	textScrollList -e -a  $each TSLtemphairsys;	textScrollList -e 		-sc "selectreplace(\"TSLtemphairsys\",\"TSLallhairsys\",\"TSLsimhairsys\")" 		-dcc "openaewindow(\"TSLtemphairsys\")"		TSLtemphairsys;   } textScrollList -e -a  "========>_<========" TSLtemphairsys; int $id = `textScrollList -q -ni   TSLtemphairsys`; textScrollList -e -shi $id  TSLtemphairsys; textScrollList -e -da  TSLtemphairsys; int $i; for ($i = $idpre+1;$i<$id;$i++)   {      textScrollList -e -sii $i  TSLtemphairsys;      }}//+++++++++++++++++++++++++++++++++++++++++++//selected to simulation//+++++++++++++++++++++++++++++++++++++++++++++global proc SelectedToSim(string $selectTSL){string $selItem[] = `textScrollList -q -si $selectTSL`;for ($each in $selItem) {setAttr ($each+".simulationMethod") 3; }populatesimhair;populateallhair;for ($each in $selItem) { textScrollList -e -si $each TSLsimhairsys; }}//+++++++++++++++++++++++++++++++++++++++++++//selected to static//+++++++++++++++++++++++++++++++++++++++++++++global proc SelectedToSta(string $selectTSL){string $selItem[] = `textScrollList -q -si $selectTSL`;for ($each in $selItem) {setAttr ($each+".simulationMethod") 1; }populatesimhair;populateallhair;for ($each in $selItem) { textScrollList -e -si $each TSLallhairsys; }}//++++++++++++++++++++++++++++++++++++++++++//isoselect pfx//++++++++++++++++++++++++++++++++++++++++++global proc CreatCacheIsoselected(){convertToPfx;string $panelsname = `paneLayout -q -pane1 viewPanes`;int $isoOn = `isolateSelect - q -s  $panelsname`;if($isoOn ==1) { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname;  }else { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname; }}//++++++++++++++++++++++++++++++++++++++++++//Unisoselect pfx//++++++++++++++++++++++++++++++++++++++++++global proc Unsoselected(){string $panelsname = `paneLayout -q -pane1 viewPanes`;int $isoOn = `isolateSelect - q -s  $panelsname`;if($isoOn ==1) { enableIsolateSelect $panelsname 0; isolateSelect -s 0 $panelsname;  }}//++++++++++++++++++++++++++++++++++++++++++//show cached hairsys//++++++++++++++++++++++++++++++++++++++++++global proc ShowCachedHairsys(string $selectedTSL){  select -cl;  string $selItem[] = `ls -type hairSystem`;  int $idpre = `textScrollList -q -ni   TSLtemphairsys`;  for ($each in $selItem)   {        string $hdiskcache[] = `listConnections -d off -s on ($each+".diskCache")`;      if($hdiskcache[0]!="")        {        textScrollList -e -a  $each TSLtemphairsys;        select -add  $each;        }       textScrollList -e 		-sc "selectreplace(\"TSLtemphairsys\",\"TSLallhairsys\",\"TSLsimhairsys\")" 		-dcc "openaewindow(\"TSLtemphairsys\")"		TSLtemphairsys;   } textScrollList -e -a  "========>_<========" TSLtemphairsys; int $id = `textScrollList -q -ni   TSLtemphairsys`; textScrollList -e -shi $id  TSLtemphairsys; textScrollList -e -da  TSLtemphairsys; int $i; for ($i = $idpre+1;$i<$id;$i++)   {      textScrollList -e -sii $i  TSLtemphairsys;      }      string $selitem[] = `textScrollList -q -si   TSLtemphairsys`;  textScrollList -e -da TSLsimhairsys;textScrollList -e -da TSLallhairsys; select -cl;    for ($item in $selitem)   {         int $simmethod = `getAttr ($item+".sim")`;	if($simmethod == 0||$simmethod == 1)	   textScrollList -e -si $item TSLallhairsys;       else          textScrollList -e -si $item TSLsimhairsys;      select -add $item;      }}//++++++++++++++++++++++++++++++++++++++++++//show nocached hairsys//++++++++++++++++++++++++++++++++++++++++++global proc ShowNocachedHairsys(string $selectedTSL){  string $selItem[] = `ls -type hairSystem`;  int $idpre = `textScrollList -q -ni   TSLtemphairsys`;  for ($each in $selItem)   {        string $hdiskcache[] = `listConnections -d off -s on ($each+".diskCache")`;      if($hdiskcache[0]=="")        textScrollList -e -a  $each TSLtemphairsys;      textScrollList -e 		-sc "selectreplace(\"TSLtemphairsys\",\"TSLallhairsys\",\"TSLsimhairsys\")" 		-dcc "openaewindow(\"TSLtemphairsys\")"		TSLtemphairsys;   } textScrollList -e -a  "========>_<========" TSLtemphairsys; int $id = `textScrollList -q -ni   TSLtemphairsys`; textScrollList -e -shi $id  TSLtemphairsys; textScrollList -e -da  TSLtemphairsys; int $i; for ($i = $idpre+1;$i<$id;$i++)   {      textScrollList -e -sii $i  TSLtemphairsys;           }      string $selitem[] = `textScrollList -q -si   TSLtemphairsys`;textScrollList -e -da TSLsimhairsys;textScrollList -e -da TSLallhairsys;    select -cl;    for ($item in $selitem)   {         int $simmethod = `getAttr ($item+".sim")`;	if($simmethod == 0||$simmethod == 1)	   textScrollList -e -si $item TSLallhairsys;       else          textScrollList -e -si $item TSLsimhairsys;       select -add $item;           }}//++++++++++++++++++++++++++++++++++++++++++//creat new constrain//++++++++++++++++++++++++++++++++++++++++++global proc creatNewCon(int $mesthod){ string $hairlist[] = `ls -sl`;  string $newcons[]; for($hair in $hairlist) { select -r $hair; convertHairSelection "follicles"; pickWalk -d up; createHairConstraint $mesthod; string $newcon[] = `ls -sl`; int $iscon = `objectType -i "hairConstraint" $newcon[0]`; if($iscon ==1 )  {pickWalk -d up;   $newcons[size($newcons)] = $newcon[0];  }  }string $space[] ={""};string $list[] = stringArrayRemove($space, $newcons);select -cl;for($each in $list) { select -add $each; }align -atl -x Mid -y Mid -z Mid; pickWalk -d up;}//++++++++++++++++++++++++++++++++++++++++++//creat same constrain //++++++++++++++++++++++++++++++++++++++++++global proc creatSameCon() {string $sel[]=`ls -sl`;int $connum = size($sel)-1;string $target=$sel[size($sel)-1];string $targetname[] = {$target};select -r $target;string $targetnshape[]= `pickWalk -d down`; int $mesthod = `getAttr ($targetnshape[0]+".constraintMethod")`;int $iscon = `objectType -i "hairConstraint" $targetnshape[0]`;if($iscon == 1){ string $hairlist[] =stringArrayRemove($targetname, $sel);  string $newcons[]; for($hair in $hairlist) { select -r $hair; convertHairSelection "follicles"; pickWalk -d up; createHairConstraint ($mesthod-1); string $newcon[] = `ls -sl`; int $iscon = `objectType -i "hairConstraint" $newcon[0]`; if($iscon ==1 )  {pickWalk -d up;   $newcons[size($newcons)] = $newcon[0];  }  } string $space[] ={""}; string $list[] = stringArrayRemove($space, $newcons); select -cl; for($each in $list)  {   select -r $each;   string $newconTran[] = `pickWalk -d up`;   select -add $target ;   align -atl -x Mid -y Mid -z Mid;   select -r $target;   string $parent[] = `pickWalk -d up`;   if($parent[0]!=$target)     parent $newconTran[0] $parent[0];      float $rxo=`getAttr  ($target+".rotateX")`;   float $ryo=`getAttr  ($target+".rotateY")`;   float $rzo=`getAttr  ($target+".rotateZ")`;   float $scxo=`getAttr  ($target+".scaleX")`;   float $scyo=`getAttr  ($target+".scaleY")`;   float $sczo=`getAttr  ($target+".scaleZ")`;   setAttr ($newconTran[0]+".rotateX") $rxo;   setAttr ($newconTran[0]+".rotateY") $ryo;   setAttr ($newconTran[0]+".rotateZ") $rzo;   setAttr ($newconTran[0]+".scaleX") $scxo;   setAttr ($newconTran[0]+".scaleY") $scyo;   setAttr ($newconTran[0]+".scaleZ") $sczo;  }select -r $list;pickWalk -d up;} }//++++++++++++++++++++++++++++++++++++++//to Pfx//+++++++++++++++++++++++++++++++++++global proc convertToPfx(){convertHairSelection "hairSystems";string $selcethairsys[] = `ls -sl`;select -cl;for($hair in $selcethairsys) {string $pfxs[] =`listConnections -d on -s off -t pfxHair $hair`; if($pfxs[0]!="") select -add $pfxs[0]; }}//++++++++++++++++++++++++++++++++++++++//select hightlight//+++++++++++++++++++++++++++++++++++global proc selectHL(string $selcetTSL){ string $hightlights[] = `textScrollList -q -si   $selcetTSL`; string $space[] ={"========>_<========"}; string $list[] = stringArrayRemove($space, $hightlights); select -cl; for($each in $list) { select -add $each; }}//++++++++++++++++++++++++++++++++++++++//show hightlight from temp sta sim//+++++++++++++++++++++++++++++++++++global proc showHLstasim(){ string $hightlights[] = `textScrollList -q -si   TSLtemphairsys`; string $space[] = {"========>_<========"}; string $list[] = stringArrayRemove($space, $hightlights); for($item in $list) {        int $simmethod = `getAttr ($item+".sim")`;	if($simmethod == 0||$simmethod == 1)	   textScrollList -e -si $item TSLallhairsys;       else          textScrollList -e -si $item TSLsimhairsys;  }}//+++++++++++++++++++++++