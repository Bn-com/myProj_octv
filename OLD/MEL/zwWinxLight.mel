global proc zwWinxLight()
{
	string $plane = "darkForest_pixieVillageLantern:magix_darkForest_0:MSH_terrain_";
	float $tolerance = 20.0;

	if (!`pluginInfo -query -loaded "nearestPointOnMesh"`)
	{
		loadPlugin "nearestPointOnMesh";
	}

	string $buf[] = `ls -selection`;
	if (size($buf) != 1)
	{
		error "ÇëÑ¡ÔñÒ»ÕµÄ¸µÆ";
	}
	string $mother = $buf[0];
	if (!`objExists ($mother + ".intensity")`)
	{
		error "ÇëÑ¡ÔñÒ»ÕµÄ¸µÆ";
	}
	float $intensity = `getAttr ($mother + ".intensity")`;

	string $lanterns[] = `ls -long "*:*:MSH_lanternA_light_" "*:*:MSH_lanternB_light_" "*:*:MSH_lanternC_light_" "*:*:MSH_light_"`;
	for ($lantern in $lanterns)
	{
		string $buf[] = `listRelatives -children $lantern`;
		if (size($buf) > 0)
		{
			delete $buf;
		}
		string $buf[] = `duplicate $mother`;
		string $light = $buf[0];
		delete `pointConstraint $lantern $light`;
		parent $light $lantern;

		string $mainCtrl = `match ".*:mainCtrl|" $lantern`;
		if ($mainCtrl == "")
		{
			continue;
		}
		$mainCtrl = `substitute "|$" $mainCtrl ""`;
		float $keyframe[] = `keyframe -query $mainCtrl`;
		if (size($keyframe) == 0)
		{
			continue;
		}
		float $down = $keyframe[size($keyframe) - 1];
		setKeyframe -time $down -value $intensity ($light + ".intensity");
		setKeyframe -time ($down + 1) -value 0 ($light + ".intensity");

//		string $expression = "";
//		$expression += "float $inPosition[] = `xform -query -worldSpace -translation \"" + $light + "\"`;\n";
//		$expression += "float $position[] = `nearestPointOnMesh -inPosition $inPosition[0] $inPosition[1] $inPosition[2] -query -position \"" + $plane + "\"`;\n";
//	//	$expression += "float $distance = `mag <<$inPosition[0] - $position[0], $inPosition[1] - $position[1], $inPosition[2] - $position[2]>>`;\n";
//	//	$expression += $light + ".intensity = " + $light + ".intensity * ($distance > " + $tolerance + ");\n";
//		$expression += $light + ".intensity = " + $intensity + " * ($inPosition[1] - $position[1] > " + $tolerance + ");\n";
//	//	$expression += $light + ".intensity = " + $intensity + " * ($inPosition[1] > " + $tolerance + ");\n";
//		expression -string $expression;
	}
}