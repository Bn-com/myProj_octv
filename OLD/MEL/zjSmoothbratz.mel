/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc string smoothSearch(string $list[])
{
	for ($i in $list)
	{
		if (`nodeType $i` == "polySmoothFace")
			return $i;
	}
	return "";
}

proc string upperSearch(string $list[])
{
	for ($i in $list)
	{
		if (attributeExists("Smooth",$i))
			return ($i+".Smooth");
		else if (attributeExists("smooth",$i))
			return ($i+".smooth");
	}
	return "";
}

//apply material for 11 bratz models only
global proc zjSmoothbratz()
{
	string $list[] = `ls -l -sl -ni -dag -type mesh`;
	$list = stringArrayRemoveDuplicates($list);	
	for ($object in $list)
	{
		string $his[] = `listHistory -groupLevels true -pruneDagObjects 1 -leaf true $object`;
		string $smoothNode = smoothSearch($his);
		if ($smoothNode != "")
		{
			string $upper[] = `listConnections -s 1 -d 0 -type transform $smoothNode`;
			string $upperbody = upperSearch($upper);
			delete $smoothNode;
			if (`objExists $upperbody`)
			{
				$plyname = `polySmooth -divisions 0 -continuity 1 -keepBorder 0 -keepSelectionBorder 1 -keepTessellation 1 -constructionHistory 1 $object`;
				setAttr ($plyname[0]+".smoothUVs") 1;
				connectAttr -f $upperbody ($plyname[0]+".divisions");
			}
			else 
			{
				$plyname = `polySmooth -divisions 0 -continuity 1 -keepBorder 0 -keepSelectionBorder 1 -keepTessellation 1 -constructionHistory 1 $object`;
				setAttr ($plyname[0]+".smoothUVs") 1;
			}
		}	
	}
}