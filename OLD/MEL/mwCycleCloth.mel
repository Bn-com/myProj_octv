/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: mw
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc mwCycleCloth(int $frames)
{
	int $frames = 10;
	//GET ALL POINTS
	$tmp = `ls -sl`;
	string $cloth = $tmp[0];
	$tmp = `ls ($cloth+".vtx[*]")`;
	string $pt_list[] = `filterExpand -sm 31 $tmp`;
	string $clothShape[] = `listRelatives -shapes $cloth`;
	int $size = `size $pt_list`;
	print ("\nCYCLING START SHAPE TO END SHAPE OF "+$cloth+" OVER "+$frames+" FRAMES AT START OF CYCLE\n");
	print ("THERE ARE "+$size+" POINTS\n");
	print "PLEASE WAIT\n\n";
	//waitCursor -state on;

	//GET CYCLE FRAME RANGE
	int $startFrame = `playbackOptions -q -min`;
	int $endFrame = `playbackOptions -q -max`;

	//GET DELTA
	for($i=0;$i<$size;$i++)
	{
		//GET START POSITION
		float $startX[] = `keyframe -time $startFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pntx")`;
		float $startY[] = `keyframe -time $startFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pnty")`;
		float $startZ[] = `keyframe -time $startFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pntz")`;
		
		//GET END POSITION
		float $endX[] = `keyframe -time $endFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pntx")`;
		float $endY[] = `keyframe -time $endFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pnty")`;
		float $endZ[] = `keyframe -time $endFrame -q -vc ($clothShape[0]+".pnts["+$i+"].pntz")`;

		//GET DELTA
		float $dX = $endX[0]-$startX[0];
		float $dY = $endY[0]-$startY[0];
		float $dZ = $endZ[0]-$startZ[0];

		//ADD DELTA OVER FRAME RANGE FROM START OF CYCLE
		for($j=0;$j<=$frames;$j++)
		{
			float $k = $j;
			float $f = $frames;
			int $time = ($startFrame+($frames-$j));
			int $time1 = ($startFrame-($frames-$j));

			//int $time = ($endFrame+($frames-$j));	//FOR ADJUST AT END OF CYCLE
			//int $time1 = ($endFrame-($frames-$j));	//FOR ADJUST AT END OF CYCLE


			float $valX = (($k/$f)*$dX);
			//$valX = (-$valX);	//FOR ADJUST AT END OF CYCLE
			keyframe -e -t $time -r -o over -vc $valX ($clothShape[0]+"_pnts_"+$i+"__pntx") ;
			//print ("MOVING FRAME: "+$time+" VALUE X: "+$valX+"\n");

			float $valY = (($k/$f)*$dY);
			//$valY = (-$valY);	//FOR ADJUST AT END OF CYCLE
			keyframe -e -t $time -r -o over -vc $valY ($clothShape[0]+"_pnts_"+$i+"__pnty") ;
			//print ("MOVING FRAME: "+$time+" VALUE Y: "+$valY+"\n");

			float $valZ = (($k/$f)*$dZ);
			//$valZ = (-$valZ);	//FOR ADJUST AT END OF CYCLE
			keyframe -e -t $time -r -o over -vc $valZ ($clothShape[0]+"_pnts_"+$i+"__pntz") ;
			//print ("MOVING FRAME: "+$time+" VALUE Z: "+$valZ+"\n");

			if($j<$frames)
			{
				keyframe -e -t $time1 -r -o over -vc $valX ($clothShape[0]+"_pnts_"+$i+"__pntx") ;
				keyframe -e -t $time1 -r -o over -vc $valY ($clothShape[0]+"_pnts_"+$i+"__pnty") ;
				keyframe -e -t $time1 -r -o over -vc $valZ ($clothShape[0]+"_pnts_"+$i+"__pntz") ;
			}
		}
		print ("FINISHED POINT: "+$i+" OUT OF "+$size+"\n");
	}
	//waitCursor -state -off;
	print ("\nALL FINISHED CYCLING "+$cloth+"\n\n");
}