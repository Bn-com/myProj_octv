/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///

proc string getCrowdPath()
{
	string $path;

	if (`pluginInfo -query -loaded "idmtCrowd"`)
	{
		$path = `pluginInfo -query -path "idmtCrowd"`;
		$path = `substitute "/[^/]*/[^/]*/[^/]*$" $path ""`;
	}
	else
	{
		$path = `getenv "DEV_PATH"` + "/Maya/Import";
	}
	$path += "/FishSchool";

	return $path;
}

// add attributes and expressions to the particle
proc addExpression(string $particle, string $locator, int $size)
{
	string $shapes[] = `listRelatives -shapes -fullPath $particle`;
	$ptshape = $shapes[0];
	//attributes
	zjObjectAddAttr($particle, "cylinderLength", "double", 10, 0, 1000000000);
	zjObjectAddAttr($particle, "cylinderRadius", "double", 10, 0, 1000000000);
	zjObjectAddAttr($particle, "rotationAngle", "double", 0.01, 0, 360);
	zjObjectAddAttr($particle, "sepVisRadius", "double", 0.2, 0, 1000000000);
	zjObjectAddAttr($particle, "alVisRadius", "double", 0.05, 0, 1000000000);
	zjObjectAddAttr($particle, "seekFactor", "double", 0.01, -1000000000, 1000000000);
	zjObjectAddAttr($particle, "alignmentFactor", "double", 0, -1000000000, 1000000000);
	zjObjectAddAttr($particle, "separationFactor", "double", 0.3, -1000000000, 1000000000);
	zjObjectAddAttr($particle, "scaleValue", "double", 2, 0, 1000000000);
	zjObjectAddAttr($particle, "targetFocus", "double", 1, -1000000000, 1000000000);

	kcParticleAddAttr($ptshape, "scalePP", "vectorArray");
	kcParticleAddAttr($ptshape, "objIndex", "doubleArray");

	// expressions
	string $rexString = "// ***** Start CrowdMaker expression ***** \n \n";
	$rexString += "vector $seek, $separation, $alignment, $findAllIntersection; \n";
	$rexString += "vector $target= <<"+$locator+".translateX, "+$locator+".translateY, "+$locator+".translateZ>>";
	$rexString += " + unit(sphrand(noise("+$ptshape+".particleId)))*" +$particle+ ".targetFocus; \n \n";      //added by zhenghaibin
	$rexString += "if ("+$ptshape+".particleId==0) cMakerLoadParticleValue(\""+$particle+"\", "+$ptshape+".count); \n \n";
	$rexString += "$findAllIntersection= cMakerFindAllIntersection("+$ptshape+".worldPosition, "+$ptshape+".velocity, ";
	$rexString += $particle+".cylinderLength, "+$particle+".cylinderRadius, "+$particle+".rotationAngle); \n \n";
	$rexString += "if ($findAllIntersection != <<0, 0, 0>>) "+$ptshape+".velocity= $findAllIntersection; \n" ;
	$rexString += "  else { \n";
	$rexString += "    $seek= cMakerSeek ("+$ptshape+".worldPosition, "+$ptshape+".velocity, $target); \n";
	$rexString += "    $separation= cMakerSeparation("+$ptshape+".count, "+$ptshape+".particleId, "+$particle+".sepVisRadius); \n";
	$rexString += "    $alignment= cMakerAlignment ("+$ptshape+".count, "+$ptshape+".particleId, "+$particle+".alVisRadius); \n \n";
	$rexString += "    "+$ptshape+".velocity= unit ( "+$ptshape+".velocity+($seek*"+$particle+".seekFactor)+($alignment*"+$particle;
	$rexString += ".alignmentFactor)+($separation*"+$particle+".separationFactor) ) * "+$particle+".scaleValue; \n";
	$rexString += "  } \n \n";
	$rexString += "// *****   -----------------------   *****";

	dynExpression -s $rexString -rbd $ptshape;  
	string $cexString = " cMakerLoadObstacleValue(); \n if (particleId == 0) seed(2.03856128e-007); \n";
	$cexString += "\r\tfloat $rd = rand(0.8,1.2);";
	$cexString += "\r\tscalePP = <<$rd, $rd, $rd>>;";
	$cexString +=  "\n\tobjIndex = rand("+$size+");";

	dynExpression -s $cexString -c $ptshape; 
}

proc int jayefishtype()
{
	string $path = getCrowdPath();

        string $jayequels[]=`textScrollList -q -si jayetyped `;
        int  $jayetypesize=`size $jayequels`;
		string $jayefistupe;
		for ($jayefistupe in $jayequels)
		{
			
		switch ($jayefistupe)
			{
				case "fish_browntang":
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_brown_tang_l_ms_c001.mb");
				break;
				case "fish_butterfly_black":
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_butterflyfish_black_l_ms_c001.mb");
				break;
				case "fish_butterfly_red":
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_butterflyfish_red_l_ms_c001.mb");
			    break;
				case "fish_bigeye_red":
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_bigeye_red_l_ms_c002.mb");
		        break;
				case "fish_squid":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_squid_l_ms_c003.mb");
				break;
				case "fish_squidstate":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_squid_antime_l_ms_c001.mb");
				break;
			    case "fish_tiger":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_tiger_grouper_h_ms_c002.mb");
				break;
				case "fish_blueguppy":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_blueguppy_l_ms_c001.mb");
				break;
				case "fish_BlackbarSoldier":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_blackbar_soldierfish_l_ms_c001.mb");
				break;
				case "fish_blueangel":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_blue_angelfish_l_ms_c001.mb");
				break;
				case "fish_flagrock":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_flagrockfish_l_ms_c001.mb");
				break;
				case "fish_lizard":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_lizardfish_l_ms_c001.mb");
				break;
				case "fish_maskedbutterfly":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_maskedbutterflyfish_l_ms_c001.mb");
				break;
				case "fish_pork":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_porkfish_l_ms_c001.mb");
				break;
				case "fish_puffer":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_pufferfish_l_ms_c001.mb");
				break;
				case "fish_yellowtang":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_yellow_tang_l_ms_c001.mb");
				break;
				case "fish_jack":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_jackfish_l_ms_c001.mb");
				break;
				case "fish_leadershark":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_leadershark_h_ms_c001.mb");
				break;
				case "fish_garibaldi":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_garibaldifish_l_ms_c003.mb");
				break;
				case "fish_seagull":   
				file -import -type "mayaBinary" -rpr "fishGroup" ($path + "/do_seagull_h_ms_c001.mb");
				break;
			}
			
		}
	return 	$jayetypesize;
}

proc string[] jayehidefish()
{
	
		
		string $jayequelsgeo[]		=`textScrollList -q -si jayetyped `;
		string $jayegeo    			="_geo";
		string $jayequelsmaster[]	=`textScrollList -q -si jayetyped `;
		string $jayemaster    		="_master";
		string $jayepath            ="|";
		for ($i=0;$i<`size $jayequelsgeo`;$i++)
		{
			
			$jayequelsgeo[$i]=$jayepath+$jayequelsgeo[$i]+$jayegeo;
			
		}
		for ($j=0;$j<`size $jayequelsmaster`;$j++)
		{
			$jayequelsmaster[$j]=$jayepath+$jayequelsmaster[$j]+$jayemaster;
			
		}
		string $jayegroup=`group -name fishGroup $jayequelsgeo $jayequelsmaster` ; 
		
		hide 	$jayegroup;
		return $jayequelsgeo;
		

	
}


global proc jayefishview()
{
	string $path = getCrowdPath();

	string $jayequels[]=`textScrollList -q -si jayetyped `;
	string $jayefispic;
	for ($jayefispic in $jayequels)
	{
	string $jayefispicnet = $path + "/" + $jayefispic+".png";
	image -edit -vis true jayefimage ;
	image -edit -image $jayefispicnet jayefimage;
	}
}
//lightcreate
global proc string jayerowlight()
{   
	string $lightlist[]=`ls  "crowlight*"`;
	if (`size $lightlist`==0)
	{
	for ($i=0;$i<=3;$i++)
	{
	string $createlight=`directionalLight -name crowlight `;	
	}
	}
	string $lightlist[]=`ls  "crowlight*"`;

	//a
	setAttr ($lightlist[0]+".translateZ") 	2.0;
	setAttr ($lightlist[0]+".rotateX") 		-45;
	//b
	setAttr ($lightlist[1]+".translateX") 	-2.0;
	setAttr ($lightlist[1]+".rotateX") 		-45;
	setAttr ($lightlist[1]+".rotateY") 		-45;
	
	//e
	setAttr ($lightlist[2]+".translateZ") 	2.0;
	setAttr ($lightlist[2]+".rotateX") 		45;
	
	//f
	setAttr ($lightlist[3]+".translateX") 	-2.0;
	setAttr ($lightlist[3]+".rotateX") 		45;
	setAttr ($lightlist[3]+".rotateY") 		-45;
	//
	setAttr ($lightlist[4]+".intensity") 	0.7;
	setAttr ($lightlist[5]+".intensity") 	0.7;
	setAttr ($lightlist[7]+".intensity") 	0.3;
	setAttr ($lightlist[6]+".intensity") 	0.3;
	group -n lightcrow $lightlist;
	return "";
}

global proc jayecrowlayers()
{
	string $jayelistfish		[]	=`ls -dag -long "fishGroup*"`;
	string $jayelist			[]	=`ls -type "instancer"`;
	string $jayelistlight   	[]  =`ls -lights "crowlight*"`;
	string $hjcrelayer			=`createRenderLayer -name "crowfish" -number 1 -makeCurrent -noRecurse $jayelistfish $jayelistlight $jayelist	`;
	setAttr "defaultRenderLayer.renderable" 0					;
	layerEditorLayerButtonSelect 0 $hjcrelayer					;
	setAttr "defaultRenderQuality.edgeAntiAliasing" 	0;
	setAttr "defaultRenderQuality.shadingSamples" 		2;
	setAttr "defaultRenderQuality.maxShadingSamples" 	8;
	setAttr "defaultRenderQuality.useMultiPixelFilter" 	1;
	setAttr "defaultRenderQuality.pixelFilterType" 		2;
	setAttr "defaultRenderQuality.redThreshold" 		0.4;
	setAttr "defaultRenderQuality.greenThreshold" 		0.3;
	setAttr "defaultRenderQuality.blueThreshold"        0.6;
	
	
}

global proc string hjappDepthcrow()
//
// Description:
//      Procedure to apply the built-in linear depth preset to a layer.
//
{
    
    
 
   
    
    
    // Shader override
    string $ifo = `shadingNode -asUtility samplerInfo`;
    string $mul = `shadingNode -asUtility multiplyDivide`;
    string $rng = `shadingNode -asUtility setRange`;
    string $sdr = `shadingNode -asShader surfaceShader`;
    string $set = `sets -renderable true -noSurfaceShader true -empty`;
    addAttr -longName "cameraNearClipPlane" -attributeType "float" $ifo;
    addAttr -longName "cameraFarClipPlane" -attributeType "float" $ifo;
	addAttr -ln Depthvalue -at double  -min 0 -max 1 -dv 0 $sdr;
	connectAttr ($sdr+".Depthvalue") ($rng+".minX") ;
    connectAttr ($ifo+".pointCameraZ") ($mul+".input1X");
    setAttr ($mul+".input2X") -1.0;
    connectAttr ($mul+".outputX") ($rng+".valueX");
    connectAttr ($ifo+".cameraNearClipPlane") ($rng+".oldMinX");
    connectAttr ($ifo+".cameraFarClipPlane") ($rng+".oldMaxX");
    //setAttr ($rng+".minX") 0.0; // fcheck will scale to 200/255.
    setAttr ($rng+".maxX") 1.0;
    connectAttr ($rng+".outValueX") ($sdr+".outColorR");
    connectAttr ($rng+".outValueX") ($sdr+".outColorG");
    connectAttr ($rng+".outValueX") ($sdr+".outColorB");
    connectAttr ($sdr+".outColor") ($set+".surfaceShader");
	
	string $jayelistfish		[]	=`ls -dag -long "fishGroup*"`;
	string $jayelist			[]	=`ls -type "instancer"`;
	
	string $hjcrelayer=`createRenderLayer -name "fishcrowDepth" -number 1 -makeCurrent -noRecurse $jayelistfish $jayelist`;
    layerEditorLayerButtonSelect 0 $hjcrelayer; 
	setAttr "defaultRenderLayer.renderable" 0;
	select 		$jayelistfish ;
	hyperShade  -assign $sdr;
	
  return $rng;

}


//Main
global proc zjFishSchool()
{
	
	if (`window -q -exists zjFishSchWin`) deleteUI zjFishSchWin;
		//return;
   
	window -title "Fish School" -resizeToFitChildren true -w 380 -h 420 zjFishSchWin;
		string $formLayout1 = `formLayout`;
			string $colayout1 = `columnLayout -adjustableColumn true`;
				menuBarLayout;
					menu -label "Edit";
						menuItem -label "Reset Settings" zjFishSchWinReset;
					menu -label "Help";
						menuItem -label "Help on Fish School..." -command "zjHelpCallback zjFishSchool";
			   setParent ..;
					
			setParent $formLayout1;
			
			string $frlayout = `frameLayout -label "School Settings" -cll true -borderStyle "etchedIn"`;
				
			string $formLayout = `formLayout`;
          
				string $sname = `textFieldGrp -columnWidth 1 100 -columnWidth 2 220 -label "School Name"`;
				string $number = `intSliderGrp -field true -l "Number of Fish" -columnWidth 1 110 -columnWidth 2 60 -min 2 -max 30 -fieldMinValue 2 -fieldMaxValue 1000 -v 5`;
				string $radius = `floatSliderGrp -label "Maximum Radius" -minValue 0.0 -maxValue 30.000
						-columnWidth 1 110 -columnWidth 2 60
						-field true -fieldMinValue 0.0 -fieldMaxValue 500000.0 -value 20`;
				string $radioButtonGrp = `radioButtonGrp -numberOfRadioButtons 2 -label "Dimension" -labelArray2 "3D" "2D" -columnWidth3 110 50 50 -select 1 type`;
		
				menuItem -e -command ("textFieldGrp -e -text \"\" " + $sname + ";intSliderGrp -e -v 2 " + $number + ";floatSliderGrp -e -v 3.0 " + $radius + ";radioButtonGrp -e -select 1 " + $radioButtonGrp + ";") zjFishSchWinReset;
				setParent ..;

				formLayout -edit
					-attachForm			$sname				"top"		5
					-attachForm			$sname				"left"		15
					-attachForm			$sname				"right"		5
				
					-attachControl		$number				"top"		5	$sname
					-attachForm			$number				"left"		5
					-attachForm			$number				"right"		5
				
					-attachControl		$radius				"top"		5	$number
					-attachForm			$radius				"left"		5
					-attachForm			$radius				"right"		5
				
					-attachControl		$radioButtonGrp		"top"		5	$radius
					-attachForm			$radioButtonGrp		"left"		0
					-attachForm			$radioButtonGrp		"right"		5
				$formLayout;
				
				setParent $formLayout1;


				string $jayelayout 	= `frameLayout -label "Fish Type" -cll true -borderStyle "etchedIn"`;
				string $jayeLayoutf	=`formLayout`;
				string $jaytesls	=`textScrollList -selectCommand "jayefishview" -numberOfRows 8 -allowMultiSelection true 
						-append "fish_browntang"      	-append "fish_butterfly_black"      -append "fish_butterfly_red" 	-append "fish_bigeye_red" 	-append "fish_squid" 	-append "fish_squidstate"	-append "fish_tiger" 
						-append "fish_blueguppy"      	-append "fish_BlackbarSoldier"   	-append "fish_blueangel" 		-append"fish_flagrock" 		-append"fish_lizard" 	-append"fish_maskedbutterfly" 
						-append "fish_pork" 			-append "fish_puffer"  				-append "fish_yellowtang"       -append  "fish_jack"        -append  "fish_leadershark"   	-append"fish_garibaldi" -append"fish_seagull" jayetyped` ;
				
				string $jayeshow	=`text -label "Picture by fish" jayetext`;
                string $jayeshowpic	=`image  -w 128 -h 128 -vis false jayefimage`;

				int $idmtCrowd = `pluginInfo -query -loaded "idmtCrowd"`;
				string $hjbuttona = `button -visible (!$idmtCrowd) -label "Layer" -c jayecrowlayers`;
				string $hjbuttonb = `button -visible (!$idmtCrowd) -label "Depth" -c hjappDepthcrow`;
				string $hjbuttonc = `button -visible (!$idmtCrowd) -label "Light" -c jayerowlight`;
				formLayout -edit
					-attachForm			$jaytesls			"top"		5
					-attachForm			$jaytesls			"left"		15
					-attachForm			$jaytesls			"right"		150
				    -attachForm			$jaytesls			"bottom"    5
					
						    
					-attachForm	        $jayeshowpic		"top"	    5	
					-attachControl		$jayeshowpic		"left"		20   $jaytesls
					
					-attachControl      $jayeshow			"top"	    3	 $jayeshowpic
					-attachControl		$jayeshow			"left"	    20   $jaytesls	   
					
					-attachControl      $hjbuttona			"top"	    5	 $jayeshow
					-attachControl		$hjbuttona			"left"	    20   $jaytesls
					
					-attachControl      $hjbuttonb			"top"	    5	 $jayeshow
					-attachControl		$hjbuttonb			"left"	    5   $hjbuttona
					
					-attachControl      $hjbuttonc			"top"	    5	 $jayeshow
					-attachControl		$hjbuttonc			"left"	    5   $hjbuttonb
					$jayeLayoutf;
				
				
				setParent $formLayout1;
                
				//setParent $formLayout1;
				string $button1 = `button -label "Create" -command ("zjFishSch_func " + " " + $sname + " " + $number + " " + $radius + " " + $radioButtonGrp + " "  + ";deleteUI -window  zjFishSchWin")`;
				string $button2 = `button -label "Apply" -command ("zjFishSch_func " + " " + $sname + " " + $number + " " + $radius + " " + $radioButtonGrp + " " )`;
				string $button3 = `button -label "Close" -command ("deleteUI -window  zjFishSchWin")`;
				
				
				formLayout -edit
					-attachForm			$colayout1		"top"		0
					-attachForm			$colayout1		"left"		5
					-attachForm			$colayout1		"right"		5

					-attachControl		$frlayout		"top"	        3	$colayout1
					-attachForm			$frlayout		"left"		5
					-attachForm			$frlayout		"right"		5

					-attachControl		$jayelayout		"top"	3	$frlayout
					-attachForm			$jayelayout		"left"		5
					-attachForm	    	$jayelayout		"right"		 5    
					
				

					-attachForm			$button1		"bottom"	3
					-attachForm			$button1		"left"		3
					-attachPosition		$button1		"right"		0	33

					-attachForm			$button2		"bottom"	3
					-attachControl		$button2		"left"		3	$button1
					-attachPosition		$button2		"right"		0	66

					-attachForm			$button3		"bottom"	3
					-attachControl		$button3		"left"		3	$button2
					-attachPosition		$button3		"right"		0	99
				$formLayout1;
			setParent ..;
	showWindow zjFishSchWin;
}

global proc zjFishSch_func(string $ctr1, string $ctr2, string $ctr3, string $ctr4)
{
	string $sl[] = `ls -tr -sl`;
	if (size($sl) == 1 && kcIsType($sl[0], "locator"))
	{
		//query the values of the controls
		string $name 	= `textFieldGrp -q -text $ctr1`;
		$name 			= strip($name);
		int  $number 	= `intSliderGrp -q -v $ctr2`;
		float $radius 	= `floatSliderGrp -q -v $ctr3`;
		int   $dimen 	= `radioButtonGrp -q -select $ctr4`;
		
		// edit add attAttr
		
		int $jayefishset=`jayefishtype`;
	
		if ($jayefishset==0)
		{
			error "please select at least one type!";
			return;
		}
		
		//first get the position of the locator then
		//according to the position of the locator, create fish particles
		float $locpos[]=`xform -q -ws -t $sl[0]`;
		string $pt[];
		clear $pt;
		if ($name == "")
			$pt = `particle -jitterBasePoint $locpos[0] $locpos[1] $locpos[2] -numJitters $number -jitterRadius $radius -conserve 1`;
		else 
			$pt = `particle -jitterBasePoint $locpos[0] $locpos[1] $locpos[2] -numJitters $number -jitterRadius $radius -conserve 1 -name $name`;
		
		//setAttr ($pt[0] + ".particleRenderType") 4;

		//remove unused attributes
		setAttr -keyable 0 -lock 1 ($pt[0] + ".tx");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".ty");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".tz");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".rx");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".ry");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".rz");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".sx");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".sy");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".sz");
		setAttr -keyable 0 -lock 1 ($pt[0] + ".visibility");
		
		
		
		string $fish[]		=`textScrollList -q -si jayetyped `;
		string $jayegeo    	="_geo";
		string $jayepath    ="|";
		for ($i=0;$i<`size $fish`;$i++)
		{
			
			$fish[$i]=$jayepath+$fish[$i]+$jayegeo;
			
		}
        
		//add attributes and expressions to the particle
		addExpression ($pt[0], $sl[0], size($fish));

		//instancer
		int $jayeinstansize=`size $fish`;
		if ($jayeinstansize>4)
		{
		warning "◊Ó∂‡÷ªƒ‹—°‘ÒÀƒ÷÷¿‡–Õ";
		}
		switch ($jayeinstansize)
		{		
			case 1:
				particleInstancer  -addObject -object $fish[0] -scale scalePP -aimDirection velocity -objectIndex objIndex $pt[0];
				break;
			case 2:
				particleInstancer  -addObject -object $fish[0] -object $fish[1] -scale scalePP -aimDirection velocity -objectIndex objIndex $pt[0];
			    break;
			case 3:
				particleInstancer  -addObject -object $fish[0] -object $fish[1] -object $fish[2] -scale scalePP -aimDirection velocity -objectIndex objIndex $pt[0];
			    break;
		   case 4:
				particleInstancer  -addObject -object $fish[0] -object $fish[1] -object $fish[2] -object $fish[3] -scale scalePP -aimDirection velocity -objectIndex objIndex $pt[0];
			    break;
			
		}
		
		string $fisha[] 	= `jayehidefish`;
		
		
	}
	else error "please select a locator";
}


