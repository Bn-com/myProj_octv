/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//To get all the Transforms from a Shape node:
proc string[] getTransforms( string $shape )
{
	string $transforms[];

	if ( "transform" != `nodeType $shape` )
	// If given node is already a transform, just pass on through
	{
		string $parents[] = `listRelatives -fullPath -allParents $shape`;
		$transforms = $parents;
	}

	return $transforms;
}

//copy attribute of shape node to transfrom node
global proc kcConvertSmooth()
{
	string $list[] = `ls -type "mesh"`;
	for ($shp in $list)
	{
		string $lS[] = `listAttr -userDefined -string MaxSmooth $shp`;
		if (size($lS) == 1)
		{
			string $trans[] = getTransforms($shp);
			for ($obj in $trans)
			{
				string $ma[] = `listAttr -userDefined -string MaxSmooth $obj`;
				if (size($ma) == 0)
				{
					$level = `getAttr ($shp+".MaxSmooth")`;
					addAttr -longName "MaxSmooth" -attributeType long -defaultValue $level $obj;
				}
			}
			//delete attribute of shape node
			deleteAttr -at "MaxSmooth" $shp;
		}
		string $lS[] = `listAttr -userDefined -string FarSmooth $shp`;
		if (size($lS) == 1)
		{
			string $trans[] = getTransforms($shp);
			for ($obj in $trans)
			{
				string $ma[] = `listAttr -userDefined -string FarSmooth $obj`;
				if (size($ma) == 0)
				{
					$level = `getAttr ($shp+".FarSmooth")`;
					addAttr -longName "FarSmooth" -attributeType long -defaultValue $level $obj;
				}
			}
			//delete attribute of shape node
			deleteAttr -at "FarSmooth" $shp;
		}

		string $lS[] = `listAttr -userDefined -string MediumSmooth $shp`;
		if (size($lS) == 1)
		{
			string $trans[] = getTransforms($shp);
			for ($obj in $trans)
			{
				string $ma[] = `listAttr -userDefined -string MediumSmooth $obj`;
				if (size($ma) == 0)
				{
					$level = `getAttr ($shp+".MediumSmooth")`;
					addAttr -longName "MediumSmooth" -attributeType long -defaultValue $level $obj;
				}
			}
			//delete attribute of shape node
			deleteAttr -at "MediumSmooth" $shp;
		}
		string $lS[] = `listAttr -userDefined -string CloseSmooth $shp`;
		if (size($lS) == 1)
		{
			string $trans[] = getTransforms($shp);
			for ($obj in $trans)
			{
				string $ma[] = `listAttr -userDefined -string CloseSmooth $obj`;
				if (size($ma) == 0)
				{
					$level = `getAttr ($shp+".CloseSmooth")`;
					addAttr -longName "CloseSmooth" -attributeType long -defaultValue $level $obj;
				}
			}
			//delete attribute of shape node
			deleteAttr -at "CloseSmooth" $shp;
		}
	}
	print "convertSmooth";
}

