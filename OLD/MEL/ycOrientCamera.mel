/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÒüêÉ
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


ycOrientCamera;
global proc ycOrientCamera()
{		
	if (`window -exists OrientCamera`)
	{
		deleteUI -window OrientCamera;
	}

	string $sceneName;
	window -in "GI_Joe_preload" -t "Orient Camera"
			-widthHeight 400 100
			-s 1 OrientCamera;

		formLayout formLayout1;
			frameLayout
				-label "Camera Focus"
				-collapsable 1
				-labelAlign "top"
				-bs "etchedIn"	frameLayout1;
				columnLayout;
					floatSliderGrp -label "Focal Length:" 
						-cl3 "right" "left" "left" 
						-cw3 140 45 280 
						-min 0.001 -max 100.0 
						-fmn 0.001 -fmx 100.0 
						-value 35 -f true 
						cameraFocu;
					setParent ..;
				setParent ..;
			frameLayout
				-label "Number of cameras"
				-collapsable 1
				-labelAlign "top"
				-bs "etchedIn" frameLayout2;
				columnLayout -rowSpacing 5;
					floatSliderGrp -label "Radius" -cl3 "right" "left" "left" -cw3 140 45 280 -min 0.001 -max 10000.0 -fmn 0.001 -fmx 10000.0 -value 10 -f true radiusSlider;
					radioButtonGrp
						-label "Sphere"
						-numberOfRadioButtons 2
						-l1 "130 camera"
						-l2 "502 joint"
						-on1 "CameraEnable"
						-on2 "JointEnable"
						-sl 1 numSCameras;
					floatSliderGrp -label "Camera longitude distance" 
							-cl3 "right" "left" "left" 
							-cw3 140 45 280 -min 1.0 -max 20.0 
							-fmn 1.0 -fmx 20.0 -value 17.9 -f true longitudeSlider;
					floatSliderGrp -label "Camera latitude distance" 
							-cl3 "right" "left" "left" 
							-cw3 140 45 280 -min 1.0 -max 20.0 
							-fmn 1.0 -fmx 20.0 -value 18.0 -f true latitudeSlider;
					floatSliderGrp -label "Joint longitude distance" 
							-cl3 "right" "left" "left" 
							-cw3 140 45 280 -min 1.0 -max 20.0 
							-enable 0
							-fmn 1.0 -fmx 20.0 -value 8.9 -f true jointLongitudeSlider;
					floatSliderGrp -label "Joint latitude distance" 
							-cl3 "right" "left" "left" 
							-cw3 140 45 280 -min 1.0 -max 20.0 
							-enable 0
							-fmn 1.0 -fmx 20.0 -value 9.0 -f true jointLatitudeSlider;
					setParent ..;
	
				setParent ..;
			frameLayout
				-label "Render directory"
				-collapsable 1
				-labelAlign "top"
				-bs "etchedIn" frameLayout3;
				columnLayout -rowSpacing 5;
					rowLayout -numberOfColumns 2 -columnWidth2 370 75;
						textFieldGrp -adjustableColumn 2
							-columnWidth2 160 200 
							-label "Iff File directory"  
							-enable 1 IffFileDirectory;
						button -label "Browse set..." 
							-w 72 
							-align "center"
							-command "ycBrowseSetFile" 
							ycBrowseSetButton;
						setParent ..;
					setParent ..;
				setParent ..;
			frameLayout
				-label "Rename Iff Name"
				-collapsable 1
				-labelAlign "top"
				-bs "etchedIn" frameLayout4;
				columnLayout -rowSpacing 5;
					rowLayout -numberOfColumns 2 -columnWidth2 370 75;
						textFieldGrp -adjustableColumn 2 
							-columnWidth2 160 200 
							-label "Old Iff File Name"  
							-enable 1 CameraIffFile;
						button -label "Browse..." 
							-w 72 
							-align "center"
							-command "BrowseCameraIffFileName" 
							BrowseCameraIffFile;
						setParent ..;
					rowLayout -numberOfColumns 2 -columnWidth2 370 75;
						textFieldGrp -adjustableColumn 2 
							-columnWidth2 160 200 
							-label "New Prefix File Name"  
							-enable 1 
							NewMulCameraIffFile;
						button -label "Rename" 
							-w 72 
							-align "center" 
							-command "RenameNewCameraIff" 
							RenameNewMulCameraIff;
						setParent ..;
					setParent ..;
				setParent ..;

				string $button1 = `button -label "Render Camera" -c "RenderCameraSequence"`;
				string $button2 = `button -label "Go create" -c "CreateCamera"`;
				string $button3 = `button  -label "Close" -c "deleteUI -window OrientCamera"`;

			formLayout -edit
				-attachForm	frameLayout1	"top"		0
				-attachForm	frameLayout1	"left"		5
				-attachForm	frameLayout1	"right"		5
				-attachPosition	frameLayout1	"bottom"	5	14

				-attachControl	frameLayout2	"top"		0	frameLayout1
				-attachForm	frameLayout2	"left"		5
				-attachForm	frameLayout2	"right"		5
				-attachPosition	frameLayout2	"bottom"	5	59
				
				-attachControl	frameLayout3	"top"		0	frameLayout2
				-attachForm	frameLayout3	"left"		5
				-attachForm	frameLayout3	"right"		5
				-attachPosition	frameLayout3	"bottom"	5	73

				-attachControl	frameLayout4	"top"		0	frameLayout3
				-attachForm	frameLayout4	"left"		5
				-attachForm	frameLayout4	"right"		5
				-attachControl	frameLayout4	"bottom"	5	$button1

				-attachForm	$button1	"left"		5
				-attachForm	$button1	"bottom"	5
				-attachPosition	$button1	"right"		5	33

				-attachControl	$button2	"left"		5	$button1
				-attachForm	$button2	"bottom"	5
				-attachPosition	$button2	"right"		5	67

				-attachControl	$button3	"left"		5	$button2
				-attachForm	$button3	"bottom"	5
				-attachForm	$button3	"right"		5
			formLayout1;

		showWindow OrientCamera;
}

global proc CameraEnable()
{
	floatSliderGrp -e -enable 1 longitudeSlider;
	floatSliderGrp -e -enable 1  latitudeSlider;
	floatSliderGrp -e -enable 0  jointLongitudeSlider;
	floatSliderGrp -e -enable 0 jointLatitudeSlider;
}

global proc JointEnable()
{
	floatSliderGrp -e -enable 0 longitudeSlider;
	floatSliderGrp -e -enable 0  latitudeSlider;
	floatSliderGrp -e -enable 1  jointLongitudeSlider;
	floatSliderGrp -e -enable 1 jointLatitudeSlider;
}

global proc ycBrowseSetFile()
{
	fileBrowserDialog -mode 4 -fileCommand "ycInputRenderDirectory" -fileType "iff" -actionName "Import_Image" -operationMode "Import";
}

global proc int ycInputRenderDirectory(string $filename, string $fileType)
{
	textFieldGrp -e -text $filename IffFileDirectory;
	return 1;
}

global proc CreateCamera()
{
	if (`objExists CameraGroup`)
	{
		delete CameraGroup;
	}
	int $JudgeNumber=`radioButtonGrp -q -sl numSCameras`;	
	switch ($JudgeNumber)
	{
	    case 1:
		CameraPosition130;
		break;
	    case 2:
		CameraPosition502;
		break;
	    default:
		return;
		break;
	}
}

global proc CameraPosition502()
{
	if (`objExists CameraGroup`)
	{
		delete CameraGroup;
	}
	CreateEmptyGroup;
	rename CameraGroup;
	spaceLocator -p 0 0 0;
	rename "locatorAim";
	parent locatorAim CameraGroup;
	int $num=0;
	float $SphereRadius=`floatSliderGrp -q -v radiusSlider`; 

	float $column=`floatSliderGrp -q -v jointLongitudeSlider`;
	float $row=`floatSliderGrp -q -v jointLatitudeSlider`;
	
	for ($j=0;$j>-89.9;$j-=$column)
	{
		$i=0;
		float $xValue;
		float $yValue;
		float $zValue;
		
			$xValue=(sind($i)*cosd($j))*$SphereRadius;
			$yValue=-(sind($j)*$SphereRadius);
			$zValue=(cosd($i)*cosd($j))*$SphereRadius;
		joint  -p $xValue $yValue $zValue;
		rename ("CameraPos"+$num);
		$num++;
	}
	for ($i=$row,$k=-$row;$i<180.1,$k>-180.1;$i+=$row,$k-=$row)
	{
		for ($j=0;$j>-89.9;$j-=$column)
		{
			float $xValue;
			float $yValue;
			float $zValue;
			
				$xValue=(sind($i)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			$num++;
		}
		for ($j=0;$j>-89.9;$j-=$column)
		{
				$xValue=(sind($k)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($k)*cosd($j))*$SphereRadius;
			joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			$num++;
		}
	}
	for ($j=$column;$j<89.9;$j+=$column)
	{
		$i=0;
		float $xValue;
		float $yValue;
		float $zValue;
		
			$xValue=(sind($i)*cosd($j))*$SphereRadius;
			$yValue=-(sind($j)*$SphereRadius);
			$zValue=(cosd($i)*cosd($j))*$SphereRadius;
		joint  -p $xValue $yValue $zValue;
		rename ("CameraPos"+$num);
		$num++;
	}
	for ($i=$row,$k=-$row;$i<180.1,$k>-180.1;$i+=$row,$k-=$row)
	{
		for ($j=$column;$j<89.9;$j+=$column)
		{
			float $xValue;
			float $yValue;
			float $zValue;
			
				$xValue=(sind($i)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			$num++;
		}
		for ($j=$column;$j<89.9;$j+=$column)
		{
				$xValue=(sind($k)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($k)*cosd($j))*$SphereRadius;
			joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			$num++;
		}
	}
}

global proc CameraPosition130()
{
	if (`objExists CameraGroup`)
	{
		delete CameraGroup;
	}
	CreateEmptyGroup;
	rename CameraGroup;
	spaceLocator -p 0 0 0;
	rename "locatorAim";
	parent locatorAim CameraGroup;
	int $num=0;
	float $SphereRadius=`floatSliderGrp -q -v radiusSlider`; 
	float $CameraFocus=`floatSliderGrp -q -v cameraFocu`;

	float $column=`floatSliderGrp -q -v longitudeSlider`;
	float $row=`floatSliderGrp -q -v latitudeSlider`;

	for ($j=0;$j>-89.9;$j-=$column)
	{
		$i=0;
		float $xValue;
		float $yValue;
		float $zValue;
		
			$xValue=(sind($i)*cosd($j))*$SphereRadius;
			$yValue=-(sind($j)*$SphereRadius);
			$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
		$num++;
	}

	for ($i=$row,$k=-$row;$i<180.1,$k>-180.1;$i+=$row,$k-=$row)
	{
		for ($j=0;$j>-89.9;$j-=$column)
		{
			float $xValue;
			float $yValue;
			float $zValue;
			
				$xValue=(sind($i)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
			$num++;
		}
		for ($j=0;$j>-89.9;$j-=$column)
		{
				$xValue=(sind($k)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($k)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
			$num++;
		}
	}

	for ($j=$column;$j<89.9;$j+=$column)
	{
		$i=0;
		float $xValue;
		float $yValue;
		float $zValue;
		
			$xValue=(sind($i)*cosd($j))*$SphereRadius;
			$yValue=-(sind($j)*$SphereRadius);
			$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
		$num++;
	}
	
	for ($i=$row,$k=-$row;$i<180.1,$k>-180.1;$i+=$row,$k-=$row)
	{
		for ($j=$column;$j<89.9;$j+=$column)
		{
			float $xValue;
			float $yValue;
			float $zValue;
			
				$xValue=(sind($i)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($i)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
			$num++;
		}
		for ($j=$column;$j<89.9;$j+=$column)
		{
				$xValue=(sind($k)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(cosd($k)*cosd($j))*$SphereRadius;
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
			$num++;
		}
	}
	/*for ($i=0;$i<181;$i+=18)
	{
		for ($j=-90;$j<91;$j+=18)
		{
			float $xValue;
			float $yValue;
			float $zValue;
			
			if ($num%11==0)
			{
				 $xValue=(cosd($i+1)*cosd($j+1))*$SphereRadius;
				 $yValue=-(sind($j+1)*$SphereRadius);
				 $zValue=(sind($i+1)*cosd($j+1))*$SphereRadius;
			}
			else if($num%11==10)
			{
				$xValue=(cosd($i-1)*cosd($j-1))*$SphereRadius;
				$yValue=-(sind($j-1)*$SphereRadius);
				$zValue=(sind($i-1)*cosd($j-1))*$SphereRadius;
			}
			else
			{
				$xValue=(cosd($i)*cosd($j))*$SphereRadius;
				$yValue=-(sind($j)*$SphereRadius);
				$zValue=(sind($i)*cosd($j))*$SphereRadius;
			}
			camera -p $xValue $yValue $zValue 
				-centerOfInterest 5 
				-focalLength $CameraFocus 
				-lensSqueezeRatio 1 
				-cameraScale 1 
				-horizontalFilmAperture 1.41732 
				-horizontalFilmOffset 0 
				-verticalFilmAperture 0.94488 
				-verticalFilmOffset 0 
				-filmFit Fill 
				-overscan 1 
				-motionBlur 0 
				-shutterAngle 144 
				-nearClipPlane 0.01 
				-farClipPlane 1000 
				-orthographic 0 
				-orthographicWidth 30;
			//joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$num);
			parent ("CameraPos"+$num) CameraGroup;
			aimConstraint -weight 1 -aimVector 0 0 -1 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0 locatorAim ("CameraPos"+$num);
			$num++;
		}
	}*/
}

global proc RenderCameraSequence()
{
	string $RenderDirectoryField = `textFieldGrp -q -text IffFileDirectory`;
	if ($RenderDirectoryField=="")
	{
		error "Render directory field is empty";
		return;
	}
	source "setProject.mel";
	sp_setLocalWorkspaceCallback $RenderDirectoryField "directory";
	//workspace -dir $RenderDirectoryField;
	
	int $NumCameras=`radioButtonGrp -q -sl numSCameras`;

	if ($NumCameras==1)
	{
		for ($i=0;$i<121;$i++)
		{
			select ("CameraPos"+$i);
			string $CameraListShape[]=`listRelatives ("CameraPos"+$i)`;
			setAttr ($CameraListShape[0]+".renderable") 1;
		}
	}
	BatchRender;
}

//OrientCamera;
/*global proc CameraPosition()
{
	for ($i=0,$j=0;$i<360,$j<180;$i+=4,$j+=2)
	{
			float $sinValue=(sind($i)*sind($j))*10;
			float $CosValue=(cosd($i)*sind($j))*10;
			float $zValue=sind($j)*10;
			joint  -p $sinValue $CosValue $zValue;
			rename ("CameraPos"+$i);
	}
}
global proc CameraPosition()
{
	for ($i=0;$i<360;$i+=30)
	{
		for ($j=0;$j<180 ;$j+=18 )
		{
			$xValue=(cosd($i)*cosd($j))*10;
			$yValue=(cosd($j)*10);
			$zValue=(sind($i)*cosd($j))*10;

			joint  -p $xValue $yValue $zValue;
			rename ("CameraPos"+$i);
		}
	}
}
CameraPosition;
*/

global proc BrowseCameraIffFileName()
{
	fileBrowserDialog -mode 0 -fileCommand "InputIffFileName" -fileType "" -actionName "Import_Image" -operationMode "Import";
}

global proc int InputIffFileName(string  $filename,string $fileType)
{
	string $buffer[];
	int $Filenamesize=`tokenize $filename "." $buffer`;
	if ($Filenamesize==2)
	{
		if (`match "[0-9]+" $buffer[1]`!=$buffer[1])
		{
			warning "Format error!";
			return 0;
		}
		else
		{
			$filename=$buffer[0]+".#";
		}
	}

	textFieldGrp -e -text $filename CameraIffFile;
	return 1;
}

global proc RenameNewCameraIff()
{
	string $NewCameraIffFileField=`textFieldGrp -q -text NewMulCameraIffFile`;
	if ($NewCameraIffFileField=="")
	{
		return;
	}
	else
	{
		string $OldCameraIffFileField = `textFieldGrp -q -text CameraIffFile`;
		string $dirname = dirname($OldCameraIffFileField)+"/";

		string $buffer[];
		int $FilePrefixSize=`tokenize $OldCameraIffFileField "/" $buffer`;
		string $FileNamePrefix=$buffer[$FilePrefixSize-1];
		string $NeedFile=`substitute "#" $FileNamePrefix "\*"`;

		tokenize $FileNamePrefix "." $buffer;
		$FileNamePrefix=$buffer[0];

		string $GetFileList[]=`getFileList -folder $dirname -filespec $NeedFile`;
		$dirname=substituteAllString($dirname, "/", "\\\\");
		for ($i=0;$i<size($GetFileList);$i++)
		{
			string $FileBuffer[];
			tokenize $GetFileList[$i] "." $FileBuffer;
			system("rename \"" + $dirname+$GetFileList[$i] + "\" " +$NewCameraIffFileField+"."+$FileBuffer[1]);
		}
	}
}