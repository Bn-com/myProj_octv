/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÒüêÉ
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//ycRenameIff;
global proc ycRenameIff()
{
	if( `window -exists ycRenameIff` ) 
	{
		deleteUI ycRenameIff;
	}
 	window -menuBar true -title "Rename Iff File" -width 445 -height 200 ycRenameIff;
		menu -label "Help";
			menuItem -label "Help on Rename Iff File..." -command "zjHelpCallback ycRenameIff";
		formLayout formLayout1;
			
			textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "Iff File Name"  -enable 1 IffFileName;
			button -label "Browse..." -command "ycBrowseFile" kcFSBrowseButton;
			textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "New File Name" -enable 1 NewFileName;
		//	textFieldGrp -adjustableColumn 2 -columnWidth2 160 200 -label "Iff File Name" -changeCommand "ycFieldChange" -enable 1 IffFileName;


			/*separator -style "in" Line1;
			textScrollList 
				-allowMultiSelection	true			//Specify multi or single selection mode. 
				//-deleteKeyCommand	"soundCmd delete"	//executed when the delete or backspace key is pressed. 
				-doubleClickCommand	"InputSelectedFile"	//executed when an item is double clicked. 
				FileList;

			columnLayout -adjustableColumn true columnLayout1;
				button  -l "All File >>" 	-enable true	-command "SelectAllFile"	SelectAllFile;
				button  -l "<< All File" 	-enable true	-command "UnselectAllFile"	UnselectAllFile;
				button  -l ">>" 		-enable true	-command "InputSelectedFile"	InputSelected;
				button  -l "<<" 		-enable true	-command "OutputSelectedFile"	OutputSelected;
			setParent ..;

			textScrollList 
				-allowMultiSelection	true			//Specify multi or single selection mode. 
				//-deleteKeyCommand	"soundCmd delete"	//executed when the delete or backspace key is pressed. 
				-doubleClickCommand	"OutputSelectedFile"	//executed when an item is double clicked. 
				RenameFileList;
	
			separator -style "in" Line2;*/
			
			string $button1 = `button  -label "Rename Iff"	-command	"RenameIffFile;\ndeleteUI ycRenameIff;"`;
			string $button2 = `button  -label "Apply"	-command	"RenameIffFile"`;
			string $button3 = `button  -label "Close"	-command	"deleteUI ycRenameIff;"`;
		
		formLayout -edit
			-attachForm	IffFileName	"top"	5	
			-attachForm	IffFileName	"left"	0
			-attachForm	IffFileName	"right"	150

			-attachForm	kcFSBrowseButton "top"	5	
			-attachControl	kcFSBrowseButton "left"	5	IffFileName
			-attachForm	kcFSBrowseButton "right"	60

			-attachControl	NewFileName	"top"	5	IffFileName
			-attachForm	NewFileName	"left"	0
			-attachForm	NewFileName	"right"	150
			/*-attachControl	Line1		top	5	kcFSBrowseButton
			-attachForm	Line1		right	0 
			-attachForm	Line1		left	0

			-attachControl	FileList	"top"	5	Line1
			-attachForm	FileList	"left"	5
			-attachPosition FileList	"right"	5	40
			-attachControl	FileList	"bottom"	5	Line2
			    
			-attachControl	columnLayout1	top	20	Line1
			-attachPosition columnLayout1	left	5	40
			-attachPosition columnLayout1	right	5	60
			-attachControl	columnLayout1	bottom	5	Line2

			-attachControl	RenameFileList	"top"	5	Line1
			-attachForm	RenameFileList	"right"	5 
			-attachPosition RenameFileList	"left"	5	60
			-attachControl	RenameFileList	"bottom"	5	Line2
			    
			-attachForm	Line2		left		0
			-attachForm	Line2		right		0
			-attachForm	Line2		bottom	30	*/
			
			-attachForm	$button1	"left"		5
			-attachForm	$button1	"bottom"	5
			-attachPosition	$button1	"right"		5	33
			
			-attachControl	$button2	"left"		5	$button1
			-attachForm	$button2	"bottom"	5
			-attachPosition	$button2	"right"		5	67

			-attachControl	$button3	"left"		5	$button2
			-attachForm	$button3	"bottom"	5
			-attachForm	$button3	"right"		5
		formLayout1;
	showWindow;
}

global proc ycBrowseFile()
{
	//fileBrowserDialog -mode 0 -fileCommand "ycSaveIff" -fileType "iff" -actionName "Import_Image" -operationMode "Import";
	fileBrowserDialog -mode 0 -fileCommand "ycInputIff" -fileType "iff" -actionName "Import_Image" -operationMode "Import";
}

global proc int ycInputIff(string $filename, string $fileType)
{
	string $buffer[];
	int $Filenamesize;
	if ($fileType == "iff")
	{
		tokenize $filename "." $buffer;
		int $bufferSize=size($buffer);
		if (`match "[0-9]+" $buffer[$bufferSize-2]`!=$buffer[$bufferSize-2])
		{
			warning "Format error!";
			return 0;
		}
		else
		{
			$FilenameSize = size($buffer);
			int $dotMatch = `gmatch $filename "*.*"`;
			string $FileNamePrefix;
			if (($buffer[$FilenameSize-1]=="iff"))
			{	
				if ($dotMatch==1)
				{
					$filename = $buffer[0];
					for ($i=1;$i<($FilenameSize-3);$i++)
					{
						$filename = $filename + "."+ $buffer[$i];
					}
					$FileNamePrefix = $filename;
					$filename=$filename+".#.iff";
				}
			}
			textFieldGrp -e -text $filename IffFileName;
			return 1;
		}
	}
}

global proc int ycSaveIff(string $filename, string $fileType)
{
	string $buffer[];
	int $FilenameSize;
	if ($fileType == "iff")
	{
		tokenize $filename "." $buffer;
		$FilenameSize = size($buffer);
		int $dotMatch = `gmatch $filename "*.*"`;
		string $FileNamePrefix;
		if (($buffer[$FilenameSize-1]=="iff"))
		{	
			if ($dotMatch==1)
			{
				$filename = $buffer[0];
				for ($i=1;$i<($FilenameSize-3);$i++)
				{
					$filename = $filename + "."+ $buffer[$i];
				}
				$FileNamePrefix = $filename;
				$filename=$filename+".#.iff";
			}
		}
		textFieldGrp -e -text $filename IffFileName;

		tokenize $FileNamePrefix "/" $buffer;
		int $FilePrefixSize=size($buffer);
		$FileNamePrefix=$buffer[$FilePrefixSize-1];
		
		string $dirname = dirname($filename)+"/";
		string $GetFileList[]=`getFileList -folder $dirname -filespec ($FileNamePrefix+".*.iff")`;
		
		textScrollList -edit -removeAll FileList;
		textScrollList -edit -removeAll RenameFileList;
		for ($i=0;$i<size($GetFileList);$i++)
		{
			textScrollList -edit -append $GetFileList[$i] FileList;
		}

		return 1;
	}
	else
	{
		warning("Need iff file!");
		return 0;
	}
}

global proc RenameIffFile()
{
	string $NewFileNameField = `textFieldGrp -q -text NewFileName`;
	string $IffFileNameField = `textFieldGrp -q -text IffFileName`;
	if ($NewFileNameField=="")
	{
		error "New File Name field is empty";
		return;
	}
	if ($IffFileNameField=="")
	{
		error "Iff File Name field is empty";
		return;
	}

	string $NewFileNameBuffer[];
	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*.*"`;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*/*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*\\*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*+*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*~*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*'*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	int $NewFileNameBufferSize=`gmatch $NewFileNameField "*`*" `;
	if ($NewFileNameBufferSize==1)
	{
		warning "renameing error!";
		return;
	}

	string $dirname = dirname($IffFileNameField)+"/";	//D:/IffRename/
	$dirname=substituteAllString($dirname, "/", "\\\\");
	
	string $buffer[];
	int $bufferSize=`tokenize $IffFileNameField "/" $buffer`;
	string $NeedFile=`substitute "#" $buffer[$bufferSize-1] "\*"`;
	string $GetFileList[]=`getFileList -folder $dirname -filespec $NeedFile`;

	for ($i=0;$i<size($GetFileList);$i++)
	{
		system("rename \"" + $dirname+$GetFileList[$i] + "\" " +$NewFileNameField+".*");		
	}
}

global proc RenameIff()
{
	string $NewFileNameField = `textFieldGrp -q -text NewFileName`;
	string $IffFileNameField = `textFieldGrp -q -text IffFileName`;
	if ($NewFileNameField=="")
	{
		error "New File Name field is empty";
		return;
	}
	if ($IffFileNameField=="")
	{
		error "Iff File Name field is empty";
		return;
	}

	string $dirname = dirname($IffFileNameField)+"/";	//D:/IffRename/
	$dirname=substituteAllString($dirname, "/", "\\\\");

	string $AllIffFile[]=`textScrollList -query -allItems RenameFileList`;
	string $GetFileList[]=`getFileList -folder $dirname -filespec ($NewFileNameField+".*.iff")`;
	if (size($GetFileList)!=0)
	{
		warning "File has been existed!";
		return;
	}

	if (size($AllIffFile)!=0)
	{
		for ($i=0;$i<size($AllIffFile);$i++)
		{
			system("rename \"" + $dirname+$AllIffFile[$i] + "\" " +$NewFileNameField+".*");		
		}
	}
	textScrollList -edit -removeAll RenameFileList;
}

global proc SelectAllFile()
{
	string $SelAllFile[] = `textScrollList -query -allItems FileList`;

	for( $item in $SelAllFile )
	{
		textScrollList -edit -append $item RenameFileList;
	}
	
	textScrollList -edit -removeAll FileList;
}

global proc UnselectAllFile()
{
	string $SelAllFile[] = `textScrollList -query -allItems RenameFileList`;

	for( $item in $SelAllFile )
	{
		textScrollList -edit -append $item FileList;
	}
	
	textScrollList -edit -removeAll RenameFileList;
}

global proc InputSelectedFile()
{
	string $SelFile[] = `textScrollList -query -selectItem FileList`;

	for( $item in $SelFile )
	{
		textScrollList -edit -append $item RenameFileList;
	}
	for ($item in $SelFile )
	{
		textScrollList -edit -removeItem $item FileList;
	}
}

global proc OutputSelectedFile()
{
	string $SelFile[] = `textScrollList -query -selectItem RenameFileList`;

	for( $item in $SelFile )
	{
		textScrollList -edit -append $item FileList;
	}
	for ($item in $SelFile )
	{
		textScrollList -edit -removeItem $item RenameFileList;
	}
}