proc string[] getShapes( string $xform )
{
	string $shapes[];

	$shapes[0] = $xform;

	if ( "transform" == `nodeType $xform` )
	// If given node is not a transform, assume it is a shape
	// and pass it through
	{
		$shapes = `listRelatives -fullPath -type "mesh" $xform`;
	}

	return $shapes;
}//test whether there is a PolySmoothFace node on given object
proc string getsmooth(string $obj) 
{
	string $his[] = `listHistory -pruneDagObjects true $obj`;
	for ($i=0;$i<size($his);$i++ )
	{
		if (`gmatch $his[$i] "finalSmooth*"`) 
			return $his[$i];
	}
	return "";
}
//set polySmooth's divisions to 0
proc TD_smdeapply(string $list[])
{
	for ($object in $list)
	{
		string $shapes[] = getShapes($object);
		for ($shp in $shapes)
		{
			$poly = getsmooth($shp); 
			if ($poly!= "")
				setAttr ($poly+".divisions") 0 $shp;
		}
	}
	print "De_apply Smooth";
}


//de_apply smooth after render
global proc TD_smafrender()
{
	string $list[] = `ls -long -type "transform"`;
	TD_smdeapply($list);
}

