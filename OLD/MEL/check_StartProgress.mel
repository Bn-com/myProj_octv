//-----------------------------------------------------------------------
//  Alias Script File
//  MODIFY THIS AT YOUR OWN RISK
//
//  Creation Date:  January 16, 2003
//
//  Procedure Name:
//      check_StartProgress
//
//  Description:
//
//		Utility function used by the various components of the
//		"Check Scene" function.
//
//		check operations that wish to provide interruptability and 
//		progress reporting via the progress bar should call this function
//		before they begin processing scene nodes.
//
//  Input Arguments:
//
//		$count - the number of nodes that will be processed by the 
//				 operation
//
//		$uiString - a string to indicate to the user what the
//					operation will be doing.  This will be 
//					displayed in the progress bar.
//
//		$interruptable - indicates whether or not the operation
//						 is interruptable.  If it is, then the 
//						 progress bar will catch ESC keypresses
//						 during the operation.  See the
//						 check_SetProgress() utility function
//						 for more information on interruptability
//						 of check operations.
//
//  Return Value:
//      None.
//
//	Related Functions:
//
//		check_StartProgress() - called before an operation begins
//		check_SetProgress() - called as the operation is running, to 
//								update the progress bar.
//		check_EndProgress() - called to signal that the operation is 
//								finished.
//		check_CheckInterrupt() - called between check operations to
//								   detect when a previous operation has
//								   been interrupted.
//		check_Summary() - called to report the results of check 
//							operations.
//
//-----------------------------------------------------------------------
global proc check_StartProgress( int $count, 
								   string $uiString, 
								   int $interruptable )
{
   	global string $gMainProgressBar;

	//	determine the "max" value for the progress bar.  
	//
	int $max = $count;
	if( $max < 2 )
	{
		$max = 2;
	}

	//	start the progress bar
	//
	progressBar -e -beginProgress $gMainProgressBar;

	//	set the interruptability flag on the progress bar
	//
	progressBar -e -ii $interruptable $gMainProgressBar;

	//	set the min/max range values for the progress bar
	//
	progressBar -e -minValue 1 $gMainProgressBar;
	progressBar -e -maxValue $max $gMainProgressBar;

	//	set the text string for the progress bar.  Prepend
	//	a string to indicate that this operation is part of the
	//	Check Scene function, and append a string that 
	//	indicates how much work will need to be done (as given 
	//	by the $count argument supplied by the caller).
	//
	string $statusString = ( "Check Scene: " + $uiString );
	if( $count >= 0 )
	{
		$statusString += (" (" + $count + " to consider)" );
	}
	progressBar -e -st $statusString $gMainProgressBar;
}

