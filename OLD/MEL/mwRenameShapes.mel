/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: mw
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc mwRenameShapes()
{
	print "RENAMING SHAPE NODES.  PLEASE WAIT.\n\n";
	waitCursor -state on;
	for($t=0;$t<3;$t++)
	{
		//GET ALL MESHES
		$tmp = `ls -type mesh`;
		string $node;

		//GET ALL UNIQUE SHAPE NODES
		string $shapeList[];
		int $s = 0;
		for($node in $tmp)
		{
			$shapeList[$s] = $node;
			$s++;
		}

		$tmp = `ls -type nurbsSurface`;
		for($node in $tmp)
		{
			$shapeList[$s] = $node;
			$s++;
		}

		string $previousParentList[];
		int $p = 0;
		string $instanceList[];
		int $n = 0;
		for($node in $shapeList)
		{
			if(`objExists $node`&&`gmatch $node "polySurfaceShape*"`==0)
			{
				if(`gmatch $node "*_shape*"`)
				{
					string $sub = `substitute "_shape" $node "Shape"`;
					//print ("RENAMING _SHAPE: "+$node+" TO: "+$sub+"\n");
					$node = `rename $node $sub`;
				}
				int $inst = 0;
				for($instance in $instanceList)
				{
					if(`strcmp $node $instance`==0)
					{
						//print ("\n***INSTANCE FOUND: "+$instance+"***\n\n");
						$inst = 1;
						break;
					}
				}
				if($inst==0)
				{
					string $parents[] = `listRelatives -allParents -pa $node`;
					string $parent_parts[];
					int $tok = tokenize($parents[0], "|", $parent_parts);
					string $checkList[];
					if(`size $parents`>1)
					{
						//print ("\nINSTANCE NODE: "+$node+"\n\n");
						$instanceList[$n] = $node;
						$n++;
						string $check_parts[];
						int $cTok = tokenize($node, "|", $check_parts);
						$checkList = `ls $check_parts[$cTok-1]`;
						for($check in $checkList)
						{
							//RENAME SHAPE NODE
							string $sub_parts[];
							int $sTok = tokenize($check, "|", $sub_parts);
							int $i = 1;
							string $sub = `substitute "Shape" $sub_parts[$sTok-1] ($i+"Shape")`;
							while(`objExists $sub`)
							{
								//print ("CHECKING: "+$sub+"\n");
								$i++;
								$sub = `substitute "Shape" $sub_parts[$sTok-1] ($i+"Shape")`;
							}
							if(`objExists $check`)
							{
								//print ("***RENAMING INSTANCE SHAPE: "+$check+" TO: "+$sub+"***\n\n");
								rename $check $sub;
							}
						}
					}
					else
					{
						//print ("NODE: "+$node+"\n");
						//CHECK TO SEE IF THERE IS MORE THAN ONE PARENT NODE WITH THIS NAME
						$checkList = `ls $parent_parts[$tok-1]`;

						//IF MORE THAN ONE, THEN NUMBER EACH
						if(`size $checkList`>1)
						{
							for($c=1;$c<=`size $checkList`;$c++)
							{
								string $nu_name = `rename $checkList[$c-1] ($parent_parts[$tok-1]+"_"+$c)`;
								//print ("RENAMING: "+$checkList[$c-1]+" TO: "+$parent_parts[$tok-1]+"_"+$c+"\n");

								//CHECK TO SEE IF SHAPE NAME HAS CHANGED
								string $shapeCheck[] = `listRelatives -type mesh $nu_name`;
								if(`size $shapeCheck`)
								{
									for($check in $shapeCheck)
									{
										if(`strcmp $node $check`==0)
										{
											//CHECK IF MORE THAN ONE SHAPE HAS THE SAME NAME
											string $tmpCheck[] = `ls $node`;
											if(`size $tmpCheck`>1)
											{
												//RENAME SHAPE NODE
												int $i = 1;
												string $sub = `substitute "Shape" $node ($i+"Shape")`;
												while(`objExists $sub`)
												{
													$i++;
													$sub = `substitute "Shape" $node ($i+"Shape")`;
												}
												//print ("\n***RENAMING SHAPE: "+$node+" TO: "+$sub+"***\n\n");
												rename $node $sub;
												break;
											}
										}
									}
								}
								else
								{
									$shapeCheck = `listRelatives -type nurbsSurface $nu_name`;
									if(`size $shapeCheck`)
									{
										for($check in $shapeCheck)
										{
											if(`strcmp $node $check`==0)
											{
												//CHECK IF MORE THAN ONE SHAPE HAS THE SAME NAME
												string $tmpCheck[] = `ls $node`;
												if(`size $tmpCheck`>1)
												{
													//RENAME SHAPE NODE
													int $i = 1;
													string $sub = `substitute "Shape" $node ($i+"Shape")`;
													while(`objExists $sub`)
													{
														$i++;
														$sub = `substitute "Shape" $node ($i+"Shape")`;
													}
													//print ("\n***RENAMING SHAPE: "+$node+" TO: "+$sub+"***\n\n");
													rename $node $sub;
													break;
												}
											}
										}
									}
								}
							}
						}
					}
				}
				else
				{
					//CHECK IF MORE THAN ONE SHAPE HAS THE SAME NAME
					string $tmpCheck[] = `ls $node`;
					if(`size $tmpCheck`>1)
					{
						//RENAME SHAPE NODE
						int $i = 1;
						string $sub = `substitute "Shape" $node ($i+"Shape")`;
						while(`objExists $sub`)
						{
							$i++;
							$sub = `substitute "Shape" $node ($i+"Shape")`;
						}
						//print ("\n***RENAMING SHAPE: "+$node+" TO: "+$sub+"***\n\n");
						rename $node $sub;
						break;
					}
				}
			}
		}
	}
	print "ALL DONE\n";
	waitCursor -state off;
}