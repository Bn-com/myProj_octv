global proc zjOutputKeyLightInfo()
{
	string $selsh[] = `ls -ni -dag -sl -lights -geometry`;
	if (size($selsh)!=2)
		error "please select a keyLight and a polygon";
	
	string $geosh[] = `ls -ni -dag -sl -geometry`;
	string $lightsh[] = `ls -ni -dag -sl -lights`;

	string $geotr[] = `listRelatives -p -ni $geosh[0]`;
	string $lightr[] = `listRelatives -p -ni $lightsh[0]`;
	string $left1[] = `listConnections -s 1 -d 0 -type "lookAt" $lightsh[0]`;
	string $lookat[] = `listConnections -s 1 -d 0 -type "transform" ($left1[0] + ".target[0].targetTranslateX")`;
	
	float $geoPiv[]=`xform -q -ws -translation $geotr[0]`;
	float $ltPiv[]=`xform -q -ws -translation $lightr[0]`;
	float $locPiv[]=`xform -q -ws -translation $lookat[0]`;
	//float $marginX = $ltPiv[0] - $geoPiv[0];
	//float $marginY = $ltPiv[1] - $geoPiv[1];
	//float $marginZ = $ltPiv[2] - $geoPiv[2];
	
	//float $marginX1 = $locPiv[0] - $geoPiv[0];
	//float $marginY1 = $locPiv[1] - $geoPiv[1];
	//float $marginZ1 = $locPiv[2] - $geoPiv[2];

	string $buf[];
	string $folder = "\\file-cluster\GDC\Projects\WinxClubII\WinxClubII_Scratch\masterLightingInfo";
	string $file = $folder + "tmpmat.txt";
	int $fileId = `fopen $file w`;
	if (!$fileId)
		error("Fail to open " + $file);

	fprint $fileId ($geosh[0] + " " + $geoPiv[0] + " " + $geoPiv[1] + " " + $geoPiv[2]+ "\n");
	fprint $fileId ($lightsh[0] + " " + $ltPiv[0] + " " + $ltPiv[1] + " " + $ltPiv[2]+ "\n");
	fprint $fileId ($lookat[0] + " " + $locPiv[0] + " " + $locPiv[1] + " " + $locPiv[2]+ "\n");

	fclose $fileId;
}

global proc zjMatchKeyLight()
{
	string $selsh[] = `ls -ni -dag -sl -lights`;
	if (size($selsh)!=1)
		error "please select a keyLight";
	
	string $sel[] = `ls -sl -tr`;

	$light = $sel[0];

	string $con[] = `listConnections -s 1 -d 0 ($selsh[0] + ".centerOfIllumination")`;
	if (size($con))
		error ($selsh[0] + ".centerOfIllumination has been locked or connected!");

	string $locatorShapeList[] = `spaceLocator -p 0 0 0 -name "lookAt1"`;
	string $locatorShape = $locatorShapeList[0];
	string $target = $locatorShape;
	string $lookAt = `createNode -name ($light+"_group") "lookAt"`;

	setAttr ".aimVector" -type double3 0 0 -1;

	connectAttr ($target+".tx") ($lookAt+".target[0].targetTranslateX");
	connectAttr ($target+".ty") ($lookAt+".target[0].targetTranslateY");
	connectAttr ($target+".tz") ($lookAt+".target[0].targetTranslateZ");
	connectAttr ($target+".rp") ($lookAt+".target[0].targetRotatePivot");
	connectAttr ($target+".rpt") ($lookAt+".target[0].targetRotateTranslate");
	connectAttr ($target+".pm") ($lookAt+".target[0].targetParentMatrix");

	connectAttr ($light+".pim") ($lookAt+".constraintParentInverseMatrix");
	connectAttr ($light+".t") ($lookAt+".constraintTranslate");
	connectAttr ($light+".rp") ($lookAt+".constraintRotatePivot");
	connectAttr ($light+".rpt") ($lookAt+".constraintRotateTranslate");

	connectAttr ($lookAt+".constraintRotateX") ($light+".rotateX");
	connectAttr ($lookAt+".constraintRotateY") ($light+".rotateY");
	connectAttr ($lookAt+".constraintRotateZ") ($light+".rotateZ");

	connectAttr ($lookAt+".distanceBetween") ($selsh[0]+".centerOfIllumination");

}

