global proc shelf_mi()
{
python("import maya.cmds as cmds");
python("import maya.mel as mel");
    shelfButton
        -width 34
        -height 34
        -annotation "Update"
        -label "Update"
        -font "plainLabelFont"
        -imageOverlayLabel "Update"
        -image "vacantCell.png"
        -image1 "vacantCell.png"
        -style "iconOnly"
        -command "zwUpdateShelf \"mi\" \"shelf_mi\""
    ;
//前期
	shelfButton
		-width 34
		-height 34
		-font "smallPlainLabelFont"
		-style "iconOnly"
		-image1 "mi\\shelfBt_icon_pre.bmp"
		//-imageOverlayLabel "       前"
		-label "前期工具集"
        -iol "前"  -olc 0 1 0
		-command "do3ShelfChanges \"Pre\""
		do_SB_Pre
	;

//
	shelfButton
		-width 34
		-height 34
		-font "smallPlainLabelFont"
		-style "iconOnly"
		-image1"mi\\shelfBt_icon_rg.bmp"
		//-imageOverlayLabel "       设"
		-label "设置工具集"
		-command "do3ShelfChanges \"Set\""
         -iol "setUp"  -olc 0 1 0
		do_SB_Set
	;

//动画
	shelfButton
		-width 34
		-height 34
		-font "smallPlainLabelFont"
		-style "iconOnly"
		-image1   "mi\\shelfBt_icon_an.bmp"
		//-imageOverlayLabel "       动画"
		-label "动画工具集"
		-command "do3ShelfChanges \"Ani\""
         -iol "动"  -olc 0 1 0
		do_SB_Ani
	;

//特效
	shelfButton
		-width 34
		-height 34
		-font "smallPlainLabelFont"
		-style "iconOnly"
		-image1 "mi\\shelfBt_icon_ef.bmp"
		//-imageOverlayLabel "       特效"
		-label "特效工具集"
		-command "do3ShelfChanges \"Eff\""
         -iol "特"  -olc 0 1 0
		do_SB_Eff
	;


//渲染
	shelfButton
		-width 34
		-height 34
		-font "smallPlainLabelFont"
		-style "iconOnly"
		-image1  "mi\\shelfBt_icon_rnd.bmp"
		-label "渲染工具集"
		-command "do3ShelfChanges \"Rnd\""
         -iol "渲"  -olc 0 1 0
		do_SB_Rnd
	;


  //zzj    empty**************************
  //隐藏面板
 	shelfButton -width 34 -height 34 -vis 0
//	-i1 (zwGetIcon("wxII/it.xpm"))
	 -c "zzjshelf()";
//================= Preproduction ====================
    shelfButton -docTag "Pre"
    -en 1 -m 1 -font "smallPlainLabelFont"
    -l "前期用检测工具集"
    -iol "checkMo"  -olc 0 1 0 -style "iconOnly" -i1 "mi\\check.png" -stp "python"
    -c "from Other.minitiger import mi_checkCommon\nreload(mi_checkCommon)\nmi_checkCommon.sk_checkTools().sk_sceneUICheckTools()"
//			-c "execfile('//file-cluster/gdc/Resource/Support/Maya/projects/ShunLiu/csl_checkTools.py')"
		;
    shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "属性添加（删除）工具"
			-iol "Attr"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.norch import norch_toolCommons\nreload(norch_toolCommons)\nnorch_toolCommons.norch_toolComnnons().norch_gdAttrToolsUI()"
    addAttr_PreSB;
    shelfButton -docTag "Pre"
		-en 1 -m 1 -font "smallPlainLabelFont"
		-l "前期用smoothSet设置工具"
		-iol "smset"  -olc 0 1 0  -style "iconOnly" -i1 "//file-cluster/gdc/Resource/Support/Maya/projects/ZoomWhiteDolphin/icons/smoothSet.png" -stp "python"
		-c "from idmt.maya.commonCore.core_mayaCommon import sk_smoothSet;reload(sk_smoothSet);sk_smoothSet.sk_smoothSet().UI_setSmooth()"
	smoothSetTool_PreSB;
    shelfButton -docTag "Pre"
		-en 1 -m 1 -font "smallPlainLabelFont"
		-l "重新命名所有材质相关节点（包括SG节点）"
		-iol "MatRename"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\mod.png" -stp "python"
		-c "from idmt.maya.ShunLiu_common import csl_RenameMatNode\nreload(csl_RenameMatNode)\ncsl_RenameMatNode.csl_RenameMatNode().csl_RenameMatNode(nodeName=[])"
	renameShader_PreSB;
    shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "高低模转换"
			-iol "高低模"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\tree.png" -stp "python"
			-c " import  idmt.maya.ShunLiu.shunliu_SwitchMode as  ssm \n ssm.csl_switchModeWin()"
		modeChange_PreSB;
      shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "yeti"
			-iol "Yeti"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\pgYeti_icon.png" -stp "python"
			-c "import Other.minitiger.lgyetiTool as lgyt\nlgyt.LgYetiToolWindow()"
		yetiTool_PreSB;
      shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "Book"
			-iol "Book"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\IMBT.bmp" -stp "mel"
			-c "mi_bookRepTool_ui"
		mi_imBookTools_PreSB;
     shelfButton -docTag "Pre"
			-en 1	-m 1	 -vis 0 -w 34 -h 34 -font "smallPlainLabelFont"	-l "" -iol "加属性"  -olc 0 1 0.8 -style "iconOnly"
			 -i1 "pythonFamily.xpm"
			-ann "添加标记属性GD，Far,半透明"
			-c  "do_add_asignAttr_ldui()"
			mi_add_asign_attr_SB_Pre;
		shelfButton -docTag "Pre"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"	-l "del Turtle" -iol "" -style "iconOnly"
			 -i1 "\\\\file-cluster\\gdc\\Resource\\Support\\Maya\\projects\\DODIV\\icons\\del_turtle_nodes_icon.bmp"
			-stp "mel" -ann "删除海龟渲染器等未知节点"
			-c  "del_unkonwNodes()"
			delUNKNOWN_SB_Pre;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "检测异常的有alembic属性物体"
			-iol "abcAttr"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\mod.png" -stp "python"
			-c "from Other.minitiger import mi_base_proc as mibp\nreload(mibp)\nmibp.abc_info_checkin()"
			checkAbcAttr_SB_Pre;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "获取多相机"
			-iol "MultiCam"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\get_multiCam.bmp" -stp "python"
			-c "import Other.minitiger.mi_get_multiCam_callui_Maya as mmcm\nreload(mmcm)\nmmcm.main()"
			pre_mi_getMultiCam_SB;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "namespace管理工具"
			-iol "nameS" -olc 0 1 0   -style "iconOnly" -i1 "//file-cluster/gdc/Resource/Support/Maya/projects/ZoomWhiteDolphin/icons/common_namespace.png" -stp "mel"
			-c "common_namespaceTools;"
			pre_mi_nsTools_SB;
		shelfButton -docTag "Pre"
		-en 1 -m 1 -font "smallPlainLabelFont"
		-l "关闭材质显示"
		-iol "mOff"  -olc 0 1 0  -style "iconOnly" -i1 "pythonFamily.xpm" -stp "python"
		-c "import maya.cmds as mc;mc.renderThumbnailUpdate(False)";
			shelfButton -docTag "Pre"
		-en 1 -m 1 -font "smallPlainLabelFont"
		-l "打开材质显示"
		-iol "mOn"  -olc 0 1 0  -style "iconOnly" -i1 "pythonFamily.xpm" -stp "python"
		-c "import maya.cmds as mc;mc.renderThumbnailUpdate(True)";
		shelfButton -docTag "Pre"
			-en 1 -m 1 -vis 0 -font "smallPlainLabelFont" -l "" -iol "优化" -style "iconOnly"
			-i1 "commandButton.xpm"
			-stp "mel" -ann "场景材质优化"
			-c"source \"//file-cluster/GDC/Resource/Support/Maya/projects/DODV/arnold_window.mel\";ar_rayswitchshader_set()"
			;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -vis 0 -font "smallPlainLabelFont" -l "" -olc 0 1 0.8 -iol "[全]加属性" -style "iconOnly"
			-i1 "commandButton.xpm"
			-stp "python" -ann "[全]加属性"
			-c"from idmt.maya.ShunLiu_common import csl_toolCommons;reload(csl_toolCommons);csl_toolCommons.csl_toolComnnons().csl_gdAttrToolsUI()"
			;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -vis 0 -font "smallPlainLabelFont" -l "" -iol "开aiOp" -style "iconOnly"
			-i1 "commandButton.xpm"
			-stp "python" -ann "开aiOp"
			-c"from idmt.maya.commonPerform.projectTools import sk_projTools_mi;reload(sk_projTools_mi);sk_projTools_mi.sk_projTools_mi().modifySelAttrAiOpaque(1)"
			;
		shelfButton -docTag "Pre"
			-en 1 -m 1 -vis 0 -font "smallPlainLabelFont" -l "" -iol "关aiOp" -style "iconOnly"
			-i1 "commandButton.xpm"
			-stp "python" -ann "关aiOp"
			-c"from idmt.maya.commonPerform.projectTools import sk_projTools_mi;reload(sk_projTools_mi);sk_projTools_mi.sk_projTools_mi().modifySelAttrAiOpaque(0)"
			;
		shelfButton -docTag "Pre"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "" -iol "罗" -style "iconOnly"
			 -i1 "commandButton.xpm"
			-ann "罗刚的设置属性" -stp "mel"
			-c "source \"//file-cluster/GDC/Resource/Support/Maya/projects/DODV/arnold_window.mel\";lg_set_object_arnodlAttr_Win()"
			lg_setObjArnodAttr_SB_Pre;
//================= Animation ====================
	 	shelfButton -docTag "Ani"
		-en 1 -m 0 -font "smallPlainLabelFont"
		-l "导出显示层信息"
		-iol "baked displayLayer"  -style "iconOnly" -i1 "mi\\an_export_disLyer_infor2Server_sb_icon.bmp" -stp "python"
		-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools)\nsk_sceneTools.sk_sceneTools().checkShotDisLRecord() "
		mi_SB_ani_exp_DisLyer;
	  shelfButton -docTag "Ani"
		-en 1 -m 0 -font "smallPlainLabelFont"
		-l "还原显示层"
		-iol "im displayLayer"  -style "iconOnly" -i1 "mi\\an_import_disLyer_inforFrmServer_sb_icon.bmp" -stp "python"
		-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools)\nsk_sceneTools.sk_sceneTools().checkShotDisLLoad() "
		mi_SB_ani_imp_DisLyer;
	  shelfButton -docTag "Ani"
		-en 1 -m 0 -font "smallPlainLabelFont"
		-l "清理显示层"
		-iol "del displayLayer" -olc 1 0 0 -style "iconOnly" -i1 "mi\\an_import_disLyer_inforFrmServer_sb_icon.bmp" -stp "python"
		-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools)\nsk_sceneTools.sk_sceneTools().checkCleanDisplayLayers([],[\"norender\",\"nodisplay\"]) "
		mi_SB_ani_clean_DisLyer;
//  Setup addby zzj
      shelfButton -docTag "Ani"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "yeti"
			-iol "测试"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\pgYeti_icon.png" -stp "python"
			-c "import COMMON.set.GSET.Maya___Main as gsmm;reload(gsmm);gsmm.main()"
		;
//  SetUp addby CJW
	shelfButton -docTag "Ani"
		-en 1	-m 1	-w 34 -h 34	-font "smallPlainLabelFont"	-ann "动画表情选择面板"	-iol "face" -i1 "RIG\\face_BS\\CJW_H_Facial_GUI.png"	-style "iconOnly" -stp "python"
		-c "from COMMON.set.RIG.face_BS import CJW_facial_rig_H_py_v1\nreload(CJW_facial_rig_H_py_v1)\nCJW_facial_rig_H_py_v1.CJW_facial_rig_H_py_v1_Class().CJW_H_Facial_GUI()"
		;

	shelfButton -docTag "Ani"
		-en 1	-m 1	-w 34 -h 34	-font "smallPlainLabelFont"	-ann "动画身体选择面板"	-iol "body" -i1 "RIG\\face_BS\\CJW_H_Body_GUI.png"	-style "iconOnly" -stp "python"
		-c "from COMMON.set.RIG.face_BS import CJW_facial_rig_H_py_v1\nreload(CJW_facial_rig_H_py_v1)\nCJW_facial_rig_H_py_v1.CJW_facial_rig_H_py_v1_Class().CJW_H_Body_GUI()"
		;
    shelfButton -docTag "Ani"
			-en 1	-m 1	-w 34 -h 34	-font "smallPlainLabelFont"	-l "导动画工具"	-iol "导" -i1 "commandButton.xpm"	-style "iconOnly"
			-c "slAnimExportImportForSetMainLayout"
			ani_DO3ShelfButton1;

		shelfButton -docTag "Ani"
			-en 1	-m 1	-w 34 -h 34	-font "smallPlainLabelFont"	-l "动画库"	-iol "库" -i1 "commandButton.xpm"	-style "iconOnly"
			-c "source \"slAnimPoseLibrary.mel\"; slAnimPoseLibrary(\"MiniTiger\")"
			ani_DO3ShelfButton2;

		shelfButton -docTag "Ani"
			-en 1 -m 1	-vis 0	-font "smallPlainLabelFont"	-l "AT工具" -iol "AT" -style "iconOnly" -i1 "pythonFamily.xpm"
			-c "source \"autoTangent.mel\";autoTangentUI;"
			ani_DO3ShelfButton3;
        shelfButton -docTag "Ani"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "表情库"
			-iol "库_Face"  -style "iconOnly" -i1 "commandButton.xpm" -stp "mel"
			-c "slAnimPoseLibraryNew"
             ani_libFace_miSB;
		shelfButton -docTag "Ani"
			-en 1 -m 1	-vis 0	-font "smallPlainLabelFont"	-l "Easy Animation Toolkit" -iol "EA" -style "iconOnly" -i1 "pythonFamily.xpm"
			-c "yyEasyAnimation18"
			ani_DO3ShelfButton4;
		shelfButton -docTag "Ani"
			-en 1 -m 1	-vis 0	-font "smallPlainLabelFont"	-l "Easy Animation Toolkit2" -iol "EA2" -style "iconOnly" -i1 "pythonFamily.xpm"
			-c "yyEasyAnimation20"
			ani_DO3ShelfButton10;
		shelfButton -docTag "Ani"
			-en 1 -m 1	-vis 0	-font "smallPlainLabelFont"	-l "IKFK转换" -iol "IKFK" -style "iconOnly" -i1 "pythonFamily.xpm"
			-c "JTAnimIKFKUIMel "
			ani_DO3ShelfButton5;
		shelfButton -docTag "Ani"
			-en 1 -m 1	-vis 0	-font "smallPlainLabelFont"	-l "相机bake" -iol "bake" -style "iconOnly" -i1 "pythonFamily.xpm"
			-c "source \"zwCameraImportExport.mel\";zwBakeCamera;"
			ani_DO3ShelfButton6;
		shelfButton -docTag "Ani"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "" -iol "" -style "iconOnly"
			 -i1 "mi\\aotuKey_startEnd_4LY.bmp"
			-ann "所有控制器key首尾帧" -stp "mel"
			-c   "python(\"import dod.scripts.dod_anim_kit as doan\");python(\"reload(doan)\");python(\"ins_ANKIT = doan.dod_anim_kit()\");python(\"ins_ANKIT.key_all_ctrlCurves()\")"
			ani_DO3ShelfButton25;
		shelfButton -docTag "Ani"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "" -iol "" -style "iconOnly"
			 -i1 "mi\\an_sbt_addFacAniCam.bmp"
			-ann "添加对着脸的摄像机" -stp "mel"
			-c   "python(\"import Other.minitiger.mi_kit_ani as mian\");python(\"reload(mian)\");python(\"mian.mi_selChr_AddfacialAnimCame()\");"
			mi_SB_ani_addFacCam;
		shelfButton -docTag "Ani"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-olc 1 0.2  0.85
			-l "" -iol "看见毛发" -style "iconOnly"
			 -i1 "mi\\an_sbt_yetiDisToggle.bmp"
			-ann "yeti毛发显示开关" -stp "python"
			-c   "for eachYt in ls(type = u'pgYetiMaya'):  eachYt.displayOutput.set(1 ^ eachYt.displayOutput.get())"
			mi_SB_ani_yetiToggle;
		shelfButton -docTag "Ani"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "" -iol "frameOffset" -style "iconOnly"
			 -i1 "mi\\frameOffset.png"
			-ann "关键帧调整" -stp "python"
			-c   "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools);sk_sceneTools.sk_sceneTools().checkSceneAnOffsetUI()"
			mi_SB_ani_frameOffset;
		shelfButton -docTag "Ani"
			-en 1 -m 0 -font "smallPlainLabelFont"
			-l "导入相机工具"
			-iol "Get"  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools\nreload(sk_sceneTools)\nsk_sceneTools.sk_sceneTools().sk_sceneUICameraTools()"
            mi_SB_ani_getCamera;
		shelfButton -docTag "Ani"
			-en 1 -m 0 -font "smallPlainLabelFont"
			-l "三相机工具"
			-iol "三相机工具"  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonPerform.projectTools import sk_projTools_mi;reload(sk_projTools_mi);sk_projTools_mi.sk_projTools_mi().ste3CamUI()"
            mi_SB_ani_nmfImport;
		shelfButton -docTag "Ani"
			-en 1 -m 0 -font "smallPlainLabelFont"
			-l "黄金分割线工具"
			-iol "goldLineTools" -olc 0 1 0 -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonPerform.projectTools import sk_cameraSequencerTools;reload(sk_cameraSequencerTools);sk_cameraSequencerTools.sk_cameraSequencerTools().sk_cameraSequencerToolsUI()"
            mi_SB_ani_goldLine;
        shelfButton -docTag "Ani"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "" -iol "batch playblast" -style "iconOnly"
			 -i1 ""
			-ann "批量playblast工具" -stp "mel"
			-c "source \"//file-cluster/GDC/Resource/Support/Maya/Python/IDMT/Pluto/PlayBlaste/zzjBatchPlayBlaste.mel\"; zzjBatchPlayBlaste;"
			mi_SB_ani_batchPlayblat;
//		shelfButton -docTag "Ani"
//			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
//			-l "" -iol "ABC" -style "iconOnly"
//			 -i1 "" -olc 0 1 0
//			-ann "前台自动ABC" -stp "mel"
//			-c   "mi_fs_foregroundCMD()"
//			mi_SB_ani_AotuABCCMD;
		shelfButton -docTag "Ani"
			-en 1 -m 0 -font "smallPlainLabelFont"
			-l "镜像工具"
			-iol "MirrorTools" -olc 0 1 0 -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.xwjModule.MirrorTool import MirrorWindow;reload (MirrorWindow);MirrorWindow.MirrorWindow().MirrorWindowUI()"
            mi_SB_ani_Mirror;


//===================render============================================================
	 	shelfButton -docTag "Rnd"
			-en 1	-m 1	 -vis 0 -w 34 -h 34 -font "smallPlainLabelFont"	-l "" -iol "Tx图"  -olc 0 1 0.8 -style "iconOnly"
			 -i1 "pythonFamily.xpm"
			-ann "生成tx贴图"
			-c  " mi_generate_txfile_BTCMD()"
			rnd_mi_generate_txfile_SB;
      	shelfButton -docTag "Rnd"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "FinalLayout工具集"
			-iol "FL" -olc 0 1 0  -style "iconOnly" -i1  "ZoomWhiteDolphin//finalLayout.png" -stp "python"
			-c  "from idmt.maya.ZoomWhiteDolphin import sk_zoomWhiteDolphinProjectTools\nreload(sk_zoomWhiteDolphinProjectTools)\nsk_zoomWhiteDolphinProjectTools.sk_zmProjectTools().sk_sceneFinalLayoutUI()"
			rnd_mi_flTool_SB;
     	 shelfButton -docTag "Rnd"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
			-l "phong2aiStandard"
			-iol "ph2ai" -olc 0 1 0  -style "iconOnly" -i1  "vacantCell.png" -stp "mel"
			-c "mi_phong2aiStnd_BTCMD"
			rnd_mi_ph2aiStnd_SB;
	  	shelfButton -docTag "Rnd"
	    	-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"
		    -l "FinalLayout工具集"
			-iol "FL" -olc 0 1 0  -style "iconOnly" -i1  "//file-cluster/gdc/Resource/Support/Maya/projects/ZoomWhiteDolphin/icons/finalLayout.png" -stp "python"
			-c  "from idmt.maya.norch import north_ABCTools\nreload(north_ABCTools)\nnorth_ABCTools.sk_zmProjectTools().sk_sceneFinalLayoutUI()"
			;
		shelfButton -docTag "Rnd"
			-en 1	-m 1	-vis 0	-font "smallPlainLabelFont"	-l "" -olc 0.8 0.2 0 -iol "NEW" -style "iconOnly"
			 -i1  "mi\\rendTools_icon.bmp"
			-stp "mel" -ann "新版渲染工具面板"
			-c  "do_rendTool_ui()"
			rnd_mi_RndTools_SB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "贴图尺寸"
			-iol "Tex"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.ShunLiu_common import csl_checkin\nreload(csl_checkin)\ncsl_checkin.csl_checkin().csl_TexsizeSet()"
			;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "贴图尺寸"
			-iol "S'Tool"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from Other.minitiger import aiIDmanager\naiIDmanager.windowID()"
			rnd_mi_STool1_SB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "aiOption"
			-iol "AiO"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\IMBT.bmp" -stp "mel"
			-c "mi_set_aiop_attr"
			mi_setAiop_PreSB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "获取多相机"
			-iol "MultiCam"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\get_multiCam.bmp" -stp "python"
			-c "import Other.minitiger.mi_get_multiCam_callui_Maya as mmcm\nreload(mmcm)\nmmcm.main()"
			rnd_mi_getMultiCam_SB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "010场临时用灯光导入"
			-iol "灯导"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonPerform.projectTools import sk_projTools_mi;reload(sk_projTools_mi);sk_projTools_mi.sk_projTools_mi().miAssetLightMeshAbcConfig(im=1)"
			rnd_mi_LGTAbcImport_SB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "RenderLayerTools"
			-iol "RLT"  -olc 0 1 0  -style "iconOnly" -i1 "//file-cluster/gdc/Resource/Support/Maya/projects/MiniTiger/icons/mi.png" -stp "python"
			-c "import maya.cmds as mc;from idmt.maya.commonPerform.renderLayers import zb_renderLayer_mi;reload(zb_renderLayer_mi);zb_renderLayer_mi.zb_renderLayer_mi().sylvainRenderLayersUI()"
			rnd_mi_RenderLayerTools;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "Check Shader"
			-iol "检测材质球"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "import maya.cmds as mc;from idmt.maya.commonPerform.renderLayers import zb_renderLayer_mi;reload(zb_renderLayer_mi);zb_renderLayer_mi.zb_renderLayer_mi().SylvainShaderCheck();from shader import ShaderCheckTool"
			rnd_mi_ShaderDelete_rl;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "batchRunMel"
			-iol "R-MEL"  -olc 0 1 0  -style "iconOnly" -i1 "mi\\batchRunMel_icon.bmp" -stp "python"
			-c "import dod.scripts.dod_rnd_kit as dork;ins_dork = dork.dod_rnd_kit();ins_dork.do_show_batchEvalMelWin()"
			rnd_mi_batchRunMel_SB;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "switch to Z:"
			-iol "to Z:"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools);sk_sceneTools.sk_sceneTools().checkTextureSwitch('Z:')"
			rnd_mi_pathSwitchToZ;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "switch to L:"
			-iol "to L:"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools;reload(sk_sceneTools);sk_sceneTools.sk_sceneTools().checkTextureSwitch('L:')"
			rnd_mi_pathSwitchToL;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "check lost Exr sequence"
			-iol "Exr Check"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonPerform.projectTools import sk_projTools_base;reload(sk_projTools_base);sk_projTools_base.sk_projTools_base().checkLostFramesInFolderUI()"
			rnd_mi_checkLostExr;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "Submit DeadLine Missions"
			-iol "SubDeadline"  -olc 0 0 0  -style "iconOnly" -i1 "Z:/Netrender/Repository/submission/Maya/Main/Submit.png" -stp "mel"
			//-c "source \"Z:/Netrender/Repository/submission/Maya/Main/SubmitMayaToDeadline.mel\";source \"Z:/Resource/Development/Maya/GDC/Plug/Python/GDC/MEL/deadline/DeadlineMayaClient.mel\";SubmitJobToDeadline;"
			-c "source \"Z:/Resource/Development/Maya/GDC/Plug/Python/GDC/MEL/deadline/DeadlineMayaClient.mel\";SubmitJobToDeadline;"
			rnd_mi_SubmitDeadLine;
		shelfButton -docTag "Rnd"
			-en 1 -m 1 -font "smallPlainLabelFont"
			-l "替换木刀"
			-iol "木刀"  -olc 0 1 0  -style "iconOnly" -i1 "commandButton.xpm" -stp "python"
			-c "from idmt.maya.commonPerform.projectTools import sk_projTools_mi;reload(sk_projTools_mi);sk_projTools_mi.sk_projTools_mi().woodBlade(saveMode = 0)"
			rnd_mi_woodBlade;
do3ShelfChanges `optionVar -query "do3ShelfSelected"`;
//testSync
}



global proc do3ShelfChanges(string $steps)
{
	string $childArray[] = `shelfLayout -query -childArray mi`;
	int $size = size($childArray);

	int $index = 7;

	for ($i=0; $i<$size; $i++)
	{
		string $docTag = `shelfButton -query -docTag $childArray[$i]`;
		if ($docTag != "")
		{
			if ($docTag == $steps)
			{
				shelfButton -edit -visible 1 $childArray[$i];
				$index ++;
				shelfLayout -edit -position $childArray[$i] $index mi;
			}
			else
			{
				shelfButton -edit -visible 0 $childArray[$i];
			}
		}
		
		else 
		{
			if (match($steps,$childArray[$i]) == $steps)
			{
			    shelfButton -e -bgc 0 1 1 $childArray[$i];
			}
			else
			    shelfButton -e -ebg 0  $childArray[$i];
		}
	}
	optionVar -stringValue "do3ShelfSelected" $steps;
}
//==========================================================================================
global proc do_add_asignAttr_ldui()
{	
	python("from idmt.maya.DOD.scripts import dod_prep_kit");
	python("reload(dod_prep_kit)");
	python("ins_dpk = dod_prep_kit.dod_prep_kit()");
	python("ins_dpk.convert_to_relative_uiPath(\"do_add_sign_attr_UI.ui\",\"addSignAttr_Win\")");
}
//============================================================================================\

global proc yyEasyAnimation18()
{
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/python/idmt/yyscripts/yyEasyAnimation2.py\")");
	//python("yyEnyoLipsyncGUI()");
}

global proc yyEasyAnimation20()
{
	python("execfile(\"//file-cluster/GDC/Resource/Development/Maya/GDC/Plug/Python/GDC/idmt/maya/xwjModule/EasyAnimation.py\")");
	//python("yyEnyoLipsyncGUI()");
}

global proc JTAnimIKFKUIMel ()
{
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/projects/JT/AnimIKFKUI.py\")");
}

global proc zbConfigStereoCamDisMode(string $but_tag)
{
	python("execfile(\"//file-cluster/gdc/Resource/Support/Maya/projects/DODIII/append_syspath.py\")");
	python("import do3_change_stereoCamDisMode as dccd");
	python("dccd.changeStereoDisMode(buttonTag=\""+$but_tag + "\")" );

}
global proc do3_repair_seqNamed()
{
	python("execfile(\"//file-cluster/gdc/Resource/Support/Maya/projects/DODIII/append_syspath.py\")");
	python("import zb_fileFilter as zbff");
	python("reload(zbff)");
	python("zbff.do3_renameSeq()");
	
}

global proc find_animCurve()
{
	python("import IDMT.Pluto.FindLostAnimCurve as FLAC");
	python("reload(FLAC)");
	python("FLAC.UI()");
}

global proc do4_containerTools_ldui()
{
	python("import idmt.maya.DOD.DODIV.Maya.DOD4_containerTools_UICMD as dctcmd");
	python("reload(dctcmd)");

	if (`window -exists DOD4_ContainerToolsUI`) deleteUI DOD4_ContainerToolsUI;
	string $window=`loadUI -uiFile "//file-cluster/GDC/Resource/Support/Maya/projects/DODIV/DOD4_Containter_ToolsUI.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
	
	//python("dctcmd.configUI()");

}

global proc  replace_mbToMa()
{
	global string $gReferenceEditorPanel;
	string $refs[] = `sceneEditor -q -sr $gReferenceEditorPanel`;
	if (size($refs) !=1)
	{
		error "select too much";
	}
	string $refFilePath = `referenceQuery -f $refs[0]`;
	string $buffer[];
	$num = tokenize($refFilePath,"_",$buffer);
	if ($buffer[$num-1] == "notex.mb"|| $buffer[$num-1] == "notex.ma")
	{
	    $buffer[$num-1] = "tex.ma";
    }	
	string $newPath = stringArrayToString($buffer,"_");
    file -loadReference $refs[0] $newPath; 

}

global proc do_lookThrougCam()
{
python("execfile(\"//file-cluster/gdc/Resource/Support/Maya/projects/DODIII/append_syspath.py\")");
python("import do3_configPlaybackOptionsToCamAni as dcpo");
python("dcpo.do3_configPlaybackOptionsToCamAni(0)");
}


global proc do_grow_coinUI()
{
	python("execfile('//file-cluster/gdc/Resource/Support/Maya/projects/DODIII/append_syspath.py')");
	python("import do3_growCoinOnSurf as dgcos");
	python("reload(dgcos)");
	
	
	if (`window -exists growCoinUI`) deleteUI growCoinUI;
	string $window=`loadUI -uiFile "//file-cluster/GDC/Resource/Support/Maya/projects/DODIII/grow_coninUI.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
}

global proc do4_modefy_poloHouseExpression()
{
	select -r do4_s401001PoloHouseRNgroup ;
	parent -w;

	connectAttr -f do4_s401001PoloHouseRNgroup.translate do4_s401001PoloHouse:RIG.translate;
	connectAttr -f do4_s401001PoloHouseRNgroup.rotate do4_s401001PoloHouse:RIG.rotate;

	CBdeleteConnection "do4_s401001PoloHouse:RIG.tx";
	CBdeleteConnection "do4_s401001PoloHouse:RIG.ty";
	CBdeleteConnection "do4_s401001PoloHouse:RIG.tz";
	CBdeleteConnection "do4_s401001PoloHouse:RIG.rx";
	CBdeleteConnection "do4_s401001PoloHouse:RIG.ry";
	CBdeleteConnection "do4_s401001PoloHouse:RIG.rz";

	setAttr "do4_s401001PoloHouseRNgroup.rotateZ" 0;
	setAttr "do4_s401001PoloHouseRNgroup.translateX" 0;
	setAttr "do4_s401001PoloHouseRNgroup.translateY" 0;
	setAttr "do4_s401001PoloHouseRNgroup.translateZ" 0;
	setAttr "do4_s401001PoloHouseRNgroup.rotateX" 0;
	setAttr "do4_s401001PoloHouseRNgroup.rotateY" 0;

	select -r nurbsCircle7;
	select -add do4_s401001PoloHouse:RIG ;
	parentConstraint -mo -weight 1;
}

global proc do4_GRPtoMS()
{
python("execfile(\'//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/problemSolution/edo_changeConstraintToMaster.py\')");
python("execfile(\'//file-cluster/GDC/Resource/Support/Maya/extra/Rigging_Simulation/python/edo/general/problemSolution/edo_changeConstraintToMaster.py\')");
python("edo_changeConstraintToMaster()");
}


global proc do4_AO_renderProxy()
{
python("import idmt.maya.DOD.DODIV.Maya.DOD4_containerTools_UICMD as DOCT");
python("reload(DOCT)");
python("DOCT.container_render_proxy_AO(True)");
}


global proc do_rendTool_ui()//dod渲染工具面板
{
	python("import idmt.maya.DOD.scripts.dod_RenderArnoldLayer as dora");
	python("reload(dora)");
	python("ins_dora = dora.hh_RenderArnold()");
	python("import idmt.maya.DOD.scripts.dod_rnd_kit as dork");
	python("reload(dork)");
	python("ins_dork = dork.dod_rnd_kit()");
	python("import idmt.maya.DOD.DODIV.Maya.do_renderTools_uicmd as rtuc");
	python("reload(rtuc)"); 
	python("import idmt.maya.DOD.scripts.dod_Rnd_Auto_Common as drac");
	python("reload(drac)");
	python("ins_drac = drac.dod_Rnd_Auto_Common()");
	python("import idmt.maya.DOD.scripts.dod_common_proc as docp");
	python("reload(docp)");
	python("ins_docp= docp.dod_common_proc()");
	if (`window -exists do_rt_ui`) deleteUI do_rt_ui;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Python/2.6-x64/Lib/site-packages/idmt/maya/DOD/UI/dod_renderToolsUI_v03.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
	python("rtuc.refreshPanelParameter()");
}
    global proc mi_bookRepTool_ui()
{
    python("import Other.minitiger.mi_bookReplaceTools as mibrt");
    python("reload(mibrt)");
    python("ins_mibrt = mibrt.mi_bookReplaceTools()");
    python("ins_mibrt.con2relPath_mbrt(\"mi_bookReplToolsUI.ui\",\"bookRepToolWin\")");
//    if (`window -exists bookRepToolWin`) deleteUI bookRepToolWin;
//    string $window = `loadUI -uiFile"//file-cluster/gdc/Resource/Development/Maya/GDC/Plug/Python/GDC/Other/minitiger/UI/mi_bookReplToolsUI.ui"`;
//    windowPref -topLeftCorner 100 80 $window;
//    showWindow $window;
//    window -exists bookRepToolWin  ;
}

//
//global proc do_rendTool_ui()
//{
//	python("import idmt.maya.DOD.DODIV.Maya.do_renderTools_uicmd as rtuc");
//	python("reload(rtuc)");
//	python("import idmt.maya.DOD.DODIV.Maya.do_idPassTool as didp");
//	python("reload(didp)");
//	python("execfile(\'//file-cluster/GDC/Resource/Support/Maya/projects/DODIII/append_syspath.py\')");
//	python("import idmt.maya.DOD.DODIV.Maya.commonProperties as docp");
//	python("import idmt.maya.DOD.DODIV.Maya.do3_renderToolsUICMDS as drcm");
//	python("reload(docp)");
//	python("reload(drcm)");
//	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjIdPassInfo.mel";

//	if (`window -exists do_rt_ui`) deleteUI do_rt_ui;
//	string $window=`loadUI -uiFile "//file-cluster/GDC/Resource/Support/Maya/projects/DODIV/do4_renderToolsUI_v02.ui"`;
//	windowPref  -topLeftCorner 100 80 $window;
//	showWindow $window;
//	python("rtuc.refreshPanelParameter()");
//}
//
global proc do_cleanUpDisplayLayer()
{
	python("import idmt.maya.DOD.DODIV.Maya.commonProperties as dcmp");
	python("dcmp.delete_displayLayer()");
}

global proc del_unkonwNodes()
{
	python("import idmt.maya.DOD.DODIV.Maya.commonProperties as docp");
	python("docp.del_unknownNodes()");
}

global proc shutoff_lightEmitSpec()
{
    string $selLighter[] = `ls -sl -l`;
    for ($each in $selLighter)
    {
        string $getShape[] = `listRelatives -c -f -shapes`;
        for ($eachShape in $getShape)
            {
               if (`attributeQuery -node $eachShape -exists "emitSpecular"` == 1)
                {
                    setAttr ($eachShape + ".emitSpecular") 0;
                } 
            }
            
        
        
    }
}


global proc del_unConnectRefNode()
{
	python("import idmt.maya.DOD.DODIV.Maya.commonProperties as docp");
	python("docp.del_unConnectRefNode()");
}

global proc edo_reconAllDodFeet()
{
	cycleCheck -e off;
	python("import idmt.maya.DOD.DODIV.Maya.edo_reconnectAllDoD4Feet as edraf");
	string $result = `confirmDialog -title "触角" -message "处理方式"
				    -button "bakeResult" -button "Simulation" -defaultButton "bakeAnimation"
				    -cancelButton "Simulation" 
				    -dismissString "Simulation"`;
       if ($result == "Simulation")	python("edraf.edo_reconnectAllDoD4Feet(0)");
       else	python("edraf.edo_reconnectAllDoD4Feet(1)");
}


global proc do_setOpaqueAttr_BTCMD() // =====2014.8.22日添加，为物体arnold 的opaque属性的切换开关
{
	float $bt_bgc[] = `shelfButton -q -bgc set_opAttr_SB_Pre`;
	int $attr_val = !$bt_bgc[0];
	
	python("import idmt.maya.DOD.scripts.dod_prep_kit as dopre");
	python ("preKit = dopre.dod_prep_kit()");
	python("preKit.set_selObj_opaqueAttr(" + $attr_val + ")");
	shelfButton -e -bgc $attr_val .38 .48 set_opAttr_SB_Pre;
}
global proc mi_generate_txfile_BTCMD()
{
    python("import  Other.minitiger.mi_kit_rnd as mirnd");
    python("reload(mirnd)");
    python("mirnd.mi_generate_txfile()");
}
global proc mi_phong2aiStnd_BTCMD()
{
   python("import  Other.minitiger.mi_kit_rnd as mirnd");
   python("reload(mirnd)");
   python("mirnd.mi_phong2aiStnd()");
}
global proc mi_fs_foregroundCMD()
{
python("from idmt.maya.norch import north_alembicCommon");
python("reload(north_alembicCommon)");
python("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC(1,0,2,1)");
}
global proc mi_set_aiop_attr()
{
setAttr -type "string" defaultArnoldRenderOptions.procedural_searchpath "\\\\file-cluster\\GDC\\Resource\\Development\\Maya\\GDC\\3partPlugin\\2014\\Yeti1.3.5Maya2014\\bin";
}