/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc kcSetSmooth() 
{
	global int $SmoothSetMaxlevel = 3;
	global int $SmoothSetUVMinlevel = 1;
	global int $SmoothSetSblevelFar = 0;
	global int $SmoothSetSblevelMedium = 1;
	global int $SmoothSetSblevelClose = 2;

	if (`window -exists SetsmoothWindow`)
		deleteUI SetsmoothWindow;

	window -title "Set Smooth" SetsmoothWindow;
		columnLayout -adjustableColumn true -rowSpacing 5;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Set Smooth..." -command "zjHelpCallback kcSetSmooth";
				setParent ..;
			frameLayout -label "Set Maximum Smooth" -labelAlign "top" -cll true
					-borderStyle "etchedIn";
				columnLayout -adj true -cal "center";
					$SbSlider=`intSliderGrp -field true -l "Max Smooth" -min 0 -max 4
							-v $SmoothSetMaxlevel
							-cc "$SmoothSetMaxlevel = #1"
							SbSd`; 
					string $form = `formLayout`;
					string $b1 = `button -label "Smooth"     -w 100 -command  "SmoothSetSmooth"`;
					string $b2 = `button -label "Set"  -w 100 -command  "SmoothSetSetAttr"`;
					string $b3 = `button -label "Remove"  -w 100 -command  "SmoothSetRemSmooth"`;
					string $b4 = `button -label "Select"  -w 100 -command  "smselect"`;
					formLayout -edit
						-attachForm	$b1	"top"	10
						-attachForm	$b1	"left"	0
						-attachPosition	$b1	"right"	0	25

						-attachForm	$b2	"top"	10
						-attachControl	$b2	"left"	0	$b1
						-attachPosition	$b2	"right"	0	50

						-attachForm	$b3	"top"	10
						-attachControl	$b3	"left"	0	$b2
						-attachPosition	$b3	"right"	0	75

						-attachForm	$b4	"top"	10
						-attachControl	$b4	"left"	0	$b3
						-attachForm	$b4	"right"	0
					$form;
					setParent ..;

					button -label "Select Objects Not Set Maxium Smooth"  -command  "zwSelectNonSmooth";	// by huangzhongwei at 2003.3.13

				setParent ..;
			setParent ..;

			frameLayout -label "Set Shot-Based Smooth" -labelAlign "top" -cll true
					-borderStyle "etchedIn";
				columnLayout -adj true -cal "center";
					$SbSliderFar=`intSliderGrp -field true -l "Far Shot" -min 0 -max 4
							-v $SmoothSetSblevelFar 
							-cc "$SmoothSetSblevelFar = #1"
							SbSdFar`; 
					$SbSliderMedium=`intSliderGrp -field true -l "Medium Shot" -min 0 -max 4
							-v $SmoothSetSblevelMedium 
							-cc "$SmoothSetSblevelMedium = #1"
							SbSdMedium`; 
					$SbSliderClose=`intSliderGrp -field true -l "Close Shot" -min 0 -max 4
							-v $SmoothSetSblevelClose 
							-cc "$SmoothSetSblevelClose = #1"
							SbSdClose`; 
					string $form = `formLayout`;
					string $b1 = `button -label "Set"  -w 125 -command  "SmoothSetSetShotAttr"`;
					string $b2 = `button -label "Remove"  -w 125 -command  "SmoothSetRemShotSmooth"`;
					formLayout -edit
						-attachForm	$b1	"top"	10
						-attachForm	$b1	"left"	0
						-attachPosition	$b1	"right"	0	50

						-attachForm	$b2	"top"	10
						-attachControl	$b2	"left"	0	$b1
						-attachForm	$b2	"right"	0
						$form;
					setParent ..;
				setParent ..;
			setParent ..;
 /*********************************************************************************2006.3.8 delete Uvsetsmooth
			frameLayout -label "Set UV Min Smooth" -labelAlign "top" -cll true -collapse true
					-borderStyle "etchedIn";
				columnLayout -adj true -cal "center";
					$SbSlider=`intSliderGrp -field true -l "UV Min Smooth" -min 0 -max 4
							-v $SmoothSetUVMinlevel
							-cc "$SmoothSetUVMinlevel = #1"
							SbSd`; 
					string $form = `formLayout`;
					string $b1 = `button -label "Set Selected"  -w 100 -command  "SmoothSetUVSetAttr"`;
					string $b2 = `button -label "Remove Selected"  -w 100 -command  "SmoothSetUVRemSmooth"`;
					string $b3 = `button -label "Remove All"  -w 100 -command  "SmoothSetUVRemAllSmooth"`;
					formLayout -edit
						-attachForm	$b1	"top"	10
						-attachForm	$b1	"left"	0
						-attachPosition	$b1	"right"	0	33

						-attachForm	$b2	"top"	10
						-attachControl	$b2	"left"	0	$b1
						-attachPosition	$b2	"right"	0	66

						-attachForm	$b3	"top"	10
						-attachControl	$b3	"left"	0	$b2
						-attachForm	$b3	"right"	0
					$form;
					setParent ..;
				setParent ..;
			setParent ..;
***********************************************************************************************/
		setParent ..;

	window -edit -width 450 -height 400 SetsmoothWindow;

	showWindow SetsmoothWindow;
}

global proc SmoothSetSetShotAttr () 
{
	global int $SmoothSetSblevelFar;
	global int $SmoothSetSblevelMedium;
	global int $SmoothSetSblevelClose;

	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -userDefined -string FarSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 0)   
			{
				// Far Shot smooth
				addAttr -longName "FarSmooth" -attributeType long -defaultValue $SmoothSetSblevelFar $item;

				// Medium Shot smooth
				addAttr -longName "MediumSmooth" -attributeType long -defaultValue $SmoothSetSblevelMedium $item;

				// Close Shot smooth
				addAttr -longName "CloseSmooth" -attributeType long -defaultValue $SmoothSetSblevelClose $item;

				print("attribute has been set successfully!");
			}else if ($lSnum == 1)
				{

					// Far Shot smooth
					deleteAttr -at "FarSmooth" $item;
					addAttr -longName "FarSmooth" -attributeType long -defaultValue $SmoothSetSblevelFar $item;

					// Medium Shot smooth
					deleteAttr -at "MediumSmooth" $item;
					addAttr -longName "MediumSmooth" -attributeType long -defaultValue $SmoothSetSblevelMedium $item;

					// Close Shot smooth
					deleteAttr -at "CloseSmooth" $item;
					addAttr -longName "CloseSmooth" -attributeType long -defaultValue $SmoothSetSblevelClose $item;

					print("attribute has been set successfully!");
				}
		}
	 }

}

global proc SmoothSetSetAttr () 
{
	global int $SmoothSetMaxlevel;
	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -userDefined -string MaxSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 0)   
			{
				addAttr -longName MaxSmooth -attributeType long -defaultValue $SmoothSetMaxlevel $item;
				print("attribute has been set successfully!");
			}
			else if ($lSnum == 1) 
			{
				deleteAttr -at "MaxSmooth" $item;
				addAttr -ln MaxSmooth -at long -defaultValue $SmoothSetMaxlevel $item;
				print("attribute has been set successfully!");
			}
		}

	}

}
/***************************************************
global proc SmoothSetUVSetAttr () 
{
	global int $SmoothSetUVMinlevel;
	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -userDefined -string UVMinSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 0)   
			{
				addAttr -longName UVMinSmooth -attributeType long -defaultValue $SmoothSetUVMinlevel $item;
				print("attribute has been set successfully!");
			}
			else if ($lSnum == 1) 
			{
				deleteAttr -at "UVMinSmooth" $item;
				addAttr -ln UVMinSmooth -at long -defaultValue $SmoothSetUVMinlevel $item;
				print("attribute has been set successfully!");
			}
		}

	}

}
****************************************************************************************/
global proc SmoothSetSmooth () 
{
	global int $SmoothSetMaxlevel;
	string $sN[] = `ls -selection -type "transform"`;

	for ($item in $sN)
	{
		string $his[] = `listHistory -pdo true $item`;
		$flag = 0;
		for ($i=0;$i<size($his);$i++ )
		{
			if (`gmatch $his[$i] "finalSmooth*"`) 
			{
				$flag = 1;
				warning ("finalSmooth has already been set on "+$item);
				break;
			}
		}

		if ($flag == 0) 
		{
			string $shapes[] = getShapes($item);
			for ($shp in $shapes)
				$plyname = `polySmooth -divisions $SmoothSetMaxlevel -continuity 1 -keepBorder 0 -keepSelectionBorder 0 -keepTessellation 0 -constructionHistory 1 $shp`;
		}
	}

	// restore original selection
	select $sN;
}



global proc SmoothSetRemSmooth () 
{
	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -ud -st MaxSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 1)   
			{
				deleteAttr -at "MaxSmooth" $item;
				print "Smooth Attribute has been removed.";
			} 
		}
	}
}
/**************************************************
global proc SmoothSetUVRemAllSmooth () 
{
	string $sN[] = `ls -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -ud -st UVMinSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 1)   
			{
				deleteAttr -at "UVMinSmooth" $item;
				print ("Remove UV Min Smooth Attribute: " + $item + "\n");
			} 
		}
	}
}
*************************************************************************/
/*************************************************************************
global proc SmoothSetUVRemSmooth () 
{
	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -ud -st UVMinSmooth $item`;
			$lSnum = size($lS); 

			if ($lSnum == 1)   
			{
				deleteAttr -at "UVMinSmooth" $item;
				print ("Remove UV Min Smooth Attribute: " + $item + "\n");
			} 
		}
	}
}
*****************************************************************/
global proc SmoothSetRemShotSmooth () 
{
	string $sN[] = `ls -selection -type "transform"`;

	for ($obj in $sN)
	{
		string $alltrans[] = getInstances($obj);	//To get the instances of a Transform
		for ($item in $alltrans)
		{
			string $lS[] = `listAttr -ud -st "FarSmooth" $item`;
			$lSnum = size($lS); 

			if ($lSnum == 1)   
			{
				deleteAttr -at "FarSmooth" $item;
				deleteAttr -at "MediumSmooth" $item;
				deleteAttr -at "CloseSmooth" $item;
				print "Smooth Attribute has been removed.";
			} 
		}
	}
}

global proc smselect() 
{
	global int $SmoothSetMaxlevel;
	string $sN[] = `ls -tr`;
	select -clear;
	for ($item in $sN)
	{
		string $tr[] = `listAttr -userDefined -string MaxSmooth $item`;
		if (size($tr) == 1)
		{
			$level = `getAttr ($item+".MaxSmooth")`;
			if ($level == $SmoothSetMaxlevel)
				select -add $item;
		}
	}
}

// by huangzhongwei at 2003.3.13

global proc zwSelectNonSmooth()
{
	select -clear;
	string $buf[] = `ls -long -transforms`;
	for ($node in $buf)
	{
		string $buf1[] = `getShapes $node`;
		if (`objExists $buf1[0]`)
		{
			if (`nodeType $buf1[0]` == "mesh" && !`attributeExists "MaxSmooth" $node`)
				select -add $node;
		}
	}
}