/// Author: liang
///
/// Creation Date: 2007/08/28
///
/// Description:使用脚本请运行tongueModifyTool_auto()函数，修改后舌头位置会出现三个控制手柄，请手动将其移动到方便选择的位置
/// Modify: liang

//use scrip//source tongueModifyTool.mel;tongueModifyTool("yasmine");
//use scrip//source tongueModifyTool.mel;tongueModifyTool();
//use scrip//source tongueModifyTool.mel;tongueModifyTool_auto();

//自动识别角色前缀名，但没有测试过多个角色同时出现的情况
global proc tongueModifyTool_auto()
{
	//取得角色前缀
		select "*_MASTER*";
		string $buffer[];
		string $tempListAll[] = `ls -sl`;
		string $tempList = $tempListAll[0];
		tokenize $tempList "_MASTER" $buffer;
		string $charName = $buffer[0];
	//执行
	tongueModifyTool($charName);
}
//需要针对不同角色添加前缀
global proc tongueModifyTool(string $charName)
{
	
	//将需要处理的骨骼属性释放
		select ($charName+"_tongue3") ($charName+"_tongue4") ($charName+"_tongue5") /*($charName+"_tongue6")*/;
		tongue_attrLockUnlock(0,0);
		tongue_lidControlAdd("_con");
		select -cl  ;
	
	//添加和连接控制属性
		//yasmine_T_L
		addAttr -ln tongueScaleControlX -at double -dv 1 ($charName + "_T_L");
		setAttr -e -keyable true ($charName + "_T_L.tongueScaleControlX");
		addAttr -ln tongueScaleControlX_add -at double -min -1 -max -1 -dv -1 ($charName + "_T_L");
		setAttr -e -keyable true ($charName + "_T_L.tongueScaleControlX_add");
		addAttr -ln tongueScaleControlY -at double -dv 1 ($charName + "_T_L");
		setAttr -e -keyable true ($charName + "_T_L.tongueScaleControlY");
		addAttr -ln tongueScaleControlZ -at double -dv 1 ($charName + "_T_L");
		setAttr -e -keyable true ($charName + "_T_L.tongueScaleControlZ");
		
		createNode plusMinusAverage -n ($charName +"_tongue_plusMinusAverage");
		connectAttr -f ($charName + "_T_L.tongueScaleControlX") ($charName +"_tongue_plusMinusAverage.input1D[0]");
		connectAttr -f ($charName + "_T_L.tongueScaleControlX_add") ($charName +"_tongue_plusMinusAverage.input1D[1]");
		
		//connectAttr -f ($charName + "_T_L.tongueScaleControl") ($charName+"_tongue1.scaleX");
		//connectAttr -f ($charName + "_T_L.tongueScaleControl") ($charName+"_tongue2.scaleX");
		connectAttr -f ($charName +"_tongue_plusMinusAverage.output1D") ($charName+"_tongue3.translateX");
		connectAttr -f ($charName +"_tongue_plusMinusAverage.output1D") ($charName+"_tongue4.translateX");
		connectAttr -f ($charName +"_tongue_plusMinusAverage.output1D") ($charName+"_tongue5.translateX");
		//connectAttr -f ($charName +"_tongue_plusMinusAverage.output1D") ($charName+"_tongue6.translateX");
		connectAttr -f ($charName + "_T_L.tongueScaleControlY") ($charName+"_tongue3.scaleY");
		connectAttr -f ($charName + "_T_L.tongueScaleControlY") ($charName+"_tongue4.scaleY");
		connectAttr -f ($charName + "_T_L.tongueScaleControlY") ($charName+"_tongue5.scaleY");
		//connectAttr -f ($charName + "_T_L.tongueScaleControlY") ($charName+"_tongue6.scaleY");
		connectAttr -f ($charName + "_T_L.tongueScaleControlZ") ($charName+"_tongue3.scaleZ");
		connectAttr -f ($charName + "_T_L.tongueScaleControlZ") ($charName+"_tongue4.scaleZ");
		connectAttr -f ($charName + "_T_L.tongueScaleControlZ") ($charName+"_tongue5.scaleZ");
		//connectAttr -f ($charName + "_T_L.tongueScaleControlZ") ($charName+"_tongue6.scaleZ");
	
	//清理属性
		//($charName+"_tongue3")
		select ($charName+"_tongue3_con") ($charName+"_tongue4_con") ($charName+"_tongue5_con") /*($charName+"_tongue6_con")*/;
		tongue_attrLockUnlock(1,1);
		select ($charName+"_tongue3") ($charName+"_tongue4") ($charName+"_tongue5") /*($charName+"_tongue6")*/;
		tongue_attrLockUnlock(1,0);
		
		//tongue3
		setAttr -l 0 -keyable 0 ($charName+"_tongue3.translateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue3.translateY");
		setAttr -l 1 -keyable 0 ($charName+"_tongue3.translateZ");
		setAttr -l 1 -keyable 0 ($charName+"_tongue3.rotateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue3.rotateY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue3.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue3.scaleX");
		setAttr -l 0 -keyable 0 ($charName+"_tongue3.scaleY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue3.scaleZ");
		//tongue4
		setAttr -l 0 -keyable 0 ($charName+"_tongue4.translateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue4.translateY");
		setAttr -l 1 -keyable 0 ($charName+"_tongue4.translateZ");
		setAttr -l 1 -keyable 0 ($charName+"_tongue4.rotateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue4.rotateY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue4.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue4.scaleX");
		setAttr -l 0 -keyable 0 ($charName+"_tongue4.scaleY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue4.scaleZ");
		//tongue5
		setAttr -l 0 -keyable 0 ($charName+"_tongue5.translateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue5.translateY");
		setAttr -l 1 -keyable 0 ($charName+"_tongue5.translateZ");
		setAttr -l 1 -keyable 0 ($charName+"_tongue5.rotateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue5.rotateY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue5.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue5.scaleX");
		setAttr -l 0 -keyable 0 ($charName+"_tongue5.scaleY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue5.scaleZ");
		/*//tongue6
		setAttr -l 0 -keyable 0 ($charName+"_tongue6.translateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue6.translateY");
		setAttr -l 1 -keyable 0 ($charName+"_tongue6.translateZ");
		setAttr -l 1 -keyable 0 ($charName+"_tongue6.rotateX");
		setAttr -l 1 -keyable 0 ($charName+"_tongue6.rotateY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue6.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue6.scaleX");
		setAttr -l 0 -keyable 0 ($charName+"_tongue6.scaleY");
		setAttr -l 0 -keyable 0 ($charName+"_tongue6.scaleZ");
		*/
		setAttr -l 1 -keyable 0 ($charName + "_T_L.tongueScaleControlX_add");
		
		setAttr ($charName + "_tongue3_con.displayHandle") 1;
		setAttr ($charName + "_tongue4_con.displayHandle") 1;
		setAttr ($charName + "_tongue5_con.displayHandle") 1;
		//setAttr ($charName + "_tongue6_con.displayHandle") 1;
		setAttr -l 0 -keyable 1 ($charName+"_tongue3_con.rotateX");
		setAttr -l 0 -keyable 1 ($charName+"_tongue3_con.rotateY");
		setAttr -l 0 -keyable 1 ($charName+"_tongue3_con.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue4_con.rotateX");
		setAttr -l 0 -keyable 1 ($charName+"_tongue4_con.rotateY");
		setAttr -l 0 -keyable 1 ($charName+"_tongue4_con.rotateZ");
		setAttr -l 0 -keyable 1 ($charName+"_tongue5_con.rotateX");
		setAttr -l 0 -keyable 1 ($charName+"_tongue5_con.rotateY");
		setAttr -l 0 -keyable 1 ($charName+"_tongue5_con.rotateZ");
		//setAttr -l 0 -keyable 1 ($charName+"_tongue6_con.rotateX");
		//setAttr -l 0 -keyable 1 ($charName+"_tongue6_con.rotateY");
		//setAttr -l 0 -keyable 1 ($charName+"_tongue6_con.rotateZ");
		select -cl;
	
	//打印反馈信息
		print "舌头修改脚本执行成功";
		
}
//添加父组函数
global proc tongue_lidControlAdd(string $lidSuffix)
{
	//$lidSuffix为新lid的后缀名
	string $tempList[];			//选择物体
	string $tempCurrentList;	//循环处理中当前处理的选择物体
	
	
	string $tempList[] = `ls -sl -tr`;
	for ($tempCurrentList in $tempList)
	{
		//判断此物体新生成的lid名是否与其父物体同名，如果是，则提示改后缀或换选其父物体进行加lid操作
		string $parentName[] = `listRelatives -p $tempCurrentList`;
		if(`gmatch $parentName[0] ($tempCurrentList + $lidSuffix)` ==0)
		{
			//复制当前处理的物体，并将新复制的物体改名为原物体名加上后缀
			select $tempCurrentList;
			string $newDupName[] = `duplicate`;
			rename $newDupName[0] ($tempCurrentList + $lidSuffix);
			
			//删除新复制物体的子物体
			select -hi ($tempCurrentList + $lidSuffix);
			select -d ($tempCurrentList + $lidSuffix);
			string $tempSel[] = `ls -sl`;
			if(`size $tempSel` != 0)
			{
				delete;
			}
			
			//将原物体作为新复制物体的子物体
			parent $tempCurrentList ($tempCurrentList + $lidSuffix);
			
			//为骨骼对象连接inverseScale属性
			if (`attributeExists "inverseScale" $tempCurrentList`==1)
			{
				connectAttr ($tempCurrentList + $lidSuffix + ".scale") ($tempCurrentList + ".inverseScale");
			}
			select ($tempCurrentList + $lidSuffix);
		}
		else
		{
		print ("你选择的物体"+ $tempCurrentList +"新生成的lid名与其父物体同名，请改变后缀或换选其父物体进行加lid操作" + "\n");
		}
	}
}
//锁定属性函数
global proc tongue_attrLockUnlock(int $switch1 , int $switch2 )
{
	string $tempList[] = `ls -sl`;
	string $tempCurrentList;
	
	for($tempCurrentList in $tempList)
	{
		setAttr -l $switch1 ($tempCurrentList + ".jointOrientX");
		setAttr -l $switch1 ($tempCurrentList + ".jointOrientY");
		setAttr -l $switch1 ($tempCurrentList + ".jointOrientZ");
		
		setAttr -l $switch1 ($tempCurrentList+ ".stiffnessX");
		setAttr -l $switch1 ($tempCurrentList+ ".stiffnessY");
		setAttr -l $switch1 ($tempCurrentList+ ".stiffnessZ");
		
		setAttr -l $switch1 ($tempCurrentList+ ".preferredAngleX");
		setAttr -l $switch1 ($tempCurrentList+ ".preferredAngleY");
		setAttr -l $switch1 ($tempCurrentList+ ".preferredAngleZ");
		
		setAttr -l $switch1 ($tempCurrentList+ ".rotateAxisX");
		setAttr -l $switch1 ($tempCurrentList+ ".rotateAxisY");
		setAttr -l $switch1 ($tempCurrentList+ ".rotateAxisZ");
	
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".translateX");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".translateY");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".translateZ");
		
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".rotateX");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".rotateY");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".rotateZ");
		
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".scaleX");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".scaleY");
		setAttr -l $switch2 -keyable (1-$switch2) ($tempCurrentList+ ".scaleZ");

	}
}

