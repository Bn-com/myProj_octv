/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: Parenting for Animators
''    Author:  
''    Last Updated: Feb 16, 2008
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/animation/5076.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/
/*
''	klr_parentingForAnimatorsUI.mel
''
''	author: Kurt Rathjen
''	email: kurt.rathjen@gmail.com
''	web: www.kurtrathjen.com
''
''	if the script is already sourced run the following line...
''
''	klr_parentingForAnimatorsUI();
''
''	...or the following line will source and run this script, you must specify the location of this script and it must be forward slashes!!-----
''
''	WIN
''	source "c:/ THIS SCRIPT LOCATION /klr_parentingForAnimatorsUI.mel"; klr_parentingForAnimatorsUI();
''
''	OSX
''	source "/ THIS SCRIPT LOCATION /klr_parentingForAnimatorsUI.mel"; klr_parentingForAnimatorsUI();
''
''	For examples and help please visit www.kurtrathjen.com
''
''	Any feedback is greatly appreciated to assist with further development.
''
'' 	HaVe FuN and HaPpy PArEnTiNg :-)
*/

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_parentingForAnimatorsUI
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_parentingForAnimatorsUI() {

	global float $gSelectedItemColor[], $gUnselectedItemColor[];
	global int $gChildListSelection, $klr_gIsWin;

	$klr_gIsWin = `about -win`;

//------------- GLOBAL COLORS -------------

	//BLUE
	$gSelectedItemColor = {.2,.7,.9};

    //GREEN
	//$gSelectedItemColor = {.5,.9,.5};

	//ORANGE
	//$gSelectedItemColor = {1.0,.75,0.3};

    //YELLOW
	//$gSelectedItemColor = {1.0,1.0,0.3};

    //GREY
	$gUnselectedItemColor = {.75,.75,.75};

//-------------------------------------------------------

	string $version = "3.1.0";
	string $window = "klr_parentingForAnimatorsUI";
	string $object = "klr_parenting_grp";

	int $w = 380;
	int $h = 200;

    string $style,$style2, $image1, $image2, $label;
    int $int1,$int2,$int3;

        if ($klr_gIsWin) {
            $label = " >>";
            $image1 = "";
            $image2 = "";
            $style = "none";
            $style2 = "iconAndTextHorizontal";
            $int2 = 6;
            $int3 = 0;
        } else {
            $label = "";
            $image1 = (zwGetIcon("arrowDown.xpm"));
            $image2 = "arrowUp.xpm";
            $style = "in";
            $style2 = "iconOnly";
            $int2 = 3;
            $int3 = 6;
        }

	if (`window -ex $window`) deleteUI  $window;

	window -t (" KLR | -parentingForAnimators- | "+ $version) $window;

// UI Layout -->

	$formLayout01 = `formLayout
		-bgc .45 .45 .45`;

		$formLayout02 = `formLayout
			-bgc .45 .45 .45`;

		$scrollLayout01 = `scrollLayout
			-bgc .7 .7 .7
			-cr 1
			-resizeCommand "klr_fixWindowBug"
			"klr_childScrollLayoutUI"`;

			$formLayout03 = `formLayout
				-bgc .7 .7 .7
				-p $scrollLayout01
				"klr_childFormLayoutUI"`;

			setParent..;
		setParent..;

		$scrollLayout02 = `scrollLayout
			-bgc .7 .7 .7
			-cr 1
			-resizeCommand "klr_fixWindowBug"
			"klr_parentScrollLayoutUI"`;

			$formLayout04 = `formLayout
				-bgc .7 .7 .7
				-p $scrollLayout02
				"klr_parentFormLayoutUI"`;

			setParent..;
		setParent..;

//- - - - - - - - - - - - - - - Script Jobs - - - - - - - - - - - - - - - - -

	scriptJob 	-parent $window
				-event "SelectionChanged" ("klr_updateParentingGUI(\"" +$object + "\",\"" +$formLayout03 + "\", \""  + $formLayout04 +"\",0)");

	scriptJob 	-parent $window
				-event "Undo" ("klr_updateParentingGUI(\"" +$object + "\",\"" +$formLayout03 + "\", \""  + $formLayout04 +"\", 1)");

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

		$iconTextButton01 = `iconTextButton
			-p $formLayout01
			-h 24
			-m 1
			-bgc .6 .6 .6
			-al "center"
			-style "textOnly"
			-l  ("Parent")
			-c ("{string $tmp[] = klr_querySelectItemFromList(\"" + $object  + "\",\"" + $formLayout03 + "\",1);string $tmp2[] = klr_querySelectItemFromList(\"" + $object  + "\",\"" + $formLayout03 + "\",2);  klr_parentObects(0);klr_createChildrenList(\"" + $object + "\", \"" + $formLayout03 + "\", \"" + $formLayout04  + "\");klr_selectItemInList(\"" + $formLayout03 + "\", $tmp[0], 0, \"\");klr_createParentList(\"" + $object + "\", \"" + $formLayout04 + "\", \"" + $formLayout02  + "\", $tmp2[0]);}")`;

		$iconTextButton02 = `iconTextButton
			-p $formLayout01
			-h 24
			-m 1
			-bgc .6 .6 .6
			-al "center"
			-style "textOnly"
			-l  ("Grab/Release")
			-c ("{string $tmp[] = klr_querySelectItemFromList(\"" + $object  + "\",\"" + $formLayout03 + "\",1);string $tmp2[] = klr_querySelectItemFromList(\"" + $object  + "\",\"" + $formLayout03 + "\",2);  klr_parentObects(1);klr_createChildrenList(\"" + $object + "\", \"" + $formLayout03 + "\", \"" + $formLayout04  + "\");klr_selectItemInList(\"" + $formLayout03 + "\", $tmp[0], 0, \"\");klr_createParentList(\"" + $object + "\", \"" + $formLayout04 + "\", \"" + $formLayout02  + "\", $tmp2[0]);}")`;

		$iconTextButton03 = `iconTextButton
			-p $formLayout01
			-h 24
			-m 1
			-bgc .6 .6 .6
			-al "center"
			-style "textOnly"
			-l  ("Re-Key")
			-c ("klr_rekeyChild(\"" + $object + "\",\"" + $formLayout03 + "\", \"" + $formLayout04 + "\")")`;

		$iconTextButton04 = `iconTextButton
			-p $formLayout01
			-m 0
			-w 24
			-h 24
			-bgc .6 .6 .6
			-al "center"
			-style "textOnly"
			-l  ("O")
			-c ("")`;

		$iconTextButton05 = `iconTextButton
			-p $formLayout01
			-w 24
			-h 24
			-m 1
			-bgc .6 .6 .6
			-al "center"
			-style $style2
            -label $label
			-image $image1`;

		$iconTextButton06  = `iconTextButton
			-p $formLayout01
			-w 24
			-h 22
			-en 1
			-m 1
			-bgc .6 .6 .6
			-al "center"
			-style "textOnly"
			-fn "plainLabelFont"
			-l  ("w  w  w  .  k  u  r  t    r  a  t  h  j  e  n  .  c  o  m")
			-c "showHelp -absolute \"http://www.kurtrathjen.com\""`;

		$separator02  = `separator -m 1 -p $formLayout01 -h 1 -style $style -bgc .45 .45 .45`;
		$separator03  = `separator -m 1 -p $formLayout01 -h 1 -style $style -bgc .45 .45 .45`;

		$separator04  = `separator -m 1 -p $formLayout01 -w 1 -h 9 -style $style -bgc .45 .45 .45`;
		$separator05  = `separator -m 1 -p $formLayout01 -w 1 -h 9 -style $style -bgc .45 .45 .45`;
		$separator06  = `separator -m 1 -p $formLayout01 -w 1 -h 9 -style $style -bgc .45 .45 .45`;

	formLayout -e

		-af	$iconTextButton01  "left" $klr_gIsWin
		-ap	$iconTextButton01  "right" 1 33
		-af	$iconTextButton01  "top" $klr_gIsWin

		-ac 	$separator04 "left" 0 $iconTextButton01
		-af 	$separator04 "top" -10
		-ac 	$separator04 "bottom" 0 $separator02

		-ac	$iconTextButton02  "left" 1 $iconTextButton01
		-ap	$iconTextButton02  "right" 1 66
		-af	$iconTextButton02  "top" $klr_gIsWin

		-ac 	$separator05 "left" 0 $iconTextButton02
		-af 	$separator05 "top" -10
		-ac 	$separator05 "bottom" 0 $separator02

		-ac	$iconTextButton03  "left" 1 $iconTextButton02
		-af	$iconTextButton03  "right" 26
		-af	$iconTextButton03  "top" $klr_gIsWin

		-ac 	$separator06 "left" 0 $iconTextButton03
		-af 	$separator06 "top" -10
		-ac 	$separator06 "bottom" 0 $separator02

		-ac	$iconTextButton04  "left" 1 $iconTextButton03
		-af	$iconTextButton04  "top" $klr_gIsWin

		-af 	$separator02 "left" 1
		-af 	$separator02 "right" 1
		-ac 	$separator02 "top" 0 $iconTextButton01

		-af	$iconTextButton05  "right" $klr_gIsWin
		-af	$iconTextButton05  "top" $klr_gIsWin

		-af 	$separator03 "left" 1
		-af 	$separator03 "right" 1
		-ac 	$separator03 "top" 0 $formLayout02

		-af	$iconTextButton06  "right" 1
		-af	$iconTextButton06  "left" 1
		-ac	$iconTextButton06  "top" 0 $separator03
		-af	$iconTextButton06  "bottom" 1

		-af 	$formLayout02 "left" 0
		-af 	$formLayout02 "right" 0
		-ac	$formLayout02 "top" 0 $iconTextButton01
		-af 	$formLayout02 "bottom" 18

	$formLayout01;

	formLayout -e

		-af 	$scrollLayout01 "left" -2
		-ap 	$scrollLayout01 "right" 0 50
		-af	$scrollLayout01 "top" -2
		-af 	$scrollLayout01 "bottom" -2

		-af 	$scrollLayout02 "right" -2
		-ap 	$scrollLayout02 "left" 0 50
		-af	$scrollLayout02 "top" -2
		-af 	$scrollLayout02 "bottom" -2

	$formLayout02;

//  - - - - - - - CONSTRAIN AXIS OPTION  - - - - - - - -

		$formLayout05 = `formLayout
			-bgc .85 .85 .85
			-m 0
			-p $formLayout01`;

		$separator01  = `separator -m 1 -h 1 -style "in" -bgc .45 .45 .45`;

	formLayout -e

		-af 	$formLayout05 "left" 0
		-af 	$formLayout05 "right" 0
		-ac	$formLayout05 "top" 1 $iconTextButton01

	$formLayout01;

			$text01 = `text
				-al "right"
				-w 75
				-bgc .85 .85 .85
				-l "Translate:"`;

			$text02 = `text
				-al "right"
				-bgc .85 .85 .85
				-w 75
				-l "Rotate:"`;

			$text03 = `text
				-al "right"
				-bgc .85 .85 .85
				-w 75
				-l "Release:"`;

		$radioCollection = `radioCollection "klr_releaseFunctionRadioCollection"`;

		$radioButton1 = `radioButton
			-bgc .85 .85 .85
			-label "Relative" "klr_releaseRelativeOption"`;
		$radioButton2 = `radioButton
			-bgc .85 .85 .85
			-label "World" "klr_releaseWorldOption"`;

		radioCollection -edit -select $radioButton1 $radioCollection;

	$checkBox01  = `checkBox
				-bgc .85 .85 .85
				-en 1
				-h 22
				-w 75
				-v 1
				-l "X"
				klr_TranslateXCB`;

			$checkBox02  = `checkBox
				-bgc .85 .85 .85
				-en 1
				-h 22
				-w 75
				-v 1
				-l "Y"
				klr_TranslateYCB`;

			$checkBox03  = `checkBox
				-bgc .85 .85 .85
				-en 1
				-h 22
				-w 75
				-v 1
				-l "Z"
				klr_TranslateZCB`;

			$checkBox04  = `checkBox
				-bgc .85 .85 .85
				-en 1
				-h 22
				-w 75
				-v 1
				-l "X"
				klr_RotateXCB`;

			$checkBox05  = `checkBox
				-bgc .85 .85 .85
				-h 22
				-w 75
				-v 1
				-l "Y"
				klr_RotateYCB`;

			$checkBox06  = `checkBox
				-bgc .85 .85 .85
				-en 1
				-h 22
				-w 75
				-v 1
				-l "Z"
				klr_RotateZCB`;

		formLayout -e

			-af		$text03 "left" 5
			-af		$text03 "top" 5

			-ap		$radioButton1 "left" 1 25
			-af		$radioButton1 "top" $int2

			-ap		$radioButton2 "left" 1 50
			-af		$radioButton2 "top" $int2

			-af		$text01 "left" 5
			-ac		$text01 "top" 1 $text03

			-ap		$checkBox01 "left" 1 25
			-aoc	$checkBox01 "top" 0 $text01

			-ap		$checkBox02 "left" 1 50
			-aoc	$checkBox02 "top" 0 $text01

			-ap		$checkBox03 "left" 1 75
			-aoc	$checkBox03 "top" 0 $text01

			-af		$text02 "left" 5
			-ac		$text02 "top" 3 $text01

			-ap		$checkBox04 "left" 1 25
			-ac 		$checkBox04 "top" 2	$text01

			-ap		$checkBox05 "left" 1 50
			-ac 		$checkBox05 "top" 2 $text01

			-ap		$checkBox06 "left" 1 75
			-ac		$checkBox06 "top" 2	$text01


			-af 	$separator01 "left" 0
			-af 	$separator01 "right" 0
			-ac 	$separator01 "top" $int3 $checkBox06

		$formLayout05;

    	klr_updateAttrsFromMsgConnections($object);
		klr_updateParentLocsFromMsgConnections();
		iconTextButton -e  -c ("if  (`formLayout -q -m \"" + $formLayout05 + "\"`) {  formLayout -e -ac  " +  $formLayout02 + " \"top\" 0 " +  $iconTextButton01 +  " " + $formLayout01 + "; formLayout -e -m 0 \"" + $formLayout05 + "\"; iconTextButton -e -l \""+$label+"\" -image \""+$image1+"\" \"" +  $iconTextButton05 + "\";} else { formLayout -e -ac " +  $formLayout02 + " \"top\" 0 " + $formLayout05 +  " " + $formLayout01 + ";  formLayout -e -m 1 \"" + $formLayout05 + "\";iconTextButton -e -l \""+$label+"\" -image \""+$image2+"\" \"" +  $iconTextButton05 + "\";}") $iconTextButton05;
		klr_createChildrenList($object, $formLayout03, $formLayout04);

		window -e -wh $w $h  $window;
	showWindow  $window;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_createChildrenList
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_createChildrenList(
	string $object,
	string $formLayout,
	string $pFormLayout)
{
	global int $klr_gIsWin;

	string $list1[] = `klr_getConstraintInfo $object -1 2`;
	string $list2[] = `klr_getConstraintInfo $object -1 1`;
	string $formLayoutOld, $style, $image1;

    string $image1, $label,  $image2;
    int $int1;

        if ($klr_gIsWin) {
            $label = " X";
            $image1 = "";
            $image2 = "";
            $int1 = 1;
        } else {
            $label = " ";
            $image2 = "mi-cross.xpm";
            $image1 = "verticalCloseBar.xpm";
            $int1 = 4;
        }

	for ($ui in  `klr_getlistFromFormLayout  $formLayout  1`)
		deleteUI $ui;

	for ($i = 0; $i < `size $list1`;$i++) {

		$formLayout02 = `formLayout
			-en 1
			-p $formLayout
			-h 20
			-bgc .8 .8 .8`;

			$iconTextButton01 = `iconTextButton
				-en 1
				-fn "plainLabelFont"
				-m 1
				-h 20
				-al "left"
				-bgc .8 .8 .8
				-image $image1
				-style "iconAndTextHorizontal"
				-l  ($list1[$i])
				-c ("$gChildListSelection = 1; if (!`objExists \"" + $list2[$i] + "\"`) { error \"Object no longer exists or has been renamed! Try reloading the Tool! \";  } else { select " + $list2[$i] + "; }")`;

			iconTextButton -e -doubleClickCommand ("klr_toggleAnnotations(\""+$object+"\", \"" + $formLayout + "\")") $iconTextButton01;

			$iconTextButton02 = `iconTextButton
				-en 0
				-m 0
				-h 18
				-w 20
				-bgc .2 .7 1
				-al "left"
				-fn "plainLabelFont"
				-style "iconAndTextHorizontal"
			 	-image $image2
				-l  $label
				-c ("klr_removeChildGrp(\"" + $object + "\", \"" + $list2[$i] + "\"); klr_createChildrenList(\"" + $object + "\", \"" + $formLayout + "\", \"" + $pFormLayout  + "\");klr_createParentList(\"\", \""+$pFormLayout+ "\",\"\", \"\");")`;

/*
			$iconTextButton03 = `iconTextButton
				-en 0
				-m 0
				-h 18
				-w 15
				-bgc .2 .7 1
				-al "left"
				-fn "plainLabelFont"
				-style "textOnly"
				-l  ("->") `;
*/
			$separator02  = `separator -h 1 -style "in" -bgc .45 .45 .45`;

		formLayout -e

			-af	$separator02  "right" 0
			-af	$separator02  "left" 0
			-af	$separator02  "bottom" 0

			-af	$iconTextButton01  "left" 0
			-af	$iconTextButton01  "right" 0
			-af	$iconTextButton01  "top" 0
			-ac	$iconTextButton01  "bottom" 0 $separator02

			-af	$iconTextButton02  "right" 0
			-af	$iconTextButton02  "top" 0
			-ac	$iconTextButton02  "bottom" 0 $separator02

/*
			-af	$iconTextButton03  "right" 0
			-af	$iconTextButton03  "top" 0
			-ac	$iconTextButton03  "bottom" 0 $separator02
*/
		$formLayout02;

		formLayout -e

			-af	$formLayout02  "left" 0
			-af	$formLayout02  "right" 0

		$formLayout;

		if ($i == 0) {
			formLayout -e

				-af 	$formLayout02  "top"  0

			$formLayout;
		}
		else if ($i > 0){
			formLayout -e

				-ac	$formLayout02  "top" 0 $formLayoutOld

			$formLayout;
		}

		$formLayoutOld = $formLayout02;
	}
	klr_fixWindowBug();
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_createParentList
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_createParentList (
	string $object,
	string $formLayout,
	string $cFormLayout,
	string $child)
{
	global float $gSelectedItemColor[], $gUnselectedItemColor[];
	global int $gParentListSelection, $klr_gIsWin;

	string  $formLayout03Old, $formLayoutOld, $separatorOld, $formLayouts[], $deleteFrameLayouts, $tmpAry[], $deleteArray[], $type, $typeOld, $time, $parent, $shortName;

    string $style, $image1, $image2, $label;

        if ($klr_gIsWin) {
            $style = "none";
            $label = " X";
            $image1 = "";
            $image2 = "";
        } else {
            $style = "out";
            $label = " ";
            $image2 = "mi-cross.xpm";
            $image1 = "verticalCloseBar.xpm";
          }

	for ($ui in  `klr_getlistFromFormLayout  $formLayout  1`)
		deleteUI $ui;

	string $list1[] = `klr_getParentLocFromChild $object $child`;

	if (`size $list1` > 0) {
		for ($i = 0; $i < `size $list1`;$i++) {
			$formLayout02 = `formLayout
				-en 1
				-p $formLayout
				-h 20
				-bgc .8 .8 .8`;

			$formLayouts[$i] = $formLayout02;
			$tmpAry[$i] = ("if (`formLayout -q -ex \"" + $formLayout02 + "\"`) deleteUI \"" + $formLayout02 + "\";");
		}

		for ($i = 0; $i < `size $list1`;$i++) {
			$deleteFrameLayouts += $tmpAry[`size $tmpAry`-$i] ;
			$deleteArray[$i] = $deleteFrameLayouts;
		}

		for ($i = 0; $i < `size $list1`;$i++) {
			$time = `getAttr ($list1[$i] + ".time")`;
			$parent = `getAttr ($list1[$i] + ".parent")`;
			$type = `getAttr ($list1[$i] + ".type")`;

			if ($type == "release")
				$shortName = ("Release");
			else
				$shortName = (klr_shortName($parent));

			setParent $formLayouts[$i];

			$iconTextButton01 = `iconTextButton
				-en 1
				-fn "plainLabelFont"
				-m 1
				-h 20
				-bgc .8 .8 .8
			    -marginWidth 5
				-image $image1
				-style "iconAndTextHorizontal"
				-l $shortName
				-c ("$gParentListSelection = 1; klr_selectItemInList(\"" + $formLayout +"\", \"" + $i +  "\", 0, \"" + $child + "\"); select \"" + $parent  + "\"")`;

			$iconTextButton02 = `iconTextButton
				-en 0
				-m 0
				-h 18
				-w 20
				-bgc .2 .7 1
				-al "left"
				-fn "plainLabelFont"
				-style "iconAndTextHorizontal"
			 	-image $image2
				-l  $label`;

			$textField00 = `textField
				-w 35
				-h 20
				-tx  $time
				-m 0`;

			$iconTextButton03 = `iconTextButton
				-en 1
				-w 35
				-fn "plainLabelFont"
				-m 1
				-h 20
				-bgc .9 .9 .9
				-al "left"
				-style "textOnly"
				-l  ($time)
				-c ""`;

			$iconTextButton04 = `iconTextButton
				-en 1
				-fn "plainLabelFont"
				-w 10
				-m 0
				-h 20
				-bgc .8 .8 .8
				-al "left"
				-style "textOnly"
				-l  ($type)
				-c ("")`;

			$separator01 = `separator -h 1 -style "in" -bgc .45 .45 .45`;
			$separator02  = `separator -h 1 -style "in" -bgc .45 .45 .45`;

			if ($i == 0)
				iconTextButton -e -c ("klr_removeChildGrp(\"" + $object + "\", \"" + $child + "\"); klr_createChildrenList(\"" + $object + "\", \"" + $cFormLayout + "\", \"" + $formLayout  + "\");klr_createParentList(\"\", \""+$formLayout+ "\",\"\", \"\");") $iconTextButton02;
			else
				iconTextButton -e -c ("klr_removeParentGrp(\"" + $object  + "\",\""+ $child + "\",\"" + $list1[$i] + "\"); " + $deleteArray[(size($list1)-$i)] + "; formLayout -e -af	\"" + $separatorOld + "\" \"right\" 0  -af  \"" + $formLayout03Old  + "\" \"bottom\" 1  \"" + $formLayouts[$i-1] + "\";")	$iconTextButton02;

			textField  -e -ec ("iconTextButton -e -m 1 " +  $iconTextButton03 + "; textField -e -m  0 " + $textField00 + ";") $textField00;
//	        if (`size $time`) iconTextButton -e  -c ("iconTextButton -e -m 0 " +  $iconTextButton03 + "; textField -e -m  1 " + $textField00 + ";") $iconTextButton03;

			if (`size $time`) {  iconTextButton -e  -c ("currentTime " + $time + "; $gParentListSelection = 1; klr_selectItemInList(\"" + $formLayout +"\", \"" + $i +  "\", 0, \"" + $child + "\"); select \"" + $parent  + "\"") $iconTextButton03; }



			$formLayout03 = `formLayout`;

			$separator03  = `separator -w 1 -style $style  -bgc .45 .45 .45`;

        string $separator04;

        if ($klr_gIsWin) {
            $separator04  = `separator -w 5 -h 9 -style "none"  -bgc $gSelectedItemColor[0]  $gSelectedItemColor[1]  $gSelectedItemColor[2]`;
        } else {
            $separator04 = 	`iconTextButton -w 5 -h 9 -en 1 -image "circleSolid.xpm"`;
        }

            $separator05  = `separator -w 1 -h 9 -style $style  -bgc .45 .45 .45`;
			$separator06 = `separator  -w 6 -h 1 -style $style  -bgc .45 .45 .45`;

			if ($type == "grab" && ($typeOld == "grab" || $typeOld == "parent")) {

				separator -e -m 0 $separator06;

				formLayout -e

					-af 	$separator03 "left" 0
					-af 	$separator03 "top" 0
					-af 	$separator03 "bottom" 0

					-ac 	$separator04 "left" 0 $separator03
					-af 	$separator04 "top" 0
					-af 	$separator04 "bottom" 0

					-ac 	$separator05 "left" 0 $separator04
					-af 	$separator05 "top" 0
					-af 	$separator05 "bottom" 0

				$formLayout03;

			}
			else if ($type == "release" && ($typeOld == "grab" || $typeOld == "parent")) {

				separator -e -m 1 $separator06;

				formLayout -e

					-af 	$separator03 "left" 0
					-af 	$separator03 "top" 0
					-af 	$separator03 "bottom" 0

					-ac 	$separator04 "left" 0 $separator03
					-af 	$separator04 "top" 0

					-ac 	$separator05 "left" 0 $separator04
					-af 	$separator05 "top" 0
					-af 	$separator05 "bottom" 0

					-ac  $separator06 "left" 0 $separator03
					-ac 	$separator06 "top" 0 $separator04

				$formLayout03;

			}
			else if ($type == "grab" && ($typeOld == "release" || $i == 0) ){

				separator -e -m 1 $separator06;

				formLayout -e

					-af 	$separator03 "left" 0
					-af 	$separator03 "top" 0
					-af 	$separator03 "bottom" 0

					-ac 	$separator04 "left" 0 $separator03
					-af 	$separator04 "bottom" 0

					-ac 	$separator05 "left" 0 $separator04
					-af 	$separator05 "top" 0
					-af 	$separator05 "bottom" 0

					-ac  $separator06 "left" 0 $separator03
					-ac 	$separator06 "bottom" 0 $separator04

				$formLayout03;

			}
			else if ($type == "parent") {

				separator -e -m 0 $separator06;

				formLayout -e

					-af 	$separator03 "left" 0
					-af 	$separator03 "top" 0
					-af 	$separator03 "bottom" 0

					-ac 	$separator04 "left" 0 $separator03
					-af 	$separator04 "top" 0
					-af 	$separator04 "bottom" 0

					-ac 	$separator05 "left" 0 $separator04
					-af 	$separator05 "top" 0
					-af 	$separator05 "bottom" 0

				$formLayout03;
			}

			if ($i == (`size $list1` - 1)) {

				formLayout -e

					-af	$separator01  "right" 0
					-af	$separator01  "left" 0
					-af	$separator01  "bottom" 0

					-af	$separator02  "right" 0
					-af	$separator02  "left" 0
					-af	$separator02  "bottom" 0

					-af	$formLayout03  "bottom" 1

				$formLayouts[$i];
			}
			else {

				formLayout -e
					-ac	$separator01  "right" 0 $formLayout03
					-af	$separator01  "left" 0
					-af	$separator01  "bottom" 0

					-af	$separator02  "right" 0
					-ac	$separator02  "left" 0 $formLayout03
					-af	$separator02  "bottom" 0

					-af	$formLayout03  "bottom" 0

				$formLayouts[$i];
			}

		formLayout -e

			-af	$iconTextButton03  "left" 0
			-af	$iconTextButton03  "top" 0
			-af	$iconTextButton03  "bottom" 1

			-af	$textField00  "left" 0
			-af	$textField00  "top" 0
			-af	$textField00  "bottom" 1

			-af	$formLayout03  "left" 35
			-af	$formLayout03  "top" 0

			-ac	$iconTextButton01  "left" 0 $formLayout03
			-af	$iconTextButton01  "right" 0
			-af	$iconTextButton01  "top" 0
			-af	$iconTextButton01  "bottom" 1

			-af	$iconTextButton02  "right" 0
			-af	$iconTextButton02  "top" 0
			-af	$iconTextButton02  "bottom" 1

		$formLayouts[$i];

		formLayout -e

			-af	$formLayouts[$i]  "left" 1
			-af	$formLayouts[$i]  "right" 1

		$formLayout;

		if ($i == 0) {

			formLayout -e

				-af 	$formLayouts[$i]  "top"  0

			$formLayout;
		}
		else if ($i > 0){

			formLayout -e

				-ac	$formLayouts[$i] "top" 0 $formLayoutOld

			$formLayout;
		}
		$formLayoutOld = $formLayouts[$i];
		$separatorOld = $separator01;
		$formLayout03Old = $formLayout03;
		$typeOld = $type;
		}
	}
		klr_fixWindowBug();
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_fixWindowBug
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_fixWindowBug()
{
	string $scrollLayout01 = "klr_childScrollLayoutUI";
	string $formLayout02 = "klr_childFormLayoutUI";
	string $scrollLayout02 = "klr_parentScrollLayoutUI";
	string $formLayout03 = "klr_parentFormLayoutUI";

	string $list[] = `klr_getlistFromFormLayout  $formLayout02 1`;
		int $height;
		for ($item in $list)
			$height += `formLayout -q -h $item`;

		if (`scrollLayout -q -h  $scrollLayout01` > $height)
			evalDeferred ("formLayout -e -h (`scrollLayout -q -h \"" + $scrollLayout01 + "\"` - 6 ) \"" + $formLayout02 + "\";") ;
		else
			evalDeferred ("formLayout -e -h " + $height + " \"" + $formLayout02 + "\";") ;

		evalDeferred ("formLayout -e -w (`scrollLayout -q -w \"" + $scrollLayout01+ "\"` - 20 ) \"" + $formLayout02 + "\";") ;

		$list = `klr_getlistFromFormLayout  $formLayout03 1`;
		$height  = 0;
		for ($item in $list)
			$height += `formLayout -q -h $item`;

		if (`scrollLayout -q -h  $scrollLayout02` > $height)
			evalDeferred ("formLayout -e -h (`scrollLayout -q -h \"" + $scrollLayout02 + "\"` - 6 ) \"" + $formLayout03 + "\";") ;
		else
			evalDeferred ("formLayout -e -h " + $height + " \"" + $formLayout03 + "\";") ;

	evalDeferred ("formLayout -e -w (`scrollLayout -q -w \"" + $scrollLayout02 + "\"` - 20 ) \"" + $formLayout03 + "\";") ;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_updateParentingGUI
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
global proc klr_updateParentingGUI(
	string $object,
	string $formLayout,
	string $formLayout2,
	int $mode)
{
	global int $gChildListSelection;
	global int $gParentListSelection;

	string $parents[], $buffer[], $buffer2[], $attrs[], $tmpAry[],$tmpAry2[], $list1[], $list2[];
	string $selected[] = `ls -l -sl`;
	string $plug, $connections[], $mConnections, $pConnections, $connections2[], $parentLocs[];
	int $alt;

	if ($mode) {
		$list1 = klr_getConstraintInfo($object, -1, 3);
		$list2 = klr_querySelectItemFromList($object, $formLayout , -1);
		if (`size $list1` !=  `size $list2` ) {
				evalDeferred("klr_createChildrenList(\""+ $object +"\", \"" + $formLayout  + "\", \"" + $formLayout2+ "\")");
				evalDeferred("klr_createParentList(\"" + $buffer[0] + "\", \"" + $formLayout2 + "\", \"" + $formLayout + "\", \"\")");
		}
	}

	if (`objExists ($plug = ($selected[0] + ".msg"))`) {
		if (size($connections = `listConnections -p 1 $plug`) >= 1) {

			for ($connection in $connections) {
				if (`match ".parent$" $connection` != "") {
					$pConnections = $connection;
					$alt = 1;
					break;
				}
			}
			for ($connection in $connections) {
					if (`match ($object + ".") $connection` != "")  {
						$mConnections = $connection;
						break;
					}
			}
			if ((!$alt || $gParentListSelection)){
				$tmpAry =(klr_querySelectItemFromList($buffer[0], $formLayout , 1));
				klr_selectItemInList($formLayout,$tmpAry[0], 1, $selected[0]);
			}
			tokenize $mConnections "." $buffer;

			if (`objExists $buffer[0]`){
				$attrs = `listAttr -ud $buffer[0]`;

				for ($i=0;$i<`size $attrs`;$i++){
					if ($attrs[$i] == $buffer[1]) {
                        if (!$mode) {
	                    	klr_updateAttrsFromMsgConnections($object);
	                    	klr_updateParentLocsFromMsgConnections();
                        }
						if ($gChildListSelection) {
						//	print "Child\n";
							evalDeferred("klr_createParentList(\"" + $buffer[0] + "\", \"" + $formLayout2 + "\", \"" + $formLayout + "\", `getAttr \"" + $mConnections + "\"`)");
							klr_selectItemInList( $formLayout, $i , 0, $selected[0]);
						}
						else if ($gParentListSelection) {
						//	print "Parent\n";
							$tmpAry =(klr_querySelectItemFromList($buffer[0], $formLayout , 1));
							if ($tmpAry[0] == ($i))
								klr_selectItemInList( $formLayout, $i , 0, $selected[0]);
						}
						else {
						//	print "GUI\n";
							evalDeferred("klr_createParentList(\"" + $buffer[0] + "\", \"" + $formLayout2 + "\", \"" + $formLayout + "\", `getAttr \"" + $mConnections + "\"`)");
							klr_selectItemInList( $formLayout, $i , 0, $selected[0]);
						}
					}
				}
			}
		}
		else {
			$tmpAry =(klr_querySelectItemFromList($buffer[0], $formLayout , 1));
			klr_selectItemInList($formLayout,$tmpAry[0], 1, $selected[0]);
		}
	}
	else {
		$tmpAry =(klr_querySelectItemFromList($buffer[0], $formLayout , 1));
		klr_selectItemInList($formLayout,$tmpAry[0], 1, $selected[0]);
	}
	$gChildListSelection = 0;
	$gParentListSelection = 0;
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getlistFromFormLayout
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_getlistFromFormLayout(
	string $formLayout,
	int $mode)
{
	string $result[], $tmpAry[];

	if (!`formLayout -q -ex $formLayout`)
		return $result;

	string $children[] = `formLayout -q -ca $formLayout`;

	switch($mode){
		case 1:
			return $children;
		break;
		case 2:
			for ($child in $children) {
				$tmpAry = `formLayout -q -ca $child`;
				$result[`size $result`] = $tmpAry[0];
			}
			return $result;
		break;
		case 3:
			for ($child in $children) {
				$tmpAry = `formLayout -q -ca $child`;
				$result[`size $result`] = $tmpAry[1];
			}
			return $result;
		break;
		case 4:
			for ($child in $children) {
				$tmpAry = `formLayout -q -ca $child`;
				$result[`size $result`] = ($child + "#" + $tmpAry[0] + "#" +  $tmpAry[1] + "#" + $tmpAry[2] + "#" + $tmpAry[3] + "#" + $tmpAry[4] );
			}
			return $result;
		break;
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_selectItemInList
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_selectItemInList (
	string $formLayout,
	string $index,
	int $mode,
	string $child)
{
	global float $gSelectedItemColor[], $gUnselectedItemColor[];

	string $list[] = `klr_getlistFromFormLayout $formLayout 4`;
	string $buffer[];

	int $x = 20;

    if ($index == "") {
        $index = 0;
    }

	for ($i=0; $i<`size $list`; $i++){
		tokenize $list[$i] "#" $buffer;
		if ($i == $index) {
			if (!$mode) {
				iconTextButton -e -bgc $gSelectedItemColor[0]  $gSelectedItemColor[1]  $gSelectedItemColor[2] $buffer[1];
				iconTextButton -e  -bgc $gSelectedItemColor[0]  $gSelectedItemColor[1]  $gSelectedItemColor[2] $buffer[2];
				if (`objectTypeUI $buffer[3]` == "iconTextButton")
					iconTextButton -e -bgc $gSelectedItemColor[0]  $gSelectedItemColor[1]  $gSelectedItemColor[2] $buffer[3];
			}
			else {
				iconTextButton -e -fn "plainLabelFont" -bgc .6 .6 .6 $buffer[1];
				iconTextButton -e  -bgc  .6 .6 .6  $buffer[2];
				if (`objectTypeUI $buffer[3]` == "iconTextButton")
					iconTextButton -e -bgc .6 .6 .6 $buffer[3];
			}
			iconTextButton -e -m 1 $buffer[1];
			iconTextButton -e -en 1 $buffer[1];

			iconTextButton -e -m 1 $buffer[2];
			iconTextButton -e -en 1 $buffer[2];

			if (`objectTypeUI $buffer[3]` == "iconTextButton") {
				iconTextButton -e -m 1 $buffer[3];
				iconTextButton -e -en 1 $buffer[3];
			}

			if (`objectTypeUI $buffer[3]` == "iconTextButton")
				$x = 40;

			formLayout -e

				-af $buffer[1] "right" $x

			$buffer[0];
		}
      else if ($i >= ((int)$index) && (`gmatch $formLayout "*|klr_parentScrollLayoutUI|*"`)) {
	        iconTextButton -e -bgc .65 .65 .65 $buffer[1];
             iconTextButton -e -bgc .65 .65 .65 $buffer[2];

			iconTextButton -e -m 1 $buffer[1];
			iconTextButton -e -en 1 $buffer[1];

			iconTextButton -e -m 0 $buffer[2];
			iconTextButton -e -en 0 $buffer[2];

			if (`objectTypeUI $buffer[3]` == "iconTextButton") {
				iconTextButton -e -m 0 $buffer[3];
				iconTextButton -e -en 0 $buffer[3];
            }

        formLayout -e

			-af $buffer[1] "right" 0

		$buffer[0];

        }
		else {
			iconTextButton -e -bgc .8 .8 .8 $buffer[1];
			iconTextButton -e -m 1 $buffer[1];
			iconTextButton -e -en 1 $buffer[1];

			iconTextButton -e -m 0 $buffer[2];
			iconTextButton -e -en 0 $buffer[2];

			if (`objectTypeUI $buffer[3]` == "iconTextButton") {
				iconTextButton -e -m 0 $buffer[3];
				iconTextButton -e -en 0 $buffer[3];
			}
            //else if (`objectTypeUI $buffer[3]` == "textField") {
			//	textField -e -m 0 $buffer[3];
			//}

		formLayout -e

			-af $buffer[1] "right" 0

		$buffer[0];
		}
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_querySelectItemFromList
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_querySelectItemFromList (
	string $object,
	string $formLayout,
	int $mode)
{
	string $list3[],$results[];

	$list1 = `klr_getlistFromFormLayout $formLayout 2`;
	$list2 = `klr_getlistFromFormLayout $formLayout 3`;
	$list3 = `klr_getConstraintInfo $object -1 1`;

	switch($mode){
		case 1:
			for ($i=0; $i<`size $list1`; $i++){
				if (`iconTextButton -q -m $list2[$i]`) {
					$results[`size $results`] = $i;
				}
			}
		break;
		case 2:
			for ($i=0; $i<`size $list3`; $i++){
				if (`iconTextButton -q -m $list2[$i]`) {
					$results[`size $results`] = $list3[$i];
				}
			}
		break;
		case 3:
			for ($i=0; $i<`size $list1`; $i++){
				if (`iconTextButton -q -m $list2[$i]`) {
					$results[`size $results`] = $i;
				}
			}
		break;
	}
	if ($mode  == -1) {
			for ($i=0; $i<`size $list1`; $i++){
					$results[`size $results`] = $i;
				}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getParentLocFromChild
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_getParentLocFromChild(
	string $object,
	string $child)
{
	string $grp, $children[], $results[];
	string $attr = klr_checkObjectInExistingNetwork($object, $child, 2);

	if (`objExists ($grp = ($attr + "_parenting_grp"))`) {
		$children = `listRelatives -c $grp`;
		for ($c in $children) {
			if (`match "^event[0-9]+_" $c` != "")
				$results[`size $results`] = $c;
		}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getParentLocFromList
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_getParentLocFromList (
	string $object,
	string $formLayout1,
	string $formLayout2,
	int $mode)
{
	string $results[],$child[], $parentLocs[];
	string $tmpAry[] = `klr_querySelectItemFromList $object $formLayout1 1`;
	string $tmpAry2[] = `klr_querySelectItemFromList $object $formLayout2 1`;

	if (`size $tmpAry2`) {

		$child = klr_getConstraintInfo("klr_parenting_grp", int($tmpAry[0]), 1);
		$parentLocs = sort(`klr_getParentLocFromChild $object $child[0]`);

		for ($i=0;$i<`size $parentLocs`;$i++) {
			switch ($mode) {
				case 1:
					if (int($tmpAry2[0]) == $i) {
						$results[`size $results`] = $parentLocs[$i];
					}
				break;
				case 2:
					if (int($tmpAry2[0]) <= $i) {
						$results[`size $results`] = $parentLocs[$i];
					}
				break;
				case 3:
					if (int($tmpAry2[0]) == ($i+1)) {
						$results[`size $results`] = $parentLocs[$i];
					}
				break;
			}
		}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getExtraOffsetGrp
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_getExtraOffsetGrp(
	string $object)
{
	string $result;
	if (!`objExists $object`)
		return "";

	string $list[] = `listRelatives -ad $object`;

	for ($item in $list) {
		if (`match "_extraOffset_" $item` != "")
			return $item;
	}
	return "";
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_removeChildGrp
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_removeChildGrp(
	string $object,
	string $child)
{
	string $grp, $cnst ;
	string $attr = klr_checkObjectInExistingNetwork($object, $child, 2);

	if (`objExists ($grp = ($attr + "_parenting_grp"))`) {
			if (`objExists ($cnst = ($attr + "_mainController_loc_parentConstraint1"))`) {
				delete $cnst ;
			}
		delete $grp;
		deleteAttr($object + "." + $attr);
	}
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_removeParentGrp
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_removeParentGrp(
	string $object,
	string $child,
	string $parent)
{
	string $attrs[], $pCon, $keyRange, $annotations[];
	int $index, $startFrame, $lastFrame, $a ;

	string $attr = klr_checkObjectInExistingNetwork($object, $child, 2);
	string $parents[] = `klr_getParentLocFromChild $object $child`;

	int $pairConnection = `klr_checkExistingConnnections $child`;

	for ($i=0; $i < `size $parents`; $i++) {
		if ($parents[$i] == $parent) {
			$index = $i;
			break;
		}
	}
	if (`objExists ($pCon = ($attr + "_parentCenter_con"))`) {
		$attrs = `listAttr -k -ud $pCon`;
		$attrs = stringArrayRemoveExact({"constraint"}, $attrs);

		$startFrame = `findKeyframe -time -10000 -which next ($pCon + "." + $attrs[($index)])`;
		$lastFrame = `findKeyframe -which last $pCon`;
		$keyRange = ($startFrame + ":" + $lastFrame);

		for ($i=0;$i<`size $attrs`;$i++){
			if (($i) >= ($index)){
				cutKey -time $keyRange -attribute $attrs[($i)-1] -option keys $pCon;
				cutKey -time $keyRange -attribute $attrs[($i)] -option keys $pCon;

				if ($pairConnection == 1 || $pairConnection == 2)
					cutKey -time ($lastFrame + ":" + $lastFrame) -option keys $child;

                if ($i!=1)
				    setAttr ($pCon + "." + $attrs[($i)]) 0;
                else {
                    //Bug Fix - if the only event left is a parent event switch it on!
                    setAttr ($pCon + "." + $attrs[0]) 1;
                }

				$annotations = `ls -tr -l ("event" + (($i)+1) + "_" + $attr + "_annotation_*" )`;
				if (`objExists ($annotations[0])`) {
					delete $annotations[0];
				}
				delete $parents[($i)];
			}
		}
		for ($k = (`size $attrs` - 1);$k >= $index;$k--) {
			if (`objExists ($pCon + "." + $attrs[($k)])`) {
				deleteAttr -attribute $attrs[($k)] $pCon;
			}
		}
		klr_switchConstraintOnOff($object, $child);
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_addAttrToParentingGrp
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_addAttrToParentingGrp(
	string $object,
	string $child,
	int $alt)
{
	string $list[];
	int $count;

	string $childName = klr_shortName($child);
	$childName = substituteAllString($childName, ":", "_");

	if (`objExists $object`) {
		$list = `klr_getConstraintInfo $object -1 1`;
		if (!`stringArrayCount $child $list` && !`size(klr_checkObjectInExistingNetwork($object, $child,2))`) {
			$count = stringArrayCount($childName, `klr_getConstraintInfo $object -1 2`);
			if (`size $childName`) {
				if ($count >= 1)
					$childName = ($childName + "_" + ($count + 1));
				if ($alt) {
					addAttr -ln $childName -dt "string" $object;
					setAttr -type "string" ($object + "." + $childName) $child;
					connectAttr -f  ($child + ".msg") ($object + "." + $childName);
				}
			}
		}
	}
	return $childName;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_shortName
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_shortName(
	string $longName)
{
	string $buffer[];
	tokenize $longName "|" $buffer;
	return $buffer[`size $buffer`-1];
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getConstraintInfo
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_getConstraintInfo(
	string $object,
	int $index,
	int $mode)
{
	string $results[];

	if (!`objExists $object`)
		return $results;

	string $attrs[] = `listAttr -ud $object`;

	for ($i=0; $i < `size $attrs`; $i++) {
		if (`objExists ($object + "." + $attrs[$i])`) {
			if (`objExists ($attrs[$i] + "_parenting_grp")`) {
				if ($index == -1 || $index == $i)
				switch($mode){
					case 1:
						$results[`size $results`] = `getAttr ($object + "." + $attrs[$i])`;
					break;
					case 2:
						$results[`size $results`] = klr_shortName(`getAttr ($object + "." + $attrs[$i])`);
					break;
					case 3:
						$results[`size $results`] = $attrs[$i];
					break;
				}
			} else
				deleteAttr ($object + "." + $attrs[$i]);
		}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_toggleAnnotations
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_toggleAnnotations(
	string $object,
	string $formLayout)
{
	string $annotationGrp;
	string $index[] = `klr_querySelectItemFromList $object $formLayout 1`;

	if ($index[0] == "")
		return;

	string $childName[] = `klr_getConstraintInfo $object (int($index[0])) 3`;

	if (`objExists ($annotationGrp = ($childName[0] + "_annotations_grp.visibility"))`)
		if (`getAttr $annotationGrp`)
			setAttr $annotationGrp 0;
		else
			setAttr $annotationGrp 1;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_rekeyChild
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_rekeyChild
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
global proc klr_rekeyChild (
	string $object,
	string $formLayout1,
	string $formLayout2)
{
	string $pCon, $wLoc, $rLoc, $offsetGrp, $preOffsetGrp, $cmd, $cmd2;
	float $findKey, $findNextKey, $findNextNextKey, $findPreviousKey;
	float $float;
	float $currentTime = `currentTime -q`;
	float $currentTimeNext;
	int $connectionType;
	string $list[] = `klr_getParentLocFromList $object $formLayout1 $formLayout2 2`;

        if (!`size $list`) {
        confirmDialog
            -title "warning.."
            -message ("Select an event from the UI list to Re-key!")
            -button "Oops.."
            -defaultButton "Oops.."
            -cancelButton "Oops.."
            -dismissString "Oops..";
        return;
    }

	string $tmpAry[] = `klr_getParentLocFromList $object $formLayout1 $formLayout2 3`;
	string $preParent = `klr_getExtraOffsetGrp $tmpAry[0]`;

	string $tmpAry[] = `klr_querySelectItemFromList $object $formLayout1 1`;
	string $childName[] = `klr_getConstraintInfo $object (int($tmpAry[0])) 3`;
	string $child[] = `klr_getConstraintInfo $object (int($tmpAry[0])) 1`;

	string $index[] = `klr_querySelectItemFromList $object $formLayout2 1`;

	if (!`objExists ($pCon = ($childName[0] + "_parentCenter_con"))`
	|| !`objExists ($wLoc = ($childName[0] + "_worldParent_loc"))`
	|| !`objExists ($rLoc = ($childName[0] + "_relativeParent_loc"))`) {
		error ":-)";
	}

	string $attrs[] = `listAttr -k -ud $pCon`;
	$attrs = stringArrayRemoveExact({"constraint"}, $attrs);

	$connectionType = `klr_checkExistingConnnections $child[0]`;

	for ($i=0;$i<`size $list`;$i++) {
		if (`getAttr ($list[$i]+".type")` == "parent") {
				if (($currentTime+1) > $findNextNextKey && $findNextKey  != $findNextNextKey ) {
				confirmDialog
					-title "warning.."
					-message ("Only a Grab or Release event can be Re-Keyed!")
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}
		}
		$offsetGrp = `klr_getExtraOffsetGrp $list[$i]`;

		$findKey = `findKeyframe -time -10000 -which next ($pCon + "." + $attrs[(int($index[0]) + $i)])`;
		$findNextKey = `findKeyframe -time $findKey -which next ($pCon + "." + $attrs[(int($index[0]) + $i)])`;
		$findNextNextKey = `findKeyframe -time $findNextKey -which next $pCon`;
		$findPreviousKey =  `findKeyframe -time $findKey -which previous $pCon`;

		if ($i == 0) {
				if (($currentTime+1) > $findNextNextKey && $findNextKey  != $findNextNextKey ) {
					confirmDialog
					-title "warning.."
					-message ("The next event is before the current time (Try re-keying before frame: " + ($findNextNextKey)  + ")!")
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}
			if (($currentTime-1) < $findPreviousKey && $findKey   != $findPreviousKey) {
					confirmDialog
					-title "warning.."
					-message ("The previous event is after the current time (Try re-keying after frame:  " + ($findPreviousKey+1) + ")!")
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}

			$currentTimeNext = int($currentTime+($findNextKey-$findKey));

			if ($connectionType == 1) {
				keyframe -e -t $findNextKey -option over -absolute -timeChange ($currentTimeNext-1) $child[0];
				$cmd = klr_rebuildConnectionToString($child[0], {"pairBlend", "parentConstraint"}, 1);
			}

			keyframe -e -t $findKey -option over -absolute -timeChange ($currentTime-1) $pCon;
			keyframe -e -t $findNextKey -option over -absolute -timeChange ($currentTimeNext -1) $pCon;
			$findNextKey = ($currentTimeNext-1);
		}

		currentTime $findNextKey;

		if ($i == 0 && `size $preParent` > 0) {
			delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 $offsetGrp;
            $cmd2 = klr_turnAttrsToSetKeys($child[0]);
			delete `parentConstraint $preParent $offsetGrp`;

			if ($connectionType == 1) {
                //print "1\n";
                //print  ($preParent + ".type\n");
                if (`getAttr ($preParent + ".type")` == "release") {
                    //  delete `parentConstraint  $offsetGrp $preParent`;

                    delete `parentConstraint  $child[0] $offsetGrp `;
                   $cmd2 = klr_turnAttrsToSetKeys($child[0]);
                    //print ($offsetGrp   + "\n");

             	} else {
                    delete `parentConstraint $preParent $offsetGrp`;
                    delete `parentConstraint $preParent $child[0]   `;
                    $cmd2 = klr_turnAttrsToSetKeys($child[0]);
               }
		    //	delete `parentConstraint $preParent  $child[0]`;
			//	$cmd2 = klr_turnAttrsToSetKeys($child[0]);
				eval $cmd;
				eval $cmd2;
			}
		}
		else if ($i == 0 && `size $preParent` == 0) {
			klr_unlockAndUnhideAttrs($wLoc);
			klr_unlockAndUnhideAttrs($rLoc);
			delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 $offsetGrp;
			delete `parentConstraint $wLoc $offsetGrp`;
			delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 $offsetGrp;
			delete `parentConstraint $rLoc $offsetGrp`;

			if ($connectionType == 1) {
				delete `parentConstraint $rLoc $child[0]`;
				$cmd2 = klr_turnAttrsToSetKeys($child[0]);
				eval $cmd;
				eval $cmd2;
			}
		}
		else {
			delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 $offsetGrp;
				if (`getAttr ($list[$i-1]+".type")` == "release") {
	    			delete `parentConstraint   $offsetGrp $preOffsetGrp`;
				} else
					delete `parentConstraint $preOffsetGrp $offsetGrp`;

			if ($connectionType == 1) {
				$cmd = klr_rebuildConnectionToString($child[0], {"pairBlend", "parentConstraint"}, 1);
				delete `parentConstraint $preOffsetGrp $child[0]`;
				$cmd2 = klr_turnAttrsToSetKeys($child[0]);
				eval $cmd;
				eval $cmd2;
			}
		}
		if (`objExists ($list[$i] + ".time")`)
			setAttr  ($list[$i] + ".time") -type "string" ($findNextKey);

		$preOffsetGrp = $offsetGrp;
	}
	currentTime $currentTime;
	klr_createParentList ($object, $formLayout2, $formLayout1, $child[0]);
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_turnAttrsToSetKeys
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_turnAttrsToSetKeys(
	string $object)
{
	string $result, $tmp;
	string $xyz[] = {"X", "Y", "Z"};

	for($i in $xyz) {
        $result += ("setAttr " + $object + ".translate" + $i  +  " " + `getAttr ($object + ".translate" + $i)` + ";");
         $result += ("setKeyframe " + $object + ".translate" + $i  +  "; ");

          $result += ("setAttr " + $object + ".rotate" + $i  +  " " + `getAttr ($object + ".rotate" + $i)` + ";");
         $result += ("setKeyframe " + $object + ".rotate" + $i  +  "; ");

	//	$result += ("setKeyframe -v " + `getAttr ($object + ".translate" + $i)` + " " + $object + ".translate" + $i + ";");
    //  $result += ("setKeyframe -v " + `getAttr ($object + ".rotate" + $i)` + " " + $object + ".rotate" + $i + ";");
	}
	return $result;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_rebuildConnectionToString
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_rebuildConnectionToString(
	string $object,
	string $types[],
	string $alt)
{
	string $connections[], $zs[], $results;
	string $nodeType;
	$connections = `listConnections -p 1 $object`;

	for ($i=0;$i<`size $connections`;$i++) {

		for ($type in $types) {
		 $nodeType = `nodeType $connections[$i]`;
		if (`gmatch $nodeType $type`  && size(`ls -ro $connections[$i]`) == 0) {
			$pairConnections = `listConnections -c 1 -p 1 $connections[$i]`;

			if (size(`listConnections -s 0 -p 1 $pairConnections[0]`)){
				if ($alt)
					eval ("disconnectAttr \"" + $pairConnections[0] + "\" \"" + $pairConnections[1] + "\";");
				$results +=  ("if (`objExists \"" +  $pairConnections[0]  + "\"` && `objExists \"" + $pairConnections[1] + "\"` ) catch(`connectAttr -f \"" + $pairConnections[0] + "\" \"" + $pairConnections[1] + "\"`);");
			}
			else	if (size(`listConnections -d 0 -p 1 $pairConnections[0]`)){
				if ($alt)
					eval ("disconnectAttr \"" + $pairConnections[1] + "\" \"" + $pairConnections[0] + "\";");
				$results += ("if (`objExists \"" +  $pairConnections[1]  + "\"` && `objExists \"" + $pairConnections[0] + "\"` ) catch(`connectAttr -f \"" + $pairConnections[1] + "\" \"" + $pairConnections[0] + "\"`);");
			}
		}
		}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_checkObjectInExistingNetwork
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_checkObjectInExistingNetwork(
	string $object,
	string $child,
	int $mode)
{
	string $connections[], $tmpAry[];

	string $ary1[] = klr_getConstraintInfo($object ,-1, 1);
	string $ary2[] = klr_getConstraintInfo($object ,-1, 2);
	string $ary3[] = klr_getConstraintInfo($object ,-1, 3);

	if (`objExists $object`) {
		for ($i=0; $i < `size $ary1`; $i++) {
			if (size(`listConnections ($object  + "." + $ary3[$i])`)) {
				$connections = `listConnections ($object  + "." + $ary3[$i])`;
				$tmpAry = `ls -l $connections[0]`;
				$ary1[$i] = $tmpAry[0];
			}
			if (`gmatch $ary1[$i] $child`) {
				if ($mode == 1)
					return $ary2[$i];
				if ($mode == 2)
					return $ary3[$i];
			}
		}
	}
	return "";
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_updateAttrsFromMsgConnections
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_updateAttrsFromMsgConnections(
	string $object)
{
	string $connections[], $plugs[], $lon;
	string $listAttr[] = `klr_getConstraintInfo $object -1 3`;

	if (!`objExists $object`)
		return;
	for ($attr in $listAttr) {
		if (size(`listConnections ($object  + "." + $attr)`)) {
			$connections = `listConnections ($object  + "." + $attr)`;
			$plugs = `listConnections -p 1 ($object  + "." + $attr)`;
			$tmpAry = `ls -l $connections[0]`;
			if (`size $tmpAry` == 1)
				$connections[0] = $tmpAry[0];

			disconnectAttr $plugs[0] ($object  + "." + $attr);
			setAttr -type "string" ($object  + "." + $attr) $connections[0];
			connectAttr $plugs[0] ($object  + "." + $attr);
		}
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_updateParentLocsFromMsgConnections
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_updateParentLocsFromMsgConnections()
{
	string $connections[],$tmpAry[], $plugs[];
	string $parentLocs[] = `ls -tr -l "event*_*_*_loc_*"`;

	for ($i=0; $i<`size $parentLocs`; $i++) {
		if (`objExists ($parentLocs[$i] + ".parent")`) {
			if (size($connections = `listConnections ($parentLocs[$i] + ".parent")`)) {
				$plugs = `listConnections -p 1  ($parentLocs[$i] + ".parent")`;

				$tmpAry = `ls -l $connections[0]`;
				if (`size $tmpAry` == 1)
					$connections[0] = $tmpAry[0];

				disconnectAttr $plugs[0] ($parentLocs[$i] + ".parent");
				setAttr -type "string" ($parentLocs[$i] + ".parent") $connections[0];
				connectAttr $plugs[0] ($parentLocs[$i] + ".parent");
			}
		}
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_parentObects
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_parentObects (
	int $switch)
{
	string $check[], $allSourceConnection[], $tempStringArray[], $listAttr[];
	string $result, $returnStr, $tag, $extra, $parenting, $axis, $j, $index,
    $tempString, $getAttr;

	float $tempFloat[];

	int $i, $manual, $tempStringSize, $attrSize, $indexNumber, $tempInt=0;

	string $selection[] = `ls -l -sl`;
	string $d = ": ";
	string $object = "klr_parenting_grp";

// - - - - - Selection Check - - - -
	string $childName;

	if (`objExists $object`)
		$childName = klr_checkObjectInExistingNetwork($object, $selection[0], 2);

	if (!`size $childName`)
		$childName = `substitute ":" (klr_addAttrToParentingGrp($object, $selection[0], 0)) "_"`;

	string $parentName = `substitute ":" (klr_shortName($selection[1])) "_"`;

	string $child = $selection[0] ;
	string $parent = $selection[1];

	if (`size($selection)`<1 && $switch) {
		confirmDialog
			-title "warning.."
            -ma "center"
			-message "Select the Child 1st and Parent 2nd!\nRelease event requires only the Child to be selected "
			-button "Oops.."
			-defaultButton "Oops.."
			-cancelButton "Oops.."
			-dismissString "Oops..";
		return;
	} else if (`size($selection)`<1 && !$switch) {
        confirmDialog
			-title "warning.."
            -ma "center"
			-message "Select the Child 1st and Parent 2nd!"
			-button "Oops.."
			-defaultButton "Oops.."
			-cancelButton "Oops.."
			-dismissString "Oops..";
		return;
    }

	string $wLoc = ($childName + "_worldParent_loc");
	string $rLoc =  ($childName + "_relativeParent_loc");
	string $rGrp = ($childName + "_relativeParent_grp");

	if (((`size($selection)`)==1)&&($switch==1) && `objExists $wLoc`) {

		$tmp =`radioCollection -q -sl  "klr_releaseFunctionRadioCollection"`;

		if ($tmp == "klr_releaseWorldOption") {
			$parent = $wLoc;
			$parentName =  ($childName);
		} else {
			$parent = $rLoc;
			$parentName =  ($childName);
		}
	}
	else if (((`size($selection)`)==1)&&($switch==1)) {
		confirmDialog
			-title "warning.."
			-message "Select only the child when trying to Release!"
			-button "Oops.."
			-defaultButton "Oops.."
			-cancelButton "Oops.."
			-dismissString "Oops..";
		return;
	}
	else if ((`size($selection)`) != 2) {
		confirmDialog
			-title "warning.."
			-message "Select two objects: Child 1st Parent 2nd"
			-button "Oops.."
			-defaultButton "Oops.."
			-cancelButton "Oops.."
			-dismissString "Oops..";
		return;
	}

	string $tmpAry[] = `klr_getParentLocFromChild $object $child`;

	if (`size $tmpAry`) {
		if (`objExists ($tmp = $tmpAry[size($tmpAry)-1] + ".type")`) {
            if ((`getAttr $tmp`) == "parent" && !$switch)  {
				$returnStr = `confirmDialog
					-title "warning.."
                    -ma "center"
					-message "This is not Recommended!\nUsing multiple Parent Events will switch the network to manual mode! Try using  \"grab/release\" instead!"
					-button "Manual"
                    -button "Cancel"
					-defaultButton "Cancel"
					-cancelButton "Cancel"
					-dismissString "Cancel"`;
                if ($returnStr == "Cancel")
				    return;
                else
                    $manual = 1;
            }
			if ((`getAttr $tmp`) == "release" &&  `size($selection)`==1 && $switch == 1) {
				confirmDialog
					-title "warning.."
					-message "Child is already released! You can change the release point using the Re-Key function!"
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}
			else if (((`getAttr $tmp`) == "release" || (`getAttr $tmp`) == "grab" ) &&  $switch==0) {
				confirmDialog
					-title "warning.."
					-message "Once a grab/release is used the Parent option is no longer needed"
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}
		}
		if (`objExists ($tmp = $tmpAry[size($tmpAry)-1] + ".time")`) {
		 	if ((int(`getAttr $tmp`)) >= (`currentTime -q`-1)) {
				confirmDialog
					-title "warning.."
					-message ("An event already exists beond the current time (Try Creating an event after frame: " +(float(`getAttr $tmp`)+1) + ")!")
					-button "Oops.."
					-defaultButton "Oops.."
					-cancelButton "Oops.."
					-dismissString "Oops..";
				return;
			}
		}
	}

// - - - - - Check For Clean Channels xyz..ect - - - -

	if (`klr_checkExistingConnnections $child` == 3) {

		$returnStr = `confirmDialog
			-title "warning.."
			-message  ($child+" is already connected to another parentConstrint or somthing else")
			-button "Oops..."
			-defaultButton "Oops..."
			-cancelButton "Oops..."
			-dismissString "Oops..."`;
		return;
	}
	else if (`klr_checkExistingConnnections $child` == 2)
		$returnStr = `confirmDialog
			-title "warning.."
			-ma "center"
			-message  ("\"" + $child + "\" is controlled by animation!")
			-button "Blend With Existing Animation?"
			-button "Delete Existing Animation?"
			-button "Cancel"
			-defaultButton "Cancel"
			-cancelButton "Cancel"
			-dismissString "Cancel"`;
		if ($returnStr == "Cancel")
			return;

	else if ($returnStr == "Delete Existing Animation?") {
		delete -staticChannels -unitlessAnimationCurves false -hierarchy 0 -controlPoints 0 -shape 0 $child;
		delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 $child;
	}
	else if ($returnStr == "Cancel") {
		return;
	}

//	Check existing parent loc

	string $type, $tmpAry[], $ann, $annTrans, $annText;

	int $color;

	if (`size($selection)`==1&&$switch==1) {
		$type = "release";
		$annText = "Released";
		$color = 14;
	}
	else if  (`size($selection)`==2&&$switch==1) {
		$type = "grab";
		$annText = "Constrained";
		$color = 17;
	}
	else {
		$type = "parent";
		$annText = "Constrained";
		$color = 17;
	}

// - - - - - Check For Existing Parent Events - - - -

optionVar -intValue animBlendingOpt 1;

// DO - CREATE NODE HIERARCHY

//Needs - Nothing

	string $mGrp, $mLoc, $pGrp, $cGrp, $pCon, $rLoc, $pLocGrp, $pOffsetGrp, $pLocOffsetGrp, $rLocCsnt;

	string $curve, $curveShapes[], $tmpArray[];

	int $e = 0;

// Create Main Parenting Grp

	$mGrp = ("klr_parenting_grp");

	if (!`objExists $mGrp`)
		$mGrp = `createNode -n $mGrp transform`;

	 klr_addAttrToParentingGrp($object, $child, 1);

// +CCreate & Parent - Parenting Grp

	$pGrp = ($childName + "_parenting_grp");

	if (!`objExists $pGrp`) {
		$pGrp = `createNode -n $pGrp transform`;
		parent $pGrp $mGrp;
	}

// ++Create & Parent - Constraint Grp

	$cGrp =  ($childName + "_constraint_grp");

	if (!`objExists $cGrp`) {
		$cGrp = `createNode -n $cGrp transform`;
		parent $cGrp $pGrp;
	}

// ++Create & Parent - Parent Control Center

	$pCon = ($childName + "_parentCenter_con");

	if (!`objExists $pCon`) {

		curve -d 1 -p 0 1.323072 0 -p 0.707107 -0.00632852 -0.707107 -p 0.707107 -0.00632852 0.707107 -p -0.707107 -0.00632852 0.707107 -p -0.707107 -0.00632852 -0.707107 -p 0.707107 -0.00632852 -0.707107 -p 0.707107 -0.00632852 0.707107 -p 0 1.323072 0 -p -0.707107 -0.00632852 0.707107 -p -0.707107 -0.00632852 -0.707107 -p 0 1.323072 0 -p 0.707107 -0.00632852 0.707107 -p 0 -1.3361 0 -p 0.707107 -0.00632852 -0.707107 -p -0.707107 -0.00632852 -0.707107 -p 0 -1.3361 0 -p -0.707107 -0.00632852 0.707107 -p 0.707107 -0.00632852 0.707107 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17
			-n $pCon;

		setAttr ($pCon + ".overrideEnabled") 1;
		setAttr ($pCon + ".overrideColor") 17;

		$tmpArray = `listRelatives -s $pCon`;
		rename $tmpArray[0] ($pCon+"Shape");

		$tmpArray = `parentConstraint $child $pCon`;
		parent  $tmpArray[0] $cGrp;

        klr_lockAndHideAttrs($pCon);
	}
    if ($manual) {
         setAttr ($pCon + ".visibility") 1;
    }

// ++Create & Parent - Relative Locator

	if (!`objExists $rGrp`) {

		$rGrp = `createNode -n $rGrp transform`;

		curve -d 3 -p 0 0 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 0 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0.261555 0 -0.975827 -p 0.505062 0 -0.874954 -p 0.715663 0 -0.715665 -p 0.874957 0 -0.505062 -p 0.975821 0 -0.261556 -p 1.012101 0 2.18818e-007 -p 0.975821 0 0.261555 -p 0.874957 0 0.505062 -p 0.715663 0 0.715663 -p 0.505062 0 0.874957 -p 0.261555 0 0.975821 -p 0 0 1.012101 -p -0.261555 0 0.975821 -p -0.505062 0 0.874957 -p -0.715663 0 0.715663 -p -0.874957 0 0.505062 -p -0.975821 0 0.261555 -p -1.012101 0 2.18818e-007 -p -0.975821 0 -0.261556 -p -0.874957 0 -0.505062 -p -0.715663 0 -0.715665 -p -0.505062 0 -0.874954 -p -0.261555 0 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 -0.261555 -0.975827 -p 0 -0.505062 -0.874954 -p 0 -0.715663 -0.715665 -p 0 -0.874957 -0.505062 -p 0 -0.975821 -0.261556 -p 0 -1.012101 2.18818e-007 -p 0 -0.975821 0.261555 -p 0 -0.874957 0.505062 -p 0 -0.715663 0.715663 -p 0 -0.505062 0.874957 -p 0 -0.261555 0.975821 -p 0 0 1.012101 -p 0 0.261555 0.975821 -p 0 0.505062 0.874957 -p 0 0.715663 0.715663 -p 0 0.874957 0.505062 -p 0 0.975821 0.261555 -p 0 1.012101 2.18818e-007 -p 0 0.975821 -0.261556 -p 0 0.874957 -0.505062 -p 0 0.715663 -0.715665 -p 0 0.505062 -0.874954 -p 0 0.261555 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 0.975827 -0.261555 0 -p 0.874954 -0.505062 0 -p 0.715665 -0.715663 0 -p 0.505062 -0.874957 0 -p 0.261556 -0.975821 0 -p 0 -1.012101 2.18818e-007 -p -0.261555 -0.975821 0 -p -0.505062 -0.874957 0 -p -0.715663 -0.715663 0 -p -0.874957 -0.505062 0 -p -0.975821 -0.261555 0 -p -1.012101 0 2.18818e-007 -p -0.975821 0.261555 0 -p -0.874957 0.505062 0 -p -0.715663 0.715663 0 -p -0.505062 0.874957 0 -p -0.261555 0.975821 0 -p 0 1.012101 2.18818e-007 -p 0.261556 0.975821 0 -p 0.505062 0.874957 0 -p 0.715665 0.715663 0 -p 0.874954 0.505062 0 -p 0.975827 0.261555 0 -p 1.012101 0 2.18818e-007 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 -k 91 -k 92 -k 93 -k 94 -k 95 -k 96 -k 97 -k 98 -k 99 -k 100 -k 101 -k 102 -k 103 -k 104 -k 105 -k 106 -k 107 -k 108 -k 109 -k 109 -k 109
			-n $rLoc;

		parent $rLoc $rGrp;

		setAttr ($rLoc + ".overrideEnabled") 1;
		setAttr ($rLoc + ".overrideColor") 18;

		scale .2 .2 .2 $rLoc;
		makeIdentity -apply true -t 0 -r 0 -s 1 -n 0 $rLoc;

		$list = `listRelatives -p $child`;

		if (`size $list`)
			if (`nodeType $list[0]` =="transform")
				parentConstraint $list[0] $rGrp;

		delete`parentConstraint $pCon $rLoc`;
		klr_lockAndHideAttrs($rGrp);

	}

// ++Create & Parent - World Locator

	if (!`objExists $wLoc`) {

		curve -d 3 -p 0 0 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 0 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0.261555 0 -0.975827 -p 0.505062 0 -0.874954 -p 0.715663 0 -0.715665 -p 0.874957 0 -0.505062 -p 0.975821 0 -0.261556 -p 1.012101 0 2.18818e-007 -p 0.975821 0 0.261555 -p 0.874957 0 0.505062 -p 0.715663 0 0.715663 -p 0.505062 0 0.874957 -p 0.261555 0 0.975821 -p 0 0 1.012101 -p -0.261555 0 0.975821 -p -0.505062 0 0.874957 -p -0.715663 0 0.715663 -p -0.874957 0 0.505062 -p -0.975821 0 0.261555 -p -1.012101 0 2.18818e-007 -p -0.975821 0 -0.261556 -p -0.874957 0 -0.505062 -p -0.715663 0 -0.715665 -p -0.505062 0 -0.874954 -p -0.261555 0 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 -0.261555 -0.975827 -p 0 -0.505062 -0.874954 -p 0 -0.715663 -0.715665 -p 0 -0.874957 -0.505062 -p 0 -0.975821 -0.261556 -p 0 -1.012101 2.18818e-007 -p 0 -0.975821 0.261555 -p 0 -0.874957 0.505062 -p 0 -0.715663 0.715663 -p 0 -0.505062 0.874957 -p 0 -0.261555 0.975821 -p 0 0 1.012101 -p 0 0.261555 0.975821 -p 0 0.505062 0.874957 -p 0 0.715663 0.715663 -p 0 0.874957 0.505062 -p 0 0.975821 0.261555 -p 0 1.012101 2.18818e-007 -p 0 0.975821 -0.261556 -p 0 0.874957 -0.505062 -p 0 0.715663 -0.715665 -p 0 0.505062 -0.874954 -p 0 0.261555 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 0.975827 -0.261555 0 -p 0.874954 -0.505062 0 -p 0.715665 -0.715663 0 -p 0.505062 -0.874957 0 -p 0.261556 -0.975821 0 -p 0 -1.012101 2.18818e-007 -p -0.261555 -0.975821 0 -p -0.505062 -0.874957 0 -p -0.715663 -0.715663 0 -p -0.874957 -0.505062 0 -p -0.975821 -0.261555 0 -p -1.012101 0 2.18818e-007 -p -0.975821 0.261555 0 -p -0.874957 0.505062 0 -p -0.715663 0.715663 0 -p -0.505062 0.874957 0 -p -0.261555 0.975821 0 -p 0 1.012101 2.18818e-007 -p 0.261556 0.975821 0 -p 0.505062 0.874957 0 -p 0.715665 0.715663 0 -p 0.874954 0.505062 0 -p 0.975827 0.261555 0 -p 1.012101 0 2.18818e-007 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 -k 91 -k 92 -k 93 -k 94 -k 95 -k 96 -k 97 -k 98 -k 99 -k 100 -k 101 -k 102 -k 103 -k 104 -k 105 -k 106 -k 107 -k 108 -k 109 -k 109 -k 109
			-n $wLoc;

		setAttr ($wLoc + ".overrideEnabled") 1;
		setAttr ($wLoc + ".overrideColor") 18;

		scale .2 .2 .2 $wLoc;
		makeIdentity -apply true -t 0 -r 0 -s 1 -n 0 $wLoc;
		delete`parentConstraint $pCon $wLoc`;
		klr_lockAndHideAttrs($wLoc);
	}
   // if ($manual)
   //    setAttr ($wLoc + ".visibility") 1;

//	Check existing parent loc

	$tmpArray = `listRelatives -c $pGrp`;

	$e = 1;
	for ($tmp in $tmpArray)
		if (`match "^event[0-9]+_" $tmp` != "")
			$e++;

	string $n;
	for ($i=1;$i<1000;$i++) {

		if (!`objExists ("event" + $e + "_" + $parentName + "_*_loc_" + (klr_pNumberPadding($i, 3, "0")))`) {
			$n = ("_" + (klr_pNumberPadding($i, 3, "0")));
			break;
		}
	}
	if ($n == "")
		$n = "_001";

// ++Create Annotation

	$aGrp =  ($childName + "_annotations_grp");

	string $annotation = ("event" + $e + "_" +$childName + "_annotation" + $n);

	if (!`objExists $aGrp`) {
		$aGrp = `createNode -n $aGrp transform`;
		parent $aGrp $pGrp;
		parentConstraint $pCon $aGrp;
		setAttr ($aGrp + ".visibility") 0;
	}

	$ann = `annotate -tx ":-)" -p 0 0 0 $child`;
	$tmpAry = `listRelatives -p $ann`;

	setAttr ($ann + ".displayArrow") 0;
	setAttr  ($ann + ".overrideEnabled") 1;
	setAttr  ($ann + ".overrideColor") $color;

	$ann = `rename $ann ($annotation + "Shape")`;
	$annTrans = `rename $tmpAry[0] $annotation`;

	delete`parentConstraint $child $annTrans`;
	parent $annTrans $aGrp;

	setAttr -type "string" ($ann  + ".text") $annText;

// Main Control locator

	$mLoc = ($childName + "_mainController_loc");

	if (!`objExists $mLoc`) {
			curve -d 3 -p 0 0 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 0 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0.261555 0 -0.975827 -p 0.505062 0 -0.874954 -p 0.715663 0 -0.715665 -p 0.874957 0 -0.505062 -p 0.975821 0 -0.261556 -p 1.012101 0 2.18818e-007 -p 0.975821 0 0.261555 -p 0.874957 0 0.505062 -p 0.715663 0 0.715663 -p 0.505062 0 0.874957 -p 0.261555 0 0.975821 -p 0 0 1.012101 -p -0.261555 0 0.975821 -p -0.505062 0 0.874957 -p -0.715663 0 0.715663 -p -0.874957 0 0.505062 -p -0.975821 0 0.261555 -p -1.012101 0 2.18818e-007 -p -0.975821 0 -0.261556 -p -0.874957 0 -0.505062 -p -0.715663 0 -0.715665 -p -0.505062 0 -0.874954 -p -0.261555 0 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 -0.261555 -0.975827 -p 0 -0.505062 -0.874954 -p 0 -0.715663 -0.715665 -p 0 -0.874957 -0.505062 -p 0 -0.975821 -0.261556 -p 0 -1.012101 2.18818e-007 -p 0 -0.975821 0.261555 -p 0 -0.874957 0.505062 -p 0 -0.715663 0.715663 -p 0 -0.505062 0.874957 -p 0 -0.261555 0.975821 -p 0 0 1.012101 -p 0 0.261555 0.975821 -p 0 0.505062 0.874957 -p 0 0.715663 0.715663 -p 0 0.874957 0.505062 -p 0 0.975821 0.261555 -p 0 1.012101 2.18818e-007 -p 0 0.975821 -0.261556 -p 0 0.874957 -0.505062 -p 0 0.715663 -0.715665 -p 0 0.505062 -0.874954 -p 0 0.261555 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 0.975827 -0.261555 0 -p 0.874954 -0.505062 0 -p 0.715665 -0.715663 0 -p 0.505062 -0.874957 0 -p 0.261556 -0.975821 0 -p 0 -1.012101 2.18818e-007 -p -0.261555 -0.975821 0 -p -0.505062 -0.874957 0 -p -0.715663 -0.715663 0 -p -0.874957 -0.505062 0 -p -0.975821 -0.261555 0 -p -1.012101 0 2.18818e-007 -p -0.975821 0.261555 0 -p -0.874957 0.505062 0 -p -0.715663 0.715663 0 -p -0.505062 0.874957 0 -p -0.261555 0.975821 0 -p 0 1.012101 2.18818e-007 -p 0.261556 0.975821 0 -p 0.505062 0.874957 0 -p 0.715665 0.715663 0 -p 0.874954 0.505062 0 -p 0.975827 0.261555 0 -p 1.012101 0 2.18818e-007 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 -k 91 -k 92 -k 93 -k 94 -k 95 -k 96 -k 97 -k 98 -k 99 -k 100 -k 101 -k 102 -k 103 -k 104 -k 105 -k 106 -k 107 -k 108 -k 109 -k 109 -k 109
			-n $mLoc;
		delete`parentConstraint $child $mLoc`;
		$tmpArray = eval (klr_createParentConstraintStr({$mLoc}, $child));
		setAttr ($mLoc + ".v") 0;
		setAttr ($mLoc + ".overrideEnabled") 1;
		setAttr ($mLoc + ".overrideColor") 6;

		parent $tmpArray[0] $cGrp;
		rename $tmpArray[0] ($mLoc + "_parentConstraint1");
	}

	if ($e == 1) {
		parent $rGrp $pGrp;
		parent $mLoc $pGrp;
		parent $pCon $pGrp;
		parent $wLoc $pGrp;
	}

// ++Create & Parent - Parent Locator

	$pLocGrp =  ("event" + $e + "_" + $parentName + "_" + $type +"_loc" + $n);

	$tmpAry = `spaceLocator -n $pLocGrp`;

    if (`objExists ($tmpAry[0]  + "Shape")`) {
        setAttr ($tmpAry[0]  + "Shape.overrideDisplayType") 2;
        setAttr ($tmpAry[0]  + "Shape.overrideEnabled") 1;
    }
	delete(`parentConstraint $child $pLocGrp`);
	eval (klr_createParentConstraintStr({$parent}, $pLocGrp));
	parent $pLocGrp $pGrp;

	addAttr -ln "type" -dt "string"  $pLocGrp;
	setAttr -type "string" ($pLocGrp + ".type") $type;

		addAttr -ln "time" -dt "string"  $pLocGrp;
	if ($type != "parent")
		setAttr -type "string" ($pLocGrp + ".time") `currentTime -q`;

	addAttr -ln "parent" -dt "string"  $pLocGrp;
	if ($type == "release") {
		setAttr -type "string" ($pLocGrp + ".parent") $child;
		connectAttr -f  ($child + ".msg") ($pLocGrp + ".parent");
	}
	else {
		setAttr -type "string" ($pLocGrp + ".parent") $parent;
		connectAttr -f  ($parent + ".msg") ($pLocGrp + ".parent");
	}

	klr_lockAndHideAttrs($pLocGrp);

// +++Create & Parent - Extra Offset

	$pExOffsetGrp = ("event" + $e + "_" + $parentName + "_extraOffset_grp" + $n);

	$pExOffsetGrp = `createNode -n $pExOffsetGrp transform`;
	parent $pExOffsetGrp $pLocGrp;

    addAttr -ln "type" -dt "string"  $pExOffsetGrp;
	setAttr -type "string" ($pExOffsetGrp + ".type") $type;

// +++Create & Parent - Offset Locator

	$pLocOffsetGrp = ("event" + $e + "_" + $parentName + "_offset_loc" + $n);

	$curve = `curve -d 3 -p 0 0 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 -1.511203 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p -1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 1.511203 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 1.511203 -p 0 0 0 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.511203 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0.261555 0 -0.975827 -p 0.505062 0 -0.874954 -p 0.715663 0 -0.715665 -p 0.874957 0 -0.505062 -p 0.975821 0 -0.261556 -p 1.012101 0 2.18818e-007 -p 0.975821 0 0.261555 -p 0.874957 0 0.505062 -p 0.715663 0 0.715663 -p 0.505062 0 0.874957 -p 0.261555 0 0.975821 -p 0 0 1.012101 -p -0.261555 0 0.975821 -p -0.505062 0 0.874957 -p -0.715663 0 0.715663 -p -0.874957 0 0.505062 -p -0.975821 0 0.261555 -p -1.012101 0 2.18818e-007 -p -0.975821 0 -0.261556 -p -0.874957 0 -0.505062 -p -0.715663 0 -0.715665 -p -0.505062 0 -0.874954 -p -0.261555 0 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 -0.261555 -0.975827 -p 0 -0.505062 -0.874954 -p 0 -0.715663 -0.715665 -p 0 -0.874957 -0.505062 -p 0 -0.975821 -0.261556 -p 0 -1.012101 2.18818e-007 -p 0 -0.975821 0.261555 -p 0 -0.874957 0.505062 -p 0 -0.715663 0.715663 -p 0 -0.505062 0.874957 -p 0 -0.261555 0.975821 -p 0 0 1.012101 -p 0 0.261555 0.975821 -p 0 0.505062 0.874957 -p 0 0.715663 0.715663 -p 0 0.874957 0.505062 -p 0 0.975821 0.261555 -p 0 1.012101 2.18818e-007 -p 0 0.975821 -0.261556 -p 0 0.874957 -0.505062 -p 0 0.715663 -0.715665 -p 0 0.505062 -0.874954 -p 0 0.261555 -0.975827 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 -1.012087 -p 0 0 0 -p 0 0 0 -p 0 0 0 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 1.012101 0 2.18818e-007 -p 0.975827 -0.261555 0 -p 0.874954 -0.505062 0 -p 0.715665 -0.715663 0 -p 0.505062 -0.874957 0 -p 0.261556 -0.975821 0 -p 0 -1.012101 2.18818e-007 -p -0.261555 -0.975821 0 -p -0.505062 -0.874957 0 -p -0.715663 -0.715663 0 -p -0.874957 -0.505062 0 -p -0.975821 -0.261555 0 -p -1.012101 0 2.18818e-007 -p -0.975821 0.261555 0 -p -0.874957 0.505062 0 -p -0.715663 0.715663 0 -p -0.505062 0.874957 0 -p -0.261555 0.975821 0 -p 0 1.012101 2.18818e-007 -p 0.261556 0.975821 0 -p 0.505062 0.874957 0 -p 0.715665 0.715663 0 -p 0.874954 0.505062 0 -p 0.975827 0.261555 0 -p 1.012101 0 2.18818e-007 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 -k 91 -k 92 -k 93 -k 94 -k 95 -k 96 -k 97 -k 98 -k 99 -k 100 -k 101 -k 102 -k 103 -k 104 -k 105 -k 106 -k 107 -k 108 -k 109 -k 109 -k 109
		-n $pLocOffsetGrp`;

	setAttr ($pLocOffsetGrp + ".overrideEnabled") 1;
	setAttr ($pLocOffsetGrp + ".overrideColor") 17;

	$curveShapes = `listRelatives -s $pLocOffsetGrp`;
	rename $curveShapes[0] ($pLocOffsetGrp+"Shape");
	scale .2 .2 .2 $pLocOffsetGrp;
	makeIdentity -apply true -t 0 -r 0 -s 1 -n 0 $pLocOffsetGrp;

 // +++ Event? - Create locator & annotation -

 //annotationLocator1Shape.worldMatrix from annotationShape1dagObjectMatrix

    string $ann2, $annTrans2;
    string $annotation2 = ("event" + $e + "B_" +$childName + "_annotation_" + $n);

    $ann2 = `annotate -tx ":-)" -p 0 0 0 $child`;
	$tmpAry = `listRelatives -p $ann2`;

	setAttr ($ann2 + ".displayArrow") 1;
	setAttr  ($ann2 + ".overrideEnabled") 1;
	setAttr  ($ann2 + ".overrideColor") $color;

	$ann2 = `rename $ann2 ($annotation2 + "Shape")`;
	$annTrans2 = `rename $tmpAry[0] $annotation2`;

	delete`parentConstraint $child $annTrans2`;
	parentConstraint  $pLocOffsetGrp $annTrans2;
    parent  $annTrans2 $pLocGrp;

    setAttr ($ann2  + ".overrideDisplayType") 2;
	setAttr -type "string" ($ann2  + ".text") ("Event" + $e);

// string pairBlend

	if (`klr_checkExistingConnnections $child` == 1) {
		setKeyframe ($child + ".tx");
		setKeyframe ($child + ".ty");
		setKeyframe ($child + ".tz");
		setKeyframe ($child + ".rx");
		setKeyframe ($child + ".ry");
		setKeyframe ($child + ".rz");
	}

	parent $pLocOffsetGrp $pExOffsetGrp;
	delete`parentConstraint $child $pExOffsetGrp`;

// Connect World Control

	$rLocCsnt = ($childName+"_parentConstraint1");

	if ($e == 1) {

		$tmpArray = `parentConstraint $pLocOffsetGrp $rLoc $mLoc`;
		parent $tmpArray[0] $cGrp;

		$tmpArray = `listRelatives -c $cGrp`;
		$rLocCsnt = `rename $tmpArray[2] $rLocCsnt`;
	}
	else
		parentConstraint $pLocOffsetGrp $mLoc;

	string $pairNode;

	if (`objExists ($tmp = klr_getPairBlendAttrFromObject($child, 1))`) {
		deleteAttr $tmp;
	}

	if (`objExists ($tmp = klr_getPairBlendAttrFromObject($child, 0))`) {
		$pairNode = `rename $tmp ($childName + "_pairNode")`;
	}

	if (`objExists ($pairNode + ".weight")` && (!`objExists ($pCon + ".constraint")`)) {
			addAttr -k 1 -ln "constraint" -at double  -min 0 -max 1 -dv 0 $pCon;
			connectAttr ($pCon+".constraint")   ($pairNode + ".weight");
	}

// DO - CREATE UTILITIES NETWORK AND CONNECT CONSTRAINTS

	//Needs - $childName, $rLoc, $rLocCsnt

	string $reverseNode, $plusNode, $conditionNode01, $conditionNode02;

// Create Utlility Setup

	if ($e == 1) {

		$reverseNode = `createNode -n ($childName+"_ReverseUtl") reverse`;
		$conditionNode01 = `createNode -n ($childName+"_ConditionUtl_01") condition`;
	 	$conditionNode02 = `createNode -n ($childName+"_ConditionUtl_02") condition`;

		setAttr ($conditionNode01+".colorIfFalseR") 0;
		setAttr ($conditionNode01+".secondTerm") 1;
		setAttr ($conditionNode01+".operation") 4;

		setAttr ($conditionNode02+".colorIfFalseR") 0;
		setAttr ($conditionNode02+".operation") 2;

		connectAttr -force ($reverseNode+".outputX") ($conditionNode01+".colorIfTrueR");
		connectAttr -force ($reverseNode+".outputX") ($conditionNode02+".colorIfTrueR");

		connectAttr -f ($conditionNode01+".outColorR") ($conditionNode02+".firstTerm");
		connectAttr ($conditionNode02+".outColorR") ($rLocCsnt +  "." + $rLoc + "W1");
	}

// Add And Connect Attributes

	//needs $rLocCsnt, $pCon

	string $attrName, $plusNode, $attr[], $listAttr[];

	$attrName = ("event" + $e);
	$attrs = `listAttr -ud -k $rLocCsnt`;

	for ($eachConstraint in $attrs) {
		$tempStringArray=`listConnections ( $rLocCsnt + "."+$eachConstraint)`;
		if ((size($tempStringArray)<=1) && (`objExists ( $rLocCsnt + "."+$eachConstraint)`)) {
			addAttr -k 1 -ln $attrName -at double  -min 0 -max 1 -dv $i $pCon;

			connectAttr ($pCon+"."+$attrName)  ($ann + ".visibility");
			connectAttr ($pCon+"."+$attrName)  ( $rLocCsnt + "."+$eachConstraint);
		}
	}

	if (`objExists ($childName+"_PlusUtl")`) {
		disconnectAttr ($childName+"_PlusUtl.output1D") ($childName+"_ConditionUtl_01.firstTerm");
		disconnectAttr ($childName+"_PlusUtl.output1D") ($childName+"_ReverseUtl.inputX");
		delete ($childName+"_PlusUtl");
	}

	$plusNode = `createNode -n ($childName+"_PlusUtl") plusMinusAverage`;
	$reverseNode = ($childName+"_ReverseUtl");
	$conditionNode01 = ($childName+"_ConditionUtl_01");

	connectAttr -force ($plusNode+".output1D") ($reverseNode+".inputX");
	connectAttr -force ($plusNode+".output1D") ($conditionNode01+".firstTerm");

	$listAttr = `listAttr -ud -k -u $pCon`;

	for ($i=0;$i<`size $listAttr`;$i++) {
		connectAttr -force ($pCon+"."+$listAttr[$i]) ($childName+"_PlusUtl.input1D["+$i+"]");
	}

	if ($switch)
		klr_switchParentEventOn($pCon, $e, 1);

	klr_switchConstraintOnOff($object, $child);

	optionVar -intValue animBlendingOpt 0;

    if ($manual) {
        $tmpAry = `klr_getParentLocFromChild $object $child`;
        for ($tmp in $tmpAry) {
             setAttr ($tmp + ".visibility") 1;
        }
    }

	select -r $child;
	select -add $parent;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_lockAndHideAttrs
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_lockAndHideAttrs (
	string $object)
{
setAttr -lock true -keyable false ($object + ".tx");
setAttr -lock true -keyable false ($object + ".ty");
setAttr -lock true -keyable false ($object + ".tz");
setAttr -lock true -keyable false ($object + ".rx");
setAttr -lock true -keyable false ($object + ".ry");
setAttr -lock true -keyable false ($object + ".rz");

setAttr ($object + ".v") 0;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_unlockAndUnhideAttrs
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_unlockAndUnhideAttrs (
	string $object)
{
setAttr -lock false -keyable true ($object + ".tx");
setAttr -lock false -keyable true ($object + ".ty");
setAttr -lock false -keyable true ($object + ".tz");
setAttr -lock false -keyable true ($object + ".rx");
setAttr -lock false -keyable true ($object + ".ry");
setAttr -lock false -keyable true ($object + ".rz");

setAttr ($object + ".v") 0;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_getPairBlendAttrFromObject
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_getPairBlendAttrFromObject(
	string $object,
	string $mode)
{
	string $list3[], $buffer[];
	string $list1[] = `listConnections -p 1 -s 0 $object`;
	string $list2[] = `listConnections -s 0 $object`;

	for ($i=0;$i<`size $list1`;$i++) {
		if (`nodeType $list1[$i]` == "pairBlend") {
			if ($mode == 0) {
				return $list2[$i];
				break;
			}
			if ($mode == 1 && (`match ".weight$" $list1[$i]` != "")) {
				$list3 = `listConnections -p 1 -d 0 $list1[$i]`;
				return $list3[0];
				break;
			}
		}
	}
	return "";
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_switchParentEventOn
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_switchParentEventOn(
	string $pCon,
	int $event,
	int $key)
{
	string $listAttr[] = `listAttr -ud -k -u $pCon`;
	float $currentTime = `currentTime -q`;

	for ($i=0;$i<`size $listAttr`;$i++) {
		if (`getAttr ($pCon+"."+$listAttr[$i])` && `match "event[0-9]+" $listAttr[$i]` != "") {
			setAttr ($pCon+"."+$listAttr[$i]) 0;
			if ($key) {
				setKeyframe -itt "linear" -ott "linear" -t ($currentTime +  (-1)) -v 1 ($pCon+"."+$listAttr[$i]);
				setKeyframe -itt "linear" -ott "linear" -t $currentTime -v 0 ($pCon+"."+$listAttr[$i]);
			}
		}
		if (`match ("event"+$event) $listAttr[$i]` != "") {
			setAttr ($pCon+"."+$listAttr[$i]) 1;
			if ($key) {
				setKeyframe -itt "linear" -ott "linear" -t ($currentTime +  (-1)) -v 0 ($pCon+"."+$listAttr[$i]);
				setKeyframe -itt "linear" -ott "linear" -t $currentTime -v 1 ($pCon+"."+$listAttr[$i]);
			}
		}
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_switchConstraintOnOff
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc klr_switchConstraintOnOff(
	string $object,
	string $child)
{
	string $pCon, $type, $event, $typeOld;
	int $values[];
	float $keys[];

	string $attr = klr_checkObjectInExistingNetwork($object, $child, 2);
	string $parents[] = klr_getParentLocFromChild($object, $child);

	if (`objExists (($pCon = ($attr + "_parentCenter_con"))+ ".constraint")`) {

		delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1 ($pCon + ".constraint");

		for ($i=0;$i<`size $parents`;$i++) {
			$event = `match "^event[0-9]+" $parents[$i]`;
			if (`objExists ($pCon + ".constraint")` && `objExists ($pCon + "." + $event)`) {

				$type = `getAttr ($parents[$i] +".type")`;
				$keys = `keyframe -q ($pCon + "." + $event)`;
				$values = `keyframe -q -iv ($pCon + "." + $event)`;

				if ($type == "grab" && $typeOld != "grab") {
					setKeyframe  -itt "linear" -ott "linear" -time $keys[0] -v 0 ($pCon + ".constraint");
					setKeyframe  -itt "linear" -ott "linear" -time $keys[1] -v 1 ($pCon + ".constraint");
				}
				else if ($type == "grab" && $typeOld == "grab") {
					setKeyframe  -itt "linear" -ott "linear" -time $keys[0] -v 1 ($pCon + ".constraint");
					setKeyframe  -itt "linear" -ott "linear" -time $keys[1] -v 1 ($pCon + ".constraint");
				}
				else if ($type == "release") {
					setKeyframe  -itt "linear" -ott "linear" -time $keys[0] -v 1 ($pCon + ".constraint");
					setKeyframe  -itt "linear" -ott "linear" -time $keys[1] -v 0 ($pCon + ".constraint");
				}
				else if ($type == "parent") {
					setAttr ($pCon + ".constraint") 1;
				}
			}
			$typeOld = $type;
		}
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_ParentConstraintStr
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_createParentConstraintStr (
	string $objects[],
	string $child)
{
	string $tmpAry[];

	string $attrAry[] = {"translateX","translateY","translateZ","rotateX","rotateY","rotateZ"};
	string $xyz[] = {"x", "y", "z", "x", "y", "z"};

	string $returnStr = "parentConstraint -mo -weight 1 ";

	for ($i=0;$i<6;$i++) {
		if (`objExists ($child+"."+$attrAry[$i])`) {
			if (!size(`listAttr -k -u ($child+"."+$attrAry[$i])`) || (`getAttr -l ($child+"."+$attrAry[$i])`)) {
				if (`gmatch $attrAry[$i] "translate*"`)
					$returnStr += (" -skipTranslate "+$xyz[$i]+" ");
				if (`gmatch $attrAry[$i] "rotate*"`)
					$returnStr += (" -skipRotate "+$xyz[$i]+" ");
			}
		}
	}
	if (!`checkBox -q -v klr_TranslateXCB`)
		$returnStr += " -skipTranslate x ";
	if (!`checkBox -q -v klr_TranslateYCB`)
		$returnStr += " -skipTranslate y ";
	if (!`checkBox -q -v klr_TranslateZCB`)
		$returnStr += " -skipTranslate z ";

	if (!`checkBox -q -v klr_RotateXCB`)
		$returnStr += " -skipRotate x ";
	if (!`checkBox -q -v klr_RotateYCB`)
		$returnStr += " -skipRotate y ";
	if (!`checkBox -q -v klr_RotateZCB`)
		$returnStr += " -skipRotate z ";

	for ($eachObj in $objects) {
		$returnStr += (" "+$eachObj+" ");
	}
	$returnStr += (" "+$child+" ");

	return $returnStr;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_checkExistingConnnections
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc int klr_checkExistingConnnections (
	string $child)
{
	string $connections[], $nodeType, $results[],  $result;
	string $attrs[] = {"translateX","translateY","translateZ","rotateX","rotateY","rotateZ",
	"constraintRotateOrder","constraintRotatePivot", "constraintRotateTranslate", "constraintParentInverseMatrix"};

	for ($i=0;$i<`size $attrs`;$i++) {
		if (`objExists ($child + "." + $attrs[$i])`) {
			$connections =  `listConnections -p 1 ($child + "." + $attrs[$i])`;
			if (`size $connections`) {
				$nodeType = `nodeType $connections[0]`;
				if  (`match "animCurve" $nodeType` != "")
					$results[`size $results`] = "animCurve";
				else
					$results[`size $results`] = `nodeType $connections[0]`;
			}
		}
	}
	$result = 0;

	if (stringArrayCount("animCurve", $results))
		$result = 2;

	if (stringArrayCount("pairBlend", $results))
		 $result = 1;

	if (stringArrayCount("Constraint", $results))
		$result = 3;

	return $result;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//	klr_checkConnnections
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc int klr_checkConnnections (
	string $object)
{
	string $tmpAry[], $constraint[];
	string $tmpStr, $object, $nodeType, $returnStr, $animCurve;
	int $counter;

	string $connectionArray[] = {"constraintRotateOrder","constraintRotatePivot", "constraintRotateTranslate", "constraintParentInverseMatrix"};
	string $attrAry[] = `listAttr -r $object`;

	for ($eachAttr in $attrAry) {

		if (`objExists  ($object+"."+$eachAttr)`) {
 			$tmpAry = `listConnections ($object+"."+$eachAttr)`;

			for ($eachConnection in $tmpAry) {
				$tmpStr = `substitute ":"$object "_"`;
				$nodeType = `nodeType $eachConnection`;

				if (($nodeType=="parentConstraint")
					&& (`gmatch $eachConnection ($tmpStr+"_parentConstraint*")`
					|| `gmatch $eachConnection ($object+"_parentConstraint*")`)) {

					$counter += 1;
					$constraint = `listRelatives -p $eachConnection`;
				}
				if (`gmatch $nodeType "animCurve*"`)
					$animCurve = "true";
			}
		}
	}

	if ($counter<=4&&$counter>=1)
		return 1;
	else if ($counter>4 && !`gmatch $constraint[0] "*_ConstraintGrp"`)
		return 1;
	else if ($animCurve=="true")
		return 2;
	else return 0;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// al_padding
// eg: al_padding ("9", 3, "0")
// Result: 009
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_pNumberPadding (
	string $str,
	int $pad,
	string $chr)
{
	string $return;

	for ($i=0;$i<$pad;$i++) {
		if (size($str)<=$i)
			$return += $chr;
	}
	return ($return + $str);
}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//klr_rekeyAnimationNodes
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string[] klr_getAnimationNodes(
	string $child) {

	string $results[];
	string $list[] = `listConnections $child`;

	for ($item in $list) {
		if (`nodeType $item` == "pairBlend") {
			$list = `listConnections $item`;
			break;
		}
	}
	string $tmp;

	for ($item in $list) {
		$tmp = `nodeType $item`;
		if (`match "animCurve" $tmp` != "") {
			$results[`size $results`] = $item;
		}
	}
	return $results;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//klr_rekeyAnimationNodes
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

global proc string klr_rekeyAnimationNodes(
	string $child,
	string $animationNodes[]) {

	string $results[], $tmp, $cmd;

	for ($item in $animationNodes) {
		$tmp = `nodeType $item`;
		if (`match "animCurve" $tmp` != "") {
			$tmp = `match "_[A-Z,a-z,0-9]+$" $item`;
			$tmp = `match "[A-Z,a-z]+" $tmp`;
			float $attr = `getAttr ($child + "." + $tmp)`;
			float $time = `currentTime -q`;
			$cmd += ("keyframe -e -vc " + $attr + " -t " + $time + " " + $item + ";");
		}
	}
	return $cmd;
}









