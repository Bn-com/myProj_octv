global proc HH3SAddBuff()
{
	string $missShader[]=`lsType("misss_fast_shader_x_passes")`;

	for($s in $missShader)
	{
		if (`match "done" $s`=="")
		{
			string $buffront= $s+"_frontBuffer";
			string $bufback= $s+"_backBuffer";
			string $buf3s=$s+"_SSSBuffer";
			string $bufidpass=$s+"_idpass01Buffer";
			string $bufnormal=$s+"_normalBuffer";
			if(!`objExists $buffront`)
			{
				createNode -name $buffront writeToColorBuffer;
			}
			if(!`objExists $bufback`)
			{
				createNode -name $bufback writeToColorBuffer;
			}
			if(!`objExists $buf3s`)
			{
				createNode -name $buf3s writeToColorBuffer;
			}
			if(!`objExists $bufidpass`)
			{
				createNode -name $bufidpass writeToColorBuffer;
				setAttr ($bufidpass+".color") -type double3 1 0 0;
			}
			if(!`objExists $bufnormal`)
			{
				createNode -name $bufnormal writeToColorBuffer;
			}
			string $normalnode="mib_amb_normal";
			if(!`objExists $normalnode`)
			{
				createNode -name $normalnode mib_amb_occlusion;

			}
			setAttr ($normalnode+".output_mode") 3;
			connectAttr -f ($s+".front_result") ($buffront+".color");
			connectAttr -f ($s+".back_result") ($bufback+".color");
			connectAttr -f ($s+".result") ($buf3s+".color");
			connectAttr -f ($s+".diffuse_result") ($bufidpass+".evaluationPassThrough");
			connectAttr -f ($s+".diffuse_result") ($bufnormal+".evaluationPassThrough");
			connectAttr -f ($normalnode+".outValue") ($bufnormal+".color");
			
		}
	}
}



