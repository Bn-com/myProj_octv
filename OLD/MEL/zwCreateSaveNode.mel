// zwCreateSaveNode {"finishing", "011", "005", "bloom_default", "MSH", "DEF"};
// zwCreateSaveNode {"lighting", "011", "005", "bloom_default", "ambient", "MS", "DEF"};
global proc string zwCreateSaveNode(string $args[])
{
	string $filename;

	string $dept, $seq, $sht, $nameSeq, $finishType, $approvation, $render, $charName, $pass;

	$dept = $args[0];
	if ($dept == "finishing")
	{
		$seq = $args[1];
		$sht = $args[2];
		$nameSeq = $args[3];
		$finishType = $args[4];
		$approvation = $args[5];

		$nameSeq = `zwCreateSaveNodeBuf2Str $nameSeq`;
	}
	else if ($dept == "lighting")
	{
		$seq = $args[1];
		$sht = $args[2];
		$charName = $args[3];
		$pass = $args[4];
		$render = $args[5];
		$approvation = $args[6];

		$charName = `zwCreateSaveNodeBuf2Str $charName`;
	}

	string $saveNode = $dept + "_saveNode";

	string $buf[] = `ls $saveNode`;
	if (`size $buf`)
	{
		$saveNode = $buf[0];
	}
	else
	{
		$saveNode = `createNode -name $saveNode "saveNode"`;

		select $saveNode;

		if ($dept == "finishing")
		{
			addAttr -sn "sht" -ln "sht" -dt "string";
			addAttr -sn "seq" -ln "seq" -dt "string";
			addAttr -sn "nameSeq" -ln "nameSeq" -dt "string";
			addAttr -sn "ef" -ln "ef" -dt "string";
			addAttr -sn "approvation" -ln "approvation" -dt "string";
			addAttr -sn "dept" -ln "dept" -dt "string";
			addAttr -sn "finishType" -ln "finishType" -dt "string";
			addAttr -sn "sf" -ln "sf" -dt "string";
			addAttr -sn "user" -ln "user" -dt "string";
			addAttr -sn "time" -ln "time" -dt "string";
		}
		else if ($dept == "lighting")
		{
			addAttr -sn "sht" -ln "sht" -dt "string";
			addAttr -sn "render" -ln "render" -dt "string";
			addAttr -sn "seq" -ln "seq" -dt "string";
			addAttr -sn "ef" -ln "ef" -dt "string";
			addAttr -sn "approvation" -ln "approvation" -dt "string";
			addAttr -sn "dept" -ln "dept" -dt "string";
			addAttr -sn "charName" -ln "charName" -dt "string";
			addAttr -sn "pass" -ln "pass" -dt "string";
			addAttr -sn "sf" -ln "sf" -dt "string";
			addAttr -sn "user" -ln "user" -dt "string";
			addAttr -sn "time" -ln "time" -dt "string";
		}
	}

	// 起始结束帧
	int $timeLine[3];
	$filename = $dept + "_" + $seq + "_" + $sht;
	if (catch($timeLine = `idmtProject -timeLine $filename`))
	{
		error "不能从数据库获得起始结束帧信息";
	}
	string $sf = $timeLine[0];
	string $ef = $timeLine[1];

	// 用户
	string $user = `getenv "USERNAME"`;
	
	// 时间
	string $time = `about -currentDate` + " " + `about -currentTime`;
	$time = `substituteAllString $time "/" "-"`;
	string $ms = int(rand(1000));
	for ($i=size($ms); $i<3; $i++)
	{
		$ms = "0" + $ms;
	}
	$time = $time + "." + $ms + "000";
	
	select $saveNode;

	if ($dept == "finishing")
	{
		setAttr ".sht" -type "string" $sht;
		setAttr ".seq" -type "string" $seq;
		setAttr ".nameSeq" -type "string" $nameSeq;
		setAttr ".ef" -type "string" $ef;
		setAttr ".approvation" -type "string" $approvation;
		setAttr ".dept" -type "string" $dept;
		setAttr ".finishType" -type "string" $finishType;
		setAttr ".sf" -type "string" $sf;
		setAttr ".user" -type "string" $user;
		setAttr ".time" -type "string" $time;

		$filename = $dept + "_" + $seq + "_" + $sht + "_" + $sf + "_" + $ef;
		if ($nameSeq != "None")
		{
			$filename += "_" + $nameSeq;
		}
		$filename += "_" + $finishType;
	}
	else if ($dept == "lighting")
	{
		setAttr ".sht" -type "string" $sht;
		setAttr ".render" -type "string" $render;
		setAttr ".seq" -type "string" $seq;
		setAttr ".ef" -type "string" $ef;
		setAttr ".approvation" -type "string" $approvation;
		setAttr ".dept" -type "string" $dept;
		setAttr ".charName" -type "string" $charName;
		setAttr ".pass" -type "string" $pass;
		setAttr ".sf" -type "string" $sf;
		setAttr ".user" -type "string" $user;
		setAttr ".time" -type "string" $time;

		$filename = $dept + "_" + $seq + "_" + $sht + "_" + $sf + "_" + $ef + "_" + $charName + "_" + $pass + "_" + $render;
	}

	
	if ($approvation == "WIP")
	{
		$filename += "_wip";
	}
	$filename += ".mb";

	return $filename;
}

global proc string zwCreateSaveNodeBuf2Str(string $buf)
{
	while (true)
	{
		string $str = `match "_[^_]" $buf`;
		if ($str == "")
		{
			break;
		}
		$str = `match "[^_]" $str`;
		$str = `toupper $str`;
		$buf = `substitute "_[^_]" $buf $str`;
	}

	return $buf;
}