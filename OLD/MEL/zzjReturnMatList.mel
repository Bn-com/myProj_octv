//	Description:
//	This script can return all the face or object which ware connected by  materials.
//	email: 	power_zzj@sina.com
//	zhaozhongjie ’‘÷ŸΩ›
//	2009.1.24
//*****************************************************
//	how to use:
//
//	string $ttt[]=`zzjReturnMatList`;
//	for ($z=0;$z<`size $ttt`;$z+=2)
//	{
//		select (stringToStringArray($ttt[$z], " "));
//		hyperShade -assign $ttt[$z+1];
//	}
//*****************************************************



global proc string [] zzjReturnMatList()
{
	string $zzjReturnMatLists[]={};
	int $add=0;

	string $SG[]=`ls -type shadingEngine`;
	for ($a in $SG)
	{
		string $slBySG[] = `sets -q $a`;

		string $slByMatsList= stringArrayToString($slBySG, " ");
		$zzjReturnMatLists[$add++]=$slByMatsList;
		$zzjReturnMatLists[$add++]=$a;

	}
	return $zzjReturnMatLists;
}


//global proc string [] zzjReturnMatList()
//{
//	string $zzjReturnMatLists[]={};
//	int $add=0;
//
//	string $mats[]=`ls -mat`;
//	for ($a in $mats)
//	{
//		string $connectSG[]=`listConnections -d 1 -s 0 $a`;
//		int $ifExistSG =0;
//		for ($sg in $connectSG)
//		{
//			if (`nodeType $sg`=="shadingEngine")
//			{
//				$ifExistSG=1;
//				break;	
//			}	
//		}
//		if ($ifExistSG==0)		continue;
//		hyperShade -objects $a;
//		string $slByMats[]=`ls -sl`;
//		string $slByMatsList= stringArrayToString($slByMats, " ");
//		$zzjReturnMatLists[$add++]=$slByMatsList;
//		$zzjReturnMatLists[$add++]=$a;
//
//	}
//	return $zzjReturnMatLists;
//}

global proc zzjGetMatList()
{
	global string $zzjReturnMat[];
	$zzjReturnMat=`zzjReturnMatList`;
	select -cl;
}

//global proc zzjSetMatList()
//{
//	global string $zzjReturnMat[];
//	for ($z=0;$z<`size $zzjReturnMat`;$z+=2)
//	{
//		if (!size(stringToStringArray($zzjReturnMat[$z], " ")))	continue;
//		select (stringToStringArray($zzjReturnMat[$z], " "));
//		hyperShade -assign $zzjReturnMat[$z+1];select -cl;
//	}
//}

global proc zzjSetMatList()
{
	global string $zzjReturnMat[];
	for ($z=0;$z<`size $zzjReturnMat`;$z+=2)
	{
		if (!size(stringToStringArray($zzjReturnMat[$z], " ")))	continue;
		
		string $face[]= stringToStringArray($zzjReturnMat[$z], " ");
		sets -forceElement $zzjReturnMat[$z+1] $face;
	}
}
