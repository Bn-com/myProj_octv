global proc zwDelHair()
{
	string $buf[] = `file -query -reference`;
	for ($file in $buf)
	{
		string $node = `file -query -referenceNode $file`;
		string $file = `referenceQuery -filename -unresolvedName $node`;
		string $namespace = `file -query -namespace $file`;
		
		string $filename = `match "[^/\\]+$" $file`;
		if (`gmatch $filename "br_*_r_ms_*"`)
		{
			string $character = `match "_[^_]+" $filename`;
			$character = `match "[^_]+" $character`;

			string $group[] = `ls ($namespace + ":*_HAIRSYSTEM")`;
			if (size($group) == 1)
			{
				file -importReference -referenceNode $node;

				string $hairs[] = `listRelatives -fullPath -children $group[0]`;
				for ($hair in $hairs)
				{
				//	if (`match "hairSystem[0-9]*$" $hair` != "" || `match "hairSystemShape[0-9]*$" $hair` != ""
				//		|| `match "pfxHair[0-9]*$" $hair` != ""
				//		|| `match "hairSystem[0-9]*Follicles$" $hair` != "" || `match "hairSystemShape[0-9]*Follicles$" $hair` != ""
				//		|| `match "hairSystem[0-9]*OutputCurves$" $hair` != "" || `match "hairSystemShape[0-9]*OutputCurves$" $hair` != ""
				//		|| `match "ClothFur" $hair` != "")
					string $str = `match "[^|]+$" $hair`;
					$str = tolower($str);
					if (`match "hairsystem" $str` != ""
						|| `match "pfxhair" $str` != ""
						|| `match "follicle" $str` != ""
						|| `match "outputcurve" $str` != ""
						|| `match "clothfur" $str` != "")
					{
						if (`objExists $hair`)
						{
							delete $hair;
						}
					}
				}
			}

		}
	}

//	string $sceneName = `file -query -sceneName`;
//	$sceneName = `substring $sceneName 1 (size($sceneName)-3)` + "_nohair.mb";

	string $sceneName = `file -query -shortName -sceneName`;
	$sceneName = `substring $sceneName 1 (size($sceneName)-3)` + "_nohair.mb";
	$sceneName = `workspace -query -rootDirectory` + "scenes/" + $sceneName;

	file -rename $sceneName;
	file -force -save;
}