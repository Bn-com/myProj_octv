/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: »ô½¡
///
/// Creation Date: 2006/11/15
///
/// Description: 
///







global proc hjShapeBaker () 
	{

	 
		int $startTime = `intSliderGrp -q -v AmStartFrame`;;
		int $endTime 	= `intSliderGrp -q -v AmEndFrame`;
		int $step 		= `intSliderGrp -q -v AmBakeStep`;
		int $i;
		string $AmSelection[] = `ls -sl -o `;
		string $AmSelectiona;
		
		if ( $endTime < $startTime ) {
		print "// Error: End time is < than Start time\n";	
		return;
	}
	for ($AmSelectiona in $AmSelection)
{
			
			
			select $AmSelectiona;
			string $blends[];
			string $blend[];
			string $clean [];
			string $BlendShape[];
			progressWindow
			-title "Bakeing object"
			-progress 0
			-max ( $endTime )
			-status	( "Get Movement : 0/" + $endTime)
			-isInterruptable true;
			
			currentTime $startTime;
	
			duplicate -rr -renameChildren;
			hide  $AmSelectiona;
			
			
			$BlendShape[0] = `rename ($AmSelectiona + "_BlendShape" )`;

	
	for ( $i=$startTime; $i<=$endTime; $i++ ) 
		{
		
			currentTime $i;
			select -r $AmSelectiona;
			duplicate -rr -renameChildren; 
			
			$blends[$i] = `rename ( $AmSelectiona + "baked1" )`;
			
			hide;
			$i = $i + ($step - 1);
		}
	
	
	
			select -r ($AmSelectiona + "baked*");
			select -d ($AmSelectiona + "*Shape*");
			select -add $BlendShape[0];
			
			$blend = `blendShape  -tc 0  -n  "AmShapeBaked1"`;
			
			showHidden -a $blends [$startTime];
	
	
	for ( $i=$startTime; $i<=$endTime; $i++ ) {
    
		currentTime $i;
		
		if ( $i == $startTime ) {
			setAttr ( $blend [0] + "." + $blends[$i+$step] ) 0;
			setKeyframe ( $blend [0] + "." + $blends[$i+$step] );
		}			
		if ( $i == ($startTime + $step )) {
			setAttr ( $blend [0] + "." + $blends[$i] ) 1;
			setKeyframe ( $blend [0] + "." + $blends[$i] );

			setAttr ( $blend [0] + "." + $blends[$i+$step] ) 0;
			setKeyframe ( $blend [0] + "." + $blends[$i+$step] );
		}
		if ( $i > ($startTime + $step ) ) {
			
			setAttr ( $blend [0] + "." + $blends[$i-$step] ) 0;
			setKeyframe ( $blend [0] + "." + $blends[$i-$step] );

			setAttr ( $blend [0] + "." + $blends[$i] ) 1;
			setKeyframe ( $blend [0] + "." + $blends[$i] );

			if ( $i >= ( size ($blends) -1 ) ) {
				break;
			}

			setAttr ( $blend [0] + "." + $blends[$i+$step] ) 0;
			setKeyframe ( $blend [0] + "." + $blends[$i+$step] );
		}
		
		$i = $i + ($step - 1);
		
	}
	

			keyTangent -hi both -itt linear -ott linear $blend;
			progressWindow -endProgress;
			
			string $parentselection	[]=`listRelatives -parent  $AmSelectiona`;
			if(`size $parentselection`!=0)
			{
			string $parentselectionc[]=`listRelatives -type "geometryConstraint" 	$parentselection[0]`;
			string $parentselectiona[]=`listRelatives -type "pointConstraint" 		$parentselection[0]` ;
			string $parentselectionb[]=`listRelatives -type "normalConstraint" 		$parentselection[0]`;
			delete $parentselectionc $parentselectionb $parentselectiona;
			}
			select -r ($AmSelectiona + "baked*");
			delete;
			
	}	
		
}
global proc hjBakerobject () 
{

	
	
	if (`window -exists hjBakeWindowUI` )
	deleteUI hjBakeWindowUI;
	
	window -resizeToFitChildren true  -title "Bake Simulation" ; 

	formLayout myUIFormLayout ;
	intSliderGrp -enable off -v 0 -field true -fmn ( 0 ) -fmx 10000 -label "Start Frame" AmStartFrame;
	intSliderGrp -enable off -v ( `getAttr "defaultRenderGlobals.endFrame" ` ) -field true -fmn ( 0 ) -fmx 10000 -label "End Frame" AmEndFrame;
	intSliderGrp -v 24 -field true -fmn ( 1 ) -fmx 10000 -label "Step Size" AmBakeStep;
	button -width 200 -c "hjShapeBaker" -label "Start Bake" BakeButton;
	formLayout -e
	
	-attachForm	 	"AmStartFrame" "left" 	10
	-attachForm	 	"AmStartFrame" "top" 	5
	-attachForm	 	"AmEndFrame" "left" 	10
	-attachControl 	"AmEndFrame" "top" 		5 	AmStartFrame
	-attachForm	 	"AmBakeStep" "left" 	10
	-attachControl  "AmBakeStep" "top" 		5 	AmEndFrame
	-attachForm	 	"BakeButton" "left" 	100
	-attachControl "BakeButton" "top" 		5  	AmBakeStep
	
	
	myUIFormLayout ;
	
	showWindow;	
}

