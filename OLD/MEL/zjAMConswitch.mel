/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÕÔÖ¾½Ü
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjAMConswitch()
{
	$filename = (`internalVar -userAppDir` + "projects/default/scenes/tmpswitch.txt");
	$fileID = `fopen $filename r`;

	if ($fileID == 0)
	{
		// cannot open the file

		error("Fail to open " + $filename);
	}
	print "\nTRANSFER SWITCH NODE";

	string $buffer = `fgetline $fileID`;
	$buffer = substituteAllString($buffer, "\n", "");

	string $firstSw = "";
	string $secondSw = "";
	
	string $buf[];
	if (`tokenize $buffer " " $buf` == 3)
	{
		$firstSw = $buf[0];
	}

	int $inTriNum = 0;
	while (size($buffer) > 0) 
	{
		string $buf[];

		if (`tokenize $buffer " " $buf` == 3)
		{

			string $Sw = $buf[0];
			$secondSw = $Sw;
			if ( $secondSw != $firstSw)
			{
				$inTriNum = 0;
				$firstSw = $secondSw;
			}

			string $inTriple = $buf[2];
			if (!`objExists $Sw`)
			{
				warning($Sw + " does not exist.");

				$buffer = `fgetline $fileID`;
				$buffer = substituteAllString($buffer, "\n", "");

				continue;
			}
			if (!`objExists $inTriple`)
			{
				warning($inTriple + " does not exist.");

				$buffer = `fgetline $fileID`;
				$buffer = substituteAllString($buffer, "\n", "");

				continue;
			}
		
			string $trans[];
			$trans = `ls $buf[1]`;
			if (!`objExists $trans[0]`)
			{
				string $buff[];
				tokenize $buf[1] "|" $buff;
				$conshape = $buff[size($buff) - 1];
				$trans = `ls $conshape`;
			}
			if(`objExists ($trans[0]+".instObjGroups[0]")`&&`objExists $inTriple`&&!`isConnected ($trans[0]+".instObjGroups[0]") $inTriple`)
			{
				if (!`isConnected ($trans[0]+".instObjGroups[0]") ($Sw+".input["+($inTriNum)+"].inShape")`)
				{
					connectAttr -f ($trans[0]+".instObjGroups[0]") ($Sw+".input["+($inTriNum)+"].inShape");
					//connectAttr -f $inTriple ($Sw+".input["+($inTriNum)+".inTriple");
					print ("\n	Connecting transform "+$trans[0] + " to switch "+$inTriple);
					//connectAttr -f ($trans[0]+"Shape.instObjGroups["+$t+"]") $inTriple;
					$inTriNum++;
				}
			}
		}
		
		$buffer = `fgetline $fileID`;
		$buffer = substituteAllString($buffer, "\n", "");
	}

	fclose $fileID;
}




