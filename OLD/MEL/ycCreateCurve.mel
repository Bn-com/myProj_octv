/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ÒüêÉ
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc ycCreateCurve()
{
	if(!`window -exists ycCreateCurve`)
	{
		source "ycPolyTransCurves.mel";
		loadPlugin "zjCrvOnPoly.mll";
		window -menuBar true -title "Create Curve" -width 445 -height 200 ycCreateCurve;
			menu -label "Help";
				menuItem -label "Help on Create Curve..." -command "zjHelpCallback ycCreateCurve";
			formLayout formLayout1;
				columnLayout columnLayout1;
					checkBoxGrp -label "Curve on polygon" -value1 1 -changeCommand "SetCreateCurveTypeEnable" CurveOnPolyEnable;
					intSliderGrp -enable 0 -label "Number of step" -field true -minValue 1 -maxValue 100 -fieldMinValue 1 -fieldMaxValue 100 -value 1 stepOfLineSample;
					radioButtonGrp -enable 0 -numberOfRadioButtons 2 -select 1 -label "Curve Type" -labelArray2 "Row Edge" "Cloumn Edge"  CurveType;					
				setParent ..;
				string $button1 = `button -label "Create Curve" -command "CreateCurve;\ndeleteUI ycCreateCurve;"`;
				string $button2 = `button -label "Apply" -command "CreateCurve"`;
				string $button3 = `button -label "Close" -command "deleteUI ycCreateCurve;"`;

			formLayout -edit
				-attachForm	columnLayout1	"top"		5
				-attachForm	columnLayout1	"left"		5

				-attachForm	$button1	"left"		5
				-attachForm	$button1	"bottom"	5
				-attachPosition	$button1	"right"		5	33

				-attachControl	$button2	"left"		5	$button1
				-attachForm	$button2	"bottom"	5
				-attachPosition	$button2	"right"		5	67

				-attachControl	$button3	"left"		5	$button2
				-attachForm	$button3	"bottom"	5
				-attachForm	$button3	"right"		5
			formLayout1;
	}
	showWindow;
}

global proc SetCreateCurveTypeEnable()
{
	if (`checkBoxGrp -query -v1 CurveOnPolyEnable`)
	{
		intSliderGrp -e -enable 0 stepOfLineSample;
		radioButtonGrp -e -enable 0  CurveType;					
	}
	else
	{
		intSliderGrp -e -enable 1 stepOfLineSample;
		radioButtonGrp -e -enable 1  CurveType;					
	}
}

global proc CreateCurve()
{
	if (`checkBoxGrp -query -v1 CurveOnPolyEnable`)
	{
		string $SelectObj[]=`ls -sl`;

		zjCrvOnPolyPlugin;

		string $EdgeBuffer[];
		tokenize $SelectObj[0] "." $EdgeBuffer;
		int $EdgeBufferSize=size($EdgeBuffer);
		string $CurveName=$EdgeBuffer[0];
		if ($EdgeBufferSize>2)
		{
			for ($i=1;$i<$EdgeBufferSize-1;$i++)
			{
				$CurveName=$CurveName+"."+$EdgeBuffer[$i];
			}
		}
		string $SelectedCuverShape[]=`ls -sl`;
		string $SelectedCuver[]=`listRelatives -p $SelectedCuverShape[0]`;
		rename $SelectedCuver[0] ($CurveName+"_Curve");
	}
	else
	{
		int $SelectItem=`radioButtonGrp -q -select CurveType`;
		switch ($SelectItem)
		{
		case 1:
			ycRowCreateCurveInPolygon;
			break;
		case 2:
			ycColumnCreateCurveInPolygon;
			break;
		default:
			return;
		}
	}
}
//ycCreateCurve;