/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc string[] zwTextureNetwork()
{
	string $fileNode[], $visited[];

	clear $fileNode;
	clear $visited;

	string $select[] = `ls -selection -shapes -dagObjects`;
	for ($i=0; $i<`size $select`; $i++)
	{
		string $shaingEngine[] = `listConnections  -source false -destination true -type shadingEngine $select[$i]`;
		for ($j=0; $j<`size $shaingEngine`; $j++)
			zwTextureNetworkRecursion $shaingEngine[$j] $fileNode $visited;
	}

	return $fileNode;
}

global proc zwTextureNetworkRecursion(string $node, string $result[], string $visited[])
{
	if (`objectType $node` == "file")
	{
		if (!`stringArrayCount $node $result`)
			$result[size($result)] = $node;
	}
	else
	{
		if(!`stringArrayCount $node $visited`)
		{
			$visited[size($visited)] = $node;
			string $connections[] = `listConnections -connections true -source true -destination false $node`;
			for ($i = 0; $i < size($connections); $i += 2)
			{
				string $srcPlug = $connections[$i];
				string $dstNode = $connections[$i + 1];
				string $buf[];
				tokenize $srcPlug "." $buf;
				if ($buf[size($buf)-1] != "message")
					zwTextureNetworkRecursion $dstNode $result $visited;
			}
		}
	}
}