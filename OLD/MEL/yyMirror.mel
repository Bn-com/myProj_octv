/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ”Œ÷æ∏’
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//  Emmail:youzhigang@idmt.org.cn
///////////////////////////
global proc mll_brow(string $control)
{
	global string $path[];
	$path[0]=`workspace -q -dir`;
	 workspace  -dir "Z:/Projects/Thru_The_Moebius_Strip/Groups/Character/mirror/";
	fileBrowserDialog -mode 0  -fileCommand ("mll_browProc " + $control) -fileType "mayaBinary" -actionName "Browse" -operationMode "Reference";
}

global proc int mll_browProc(string $control, string $filename, string $fileType)
{
	textFieldGrp -e -text $filename $control;
	return true;
}
global proc  yoyobase()
{
	global string $charf[];
	$charf= `ls -sl`;
	global int $vp[];
	string $file;
	$char1= `ls -sl`;
	setAttr ($char1[0]+"."+"tx") 0;
	setAttr ($char1[0]+"."+"ty") 0;
	setAttr ($char1[0]+"."+"tz") 0;
	duplicate -rr; scale -r -1 1 1;
	$char2= `ls -sl`;
	 int $size[]=`polyEvaluate -v`;
	float $vdis;
	for($i=0;$i<$size[0];$i++)
	{
	float $vmin=1000.0;
		float $p[3]=`pointPosition -w ($char1[0]+".vtx["+$i+"]")`;
 	     for($j=0;$j<$size[0];$j++)
		{
			float $p1[3]=`pointPosition -w ($char2[0]+".vtx["+$j+"]")`;
			$vdis=abs(`pow ($p[0]-$p1[0]) 2`)+abs(`pow ($p[1]-$p1[1]) 2`)+abs(`pow ($p[2]-$p1[2]) 2`);
			if ($vdis<$vmin)
			{
			$vmin=$vdis;
			$vp[$i]=$j;
			}
		}	
	}
	delete $char2[0];
//	return $vp;
	string $file;
	for ($i=0;$i<size($vp);$i++)
	{
	$file=$file+$vp[$i]+" ";
	}
	select -r $char1[0];
	duplicate -rr -n  ($char1[0]+"_targetbase") ;
	if (`objExists "targetlocator"`==0)
	{
	spaceLocator -p 0 0 0 -n targetlocator;
	addAttr -ln number -dt "string"  targetlocator;
	setAttr -e -keyable true targetlocator.number;
	setAttr "targetlocator.visibility" 0;
	}
	select -r targetlocator;
	setAttr -type "string" targetlocator.number $file;
//	setAttr -type "string" targetlocator $file;
	select -tgl ($char1[0]+"_targetbase");
	file -exportSelected -type "mayaBinary" ("Z:/Projects/Thru_The_Moebius_Strip/Groups/Character/mirror/"+$char1[0]+".mb");
	delete ($char1[0]+"_targetbase");
	delete targetlocator;
 //   $exampleFileName =("Z:/Projects/Thru_The_Moebius_Strip/Groups/Character/mirror/"+$char1[0]+".mb");
 //   $fileId=`fopen $exampleFileName "w"`;

 //   fwrite $fileId $file;
 //   fclose $fileId;
}
global proc yoyomirror1()
{
	global int $vp[];
	$char= `ls -sl`;
 	int $size[]=`polyEvaluate -v`;
//	for($i=0;$i<$size[0];$i++)
//      print($vp[$i]);
	float $bp[3];
	$bp[0]=getAttr ($char[0]+"."+"tx");
	$bp[1]=getAttr ($char[0]+"."+"ty");
	$bp[2]=getAttr ($char[0]+"."+"tz");
	setAttr ($char[0]+"."+"tx") 0;
	setAttr ($char[0]+"."+"ty") 0;
	setAttr ($char[0]+"."+"tz") 0;
        string $tchar[]=`duplicate -rr`;
	int $mum;
	for($i=0;$i<$size[0];$i++)
	{
        $mum=$vp[$i];
	float $p3[3]=`pointPosition -w ($char[0]+".vtx["+$mum+"]")`;
	select -r ($tchar[0]+".vtx["+$i+"]") ;
	move -a -ls  (-$p3[0]) $p3[1] $p3[2];
	}
	setAttr ($char[0]+"."+"tx") $bp[0];
	setAttr ($char[0]+"."+"ty") $bp[1];
	setAttr ($char[0]+"."+"tz") $bp[2];
	setAttr ($tchar[0]+"."+"tx") $bp[0];
	setAttr ($tchar[0]+"."+"ty") $bp[1];
	setAttr ($tchar[0]+"."+"tz") $bp[2];
}
global proc yoyomirror2()
{
	global string $charf[];
	global int $vp[];
	string $newchar;
	$char= `ls -sl`;
 	int $size[]=`polyEvaluate -v`;
//	for($i=0;$i<$size[0];$i++)
     print($charf[0]);
	float $bp[3];
	$bp[0]=getAttr ($char[0]+"."+"tx");
	$bp[1]=getAttr ($char[0]+"."+"ty");
	$bp[2]=getAttr ($char[0]+"."+"tz");
	setAttr ($char[0]+"."+"tx") 0;
	setAttr ($char[0]+"."+"ty") 0;
	setAttr ($char[0]+"."+"tz") 0;
        string $tchar[]=`duplicate -rr`;
	int $mum;
	for($i=0;$i<$size[0];$i++)
	{
        $mum=$vp[$i];
	float $p3[3]=`pointPosition -w ($char[0]+".vtx["+$mum+"]")`;
	select -r ($tchar[0]+".vtx["+$i+"]") ;
	move -a -ls  (-$p3[0]) $p3[1] $p3[2];
	}
select -r $charf[0];
string $charf1[]=`duplicate -rr`;
select -r $char[0];
select -tgl $tchar[0];
select -tgl $charf1[0] ;
blendShape -n "newtarget";
setAttr ("newtarget."+$char[0]) 1;
setAttr ("newtarget."+$tchar[0]) 1;
$newchar=$char[0];
delete $char[0];
delete $tchar[0];
select -r $charf1[0] ;
rename $charf1[0] $newchar;
DeleteHistory;
	setAttr ($newchar+"."+"tx") $bp[0];
	setAttr ($newchar+"."+"ty") $bp[1];
	setAttr ($newchar+"."+"tz") $bp[2];

}

global proc  getfile()
{
	global string  $textfield[];
	global int $vp[];
	global string $name[];
	string $stringvp[];
	$name=`ls  "*_targetbase"`;
	string $nextWord=`getAttr targetlocator.number `;
	tokenize($nextWord, $stringvp);
	for ($i=0;$i<size($stringvp);$i++)
	{
//	print ($stringvp[$i]);
	$vp[$i]=int($stringvp[$i]);
	}
//	return $vp;
//	print ($name[0]);
}
global proc import()
{
global string $path[];
global string $textfield[];
 string $exampleFileName =`textFieldGrp -query -fileName $textfield[0]`;
file -import -type "mayaBinary" -options "v=0" $exampleFileName;
 workspace -dir $path[0];
 }
global proc  check()
{
	global string $charf[];
	global string $name[];
	global int $vp[];
	if (`objExists "targetlocator"`)
	{
	getfile;
	$charf[0]=$name[0];
	}
//	return $vp;
}
global proc yyMirror()
{
	global string $charf[];
	global string  $textfield[];
	global string $name[];
	global int $vp[];
	string $window = `window -title "Target mirror"
    		-iconName "Mirror"
    		-widthHeight 200 200`;
   	string $parent = `columnLayout -adjustableColumn true`;
  	 	button -label "Select the base" -command  yoyobase;
		separator;
	 	$textfield[0] = `textFieldGrp  -label "Addr:"  -editable false -text ""`;
		$textfield[1] = `button -label "Browse"  -command ("mll_brow \ $textfield[0];\nimport;")`;
		separator;
  	 	button -label "Mirror Target" -command ("check;\nyoyomirror1;");
  	 	button -label "Mirror the half" -command ("check;\nyoyomirror2;");
		button -label "Close" -command ("deleteUI -window " + $window);
    setParent ..;
    showWindow $window;
}