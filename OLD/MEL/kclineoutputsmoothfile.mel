/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc kcLineWriteSmoothFile(string $filename, int $over)
{
	int $fileID;
	if ($over)
		$fileID = `fopen $filename "w"`;
	else 
		$fileID = `fopen $filename "a"`;

	if ($fileID == 0)
		error("Cannot write to " + $filename);

	print("Write to " + $filename + "\n");

	string $meshes[] = `ls -long -type mesh -noIntermediate`;

	for ($item in $meshes)
	{
		string $smoothNodes[];
		clear $smoothNodes;

		string $history[] = `listHistory -pruneDagObjects true $item`;

		for ($node in $history)
			if (`nodeType $node` == "polySmoothFace")
				$smoothNodes[size($smoothNodes)] = $node;

		if (size($smoothNodes) > 0)
		{
			// output node name and number of smooth nodes

			fprint($fileID, $item + " " + size($smoothNodes));

			for ($node in $smoothNodes)
			{
				// output smooth data

				int $continuity = `getAttr ($node + ".continuity")`;
				int $divisions = `getAttr ($node + ".divisions")`;
				int $keepBorder = `getAttr ($node + ".keepBorder")`;
				int $keepSelectionBorder = `getAttr ($node + ".keepSelectionBorder")`;
				int $keepTessellation = `getAttr ($node + ".keepTessellation")`;

				fprint($fileID, " " + $continuity + " " + $divisions + " " + $keepBorder + " " + $keepSelectionBorder + " " + $keepTessellation);
			}
			
			fprint($fileID, "\n");
		}
	}
	string $shapes[] = `ls -long -type nurbsSurface -noIntermediate`;

	for ($item in $shapes)
	{
		fprint($fileID, $item);
		int $curvatureTolerance = `getAttr ($item + ".curvatureTolerance")`;
		float $uDivisionsFactor = `getAttr ($item + ".uDivisionsFactor")`;
		float $vDivisionsFactor = `getAttr ($item + ".vDivisionsFactor")`;
		fprint($fileID, " " + $curvatureTolerance + " " + $uDivisionsFactor + " " + $vDivisionsFactor + "\n");
	}

	fclose $fileID;

	print("Finish writing to " + $filename + "\n");
}

global proc kcLineOutputSmoothFile()
{
	string $filename = "\\\\file-cluster\\GDC\\Projects\\Thru_The_Moebius_Strip\\Groups\\Line\\smooth\\";
//	string $filename = "\\\\file-cluster\\GDC\\Netrender\\Scenes\\TTMS\\smooth\\";
	//string $filename = "e:/maya/";

	string $sceneName = `file -query -expandName`;
	string $namebuffer[];
	tokenize $sceneName "/\\" $namebuffer;
	string $scene = $namebuffer[size($namebuffer)-1];
	string $tokens[];

	if (`tokenize $scene "_" $tokens` > 2)
		$filename += $tokens[0] + "_" + $tokens[1] + "_" + "auto.txt";
	else
	{
		warning "file name is illegal";
		return;
	}
	
	if (`file -q -exists $filename`)
	{
		string $result = `confirmDialog -title "Line Smooth File Exists" -message "Line smooth file exists. What do you want to do?"
									-button "Overwrite" -button "Append" -button "Cancel"
									-defaultButton "Overwrite"
									-cancelButton "Cancel" -dismissString "Cancel"`;

		if ($result == "Overwrite")
			kcLineWriteSmoothFile($filename, 1);
		else if ($result == "Append")
			kcLineWriteSmoothFile($filename, 0);
	}
	else
		kcLineWriteSmoothFile($filename, 1);
}
