global proc fsshatter_instance_noFreeze()
{
if(`window -exists shatter_instancerWindow`)
	deleteUI shatter_instancerWindow;
window  -t "破碎替代1.1"
	-wh 310 120
	-mxb 0
	-sizeable 1
	shatter_instancerWindow;
menuBarLayout;
menu -l "帮助" ;
	menuItem -l "破碎替代帮助" -c "zjHelpCallback fsshatter_instance" shatter_InstancerHelp;
scrollLayout -childResizable 1 mainSol;
columnLayout -adj 0 mainCol;
 formLayout mainForm;

   rowLayout -nc 2
	     -cat 1 "left" 2
	     -cal 2 "center"
	     -cw 1 130
	     -cw 2 250
	     particleRow;
	     textFieldGrp -l "创建粒子："
			  -cw 1 64
			  -cw 2 150
			  -columnAlign2 "left" "left"
			  particleTex;

	     setParent..;
 setParent..;
rowLayout -nc 4
	  -cat 1 "both" 0
	  -cal 1 "center"
	  -cw 1 280;
 button -l "开始定位"  -c emit_shatter startBut;
 setParent..;
setParent..;
formLayout -e

	   -af particleRow top 2
	   -af particleRow left 0
	   -af particleRow right 0
	   mainForm;




showWindow shatter_instancerWindow;
}




global proc emit_shatter()
{

	string $nodeList[]=`ls -sl`;
	float $partPos[4],$vol;
	int $i=0,$objectIndex;
	string $particleName=`textFieldGrp -q -text particleTex`;
	particleCmd($particleName);
	for ($node in $nodeList)
	{
		select $node;
		makeIdentity -a 1 -t 1 -r 1 -s 1 -n 0;
		xform -cp;
		$partPos=`xform -q -rp $node`;
		$objectIndex=$i;
		$vol=bb_calcuteBB($node);
		emit 	-object ($particleName)
				-position $partPos[0] $partPos[1] $partPos[2]
				-attribute mass -floatValue $vol
				-attribute indexPP -floatValue $objectIndex;
		spaceLocator -p 0 0 0;
		string $locaName[]=`ls -sl`;
		select $node  $locaName[0];
		align -atl -x Mid -y Mid -z Mid;
		makeIdentity -a 1 -t 1 -r 1 -s 1 -n 0 $node;
		delete $locaName[0];
		hide $node;
		$i++;

	}
	saveInitialState ($particleName);
	string $objectList;
	for($j=0;$j<size($nodeList);$j++)
	{
		$objectList+=" -object "+$nodeList[$j];
	}
	eval ( "particleInstancer -addObject" + $objectList + " -cycle None -cycleStep 1 -cycleStepUnits Frames -levelOfDetail Geometry -rotationUnits Degrees -rotationOrder XYZ -position worldPosition -age age -objectIndex indexPP -rotation rotationPP " + $particleName);
}


global proc vector f2v(float $value[])
{
 	vector $vect;
	if((size($value))==1)
		$vect=<<$value[0],0,0>>;
	else if((size($value))==2)
		$vect=<<$value[0],$value[1],0>>;
	else
		$vect=<<$value[0],$value[1],$value[2]>>;
	return $vect;
}

global proc float bb_calcuteBB(string $node)
{
	float $bb[]=`xform -q -ws -bb $node`;
	float $x=abs($bb[3]-$bb[0]);
	float $y=abs($bb[4]-$bb[1]);
	float $z=abs($bb[5]-$bb[2]);
	float $vol=mag(<<$x,$y,$z>>)-0.1;
	return $vol;
}

global proc particleCmd(string $paritcleName)
{

	particle -n $paritcleName;
	addAttr -ln "initPosPP0" -dt vectorArray  ($paritcleName+"Shape");
	addAttr -ln "initPosPP" -dt vectorArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.initPosPP");
	addAttr -ln "scalePP0" -dt vectorArray  ($paritcleName+"Shape");
	addAttr -ln "scalePP" -dt vectorArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.scalePP");
	addAttr -ln "rotationPP0" -dt vectorArray  ($paritcleName+"Shape");
	addAttr -ln "rotationPP" -dt vectorArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.rotationPP");
	addAttr -ln "initMassPP0" -dt doubleArray  ($paritcleName+"Shape");
	addAttr -ln "initMassPP" -dt doubleArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.initMassPP");
	addAttr -ln "indexPP0" -dt doubleArray  ($paritcleName+"Shape");
	addAttr -ln "indexPP" -dt doubleArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.indexPP");
	addAttr -ln "visibilityPP0" -dt doubleArray  ($paritcleName+"Shape");
	addAttr -ln "visibilityPP" -dt doubleArray  ($paritcleName+"Shape");
	setAttr -e -keyable true ($paritcleName+"Shape.visibilityPP");

}


