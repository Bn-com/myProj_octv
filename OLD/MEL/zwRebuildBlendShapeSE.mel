/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: 黄仲维
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc myDisconnectAttr(string $attr)
{
	if (!`objExists $attr`)
	{
		return;
	}

	int $i;
	string $buf[] = `listConnections -plugs true -destination false $attr`;
	int $lock = `getAttr -lock $attr`;
	setAttr -lock false $attr;
	for ($i=0; $i<size($buf); $i++)
		disconnectAttr $buf[$i] $attr;
}

proc myUnlock(string $obj)
{
	string $buf[] = {"translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ", "scaleX", "scaleY", "scaleZ"};
	for ($attr in $buf)
		setAttr -lock false ($obj + "." + $attr);
}

proc string[] bodyChannels()
{
	string $channels[] = {"mouth_smile_R",
				"mouth_smile_L",
			//	"mouth_smirk_R",
			//	"mouth_smirk_L",
				"mouth_sad_R",
				"mouth_sad_L",
				"mouth_sneer_up_R",
				"mouth_sneer_up_L",
				"mouth_sneer_dn_R",
				"mouth_sneer_dn_L",
				"mouth_combined_sneer",
				"mouth_twist_L",
				"mouth_twist_R",
				"mouth_lip_in",
				"mouth_lips_up",
				"mouth_lips_dow",
				"mouth_oop",
				"mouth_kiss",
				"mouth_lowlipdn",
				"mouth_lowlipup",
				"mouth_uplipdn",
				"mouth_uplipup",
				"mouth_laug_Open",
				"F",
				"O",
				"E_R",
				"E_L",
				"U",
				"M",
				"eyebrow_surprise_L",
				"eyebrow_surprise_R",
				"eyebrow_down_R",
				"eyebrow_down_L",
				"eyebrow_anger_R",
				"eyebrow_anger_L",
				"eyebrow_sad_R",
				"eyebrow_sad_L",
				"eye_open_R",
				"eye_open_L"
		//		"eye_tght_R",
		//		"eye_tght_L",
		//		"brow_anger_R",
		//		"brow_anger_L",
		//		"brow_sad_R",
		//		"brow_sad_L",
		//		"brow_down_R",
		//		"brow_down_L",
		//		"brow_surprise_R",
		//		"brow_surprise_L",
			};
	global int $zwRBSisSec;
	if ($zwRBSisSec)
	{
		$channels = {"mouth_smile_R",
				"mouth_smile_L",
			//	"mouth_smirk_R",
			//	"mouth_smirk_L",
				"mouth_sad_R",
				"mouth_sad_L",
				"mouth_sneer_up_R",
				"mouth_sneer_up_L",
				"mouth_sneer_dn_R",
				"mouth_sneer_dn_L",
			//	"mouth_combined_sneer",
			//	"mouth_twist_L",
			//	"mouth_twist_R",
			//	"mouth_lip_in",
			//	"mouth_lips_up",
			//	"mouth_lips_dow",
				"mouth_oop",
			//	"mouth_kiss",
				"mouth_lowlipdn",
				"mouth_lowlipup",
				"mouth_uplipdn",
				"mouth_uplipup",
			//	"mouth_laug_Open",
				"F",
				"O",
			//	"E_R",
			//	"E_L",
				"E",
				"U",
				"M",
				"eyebrow_surprise_L",
				"eyebrow_surprise_R",
				"eyebrow_down_R",
				"eyebrow_down_L",
				"eyebrow_anger_R",
				"eyebrow_anger_L",
				"eyebrow_sad_R",
				"eyebrow_sad_L"
			//	"eye_open_R",
			//	"eye_open_L"
		//		"eye_tght_R",
		//		"eye_tght_L",
		//		"brow_anger_R",
		//		"brow_anger_L",
		//		"brow_sad_R",
		//		"brow_sad_L",
		//		"brow_down_R",
		//		"brow_down_L",
		//		"brow_surprise_R",
		//		"brow_surprise_L",
			};
	}
	return $channels;
}

global proc zwRebuildBlendShape()
{
	zwRBSsetMode(false);

	if (`window -exists zwRebuildBlendShape`)
		deleteUI zwRebuildBlendShape;
	string $window = `window -width 600 -height 640 -title "Rebuild BlendShape" zwRebuildBlendShape`;
		string $formLayout = `formLayout`;
			string $webBrowser = `webBrowser -width 600 -height 400 -url "http://app-server/ws/Support/Working/ui/zwRebuildBlendShape.htm"`;
	formLayout -edit
		-attachForm	$webBrowser	"top"		0
		-attachForm	$webBrowser	"left"		0
		-attachForm	$webBrowser	"bottom"	0
		-attachForm	$webBrowser	"right"		0
	$formLayout;
	showWindow $window;
}

global proc zwAliasBlendShapeAttr(string $new)
{
	string $buf[] = `selectedChannelBoxPlugs`;
	if (size($buf) != 1)
		error "请在ChannelBox选中一个通道";
	string $attr = $buf[0];
	tokenize $attr "." $buf;
	if (`nodeType $buf[0]` != "blendShape")
		error "不是blendShape节点";
	if ($buf[1] != $new)
	{
		if (`objExists ($buf[0] + "." + $new)`)
			error ($new + "通道已经存在");
		aliasAttr $new $attr;
	}
}

global proc zwRebuildBlendShapeAliasAttr()
{
	string $result = `promptDialog -title "Rename Channel" -message "New Name:" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
  	if ($result == "OK")
	{
 		$text = `promptDialog -query -text`;
		channelBox -edit -execute ("aliasAttr \"" + $text + "\" \"#P.#A\";") true mainChannelBox;
 	}
}

global proc string zwGetBaseShape(string $blendShape)
{
	string $base[] = `blendShape -query -geometry $blendShape`;
/*	$base =`ls -dagObjects -leaf -long $base[0]`;
	if(size($base)>1)
	{
		for($bs in $base)
		{
			string $con[] = `listConnections -destination false $bs`;
			if(stringArrayCount($blendShape, $con))
			{
				$base[0] = $bs;
				break;
			}
		}
	}

	return $base[0];
*/
	return $base[size($base)-1];
}

global proc zwRebuildTarget(string $LorR)
{
	string $buf[] = `ls -selection`;
	if (size($buf) != 2)
		error "先选择物体，再在INPUTS里点开blendShape节点";
	
	string $blendShape = $buf[0];
	if (`nodeType $blendShape` != "blendShape")
		error "先选择物体，再在INPUTS里点开blendShape节点";

	string $parent = $buf[1];
	$buf = `listRelatives -fullPath -shapes $parent`;
	string $obj = $buf[0];

	if ($LorR == "L" || $LorR == "R")
	{
		$buf = `aliasAttr -query $blendShape`;
		for ($i=0; $i<size($buf); $i+=2)
		{
			{
				if (((`match "SURP$" $buf[$i]` != "") || (`match "^SUR_" $buf[$i]` != "")) && ($buf[$i] != "brow_surprise_" + $LorR))
					aliasAttr ("brow_surprise_" + $LorR) ($blendShape + "." + $buf[$i]);
				else if (((`match "^FLT_" $buf[$i]` != "")|| (`match "DOWN$" $buf[$i]` != "") || (`match "_D$" $buf[$i]` != "")) && ($buf[$i] != "brow_down_" + $LorR))
					aliasAttr ("brow_down_" + $LorR) ($blendShape + "." + $buf[$i]);
				else if (((`match "^ANG_" $buf[$i]` != "") || (`match "ANGERY$" $buf[$i]` != "") || (`match "_A$" $buf[$i]` != "")) && ($buf[$i] != "brow_anger_" + $LorR))
					aliasAttr ("brow_anger_" + $LorR) ($blendShape + "." + $buf[$i]);
				else if (((`match "^SAD_" $buf[$i]` != "") || (`match "SAD$" $buf[$i]` != "")) && ($buf[$i] != "brow_sad_" + $LorR))
					aliasAttr ("brow_sad_" + $LorR) ($blendShape + "." + $buf[$i]);
			}
		}
		string $channels[] = {"brow_surprise_", "brow_down_", "brow_anger_", "brow_sad_"};
		for ($channel in $channels)
		{
			if (!`objExists ($blendShape + "." + $channel + $LorR)`)
				error ($blendShape + "." +  $LorR + $channel + "不存在，请规范名字");
		}
	}
	else
	{
		zwSmartAlias($blendShape);
		string $channels[] = bodyChannels();
		for ($channel in $channels)
		{
			if (!`objExists ($blendShape + "." + $channel)`)
				error ($blendShape + "." + $channel + "不存在，请规范名字");
		}
	}

	string $group;
	if ($LorR == "L" || $LorR == "R")
		$group = $LorR + "_EYEBROW_target";
	else
		$group = "body_target";
	if (`objExists ("|" + $group)`)
		delete ("|" + $group);

	setAttr ($blendShape + ".envelope") 1;

	string $targetObj[];
	$buf = `aliasAttr -query $blendShape`;
	for ($i=0; $i<size($buf); $i+=2)
	{
		string $buf1[] = `listConnections -destination false -plugs true ($blendShape + "." + $buf[$i])`;
		if (size($buf1) == 1)
			disconnectAttr $buf1[0] ($blendShape + "." + $buf[$i]);
		setAttr -lock false ($blendShape + "." + $buf[$i]);
		float $value = `getAttr ($blendShape + "." + $buf[$i])`;
		setAttr ($blendShape + "." + $buf[$i]) (1.0 - $value);

		int $index = `substring  $buf[$i+1] 8 (size($buf[$i+1]) - 1)`;
		string $buf1[] = `listConnections -source true -destination false -skipConversionNodes true ($blendShape +  ".inputTarget[0].inputTargetGroup[" + $index + "].inputTargetItem[6000].inputGeomTarget")`;
		if (`size $buf1`)
			delete $buf1[0];

		if (`objExists ("|" + $buf[$i])`)
			delete ("|" + $buf[$i]);

		string $transform = `createNode "transform" -name $buf[$i]`;
		string $shape;
		string $type = `nodeType $obj`;
		$shape = `createNode $type -parent $transform -name ($buf[$i] + "Shape")`;
		setAttr ($blendShape + "." + $buf[$i]) 1;
		if ($type == "mesh")
		{
			sets -edit -forceElement "initialShadingGroup";
			connectAttr -force ($obj + ".worldMesh[0]") ($shape + ".inMesh");
			refresh;
			disconnectAttr ($obj + ".worldMesh[0]") ($shape + ".inMesh");
		}
		else if ($type == "nurbsSurface")
		{
			sets -edit -forceElement "initialShadingGroup";
			connectAttr -force ($obj + ".worldSpace[0]") ($shape + ".create");
			refresh;
			disconnectAttr ($obj + ".worldSpace[0]") ($shape + ".create");
			connectAttr ($parent + ".rotatePivot") ($transform + ".rotatePivot");
			disconnectAttr ($parent + ".rotatePivot") ($transform + ".rotatePivot");
			connectAttr ($parent + ".scalePivot") ($transform + ".scalePivot");
			disconnectAttr ($parent + ".scalePivot") ($transform + ".scalePivot");
		}
		else if ($type == "lattice")
		{
			
			connectAttr -force ($obj + ".worldLattice[0]") ($shape + ".latticeInput");
			refresh;
			disconnectAttr ($obj + ".worldLattice[0]") ($shape + ".latticeInput");
			connectAttr ($parent + ".rotatePivot") ($transform + ".rotatePivot");
			disconnectAttr ($parent + ".rotatePivot") ($transform + ".rotatePivot");
			connectAttr ($parent + ".scalePivot") ($transform + ".scalePivot");
			disconnectAttr ($parent + ".scalePivot") ($transform + ".scalePivot");
		}

		setAttr ($blendShape + "." + $buf[$i]) $value;
		$targetObj[size($targetObj)] = $transform;
	}
	group -name $group $targetObj;
}

global proc zwSmartAlias(string $blendShape)
{
	string $channels[] = bodyChannels();
	string $buf[] = `listAttr -multi $blendShape`;
	for ($i=0; $i<size($buf); $i++)
	{
		string $attr = `aliasAttr -query ($blendShape + "." + $buf[$i])`;
		if ($attr == "")
		{
			continue;
		}

		string $l = tolower($attr);
		
		$l = `substitute "angry" $l "anger"`;
		$l = `substitute "eye_brow" $l "eyebrow"`;
		$l = `substitute "eyesad" $l "eye_sad"`;
		$l = `substitute "^laug_$" $l "mouth_laug_open"`;

		$l = `substitute "^smile_r$" $l "mouth_smile_r"`;
		$l = `substitute "^smile_l$" $l "mouth_smile_l"`;
		// mouth_smirk_R
		// mouth_smirk_L
		$l = `substitute "^sad_r$" $l "mouth_sad_r"`;
		$l = `substitute "^sad_l$" $l "mouth_sad_l"`;
		$l = `substitute "^sneer_up_r$" $l "mouth_sneer_up_r"`;
		$l = `substitute "^sneer_up_l$" $l "mouth_sneer_up_l"`;
		$l = `substitute "^sneer_down_r$" $l "mouth_sneer_dn_r"`;
		$l = `substitute "^sneer_down_l$" $l "mouth_sneer_dn_l"`;
		$l = `substitute "^combined_sneer$" $l "mouth_combined_sneer"`;	//
		$l = `substitute "^m_twist_r$" $l "mouth_twist_r"`;
		$l = `substitute "^m_twist_l$" $l "mouth_twist_l"`;
		$l = `substitute "^lips_in$" $l "mouth_lip_in"`;
		$l = `substitute "^lips_up$" $l "mouth_lips_up"`;
		$l = `substitute "^lips_down$" $l "mouth_lips_dow"`;
		$l = `substitute "^oop$" $l "mouth_oop"`;
		$l = `substitute "^puff$" $l "mouth_oop"`;
		$l = `substitute "^kiss$" $l "mouth_kiss"`;
		$l = `substitute "^lwlipdn$" $l "mouth_lowlipdn"`;
		$l = `substitute "^lower_lip_dwn$" $l "mouth_lowlipdn"`;
		$l = `substitute "^lwlipup$" $l "mouth_lowlipup"`;
		$l = `substitute "^lower_lip_up$" $l "mouth_lowlipup"`;
		$l = `substitute "^uprlipdn$" $l "mouth_uplipdn"`;
		$l = `substitute "^up_lip_dwn$" $l "mouth_uplipdn"`;
		$l = `substitute "^uprlipup$" $l "mouth_uplipup"`;
		$l = `substitute "^upper_lip_up$" $l "mouth_uplipup"`;
		$l = `substitute "^laug_open$" $l "mouth_laug_open"`;
		
		// F
		// O
		// E_R
		// E_L
		// U
		// M

		$l = `substitute "^eyebrow_up_l$" $l "eyebrow_surprise_l"`;
		$l = `substitute "^sur_l$" $l "eyebrow_surprise_l"`;
		$l = `substitute "^eyebrow_up_r$" $l "eyebrow_surprise_r"`;
		$l = `substitute "^sur_r$" $l "eyebrow_surprise_r"`;
		// eyebrow_down_R
		// eyebrow_down_L
		$l = `substitute "^anger_r$" $l "eyebrow_anger_r"`;
		$l = `substitute "^ang_r$" $l "eyebrow_anger_r"`;
		$l = `substitute "^anger_l$" $l "eyebrow_anger_l"`;
		$l = `substitute "^ang_l$" $l "eyebrow_anger_l"`;
		$l = `substitute "^eye_sad_r$" $l "eyebrow_sad_r"`;
		$l = `substitute "^eye_sad_l$" $l "eyebrow_sad_l"`;
		$l = `substitute "^eyeopen_r$" $l "eye_open_r"`;	//
		$l = `substitute "^eyeopen_l$" $l "eye_open_l"`;	//
		// eye_tght_R
		// eye_tght_L

		$l = `substitute "^puff$" $l "mouth_puff"`;	//
		for ($channel in $channels)
		{
			if (tolower($channel) == $l && !`objExists ($blendShape + "." + $channel)`)
			{
//				evalEcho ("aliasAttr \"" + $channel + "\" \"" + $blendShape + "." + $attr + "\"");
				aliasAttr $channel ($blendShape + "." + $attr);
				break;
			}
		}
	}
}

global proc zwExportFacial()
{
	string $name = "Facial_Curve";

	string $buf[] = `duplicate -returnRootsOnly $name`;
	string $facial = $buf[0];
	$buf = {"translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ", "scaleX", "scaleY", "scaleZ"};
	string $script = "";
	for ($attr in $buf)
		setAttr -lock false ($facial + "." + $attr);
	
	float $position[3] = `xform -query -objectSpace -translation $facial`;
	addAttr -longName "position" -dataType "double3" $facial;
	setAttr ($facial + ".position") -type "double3" $position[0] $position[1] $position[2];
	
	parent -world $facial;
	$facial = `rename $facial $name`;
	string $file = `internalVar -userTmpDir` + $name + ".mb";
	if (`filetest -f $file`)
		sysFile -delete $file;
	select $facial;
	file -type "mayaBinary" -exportSelected $file;
	delete $facial;

	confirmDialog -message "成功";
}

global proc zwImportFacial()
{
	string $character = zwGetCharacter();
	string $name = "Facial_Curve";
	string $facial = $character + "_" + $name;
	if (`objExists $facial`)
		delete $facial;

	string $file = `getenv "DEV_PATH"` + "/Maya/Import/facial_curve.mb";
	global int $zwRBSisSec;
	if ($zwRBSisSec)
	{
		$file = `getenv "DEV_PATH"` + "/Maya/Import/facial_curve_sec.mb";
	}
	file -type "mayaBinary" -import -renameAll true -renamingPrefix $character $file;

	string $head = $character + "_head";
	parent $facial $head;

	confirmDialog -message "成功";
/*
	string $name = "Facial_Curve";

	string $file = `internalVar -userTmpDir` + $name + ".mb";
	if (!`filetest -f $file`)
		error "请先导出";

	string $character = zwGetCharacter();
	file -type "mayaBinary" -import -renameAll true -renamingPrefix $character $file;
	sysFile -delete $file;

	string $facial = $character + "_" + $name;
	string $head = $character + "_head";
	parent $facial $head;
	
	float $position[3] = `getAttr ($facial + ".position")`;
	xform -objectSpace -translation $position[0] $position[1] $position[2] $facial;
	deleteAttr -attribute "position" $facial;

	string $buf[] = {"translateX", "translateY", "translateZ", "rotateX", "rotateY", "rotateZ", "scaleX", "scaleY", "scaleZ"};
	for ($attr in $buf)
		setAttr -lock true ($facial + "." + $attr);

	confirmDialog -message "成功";
*/
}

global proc zwExportTarget()
{
	string $buf[] = {"L", "R"};
/*	for ($lr in $buf)
	{
		string $buf1[] = `ls -transforms ($lr + "_EYE*")`;
		for ($obj in $buf1)
		{
			if ((`match "SURP$" $obj` != "") && ($obj != $lr + "brow_surprise_"))
				rename $obj ($lr + "brow_surprise_");
			else if (((`match "DOWN$" $obj` != "") || (`match "_D$" $obj` != "")) && ($obj != $lr + "brow_down_"))
				rename $obj ($lr + "brow_down_");
			else if (((`match "ANGERY$" $obj` != "") || (`match "_A$" $obj` != "")) && ($obj != $lr + "brow_anger_"))
				rename $obj ($lr + "brow_anger_");
			else if ((`match "SAD$" $obj` != "") && ($obj != $lr + "brow_sad_"))
				rename $obj ($lr + "brow_sad_");
		}
	}
*/
	string $channels[] = bodyChannels();
	for ($channel in $channels)
	{
		if (!`objExists ("|body_target|" + $channel)`)
			error ($channel + "不存在，请重新生成身体blendShape的targets");
	}
	for ($lr in $buf)
	{
		$channels = {"brow_surprise_", "brow_down_", "brow_anger_", "brow_sad_"};
		for ($channel in $channels)
		{
			if (!`objExists ("|" + $lr + "_EYEBROW_target|" + $channel + $lr)`)
				error ($lr + $channel + "不存在，请重新生成" + $lr + "眉毛blendShape的targets");
		}
	}

	select "body_target" "L_EYEBROW_target" "R_EYEBROW_target";

	fileBrowserDialog -mode 1 -fileType "mayaBinary" -fileCommand "zwExportTargetProc" -actionName "Export Target";
}

global proc int zwExportTargetProc( string $filename, string $fileType )
{
	file -type $fileType -exportSelected $filename;

	return true;
}

global proc int zwImportTargetProc( string $filename, string $fileType )
{
	file -type $fileType -import $filename;

	return true;
}

global proc string zwGetBlendShape(string $first)
{
	string $buf[] = `ls $first`;
	$buf = `listRelatives -parent $buf[0]`;
	return $buf[0];
}

global proc zwImportTarget()
{
	fileBrowserDialog -mode 0 -fileType "mayaBinary" -fileCommand "zwImportTargetProc" -actionName "Import Target";

/*
	string $buf[] = {"L", "R"};
	for ($LorR in $buf)
	{
		if (!`objExists ($LorR + "_EYEBROW")`)
			error ($LorR + "_EYEBROW不存在，请规范名字");
	}

	string $character = zwGetCharacter();
	string $blendShape = $character + "_blendShape";
	
	string $file = `internalVar -userTmpDir` + "blendShape_target.mb";
	if (!`filetest -f $file`)
		error "请先导出";
	file -type "mayaBinary" -import $file;
	sysFile -delete $file;

	string $body = zwGetBlendShape("Smile_R");
	string $eyebrow_l = zwGetBlendShape("Lbrow_surprise_");
	string $eyebrow_r = zwGetBlendShape("Rbrow_surprise_");

	zwImportTargetOne($body, $character + "_blendShape", true);
	zwImportTargetOne($eyebrow_l, $character + "_eyebrow_l_blendShape", false);
	zwImportTargetOne($eyebrow_r, $character + "_eyebrow_r_blendShape", false);

	confirmDialog -message "成功";
*/
}

global proc zwImportTargetOne(string $group, string $blendShape, int $freeze)
{
	string $base = `substitute "_target$" $group ""`;

	if (`objExists $blendShape`)
		delete $blendShape;

	string $buf[] = `listRelatives -children $group`;
	if ($freeze)
	{
		for ($target in $buf)
		{
			delete `pointConstraint $base $target`;
			makeIdentity -apply true $target;
		}
	}
	select $buf;
	select -add $base;
	blendShape -name $blendShape -frontOfChain;
	delete $group;
}

global proc zwRebuildFacial()
{
	string $character = zwGetCharacter();

	if (`objExists($character + "_eyeJoint_l")`)
	{
		zwRebuildFacialFR ;
	}
	else if (`objExists($character + "_eyeJoint_left")`)
	{
		zwRebuildFacialSE ;
	}
}
global proc zwRebuildFacialFR()
{
	string $character = zwGetCharacter();

	string $expression = $character + "_facial_expression";
	if (`objExists $expression`)
		delete $expression;

	string $blendShape = $character + "_blendShape";

//	$buf = `listAttr -multi ($blendShape + ".weight")`;
//	for ($i=0; $i<size($buf); $i++)
//		myDisconnectAttr ($blendShape + "." + $buf[$i]);

	myDisconnectAttr ($character + "_LwrLid_l.rotateX");
	myDisconnectAttr ($character + "_LwrLid_l.rotateY");
	myDisconnectAttr ($character + "_LwrLid_r.rotateX");
	myDisconnectAttr ($character + "_LwrLid_r.rotateY");
	myDisconnectAttr ($character + "_UprLid_A_l.rotateX");
	myDisconnectAttr ($character + "_UprLid_A_l.rotateY");
	myDisconnectAttr ($character + "_UprLid_A_r.rotateX");
	myDisconnectAttr ($character + "_UprLid_A_r.rotateY");
	myDisconnectAttr ($character + "_Upper_Teeth_G.rotateX");
	myDisconnectAttr ($character + "_Upper_Teeth_G.translateY");
	myDisconnectAttr ($character + "_Lower_Teeth_G.rotateX");
	myDisconnectAttr ($character + "_Lower_Teeth_G.translateY");
	myDisconnectAttr ($character + "_Lower_Teeth_G.translateZ");
	myDisconnectAttr ($character + "_jaw.rotateX");
	myDisconnectAttr ($character + "_jaw.rotateZ");
	myDisconnectAttr ($character + "_tongue2.rotateZ");
	myDisconnectAttr ($character + "_tongue3.rotateZ");
	myDisconnectAttr ($character + "_tongue4.rotateZ");
	myDisconnectAttr ($character + "_tongue5.rotateZ");

//	$buf = `ls -type expression`;
//	for ($i=0; $i<size($buf); $i++)
//	{
//		string $buf1[] = `listConnections ($buf[$i] + ".output")`;
//		if (!size($buf1))
//			delete $buf[$i];
//	}

	string $str = "";
	$str += "// this expression is auto created to conctol the facial\r\n";
	$str += "// you can modify it\r\n";
	$str += "// supported by huangzhongwei@idmt.org.cn, td\r\n";
	$str += "\r\n";
	
	$str += "// Ctrl_L_Lids\r\n";
	$str += $character + "_LwrLid_l.rotateX = clamp(-30, 15, " + $character + "_eyeJoint_l.rotateX * 0.2 + clamp(0, 40, " + $character + "_eyeJoint_l.rotateX / 2)) + clamp(-5, 12, " + $character + "_Ctrl_L_Lids.translateX * 15);\r\n";
	$str += $character + "_LwrLid_l.rotateY = 0.3 * " + $character + "_eyeJoint_l.rotateY;\r\n";
	$str += $character + "_UprLid_A_l.rotateX = clamp(-18, (" + $character + "_LwrLid_l.rotateX + 14) + (clamp(-1, 0, -" + $character + "_Ctrl_L_Lids.translateX) * 10), " + $character + "_eyeJoint_l.rotateX + (clamp(-1, 0.25, " + $character + "_Ctrl_L_Lids.translateY)) * 40 + ((-clamp(-1, -0.25, -" + $character + "_Ctrl_L_Lids.translateY) - 0.25) * 1.34) * (" + $character + "_LwrLid_l.rotateX + 40 - " + $character + "_eyeJoint_l.rotateX));\r\n";
	$str += $character + "_UprLid_A_l.rotateY = 0.3 * " + $character + "_eyeJoint_l.rotateY;\r\n";
	$str += "\r\n";
	
	$str += "// Ctrl_R_Lids\r\n";
	$str += $character + "_LwrLid_r.rotateX = clamp(-30, 15, " + $character + "_eyeJoint_r.rotateX * 0.2 + clamp(0, 40, " + $character + "_eyeJoint_r.rotateX / 2)) + clamp(-5, 12, " + $character + "_Ctrl_R_Lids.translateX * 15);\r\n";
	$str += $character + "_LwrLid_r.rotateY = 0.3 * " + $character + "_eyeJoint_r.rotateY;\r\n";
	$str += $character + "_UprLid_A_r.rotateX = clamp(-18, (" + $character + "_LwrLid_r.rotateX + 14) + (clamp(-1, 0, -" + $character + "_Ctrl_R_Lids.translateX) * 10), " + $character + "_eyeJoint_r.rotateX + (clamp(-1, 0.25, " + $character + "_Ctrl_R_Lids.translateY)) * 40 + ((-clamp(-1, -0.25, -" + $character + "_Ctrl_R_Lids.translateY) - 0.25) * 1.34) * (" + $character + "_LwrLid_r.rotateX + 40 - " + $character + "_eyeJoint_r.rotateX));\r\n";
	$str += $character + "_UprLid_A_r.rotateY = 0.3 * " + $character + "_eyeJoint_r.rotateY;\r\n";
	$str += "\r\n";
	
	$str += "// L_sneer\r\n";
	$str += $blendShape + ".mouth_sneer_up_L = clamp(0, 1, -" + $character + "_L_sneer.translateX + " + $character + "_L_sneer.translateY);\r\n";
	$str += $blendShape + ".mouth_sneer_dn_L = clamp(0, 1, " + $character + "_L_sneer.translateX + " + $character + "_L_sneer.translateY);\r\n";
	$str += "\r\n";
	
	$str += "// R_sneer\r\n";
	$str += $blendShape + ".mouth_sneer_up_R = clamp(0, 1, " + $character + "_R_sneer.translateX + " + $character + "_R_sneer.translateY);\r\n";
	$str += $blendShape + ".mouth_sneer_dn_R = clamp(0, 1, -" + $character + "_R_sneer.translateX + " + $character + "_R_sneer.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_EEE")`)
	{
		$str += "// EEE\r\n";
		$str += $blendShape + ".E_L = clamp(0, 1, " + $character + "_EEE.translateX + " + $character + "_EEE.translateY);\r\n";
		$str += $blendShape + ".E_R = clamp(0, 1, -" + $character + "_EEE.translateX + " + $character + "_EEE.translateY);\r\n";
		$str += "\r\n";
	}
	else
	{
		$str += "// E\r\n";
		$str += $blendShape + ".E = 2.5 * " + $character + "_E.translateY;\r\n";
		$str += "\r\n";
	}

	$str += "// Left_Eye\r\n";
	$str += $blendShape + ".eyebrow_surprise_L = clamp(0, 1, (" + $character + "_Left_Eye.translateX + " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_down_L = clamp(0, 1, (" + $character + "_Left_Eye.translateX - " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_anger_L = clamp(0, 1, (-" + $character + "_Left_Eye.translateX - " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_sad_L = clamp(0, 1, (-" + $character + "_Left_Eye.translateX + " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += "\r\n";
	
	$str += "// Right_Eye\r\n";
	$str += $blendShape + ".eyebrow_surprise_R = clamp(0, 1, (-" + $character + "_Right_Eye.translateX + " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_down_R = clamp(0, 1, (-" + $character + "_Right_Eye.translateX - " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_anger_R = clamp(0, 1, (" + $character + "_Right_Eye.translateX  - " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_sad_R = clamp(0, 1, (" + $character + "_Right_Eye.translateX + " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += "\r\n";
	
	$str += "// CtrlX_Lips\r\n";
	$str += $blendShape + ".mouth_lowlipdn = clamp(0, 1, " + $character + "_CtrlX_Lips.translateX);\r\n";
	$str += $blendShape + ".mouth_lowlipup = clamp(0, 1, -" + $character + "_CtrlX_Lips.translateX);\r\n";
	$str += $blendShape + ".mouth_uplipdn = clamp(0, 1, -" + $character + "_CtrlX_Lips.translateY);\r\n";
	$str += $blendShape + ".mouth_uplipup = clamp(0, 1, " + $character + "_CtrlX_Lips.translateY);\r\n";
	$str += "\r\n";
	
	if (`objExists ($character + "_Puff_O_Smile")`)
	{
		$str += "// Puff_O_Smile\r\n";
		$str += $blendShape + ".mouth_oop = 5.0 * clamp(0, 0.2, -" + $character + "_Puff_O_Smile.translateY);\r\n";
		if (`objExists ($blendShape + ".mouth_laug_Open")`)
		{
			$str += $blendShape + ".mouth_laug_Open = 5.0 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
		}
	}
	else
	{
		$str += "// Puff\r\n";
		$str += $blendShape + ".mouth_oop = 5.0 * clamp(0, 0.2, -" + $character + "_Puff.translateY);\r\n";
	}
	$str += $character + "_Upper_Teeth_G.rotateX = 65.0 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Upper_Teeth_G.translateY = 0.59 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Lower_Teeth_G.rotateX = 110.66 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Lower_Teeth_G.translateZ = -0.555 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += "\r\n";

	$str += "// L_Smile_Sad\r\n";
	$str += $blendShape + ".mouth_smile_L = 5.0 * clamp(0, 0.2, " + $character + "_L_Smile_Sad.translateY);\r\n";
	$str += $blendShape + ".mouth_sad_L = 5.0 * clamp(0, 0.2, -" + $character + "_L_Smile_Sad.translateY);\r\n";
	$str += "\r\n";
	
	$str += "// R_Smile_Sad\r\n";
	$str += $blendShape + ".mouth_smile_R = 5.0 * clamp(0, 0.2, " + $character + "_R_Smile_Sad.translateY);\r\n";
	$str += $blendShape + ".mouth_sad_R = 5.0 * clamp(0, 0.2, -" + $character + "_R_Smile_Sad.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_Lip_Twist_Up_Down")`)
	{
		$str += "// Lip_Twist_Up_Down\r\n";
		$str += $blendShape + ".mouth_twist_L = clamp(0, 1, " + $character + "_Lip_Twist_Up_Down.translateX);\r\n";
		$str += $blendShape + ".mouth_twist_R = clamp(0, 1, -" + $character + "_Lip_Twist_Up_Down.translateX);\r\n";
		$str += $blendShape + ".mouth_lips_up = clamp(0, 1, " + $character + "_Lip_Twist_Up_Down.translateY);\r\n";
		$str += $blendShape + ".mouth_lips_dow = clamp(0, 1, -" + $character + "_Lip_Twist_Up_Down.translateY);\r\n";
		$str += "\r\n";
	}

	$str += "// T_L\r\n";
	$str += $character + "_tongue2.rotateZ = 298.531 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue3.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 289.808 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue4.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 139.716 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue5.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 360 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_Lip_In_Kiss")`)
	{
		$str += "// Lip_In_Kiss\r\n";
		$str += $blendShape + ".mouth_lip_in = 5 * clamp(0, 0.2, -" + $character + "_Lip_In_Kiss.translateY);\r\n";
		$str += $blendShape + ".mouth_kiss = 5 * clamp(0, 0.2, " + $character + "_Lip_In_Kiss.translateY);\r\n";
		$str += "\r\n";
	}

	$str += "// Jaw_Rot\r\n";
	$str += $character + "_jaw.rotateX = 115.0 * " + $character + "_Jaw_Rot.translateY;\r\n";
	$str += $character + "_jaw.rotateZ = -75.0 * " + $character + "_Jaw_Rot.translateX;\r\n";
	$str += "\r\n";
	
	$str += $blendShape + ".O = 2.5 * " + $character + "_OOO.translateY; // OOO\r\n";
	$str += $blendShape + ".F = 2.5 * " + $character + "_FV.translateY; // FV\r\n";
	$str += $blendShape + ".M = 2.5 * " + $character + "_M.translateY; // M\r\n";
	$str += $blendShape + ".U = 2.5 * " + $character + "_U.translateY; // U\r\n";
	$str += "\r\n";
	
	if (`objExists ($character + "_Puff_O_Smile")`)
	{
		$str += $character + "_Lower_Teeth_G.translateY = -0.555 * " + $character + "_OOO.translateY - 0.345 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY); // Puff_O_Smile, OOO\r\n";
	}

	print $str;
	expression -name $expression -string $str;

	string $buf[]= {"L", "R"};
	for ($rl in $buf)
	{
		connectAttr -force ($character + "_blendShape.eyebrow_surprise_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_surprise_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_down_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_down_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_anger_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_anger_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_sad_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_sad_" + $rl);
	}

	confirmDialog -message "成功";
}

global proc zwRebuildFacialSE()
{
	string $character = zwGetCharacter();

	string $expression = $character + "_facial_expression";
	if (`objExists $expression`)
		delete $expression;

	string $blendShape = $character + "_blendShape";

//	$buf = `listAttr -multi ($blendShape + ".weight")`;
//	for ($i=0; $i<size($buf); $i++)
//		myDisconnectAttr ($blendShape + "." + $buf[$i]);

	myDisconnectAttr ($character + "_LwrLid_left.rotateX");
	myDisconnectAttr ($character + "_LwrLid_left.rotateY");
	myDisconnectAttr ($character + "_LwrLid_right.rotateX");
	myDisconnectAttr ($character + "_LwrLid_right.rotateY");
	myDisconnectAttr ($character + "_UprLid_A_left.rotateX");
	myDisconnectAttr ($character + "_UprLid_A_left.rotateY");
	myDisconnectAttr ($character + "_UprLid_A_right.rotateX");
	myDisconnectAttr ($character + "_UprLid_A_right.rotateY");
	myDisconnectAttr ($character + "_Upper_Teeth_G.rotateX");
	myDisconnectAttr ($character + "_Upper_Teeth_G.translateY");
	myDisconnectAttr ($character + "_Lower_Teeth_G.rotateX");
	myDisconnectAttr ($character + "_Lower_Teeth_G.translateY");
	myDisconnectAttr ($character + "_Lower_Teeth_G.translateZ");
	myDisconnectAttr ($character + "_jaw.rotateX");
	myDisconnectAttr ($character + "_jaw.rotateZ");
	myDisconnectAttr ($character + "_tongue2.rotateZ");
	myDisconnectAttr ($character + "_tongue3.rotateZ");
	myDisconnectAttr ($character + "_tongue4.rotateZ");
	myDisconnectAttr ($character + "_tongue5.rotateZ");

//	$buf = `ls -type expression`;
//	for ($i=0; $i<size($buf); $i++)
//	{
//		string $buf1[] = `listConnections ($buf[$i] + ".output")`;
//		if (!size($buf1))
//			delete $buf[$i];
//	}

	string $str = "";
	$str += "// this expression is auto created to conctol the facial\r\n";
	$str += "// you can modify it\r\n";
	$str += "// supported by huangzhongwei@idmt.org.cn, td\r\n";
	$str += "\r\n";
	
	$str += "// Ctrl_L_Lids\r\n";
	$str += $character + "_LwrLid_left.rotateX = clamp(-30, 15, " + $character + "_eyeJoint_left.rotateX * 0.2 + clamp(0, 40, " + $character + "_eyeJoint_left.rotateX / 2)) + clamp(-5, 12, " + $character + "_Ctrl_L_Lids.translateX * 15);\r\n";
	$str += $character + "_LwrLid_left.rotateY = 0.3 * " + $character + "_eyeJoint_left.rotateY;\r\n";
	$str += $character + "_UprLid_A_left.rotateX = clamp(-18, (" + $character + "_LwrLid_left.rotateX + 14) + (clamp(-1, 0, -" + $character + "_Ctrl_L_Lids.translateX) * 10), " + $character + "_eyeJoint_left.rotateX + (clamp(-1, 0.25, " + $character + "_Ctrl_L_Lids.translateY)) * 40 + ((-clamp(-1, -0.25, -" + $character + "_Ctrl_L_Lids.translateY) - 0.25) * 1.34) * (" + $character + "_LwrLid_left.rotateX + 40 - " + $character + "_eyeJoint_left.rotateX));\r\n";
	$str += $character + "_UprLid_A_left.rotateY = 0.3 * " + $character + "_eyeJoint_left.rotateY;\r\n";
	$str += "\r\n";
	
	$str += "// Ctrl_R_Lids\r\n";
	$str += $character + "_LwrLid_right.rotateX = clamp(-30, 15, " + $character + "_eyeJoint_right.rotateX * 0.2 + clamp(0, 40, " + $character + "_eyeJoint_right.rotateX / 2)) + clamp(-5, 12, " + $character + "_Ctrl_R_Lids.translateX * 15);\r\n";
	$str += $character + "_LwrLid_right.rotateY = 0.3 * " + $character + "_eyeJoint_right.rotateY;\r\n";
	$str += $character + "_UprLid_A_right.rotateX = clamp(-18, (" + $character + "_LwrLid_right.rotateX + 14) + (clamp(-1, 0, -" + $character + "_Ctrl_R_Lids.translateX) * 10), " + $character + "_eyeJoint_right.rotateX + (clamp(-1, 0.25, " + $character + "_Ctrl_R_Lids.translateY)) * 40 + ((-clamp(-1, -0.25, -" + $character + "_Ctrl_R_Lids.translateY) - 0.25) * 1.34) * (" + $character + "_LwrLid_right.rotateX + 40 - " + $character + "_eyeJoint_right.rotateX));\r\n";
	$str += $character + "_UprLid_A_right.rotateY = 0.3 * " + $character + "_eyeJoint_right.rotateY;\r\n";
	$str += "\r\n";
	
	$str += "// L_sneer\r\n";
	$str += $blendShape + ".mouth_sneer_up_L = clamp(0, 1, -" + $character + "_L_sneer.translateX + " + $character + "_L_sneer.translateY);\r\n";
	$str += $blendShape + ".mouth_sneer_dn_L = clamp(0, 1, " + $character + "_L_sneer.translateX + " + $character + "_L_sneer.translateY);\r\n";
	$str += "\r\n";
	
	$str += "// R_sneer\r\n";
	$str += $blendShape + ".mouth_sneer_up_R = clamp(0, 1, " + $character + "_R_sneer.translateX + " + $character + "_R_sneer.translateY);\r\n";
	$str += $blendShape + ".mouth_sneer_dn_R = clamp(0, 1, -" + $character + "_R_sneer.translateX + " + $character + "_R_sneer.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_EEE")`)
	{
		$str += "// EEE\r\n";
		$str += $blendShape + ".E_L = clamp(0, 1, " + $character + "_EEE.translateX + " + $character + "_EEE.translateY);\r\n";
		$str += $blendShape + ".E_R = clamp(0, 1, -" + $character + "_EEE.translateX + " + $character + "_EEE.translateY);\r\n";
		$str += "\r\n";
	}
	else
	{
		$str += "// E\r\n";
		$str += $blendShape + ".E = 2.5 * " + $character + "_E.translateY;\r\n";
		$str += "\r\n";
	}

	$str += "// Left_Eye\r\n";
	$str += $blendShape + ".eyebrow_surprise_L = clamp(0, 1, (" + $character + "_Left_Eye.translateX + " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_down_L = clamp(0, 1, (" + $character + "_Left_Eye.translateX - " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_anger_L = clamp(0, 1, (-" + $character + "_Left_Eye.translateX - " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_sad_L = clamp(0, 1, (-" + $character + "_Left_Eye.translateX + " + $character + "_Left_Eye.translateY) / 2);\r\n";
	$str += "\r\n";
	
	$str += "// Right_Eye\r\n";
	$str += $blendShape + ".eyebrow_surprise_R = clamp(0, 1, (-" + $character + "_Right_Eye.translateX + " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_down_R = clamp(0, 1, (-" + $character + "_Right_Eye.translateX - " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_anger_R = clamp(0, 1, (" + $character + "_Right_Eye.translateX  - " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += $blendShape + ".eyebrow_sad_R = clamp(0, 1, (" + $character + "_Right_Eye.translateX + " + $character + "_Right_Eye.translateY) / 2);\r\n";
	$str += "\r\n";
	
	$str += "// CtrlX_Lips\r\n";
	$str += $blendShape + ".mouth_lowlipdn = clamp(0, 1, " + $character + "_CtrlX_Lips.translateX);\r\n";
	$str += $blendShape + ".mouth_lowlipup = clamp(0, 1, -" + $character + "_CtrlX_Lips.translateX);\r\n";
	$str += $blendShape + ".mouth_uplipdn = clamp(0, 1, -" + $character + "_CtrlX_Lips.translateY);\r\n";
	$str += $blendShape + ".mouth_uplipup = clamp(0, 1, " + $character + "_CtrlX_Lips.translateY);\r\n";
	$str += "\r\n";
	
	if (`objExists ($character + "_Puff_O_Smile")`)
	{
		$str += "// Puff_O_Smile\r\n";
		$str += $blendShape + ".mouth_oop = 5.0 * clamp(0, 0.2, -" + $character + "_Puff_O_Smile.translateY);\r\n";
		if (`objExists ($blendShape + ".mouth_laug_Open")`)
		{
			$str += $blendShape + ".mouth_laug_Open = 5.0 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
		}
	}
	else
	{
		$str += "// Puff\r\n";
		$str += $blendShape + ".mouth_oop = 5.0 * clamp(0, 0.2, -" + $character + "_Puff.translateY);\r\n";
	}
	$str += $character + "_Upper_Teeth_G.rotateX = 65.0 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Upper_Teeth_G.translateY = 0.59 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Lower_Teeth_G.rotateX = 110.66 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += $character + "_Lower_Teeth_G.translateZ = -0.555 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY);\r\n";
	$str += "\r\n";

	$str += "// L_Smile_Sad\r\n";
	$str += $blendShape + ".mouth_smile_L = 5.0 * clamp(0, 0.2, " + $character + "_L_Smile_Sad.translateY);\r\n";
	$str += $blendShape + ".mouth_sad_L = 5.0 * clamp(0, 0.2, -" + $character + "_L_Smile_Sad.translateY);\r\n";
	$str += "\r\n";
	
	$str += "// R_Smile_Sad\r\n";
	$str += $blendShape + ".mouth_smile_R = 5.0 * clamp(0, 0.2, " + $character + "_R_Smile_Sad.translateY);\r\n";
	$str += $blendShape + ".mouth_sad_R = 5.0 * clamp(0, 0.2, -" + $character + "_R_Smile_Sad.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_Lip_Twist_Up_Down")`)
	{
		$str += "// Lip_Twist_Up_Down\r\n";
		$str += $blendShape + ".mouth_twist_L = clamp(0, 1, " + $character + "_Lip_Twist_Up_Down.translateX);\r\n";
		$str += $blendShape + ".mouth_twist_R = clamp(0, 1, -" + $character + "_Lip_Twist_Up_Down.translateX);\r\n";
		$str += $blendShape + ".mouth_lips_up = clamp(0, 1, " + $character + "_Lip_Twist_Up_Down.translateY);\r\n";
		$str += $blendShape + ".mouth_lips_dow = clamp(0, 1, -" + $character + "_Lip_Twist_Up_Down.translateY);\r\n";
		$str += "\r\n";
	}

	$str += "// T_L\r\n";
	$str += $character + "_tongue2.rotateZ = 298.531 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue3.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 289.808 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue4.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 139.716 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += $character + "_tongue5.rotateZ = -350 * clamp(0, 0.2, -" + $character + "_T_L.translateY) + 360 * clamp(0, 0.2, " + $character + "_T_L.translateY);\r\n";
	$str += "\r\n";

	if (`objExists ($character + "_Lip_In_Kiss")`)
	{
		$str += "// Lip_In_Kiss\r\n";
		$str += $blendShape + ".mouth_lip_in = 5 * clamp(0, 0.2, -" + $character + "_Lip_In_Kiss.translateY);\r\n";
		$str += $blendShape + ".mouth_kiss = 5 * clamp(0, 0.2, " + $character + "_Lip_In_Kiss.translateY);\r\n";
		$str += "\r\n";
	}

	$str += "// Jaw_Rot\r\n";
	$str += $character + "_jaw.rotateX = 115.0 * " + $character + "_Jaw_Rot.translateY;\r\n";
	$str += $character + "_jaw.rotateZ = -75.0 * " + $character + "_Jaw_Rot.translateX;\r\n";
	$str += "\r\n";
	
	$str += $blendShape + ".O = 2.5 * " + $character + "_OOO.translateY; // OOO\r\n";
	$str += $blendShape + ".F = 2.5 * " + $character + "_FV.translateY; // FV\r\n";
	$str += $blendShape + ".M = 2.5 * " + $character + "_M.translateY; // M\r\n";
	$str += $blendShape + ".U = 2.5 * " + $character + "_U.translateY; // U\r\n";
	$str += "\r\n";
	
	if (`objExists ($character + "_Puff_O_Smile")`)
	{
		$str += $character + "_Lower_Teeth_G.translateY = -0.555 * " + $character + "_OOO.translateY - 0.345 * clamp(0, 0.2, " + $character + "_Puff_O_Smile.translateY); // Puff_O_Smile, OOO\r\n";
	}

	print $str;
	expression -name $expression -string $str;

	string $buf[]= {"L", "R"};
	for ($rl in $buf)
	{
		connectAttr -force ($character + "_blendShape.eyebrow_surprise_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_surprise_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_down_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_down_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_anger_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_anger_" + $rl);
		connectAttr -force ($character + "_blendShape.eyebrow_sad_" + $rl) ($character + "_brow_" + $rl + "_blendShape." + "brow_sad_" + $rl);
	}

	confirmDialog -message "成功";
}

global proc string zwGetCharacter()
{
	string $buf[] = `ls "*_MASTER"`;
	if (size($buf) != 1)
		error "不能从MASTER来判断角色名字";

	string $character = `substitute "_MASTER$" $buf[0] ""`;

	return $character;
}

global proc zwRebuildBlendShapeProc(string $group, int $freeze)
{
	string $buf[] = `ls -selection`;
	if (size($buf) != 1)
		error "先选择物体";
	string $base = $buf[0];
	
	if (!`objExists $group`)
		error ($group + "不存在");

	string $blendShape = zwGetCharacter();
	string $lr = `match "^[RL]_" $group`;
	if ($lr != "")
		$blendShape = $blendShape + "_brow_" + $lr + "blendShape";
	else
		$blendShape = $blendShape + "_blendShape";

	if (`objExists $blendShape`)
		delete $blendShape;

	string $buf[] = `listRelatives -fullPath -children $group`;
//	if ($freeze)
	{
		for ($target in $buf)
		{
			connectAttr ($base + ".rotatePivot") ($target + ".rotatePivot");
			disconnectAttr ($base + ".rotatePivot") ($target + ".rotatePivot");
		//	delete `pointConstraint $base $target`;
		//	makeIdentity -apply true $target;
		}
	}
	select $buf;
	select -add $base;
	blendShape -name $blendShape -frontOfChain -topologyCheck off;
	delete $group;
}

global proc zwRBSsetMode(int $isSec)
{
	global int $zwRBSisSec;
	$zwRBSisSec = $isSec;
}