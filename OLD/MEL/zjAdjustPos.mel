/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//*******************************************************************
//basic knowledge:
//	original's position + old translate = pivot's position
//	original's position + new translate = set value
//*******************************************************************

//get the boundingbox's position
global proc float[] getAbwspos()
{
        string $obj[]=`ls -sl`;
	float $piv[];
	float $abw[];
	if (`match ".vtx" $obj[0]`==".vtx")
	{
	   $piv=`xform -q -ws -t`;
	}
	else
	{
	   $piv=`xform -q -ws -piv`;
	}
	$abw[0] = $piv[0];
	$abw[1] = $piv[1];
	$abw[2] = $piv[2];
	return $abw;
}



//translate in absolute world space
global proc movetranspos()
{

	float $wpos[];
	$x = `floatSliderGrp -q -v Absolute_xslider`;
	$y = `floatSliderGrp -q -v Absolute_yslider`;
	$z = `floatSliderGrp -q -v Absolute_zslider`;
	
	string $object[] = `ls -selection`;
        if  (`match "vtx" $object[0]`=="vtx") 
          {
                if (size($object) == 1)
	        {
                           xform -ws -translation  $x $y $z;
                                            
	     	 }
           }
        else 
           {
                 if (size($object) == 1)
	           {
		          $wpos = getAbwspos();
		          $org_x = $wpos[0] - `getAttr ($object[0]+".tx")`;
		          $org_y = $wpos[1] - `getAttr ($object[0]+".ty")`;
		          $org_z = $wpos[2] - `getAttr ($object[0]+".tz")`;
		          if (!`checkBox -q -v Adj_pivot`)
			        xform -ws -translation  ($x-$org_x) ($y-$org_y) ($z-$org_z);
		           else
			        xform -ws -pivots  $x $y $z;
		
	     
	           }
           }
	

}

//translate in offset world space
global proc offsettranspos()
{
	string $object[] = `ls -selection `;
	if (size($object) == 1)
	{
		$x0 = `floatSliderGrp -q -v Absolute_xslider`;
		$y0 = `floatSliderGrp -q -v Absolute_yslider`;
		$z0 = `floatSliderGrp -q -v Absolute_zslider`;
		$x1 = `floatSliderGrp -q -v Offset_xslider`;
		$y1 = `floatSliderGrp -q -v Offset_yslider`;
		$z1 = `floatSliderGrp -q -v Offset_zslider`;
		
		floatSliderGrp -e -v 0 Offset_xslider;
		floatSliderGrp -e -v 0 Offset_yslider;
		floatSliderGrp -e -v 0 Offset_zslider;

		floatSliderGrp -e -v ($x0+$x1) Absolute_xslider;
		floatSliderGrp -e -v ($y0+$y1) Absolute_yslider;
		floatSliderGrp -e -v ($z0+$z1) Absolute_zslider;
		movetranspos();
	}
}

//interface
global proc zjAdjustPos()
{
        string $child[];

	if (`window -q -exists AdjposWin`)
		return;
	
	window -title "Move Transform Type-In" -w 390 -h 260 -sizeable 1 AdjposWin;
		columnLayout -adjustableColumn true;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Move Transform Type-In..." -command "zjHelpCallback zjAdjustPos";
				setParent ..;

			frameLayout -label "Absolute:World" -borderStyle "etchedOut";
			
				$i = 0;
			
				string $formLayout = `formLayout`;
 					$child[$i++] = `floatSliderGrp -field true -l "X:" -min -100 -fieldMinValue -999999999 -fieldMaxValue 999999999 -step  0.1 -pre 3 -columnWidth 1 80
						 -cc "movetranspos" -dragCommand "movetranspos"
						 Absolute_xslider`;
 					$child[$i++] = `floatSliderGrp -field true -l "Y:" -min -100 -fieldMinValue -999999999 -fieldMaxValue 999999999 -step  0.1 -pre 3 -columnWidth 1 80
						 -cc "movetranspos" -dragCommand "movetranspos"
						 Absolute_yslider`;
 					$child[$i++] = `floatSliderGrp -field true -l "Z:" -min -100 -fieldMinValue -999999999 -fieldMaxValue 999999999 -step  0.1 -pre 3 -columnWidth 1 80
						 -cc "movetranspos" -dragCommand "movetranspos"
						 Absolute_zslider`;
			
				formLayout -edit
					-attachForm			$child[0]	"top"		5
					-attachForm			$child[0]	"left"		5

					-attachControl			$child[1]	"top"		5	$child[0]
					-attachForm			$child[1]	"left"		5

					-attachControl			$child[2]	"top"		5	$child[1]
					-attachForm			$child[2]	"left"		5
				$formLayout;
				setParent ..;
		
			setParent ..;

			frameLayout -label "Offset:World" -borderStyle "etchedOut";
		
				$i = 0;

				string $formLayout = `formLayout`;
 					$child[$i++] = `floatSliderGrp -field true -l "X:" -min -1000 -max 1000 -step  0.1 -pre 3 -columnWidth 1 80
							-cc "offsettranspos" Offset_xslider`;
 					$child[$i++] = `floatSliderGrp -field true -l "Y:" -min -1000 -max 1000 -step  0.1 -pre 3 -columnWidth 1 80
							-cc "offsettranspos" Offset_yslider`;
 					$child[$i++] = `floatSliderGrp -field true -l "Z:" -min -1000 -max 1000 -step  0.1 -pre 3 -columnWidth 1 80
							-cc "offsettranspos" Offset_zslider`;
			
				formLayout -edit
					-attachForm			$child[0]	"top"		5
					-attachForm			$child[0]	"left"		5

					-attachControl			$child[1]	"top"		5	$child[0]
					-attachForm			$child[1]	"left"		5

					-attachControl			$child[2]	"top"		5	$child[1]
					-attachForm			$child[2]	"left"		5
				$formLayout;
				setParent ..;
			setParent ..;
			checkBox -label "Affect Pivot Only" -align "left" -v 0  Adj_pivot;
			setParent ..;
	showWindow AdjposWin;
	updateAdjPos();
	scriptJob -permanent -parent AdjposWin -event SelectionChanged ("updateAdjPos");

}

//update when changing the selection
global proc updateAdjPos()
{
	string $object[] = `ls -selection `;
	if (`match ".vtx" $object[0]`==".vtx") 
		{
			   checkBox -label "Affect Pivot Only" -e -v 0 -en 0 Adj_pivot;
		}
	else
		{
			   checkBox -label "Affect Pivot Only" -e -v 0 -en 1  Adj_pivot;
		}
	if (size($object) == 1)
	{
		float $Awpos[];
		$Awpos = getAbwspos();

		floatSliderGrp -e -en 1 -v $Awpos[0] Absolute_xslider;
		floatSliderGrp -e -en 1 -v $Awpos[1] Absolute_yslider;
		floatSliderGrp -e -en 1 -v $Awpos[2] Absolute_zslider;
		floatSliderGrp -e -en 1 Offset_xslider;
		floatSliderGrp -e -en 1 Offset_yslider;
		floatSliderGrp -e -en 1 Offset_zslider;
	}
	else 
	{
		floatSliderGrp -e -en 0 -v 0 Absolute_xslider;
		floatSliderGrp -e -en 0 -v 0 Absolute_yslider;
		floatSliderGrp -e -en 0 -v 0 Absolute_zslider;
		floatSliderGrp -e -en 0 Offset_xslider;
		floatSliderGrp -e -en 0 Offset_yslider;
		floatSliderGrp -e -en 0 Offset_zslider;

	}
}
