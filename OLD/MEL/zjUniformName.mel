/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ’‘÷æΩ‹
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zjUniformName()
{
	if(!`window -exists uniformnameWin`)
	{
		window -title "Uniform Mushroom Name"  -resizeToFitChildren true uniformnameWin;
		columnLayout -adjustableColumn true;
			menuBarLayout;
				menu -label "Help";
					menuItem -label "Help on Uniform Mushroom Name..." -command "zjHelpCallback zjUniformName";
				setParent ..;
			formLayout formLayout1;
				$ctr2 = `optionMenu`;
					menuItem -label "mushflo_c_lo_a01setupShape.1505.1587";
					menuItem -label "mushflo_c_lo_a02_steupShape.763.750";
					menuItem -label "mushgro_c_lo_a01setupShape.3429.3547";
					menuItem -label "mushhug_c_lo_a02_1Shape.2348.2422";
					menuItem -label "mushhug_c_lo_b01_1Shape.1080.1132";
					menuItem -label "mushhug_c_lo_c01_1Shape.1684.1764";
					menuItem -label "mushhug_c_lo_g01_1Shape.1622.1655";
					menuItem -label "mushlar_c_lo_a01_1Shape.305.322";
					menuItem -label "mushlar_c_lo_a02_1Shape.665.708";
					menuItem -label "mushlar_c_hi_c01_Shape1.1529.1511";
					menuItem -label "mushlar_c_lo_c02_1Shape.573.566";
					menuItem -label "mushlar_c_lo_e01_1Shape.1191.1322";
					menuItem -label "mushmed_c_lo_b01_1Shape.376.364";
					menuItem -label "mushmed_c_lo_c01_Shape1.532.591";
					menuItem -label "mushmed_c_lo_c01_Shape2.606.663";
					menuItem -label "mushmed_c_lo_d01_Shape1.821.859";
					menuItem -label "mushmed_c_lo_d01_Shape2.1005.1046";
					menuItem -label "mushmed_c_lo_d01_Shape3.631.662";
					menuItem -label "mushmed_c_lo_f01_Shape1.239.250";
					menuItem -label "mushmed_c_lo_f01_Shape2.275.287";
					menuItem -label "mushmed_c_lo_f01_Shape3.346.359";
					menuItem -label "mushmed_c_lo_f01_Shape4.311.323";
					menuItem -label "mushmed_c_lo_f01_Shape5.242.253";
					menuItem -label "mushmed_c_lo_f01_Shape6.242.254";
					menuItem -label "mushmed_c_lo_h01_1Shape.2988.3104";
					menuItem -label "mushmed_c_lo_h01_2Shape.1704.1744";
					menuItem -label "mushmed_c_lo_h01_5Shape.536.564";
					menuItem -label "mushmed_c_lo_h01_Shape3.281.292";
					menuItem -label "mushmed_c_lo_h01_Shape4.273.284";
					menuItem -label "mushmed_c_lo_i01_1Shape.288.278";
					menuItem -label "mushmed_c_lo_i01_2Shape.280.270";
					menuItem -label "mushmed_c_lo_i01_3Shape.354.338";
					menuItem -label "mushsma_c_lo_b01_1Shape.829.911";
					menuItem -label "mushsma_c_lo_l01_Shape1.511.518";
					menuItem -label "mushsma_c_lo_l01_Shape2.504.506";
					menuItem -label "mushsma_c_lo_m01_1Shape.4443.4658";
					menuItem -label "mushsma_c_lo_n01_1Shape.562.578";
					menuItem -label "mushsma_c_lo_n01_2Shape.660.676";
					menuItem -label "mushsma_c_lo_s01_1Shape.8469.8570";
					menuItem -label "mushsma_c_lo_t01_1Shape.1295.1302";
					menuItem -label "mushsma_c_lo_w01_1Shape.869.933";
				$ctr3 = `textField -visible false`;
				$ctr1 = `checkBox -label "custom" -changeCommand ("unLayer_setUI "+$ctr2+" "+$ctr3) unif_cust`;

				$ctr4 = `button -label "Select" -command ("selfunc "+$ctr2+" "+$ctr3)`;
				$ctr5 = `button -label "Uniform" -command ("unifunc "+$ctr2+" "+$ctr3)`;
				$ctr6 = `button -label "Auto" -command ("autofunc "+$ctr2)`;

			formLayout -edit
				-attachForm		$ctr1		"top"		17
				-attachForm		$ctr1		"left"		15

				-attachForm		$ctr2		"top"		15
				-attachControl		$ctr2		"left"		10	$ctr1
				-attachForm		$ctr2		"right"		5

				-attachForm		$ctr3		"top"		15
				-attachControl		$ctr3		"left"		10	$ctr1
				-attachForm		$ctr3		"right"		5

				-attachControl		$ctr4		"top"		10	$ctr3
				-attachForm		$ctr4		"left"		0
				-attachPosition		$ctr4		"right"		0	33

				-attachControl		$ctr5		"top"		10	$ctr3
				-attachControl		$ctr5		"left"		5	$ctr4
				-attachPosition		$ctr5		"right"		0	66

				-attachControl		$ctr6		"top"		10	$ctr3
				-attachControl		$ctr6		"left"		5	$ctr5
				-attachPosition		$ctr6		"right"		0	100
			formLayout1;
	}
	showWindow uniformnameWin;
}

//change interface according the checkbox
global proc unLayer_setUI(string $control1,string $control2)
{
	if (`checkBox -query -value unif_cust`)
	{
		optionMenu -edit -visible false $control1;
		textField -edit -visible true $control2;
	}
	else
	{
		optionMenu -edit -visible true $control1;
		textField -edit -visible false $control2;
	}
}

//uniform selected names
global proc unifunc(string $control1,string $control2)
{
	string $old[] = `ls -selection -type "mesh"`;
	string $name = "";
	for ($i=0;$i<size($old);$i++)
	{
		if (`checkBox -query -value unif_cust`)
		{
			string $text = `textField -query -text $control2`;
			string $buf[];
			tokenize $text "." $buf;
			string $name = $buf[0];
			rename $old[$i] $name;
		}
		else
		{
			string $text = `optionMenu -query -value $control1`;
			string $buf[];
			tokenize $text "." $buf;
			string $name = $buf[0];
			rename $old[$i] $name;
		}
	}
}

global proc string[] uniformnamefun(string $text,string $list[])
{
	string $selmesh[];
	int $count = 0;
	string $buf[];
	tokenize $text "." $buf;
	int $vert = $buf[1];
	int $fc = $buf[2];
	for ($i in $list)
	{
		int $curvt[] = `polyEvaluate -v $i`;
		int $curfc[] = `polyEvaluate -f $i`;
		if ($curvt[0] = $vert && $curfc[0] == $fc)
		{
			$selmesh[$count++] = $i;
		}
	}
	$selmesh = stringArrayRemoveDuplicates($selmesh);
	return $selmesh;
}
//select meshes with assigned names
global proc selfunc(string $control1,string $control2)
{
	string $list[] = `ls -type "mesh"`;
	string $selmesh[];
	if (`checkBox -query -value unif_cust`)
	{
		string $text = `textField -query -text $control2`;
		$selmesh = uniformnamefun($text,$list);
	}
	else
	{
		string $text = `optionMenu -query -value $control1`;

		$selmesh = uniformnamefun($text,$list);
	}

	if (size($selmesh)>0)
		select $selmesh;
}

global proc autofunc(string $cont)
{
	int $num = `optionMenu -query -numberOfItems $cont`;
	for ($i=1;$i<=$num;$i++)
	{
		optionMenu -e -select $i $cont;
		string $text = `optionMenu -query -value $cont`;
		string $list[] = `ls -l -type "mesh"`;
		string $selmesh[] = uniformnamefun($text,$list);
		for ($k=0;$k<size($selmesh);$k++)
		{
			if (`objExists $selmesh[$k]`)
			{
				string $old[] = `listRelatives -fullPath -parent -type "transform" $selmesh[$k]`;
				string $buf[];
				tokenize $text "." $buf;
				string $name = $buf[0];
				rename $selmesh[$k] $name;
				string $tr = `substitute "Shape" $name ""`;
				//rename the first transform of each type of mushroom
				if ($k == 0)
				{
					if ($tr != $old[0])
					{
						rename $old[0] $tr;
					}
				}
			}
		}
		//rename shape names again coz some shape names r modified automatically with the change of transform names
		string $list[] = `ls -l -type "mesh"`;
		string $selmesh[] = uniformnamefun($text,$list);
		for ($k=0;$k<size($selmesh);$k++)
		{
			if (`objExists $selmesh[$k]`)
			{
				string $buf[];
				tokenize $text "." $buf;
				string $name = $buf[0];
				rename $selmesh[$k] $name;
			}
		}

	}
	optionMenu -e -select 1 $cont;
}