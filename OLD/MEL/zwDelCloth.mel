/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwDelCloth()
{
	zwDelClothOK "lo";
	zwDelClothOK "md";
	zwDelClothOK "hi";

	zwDelClothDelFaceMd "wsoldierthin_c_md_cestus3" 118;
	zwDelClothDelFaceHi "wsoldierthin_c_hi_cestus3" 200;
}

global proc zwDelClothOK(string $lod)
{
	delete `ls ("*rsoldierthin_c_" + $lod + "_cloth1")`;
	delete `ls ("*rsoldierthin_c_" + $lod + "_cloth2")`;
	delete `ls ("*rsoldierthin_c_" + $lod + "_cloth3")`;
	delete `ls ("*rsoldierthin_c_" + $lod + "_cloth4")`;
	delete `ls ("*rsoldierref01_c_" + $lod + "_cloth")`;
	delete `ls ("*rsoldierref04_c_" + $lod + "_cloth")`;
	delete `ls ("*rsoldierref07_c_" + $lod + "_cloth")`;

	delete `ls ("*wsoldierthin_c_" + $lod + "_cloth2")`;
}

global proc zwDelClothDelFaceMd(string $cloth, int $count)
{
	string $buf[] = `ls ("*" + $cloth)`;
	for ($cestus in $buf)
	{
		string $buf1[] = `listRelatives -fullPath -shapes $cestus`;
		for ($shape in $buf1)
		{
			string $cmd = "";
			string $buf2[] = `listHistory $shape`;
			for ($history in $buf2)
			{
				if (`nodeType $history` == "polySmoothFace")
				{
					int $divisions = `getAttr ($history + ".divisions")`;
					setAttr ($history + ".divisions") 0;
					$cmd += "setAttr \"" + $history + ".divisions\" " + $divisions + ";\n";
				}
			}
			int $face[] = `polyEvaluate -face $shape`;
			if ($face[0] == $count)
				delete ($shape + ".f[53:58]") ($shape + ".f[112:117]");
			if ($cmd != "")
			{
				eval $cmd;
				string $buf3[] = `listHistory $shape`;
				string $buf4[] = `listConnections -plugs true -connections true -destination false $buf3[1]`;
				string $buf5[] = `listConnections -plugs true -connections true -source false $buf3[1]`;
				connectAttr -force $buf4[1] $buf5[1];
				string $buf6[] = `listConnections -plugs true -connections true -source false $buf3[size($buf3)-1]`;
				connectAttr -force $buf6[0] $buf4[0];
				connectAttr -force $buf5[0] $buf6[1];
			}
		}
	}
}

global proc zwDelClothDelFaceHi(string $cloth, int $count)
{
	string $buf[] = `ls ("*" + $cloth)`;
	for ($cestus in $buf)
	{
		string $buf1[] = `listRelatives -fullPath -shapes $cestus`;
		for ($shape in $buf1)
		{
			string $cmd = "";
			string $buf2[] = `listHistory $shape`;
			for ($history in $buf2)
			{
				if (`nodeType $history` == "polySmoothFace")
				{
					int $divisions = `getAttr ($history + ".divisions")`;
					setAttr ($history + ".divisions") 0;
					$cmd += "setAttr \"" + $history + ".divisions\" " + $divisions + ";\n";
				}
			}
			int $face[] = `polyEvaluate -face $shape`;
			if ($face[0] == $count)
				delete ($shape + ".f[88:99]") ($shape + ".f[188:199]");
			if ($cmd != "")
			{
				eval $cmd;
				string $buf3[] = `listHistory $shape`;
				string $buf4[] = `listConnections -plugs true -connections true -destination false $buf3[1]`;
				string $buf5[] = `listConnections -plugs true -connections true -source false $buf3[1]`;
				connectAttr -force $buf4[1] $buf5[1];
				string $buf6[] = `listConnections -plugs true -connections true -source false $buf3[size($buf3)-1]`;
				connectAttr -force $buf6[0] $buf4[0];
				connectAttr -force $buf5[0] $buf6[1];
			}
		}
	}
}