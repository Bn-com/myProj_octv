/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc zwAutoBackup()
{
	if(!`window -exists autoBackup`)
	{
		window -menuBar true -title "Auto Backup" -width 445 -height 200 autoBackup;
			menu -label "Help";
				menuItem -label "Help on Auto Backup..." -command "zjHelpCallback zwAutoBackup";
			int $autoBackupEnable = false, $autoBackupFiles = 5, $autoBackupInterval = 5, $autoBackupCustomize = true;
			string $autoBackupPath = "";
			if (`optionVar -exists "autoBackupEnable"`)
			{
				$autoBackupEnable = `optionVar -query "autoBackupEnable"`;
				$autoBackupFiles = `optionVar -query "autoBackupFiles"`;
				$autoBackupInterval = `optionVar -query "autoBackupInterval"`;
				$autoBackupCustomize = `optionVar -query "autoBackupCustomize"`;
				$autoBackupPath = `optionVar -query "autoBackupPath"`;
			}
			formLayout formLayout1;
				columnLayout columnLayout1;
					checkBoxGrp -label "Enable:" -value1 $autoBackupEnable -changeCommand "autoBackupSetUI" autoBackupEnable;
					intSliderGrp -enable $autoBackupEnable -label "Number of Autobak files:" -field true -minValue 1 -maxValue 100 -fieldMinValue 1 -fieldMaxValue 100 -value $autoBackupFiles autoBackupFiles;
					intSliderGrp -enable $autoBackupEnable -label "Backup Interval (minutes):" -field true -minValue 1 -maxValue 100 -fieldMinValue 1 -fieldMaxValue 100 -value $autoBackupInterval autoBackupInterval;
					checkBoxGrp -enable $autoBackupEnable -value1 $autoBackupCustomize -label "AutoBackup Path:" -label1 "Current Project\\scenes\\autobackup" -columnWidth 2 300 -changeCommand "autoBackupSetUI" autoBackupCustomize;
					textFieldButtonGrp -enable ($autoBackupEnable && (!$autoBackupCustomize)) -label "Customize:" -text $autoBackupPath -buttonLabel "Browse" -buttonCommand "autoBackupPathBrowse" autoBackupPath;
					setParent ..;
				string $button1 = `button -label "Auto Backup" -command "autoBackupOk;\ndeleteUI autoBackup;"`;
				string $button2 = `button -label "Apply" -command "autoBackupOk"`;
				string $button3 = `button -label "Close" -command "deleteUI autoBackup"`;

			formLayout -edit
				-attachForm	columnLayout1	"top"		5
				-attachForm	columnLayout1	"left"		5

				-attachForm	$button1	"left"		5
				-attachForm	$button1	"bottom"	5
				-attachPosition	$button1	"right"		5	33

				-attachControl	$button2	"left"		5	$button1
				-attachForm	$button2	"bottom"	5
				-attachPosition	$button2	"right"		5	67

				-attachControl	$button3	"left"		5	$button2
				-attachForm	$button3	"bottom"	5
				-attachForm	$button3	"right"		5
			formLayout1;
	}
	showWindow;
}

global proc autoBackupSetUI()
{
	int $autoBackupCustomize = `checkBoxGrp -query -value1 autoBackupCustomize`;
	int $autoBackupEnable = `checkBoxGrp -query -value1 autoBackupEnable`;
	intSliderGrp -edit -enable $autoBackupEnable autoBackupFiles;
	intSliderGrp -edit -enable $autoBackupEnable autoBackupInterval;
	checkBoxGrp -edit -enable $autoBackupEnable autoBackupCustomize;
	textFieldButtonGrp -edit -enable ($autoBackupEnable && (!$autoBackupCustomize)) autoBackupPath;
}

global proc autoBackupPathBrowse()
{
	string $workspace = `workspace -query -dir`;
	workspace -dir `textFieldGrp -query -text autoBackupPath`;
	fileBrowserDialog -mode 4 -fileCommand "autoBackupPath" -actionName "AutoBackup Path";
	workspace -dir $workspace;
}

global proc autoBackupPath(string $filename, string $fileType)
{
	textFieldButtonGrp -edit -text $filename autoBackup|formLayout1|columnLayout1|autoBackupPath;
}

global proc autoBackupOk()
{
	int $autoBackupEnable, $autoBackupFiles, $autoBackupInterval, $autoBackupCustomize;
	$autoBackupEnable = `checkBoxGrp -query -value1 autoBackupEnable`;
	$autoBackupFiles = `intSliderGrp -query -value autoBackupFiles`;
	$autoBackupInterval = `intSliderGrp -query -value autoBackupInterval`;
	$autoBackupCustomize = `checkBoxGrp -query -value1 autoBackupCustomize`;
	string $autoBackupPath = `textFieldButtonGrp -query -text autoBackupPath`;
	if (!$autoBackupCustomize)
	{
		if (`filetest -d $autoBackupPath`)
			optionVar -stringValue "autoBackupPath" $autoBackupPath;
		else
			error "Illegal AutoBackup Path!";
	}
	optionVar -intValue "autoBackupEnable" $autoBackupEnable;
	optionVar -intValue "autoBackupFiles" $autoBackupFiles;
	optionVar -intValue "autoBackupInterval" $autoBackupInterval;
	optionVar -intValue "autoBackupCustomize" $autoBackupCustomize;
	zwAutoBackupProc;
}