//-----------------------------------------------------------------------
//  Alias Script File
//  MODIFY THIS AT YOUR OWN RISK
//
//  Creation Date:  January 16, 2003
//
//  Procedure Name:
//      check_Summary
//
//  Description:
//
//		Utility function used by the various components of the
//		"Check Scene" function.
//
//		Records the results of a particular check operation.  A short 
//		summary is given (just the name of the operation), as well as a
//		long one that describes how the operation modified the scene 
//		(how many nodes were removed, for example).  The short summaries
//		is written to the result line, while the long summaries are
//		written to the Script Editor.
//
//  Input Arguments: 
//
//		$short - short summary to be written to result line
//		$long - longer summary to be written to the Script Editor
//
//	Return Value: None.
//
//	Related Functions:
//
//		For progress reporting and interruptability, user-defined check
//		steps might want to make use of the following utility functions:
//
//		check_StartProgress() - called before an operation begins
//		check_SetProgress() - called as the operation is running, to 
//								update the progress bar.
//		check_EndProgress() - called to signal that the operation is 
//								finished.
//		check_CheckInterrupt() - called between check operations to
//								   detect when a previous operation has
//								   been interrupted.
//		check_Summary() - called to report the results of check 
//							operations.
//
//-----------------------------------------------------------------------

global proc check_Summary( string $short, string $long )
{
	//	global variables are used to store the summaries of the
	//	various operations.
	//
	global string $gCheckSummary[];
	global string $gCheckSteps[];

	$gCheckSummary[size($gCheckSummary)] = $long;
	$gCheckSteps[size($gCheckSteps)] = $short;
}

