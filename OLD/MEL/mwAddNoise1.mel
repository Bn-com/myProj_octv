/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: mw
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


// Modified by Larry,   Add to noise to each shader.  
// if already has color gain connect. then mutil org color gain with noise node color


global proc mwAddNoise1()
{
 
	// Get Selected Node
	
	string $tmpnodes[] = `ls -sl`;
	string $selectShader[];
	string $colorList[];
	
	
	int $tpindex= 0;
	if(size($tmpnodes) != 0)
	{
           for($tmp in $tmpnodes)
           {
           	if(`nodeType $tmp` != "surfaceShader") continue;
           	string $pre = `substring $tmp 1 (size($tmp) - 14)`;
           	if(`objExists ($pre + "_colorFile")`)
           	{
           	   $colorList[$tpindex] = $pre + "_colorFile";
           	   $tpindex ++;
           	}
           }
 
         }else{
            $colorList = `ls "*colorFile"`;
         }	
		
	for($node in $colorList)
	{
		
            // By Larry:
                // get prefix name;
                  string $buf[];
                 int $size = `tokenize $node "_" $buf`;
              //    string $prefix = $buf[0];
                  string $prefix = `substring $node 1 (size($node) - 10)`;  
               
		//CHECK FOR EXISTING CONNECTIONS
		string $cons[] = `listConnections -s 1 -d 0 ($node+".colorGain")`;
		if(`size $cons`)
		{
			for($con in $cons)
			{
				// By Larry;
			/*
          	          if(`objExists ($con+".colorGain")`)
				{
				if(`connectionInfo -id ($con+".colorGain")`==0)
					{
						//print ("CONNECTING: "+$reverse+".output TO: "+$con+".colorGain\n");
						//By Larry:
						string $reverse = Create_noise_node($prefix);
						connectAttr -f ($reverse+".output") ($con+".colorGain");
					}
					else
					{
					//	if(`isConnected ($reverse+".output") ($con+".colorGain")`==0)
					//	{
					//		print ("\nPLEASE CONNECT MANUALLY: select -r "+$node+"\n\n");
					//	}
					}
				
				}
				else
				{
                     */
				  // By Larry	
				   
				   if(`nodeType $con` == "multiplyDivide")
				   {
				       print ($con + "  Already Has a MD Node connected, Skipped\n");
				       continue;
				   }
				   if(`nodeType $con` == "reverse")
	 			   {
				   	print ($con + "  Already Has a Noise Node connected, Skipped\n");
				        continue;
				   }
				   
				   // Create MD node
				   string $MDnode = `shadingNode -asUtility multiplyDivide`;
				   $MDnode = `rename $MDnode ($prefix + "_Noise_MD")`;
				   string $oldConnect = `connectionInfo -sfd ($node + ".colorGain")`;
				   string $reverse = Create_noise_node($prefix);
				   
				   connectAttr -f ($reverse+".output") ($MDnode + ".input1");
				   connectAttr -f $oldConnect ($MDnode + ".input2");
				   connectAttr -f ($MDnode + ".output") ($node + ".colorGain");
				   
				   print ("\n Add MD Node to: " + $con +"\n");
			//	}
			}
		}
		else
		{
			//By Larry:
			string $reverse = Create_noise_node($prefix);			
			connectAttr -f ($reverse+".output") ($node+".colorGain");
		}
	}
	print "\nALL DONE\n";
}

global proc string Create_noise_node(string $prefix)
{
   	string $file = `shadingNode -asTexture file`;
	$file = `rename $file ($prefix + "_ROCK_NOISE_FILE")`;
	string $placement = `shadingNode -asUtility place2dTexture`;
	connectAttr -f ($placement+".coverage") ($file+".coverage");
	connectAttr -f ($placement+".translateFrame") ($file+".translateFrame");
	connectAttr -f ($placement+".rotateFrame") ($file+".rotateFrame");
	connectAttr -f ($placement+".mirror") ($file+".mirror");
	connectAttr -f ($placement+".stagger") ($file+".stagger");
	connectAttr -f ($placement+".wrapU") ($file+".wrapU");
	connectAttr -f ($placement+".wrapV") ($file+".wrapV");
	connectAttr -f ($placement+".repeatUV") ($file+".repeatUV");
	connectAttr -f ($placement+".offset") ($file+".offset");
	connectAttr -f ($placement+".rotateUV") ($file+".rotateUV");
	connectAttr -f ($placement+".noiseUV") ($file+".noiseUV");
	connectAttr ($placement+".outUV") ($file+".uv");
	connectAttr ($placement+".outUvFilterSize") ($file+".uvFilterSize");

	//ASSIGN ROCK NOISE AS THE NOISE TEXTURE
	setAttr -type "string" ($file+".fileTextureName") "Z:/Projects/Thru_The_Moebius_Strip/Production/WORKING/R&D/LOOK DEVELOPMENT/rockNoise.iff";

	//CREATE REVERSE NODE
	string $reverse = `createNode reverse`;
        $reverse = `rename $reverse ($prefix + "_NOISE_REVERSE")`;
	connectAttr -f ($file+".outColor") ($reverse+".input");	
	return $reverse;
}