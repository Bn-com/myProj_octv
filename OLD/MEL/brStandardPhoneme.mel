global proc brStandardPhoneme()
{
	string $locationA=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.A.jpg";
	string $locationCONS=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.CONS.jpg";
	string $locationEI=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.EI.jpg";
	string $locationFV=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.FV.jpg";
	string $locationL=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.L.jpg";
	string $locationMBP=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.MBP.jpg";
	string $locationO=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.O.jpg";
	string $locationReset=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.Reset.jpg";
	string $locationU=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Mouth.U.jpg";
	string $locationAngry=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Expression.Angry.jpg";
	string $locationDepression=	substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Expression.Depression.jpg";
	string $locationPleasant=	substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Expression.Pleasant.jpg";
	string $locationSmile=		substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Expression.Smile.jpg";
	string $locationSurprise=	substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\Expression.Surprise.jpg";
	if(`window -exists w_ta_ALL_win`)
		deleteUI w_ta_ALL_win;
	window -title "Bratz standard mouth"  -s false  w_ta_ALL_win;

		string $form = `formLayout`;
				
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;

				string $mouthFrLayout = `frameLayout -label "¿ÚÐÍ" -font "boldLabelFont" -labelAlign "top" -cll true -borderStyle "etchedIn"`;
					string $mouthFoLayout = `formLayout`;
						string $imageA=`image -w 128 -h 72  -en true -image $locationA`;
						string $buttonA = `button -l "A"  -w 64 -command "br_LoadLipA"`;
						string $imageCONS=`image -w 128 -h 72  -en true -image $locationCONS`;
						string $buttonCONS = `button -l "CNS"  -w 64 -command "br_LoadLipCONS"`;
						string $imageEI=`image -w 128 -h 72  -en true -image $locationEI`;
						string $buttonEI = `button -l "EI"  -w 64 -command "br_LoadLipEI"`;
						string $imageFV=`image -w 128 -h 72  -en true -image $locationFV`;
						string $buttonFV = `button -l "FV"  -w 64 -command "br_LoadLipFV"`;
						string $imageL=`image -w 128 -h 72  -en true -image $locationL`;
						string $buttonL = `button -l "L"  -w 64 -command "br_LoadLipL"`;
						string $imageMBP=`image -w 128 -h 72  -en true -image $locationMBP`;
						string $buttonMBP = `button -l "MBP"  -w 64 -command "br_LoadLipMBP"`;
						string $imageO=`image -w 128 -h 72  -en true -image $locationO`;
						string $buttonO = `button -l "O"  -w 64 -command "br_LoadLipO"`;
						string $imageReset=`image -w 128 -h 72  -en true -image $locationReset`;
						string $buttonReset = `button -l "Reset"  -w 64 -command "br_LoadLipReset"`;
						string $imageU=`image -w 128 -h 72  -en true -image $locationU`;
						string $buttonU = `button -l "U"  -w 64 -command "br_LoadLipU"`;
						setParent..;
					setParent..;
						formLayout -edit
							-attachForm     $buttonA						"bottom" 10
							-attachForm     $buttonA						"left" 10
							-attachPosition $buttonA						"right" 0 33
							-attachForm     $imageA							"left" 10
							-attachControl  $imageA							"bottom" 5 $buttonA
							-attachPosition $imageA							"right" 0 33
							
							-attachControl  $buttonCONS						"bottom" 10 $imageA
							-attachForm     $buttonCONS						"left" 10
							-attachPosition $buttonCONS						"right" 0 33
							-attachForm     $imageCONS						"left" 10
							-attachControl  $imageCONS						"bottom" 5 $buttonCONS
							-attachPosition $imageCONS						"right" 0 33
							
							-attachControl  $buttonReset						"bottom" 10 $imageCONS
							-attachForm     $buttonReset						"left" 10
							-attachPosition $buttonReset						"right" 0 33
							-attachForm     $imageReset						"left" 10
							-attachControl  $imageReset						"bottom" 5 $buttonReset
							-attachPosition $imageReset						"right" 0 33

							-attachForm	$buttonFV						"bottom" 10 
							-attachControl  $buttonFV						"left" 10 $buttonA
							-attachPosition $buttonFV						"right" 0 66
							-attachControl  $imageFV						"left" 10 $imageA
							-attachControl  $imageFV						"bottom" 5 $buttonFV
							-attachPosition $imageFV						"right" 0 66

							-attachForm	$buttonL						"bottom" 10 
							-attachControl  $buttonL						"left" 10 $buttonFV
							-attachPosition $buttonL						"right" 0 99
							-attachControl  $imageL							"left" 10 $imageFV
							-attachControl  $imageL							"bottom" 5 $buttonL
							-attachPosition $imageL							"right" 0 99

							-attachControl  $buttonMBP						"bottom" 10 $imageFV
							-attachControl  $buttonMBP						"left" 10 $buttonCONS
							-attachPosition $buttonMBP						"right" 0 66
							-attachControl  $imageMBP						"left" 10 $imageCONS
							-attachControl  $imageMBP						"bottom" 5 $buttonMBP
							-attachPosition $imageMBP						"right" 0 66

							-attachControl  $buttonO						"bottom" 10 $imageL
							-attachControl  $buttonO						"left" 10 $buttonMBP
							-attachPosition $buttonO						"right" 0 99
							-attachControl  $imageO							"left" 10 $imageMBP
							-attachControl  $imageO							"bottom" 5 $buttonO
							-attachPosition $imageO							"right" 0 99

							-attachControl  $buttonEI						"bottom" 10 $imageMBP
							-attachControl  $buttonEI						"left" 10 $buttonReset
							-attachPosition $buttonEI						"right" 0 66
							-attachControl  $imageEI						"left" 10 $imageReset
							-attachControl  $imageEI						"bottom" 5 $buttonEI
							-attachPosition $imageEI						"right" 0 66

							-attachControl  $buttonU						"bottom" 10 $imageO
							-attachControl  $buttonU						"left" 10 $buttonEI
							-attachPosition $buttonU						"right" 0 99
							-attachControl  $imageU							"left" 10 $imageEI
							-attachControl  $imageU							"bottom" 5 $buttonU
							-attachPosition $imageU							"right" 0 99

						$mouthFoLayout;
				
				string $expressionFrLayout = `frameLayout -label "±íÇé" -font "boldLabelFont" -labelAlign "top" -cll true -borderStyle "etchedIn"`;
					string $expressionFoLayout = `formLayout`;
						string $imageAngry=`image -w 128 -h 72  -en true -image $locationAngry`;
						string $buttonAngry = `button -l "·ßÅ­"  -w 64 -command "br_LoadLipAngry"`;
						string $imageDepression=`image -w 128 -h 72  -en true -image $locationDepression`;
						string $buttonDepression = `button -l "¾ÚÉ¥"  -w 64 -command "br_LoadLipDepression"`;
						string $imagePleasant=`image -w 128 -h 72  -en true -image $locationPleasant`;
						string $buttonPleasant = `button -l "¾ªÏ²"  -w 64 -command "br_LoadLipPleasant"`;
						string $imageSmile=`image -w 128 -h 72  -en true -image $locationSmile`;
						string $buttonSmile = `button -l "Î¢Ð¦"  -w 64 -command "br_LoadLipSmile"`;
						string $imageSurprise=`image -w 128 -h 72  -en true -image $locationSurprise`;
						string $buttonSurprise = `button -l "¾ªÑÈ"  -w 64 -command "br_LoadLipSurprise"`;
						string $imageReset1=`image -w 128 -h 72  -en true -image $locationReset`;
						string $buttonReset1 = `button -l "Reset"  -w 64 -command "br_LoadLipReset"`;
						setParent..;
					setParent..;
						formLayout -edit
							-attachForm     $buttonAngry						"bottom" 10
							-attachForm     $buttonAngry						"left" 10
							-attachPosition $buttonAngry						"right" 0 33
							-attachForm     $imageAngry						"left" 10
							-attachControl  $imageAngry						"bottom" 5 $buttonAngry
							-attachPosition $imageAngry						"right" 0 33
							
							-attachControl  $buttonReset1						"bottom" 10 $imageAngry
							-attachForm     $buttonReset1						"left" 10
							-attachPosition $buttonReset1						"right" 0 33
							-attachForm     $imageReset1						"left" 10
							-attachControl  $imageReset1						"bottom" 5 $buttonReset1
							-attachPosition $imageReset1						"right" 0 33
							
							-attachForm	$buttonPleasant						"bottom" 10 
							-attachControl  $buttonPleasant						"left" 10 $buttonAngry
							-attachPosition $buttonPleasant						"right" 0 66
							-attachControl  $imagePleasant						"left" 10 $imageAngry
							-attachControl  $imagePleasant						"bottom" 5 $buttonPleasant
							-attachPosition $imagePleasant						"right" 0 66

							-attachControl	$buttonSmile						"bottom" 10 $imagePleasant
							-attachControl  $buttonSmile						"left" 10 $buttonReset1
							-attachPosition $buttonSmile						"right" 0 66
							-attachControl  $imageSmile						"left" 10 $imageReset1
							-attachControl  $imageSmile						"bottom" 5 $buttonSmile
							-attachPosition $imageSmile						"right" 0 66

							-attachControl	$buttonSurprise						"bottom" 10 $imagePleasant
							-attachControl  $buttonSurprise						"left" 10 $buttonSmile
							-attachPosition $buttonSurprise						"right" 0 99
							-attachControl  $imageSurprise						"left" 10 $imageSmile
							-attachControl  $imageSurprise						"bottom" 5 $buttonSurprise
							-attachPosition $imageSurprise						"right" 0 99
							
							-attachForm	$buttonDepression					"bottom" 10 
							-attachControl  $buttonDepression					"left" 10 $buttonPleasant
							-attachPosition $buttonDepression					"right" 0 99
							-attachControl  $imageDepression					"left" 10 $imagePleasant
							-attachControl  $imageDepression					"bottom" 5 $buttonDepression
							-attachPosition $imageDepression					"right" 0 99

						$expressionFoLayout;
			formLayout -edit 
				-attachForm  $columnLayout 						"left" 10
			$form;
			
		window -e -w 450 -h 640 w_ta_ALL_win;
	showWindow w_ta_ALL_win;
}



global proc string[] setCon()
{
	string $facial[]=`ls -sl -tr "*Facial_Curve"`;
	if (!`objExists $facial[0]`)
	{
		error "please select Facial Curve.";
	}
	select -hi $facial[0];
	string $objs[]=`ls -sl`;
	select $facial[0];
	string $charCon[];
	for ($obj in $objs )
	{
		if (`gmatch $obj "*Ctrl_R_Lids"`)		$charCon[0]=$obj;
		if (`gmatch $obj "*Ctrl_L_Lids"`)		$charCon[1]=$obj;
		if (`gmatch $obj "*Right_Eye"`)			$charCon[2]=$obj;
		if (`gmatch $obj "*Left_Eye"`)			$charCon[3]=$obj;
		if (`gmatch $obj "*R_sneer"`)			$charCon[4]=$obj;
		if (`gmatch $obj "*L_sneer"`)			$charCon[5]=$obj;
		if (`gmatch $obj "*CtrlX_Lips"`)		$charCon[6]=$obj;
		if (`gmatch $obj "*Lip_Twist_Up_Down"`)		$charCon[7]=$obj;
		if (`gmatch $obj "*Jaw_Rot"`)			$charCon[8]=$obj;
		if (`gmatch $obj "*EEE"`)			$charCon[9]=$obj;

		if (`gmatch $obj "*R_Smile_Sad"`)		$charCon[10]=$obj;
		if (`gmatch $obj "*L_Smile_Sad"`)		$charCon[11]=$obj;
		if (`gmatch $obj "*Puff_O_Smile"`)		$charCon[12]=$obj;
		if (`gmatch $obj "*T_L"`)			$charCon[13]=$obj;
		if (`gmatch $obj "*Lip_In_Kiss"`)		$charCon[14]=$obj;
		if (`gmatch $obj "*U"`)				$charCon[15]=$obj;
		if (`gmatch $obj "*M"`)				$charCon[16]=$obj;
		if (`gmatch $obj "*FV"`)			$charCon[17]=$obj;
		if (`gmatch $obj "*OOO"`)			$charCon[18]=$obj;
	}
	for ($con in $charCon )
	{
		if (!`objExists $con`)
		{
			error "Facial Curve has wrong name,please check it";
		}
	}
	setAttr -lock false -keyable true ($facial[0]+".ty");
	setKeyframe ($facial[0]+".ty");
	return $charCon;
}

global proc br_LoadLipA()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.117;
			setKeyframe  ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==9)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.574;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ;$i++ )
	{
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe  ($charCon[$i]+".ty");
	}
}


global proc br_LoadLipCONS()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==9)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 1;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}

	}
	for ($i=10;$i<19 ;$i++ )
	{
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe  ($charCon[$i]+".ty");
	}

}

global proc br_LoadLipEI()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.058;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==9)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.855;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}

	}
	for ($i=10;$i<19 ;$i++ )
	{
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe  ($charCon[$i]+".ty");
	}

}

global proc br_LoadLipMBP()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		setAttr ($charCon[$i]+".tx") 0;
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");

	}
	for ($i=10;$i<19 ;$i++ )
	{
		if ($i==16)
		{
			setAttr ($charCon[$i]+".ty") 0.335;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==10)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".ty");
		}
	}

}

global proc br_LoadLipO()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.078;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}

	}
	for ($i=10;$i<19 ;$i++ )
	{
		if ($i==18)
		{
			setAttr ($charCon[$i]+".ty") 0.278;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==10)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}

}

global proc br_LoadLipU()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		setAttr ($charCon[$i]+".tx") 0;
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
	}
	for ($i=10;$i<19 ;$i++ )
	{
		if ($i==15)
		{
			setAttr ($charCon[$i]+".ty") 0.341;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==10)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}

global proc br_LoadLipFV()
{
	string $charCon[]=setCon();	
	for ($i=0;$i<10 ; $i++)
	{
		setAttr ($charCon[$i]+".tx") 0;
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==17)
		{
			setAttr ($charCon[$i]+".ty") 0.312;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==16)
		{
			setAttr ($charCon[$i]+".ty") 0.195;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==10)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe   ($charCon[$i]+".ty");
		}
		else if ($i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.052;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}

	}

}

global proc br_LoadLipL()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0.114;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==13)
		{
			setAttr ($charCon[$i]+".ty") 0.069;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==16)
		{
			setAttr ($charCon[$i]+".ty") 0.195;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==10)
		{
			setAttr ($charCon[$i]+".ty") 0.038;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==11)
		{
			setAttr ($charCon[$i]+".ty") 0.038;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else 	
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".ty");
		}

	}

}

global proc br_LoadLipReset()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		setAttr ($charCon[$i]+".tx") 0;
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
	}
	for ($i=10;$i<19 ; $i++)
	{
		setAttr ($charCon[$i]+".ty") 0;
		setKeyframe  ($charCon[$i]+".ty");
	}
}


global proc br_LoadLipPleasant()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==0||$i==1)
		{
			setAttr ($charCon[$i]+".tx") 0.544 ;
			setAttr ($charCon[$i]+".ty") 0.205 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==2)
		{
			setAttr ($charCon[$i]+".tx") -1 ;
			setAttr ($charCon[$i]+".ty") 0.586 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==3)
		{
			setAttr ($charCon[$i]+".tx") 1 ;
			setAttr ($charCon[$i]+".ty") 0.586 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0 ;
			setAttr ($charCon[$i]+".ty") 0.039 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==10||$i==11)
		{
			setAttr ($charCon[$i]+".ty") 0.089;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==12)
		{
			setAttr ($charCon[$i]+".ty") 0.14;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}

global proc br_LoadLipSurprise()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==0||$i==1)
		{
			setAttr ($charCon[$i]+".tx") 0.097 ;
			setAttr ($charCon[$i]+".ty") 0.267 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==2)
		{
			setAttr ($charCon[$i]+".tx") -1 ;
			setAttr ($charCon[$i]+".ty") 0.997  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==3)
		{
			setAttr ($charCon[$i]+".tx") 1 ;
			setAttr ($charCon[$i]+".ty") 0.997  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0 ;
			setAttr ($charCon[$i]+".ty") 0.08  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==9)
		{
			setAttr ($charCon[$i]+".tx") 0 ;
			setAttr ($charCon[$i]+".ty") 0.592  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==10||$i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.099;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}

global proc br_LoadLipDepression()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==0||$i==1)
		{
			setAttr ($charCon[$i]+".tx") 0.58 ;
			setAttr ($charCon[$i]+".ty") -0.039 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==2)
		{
			setAttr ($charCon[$i]+".tx") 0.945 ;
			setAttr ($charCon[$i]+".ty") 0.908 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==3)
		{
			setAttr ($charCon[$i]+".tx") -0.945  ;
			setAttr ($charCon[$i]+".ty") 0.908  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==8)
		{
			setAttr ($charCon[$i]+".tx") 0 ;
			setAttr ($charCon[$i]+".ty") 0.021  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==10||$i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.188;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==16)
		{
			setAttr ($charCon[$i]+".ty") 0.285 ;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}


global proc br_LoadLipAngry()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==0||$i==1)
		{
			setAttr ($charCon[$i]+".tx") 0.693 ;
			setAttr ($charCon[$i]+".ty") 0.115 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==2)
		{
			setAttr ($charCon[$i]+".tx") 1 ;
			setAttr ($charCon[$i]+".ty") -1;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==3)
		{
			setAttr ($charCon[$i]+".tx") -1  ;
			setAttr ($charCon[$i]+".ty") -1  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==9)
		{
			setAttr ($charCon[$i]+".tx") -0.11 ;
			setAttr ($charCon[$i]+".ty") 0.227  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==4)
		{
			setAttr ($charCon[$i]+".tx") 0.492 ;
			setAttr ($charCon[$i]+".ty") 0  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==5)
		{
			setAttr ($charCon[$i]+".tx") -0.189 ;
			setAttr ($charCon[$i]+".ty") 0.246  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==10||$i==11)
		{
			setAttr ($charCon[$i]+".ty") -0.133;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}


global proc br_LoadLipSmile()
{
	string $charCon[]=setCon();
	for ($i=0;$i<10 ; $i++)
	{
		if ($i==0||$i==1)
		{
			setAttr ($charCon[$i]+".tx") 1 ;
			setAttr ($charCon[$i]+".ty") -0.035 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==2)
		{
			setAttr ($charCon[$i]+".tx") -1 ;
			setAttr ($charCon[$i]+".ty") -0.016 ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==3)
		{
			setAttr ($charCon[$i]+".tx") 1  ;
			setAttr ($charCon[$i]+".ty") -0.016  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else if ($i==6)
		{
			setAttr ($charCon[$i]+".tx") 0.224 ;
			setAttr ($charCon[$i]+".ty") 0  ;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
		else 
		{
			setAttr ($charCon[$i]+".tx") 0;
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe ($charCon[$i]+".tx") ($charCon[$i]+".ty");
		}
	}
	for ($i=10;$i<19 ; $i++)
	{
		if ($i==10||$i==11)
		{
			setAttr ($charCon[$i]+".ty") 0.066;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else if ($i==12)
		{
			setAttr ($charCon[$i]+".ty") 0.079 ;
			setKeyframe  ($charCon[$i]+".ty");
		}
		else
		{
			setAttr ($charCon[$i]+".ty") 0;
			setKeyframe  ($charCon[$i]+".ty");
		}
	}
}
