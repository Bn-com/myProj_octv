/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Åí¼Ì¾ü
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc jjMainCheckFile()
{
	if (`window -exists Cross_CheckNames`)
	     deleteUI  Cross_CheckNames;
	
	string $window = `window -title "Cross-Check Object Names" -height 600 Cross_CheckNames`;
	string $form=`formLayout`;
	string $text1=`text -label "Set 1 :"`;
	string $text2=`text -label "Set 2 :"`;
	string $file1 = `textFieldGrp -columnWidth 1 30 -adjustableColumn 2 -label ""  -text "" FILE`;
	radioCollection;
	string $radio1=`radioButton -label "" -select radioButton1`;
	string $radio2=`radioButton -enable false -label "active selection" -onCommand "textFieldGrp -edit -enable 0 FILE;button -edit -enable 0 button1;" -offCommand "textFieldGrp -edit -enable 1 FILE;button -edit -enable 1 button1;" radioButton2`;
	radioCollection;
	string $radio3=`radioButton -label "" -select radioButton3`;
	string $radio4=`radioButton -enable false -label "active selection" -onCommand "textFieldGrp -edit -enable 0 FILE2;button -edit -enable 0 button2;" -offCommand "textFieldGrp -edit -enable 1 FILE2;button -edit -enable 1 button2;" radioButton4`;
	string $file2 = `textFieldGrp -columnWidth 1 30 -adjustableColumn 2 -label ""  -text "" FILE2`;
	string $b1 = `button -label "Browse"  -command "BrowseFile " button1`;
	string $b2 = `button -label "Browse"  -command "BrowseFile2 " button2`;
	string $b3 = `button -label "Cross Check"`;
	string $sepa1=`separator -style "in"`;
	string $sepa2=`separator -style "in"`;
	string $checkbox1 = `checkBox -label "Check Transform" -value 0 checkbox1`;
	string $checkbox2 = `checkBox -label "Check Shape (Mesh and NURBS)" -value 1 checkbox2`;
	string $checkbox3 = `checkBox -label "Check Animamtion Curve" -value 0 checkbox3`;
	string $checkbox4 = `checkBox -label "lo Filter" -value 1 checkbox4`;
	string $sc = `scrollField -wordWrap false`; 
	formLayout -edit
		-attachForm			$text1		"top"			10
		-attachForm			$text1		"left"		    20

		-attachForm			$radio1		"top"		    10
		-attachControl		$radio1		"left"		    20      $text1

		-attachForm			$b1			"top"           10
		-attachForm         $b1			"right"         10 
		
		-attachForm			$file1		"top"		    10
		-attachControl		$file1		"left"		    0       $radio1
		-attachControl		$file1		"right"		    5 	    $b1

		-attachControl			$radio2		"top"       5       $file1
        -attachOppositeControl  $radio2		"left"      0       $radio1
		
		-attachControl			$sepa1		"top"		5       $radio2
		-attachForm				$sepa1		"left"      5
		-attachForm             $sepa1		"right"     5 
		

		-attachControl			$text2		"top"		5	    $sepa1
		-attachForm				$text2		"left"		20

		-attachControl			$radio3		"top"		5	    $sepa1
		-attachControl			$radio3		"left"		20      $text2

		-attachControl			$b2			"top"       5	    $sepa1
		-attachForm             $b2			"right"     10 
		
		-attachControl			$file2		"top"		5		$sepa1
		-attachControl			$file2		"left"		0       $radio3
		-attachControl			$file2		"right"		5		$b2

		-attachControl			$radio4		"top"       5       $file2
	    -attachOppositeControl  $radio4		"left"      0       $radio3
		
		-attachControl			$sepa2		"top"       5       $radio4
		-attachForm				$sepa2		"left"      5
		-attachForm             $sepa2		"right"     5 

		
		-attachControl          $checkbox1      "top"   5       $sepa2
		-attachForm		        $checkbox1      "left"  20
		-attachForm             $checkbox1      "right" 10

		-attachControl          $checkbox2      "top"   5      $checkbox1
		-attachOppositeControl  $checkbox2      "left"  0       $checkbox1
		-attachForm             $checkbox2      "right" 10

		-attachControl          $checkbox3      "top"   5      $checkbox2
		-attachOppositeControl  $checkbox3      "left"  0       $checkbox2
		-attachForm             $checkbox3      "right" 10


		-attachControl          $checkbox4      "top"   5      $checkbox3
		-attachOppositeControl  $checkbox4      "left"  0       $checkbox3
		-attachForm             $checkbox4      "right" 10

		-attachControl          $b3		"top"           5      $checkbox4
		-attachForm				$b3		"left"          20      
		-attachForm             $b3		"right"         10
		
		-attachControl          $sc		"top"           5      $b3
		-attachForm             $sc		"left"          20      
		-attachForm             $sc		"right"         10
		-attachForm             $sc		"bottom"        10

	$form;
	button -edit -command ("jjCheckFile " + $file1 + " " + $file2 + " " + $sc) $b3;
	showWindow $window;
}


global proc BrowseFile()
{
	fileBrowserDialog -m 0 -fileCommand "OpenFile" -fileType  "mayaBinary" -actionName "open_file" -operationMode "open";
}

 global proc int OpenFile( string $filename, string $fileType )
{
    	textFieldGrp -edit -text $filename  FILE ;
    	return 1;
}

 global proc BrowseFile2()
{
	fileBrowserDialog -m 0 -fileCommand "OpenFile2" -fileType  "mayaBinary" -actionName "open_file" -operationMode "open";
}

 global proc int OpenFile2( string $filename, string $fileType )
{
    	textFieldGrp -edit -text $filename  FILE2 ;
    	return 1;
}

global proc string[] CheckFileProc(string $file)
{
	int $cbv1=`checkBox -q -value checkbox1 `;
	int $cbv2=`checkBox -q -value checkbox2 `;
	int $cbv3=`checkBox -q -value checkbox3 `;
	int $cbv4=`checkBox -q -value checkbox4 `;
	string $selfile = `textFieldGrp -q -text $file`;
	string $selmasters[]=`ls -selection`;
	string $firstma=$selmasters[0];
	string $buffer[];
	if($cbv3==1)
	{
		system ("mayabatch -file \"" + $selfile + "\" -command \"jjSelectList2 " + $firstma + "\"");
		string $dre=`internalVar -userTmpDir`;
		string $tempfile = $dre + "selecfile.txt";
		$fileId = `fopen $tempfile "r"`;
		while ( !`feof $fileId` )
		{
			string $str = `fgetline $fileId`;
			if ($str != "" && $str != "\n")
			$buffer[size($buffer)] = strip($str);
		}
		fclose $fileId;
	}else{
		system ("mayabatch -file \"" + $selfile + "\" -command \"jjSelectList1 " + $cbv1 + " " + $cbv2 + " " + $cbv4 + "\"");
		string $dre=`internalVar -userTmpDir`;
		string $tempfile = $dre + "selecfile.txt";
		$fileId = `fopen $tempfile "r"`;
		string $dress =substituteAllString( $tempfile,"/","\\\\") ;
		string $ss;
		$ss=`system ("type  "+$dress )`;
		fclose $fileId;
		$numTokens = tokenize($ss,"\n", $buffer);
	}
	return $buffer;
}

global proc string[] CheckAnimateProc()
{
	string $str = "", $obj[], $object, $attr[], $attribute,$buff[];
	int $keys[], $key;
	float $times[], $values[];
	string $selmasters[]=`ls -selection`;
	if(size($selmasters)==0)
	{
		warning  "you must select!";
	}else{
		select -hierarchy $selmasters[0];
		$obj=`ls -selection -type transform`;
		for ($object in $obj)
		{
			$attr = `listAttr -k $object`;
			for ($attribute in $attr)
			{
				$attribute = $object + "." + $attribute;
				if (`objExists $attribute`)
				{
					$keys = `keyframe -time ":" -query -indexValue $attribute`;
					if(size($keys)!=0)
					{
						$str += "\n" + $attribute;
						for ($key in $keys)
						{
							$times = `keyframe -index $key -query -timeChange $attribute`;
							$values = `keyframe -index $key -query -valueChange $attribute`;
							$str += "\t" + $key + " " + $times[0] + " " + $values[0];
						}
					}	
				}
			}
		}
		$numTokens = tokenize($str,"\n", $buff);
		return $buff;
	}
}




 global proc jjCheckFile(string $file1, string $file2, string $sc)
{
	int $r1=`radioButton -q -select radioButton1`;
	int $r2=`radioButton -q -select radioButton2`;
	int $r3=`radioButton -q -select radioButton3`;
	int $r4=`radioButton -q -select radioButton4`;
	int $cbv1=`checkBox -q -value checkbox1 `;
	int $cbv2=`checkBox -q -value checkbox2 `;
	int $cbv3=`checkBox -q -value checkbox3 `;
	string $buffer1[],$buff1[];
	string $buffer2[],$buff2[];
	string $obj1;
	string $obj2;
	string $obj3;
	string $obj4;
	string $buf1[];
	string $buf2[];
	string $buf3[];
	string $buf4[];
	
	if($cbv3==1)
	{
		if($r1==1&&$r4==1)
		{
			$buffer1 = `CheckFileProc $file1`;
			$buffer2 = `CheckAnimateProc`;
			string $diff1[] = stringArrayRemove($buffer1, $buffer2);
			string $diff2[] = stringArrayRemove($buffer2, $buffer1);
			for ($i=0;$i<size($diff2);$i++ )
				{   
					$numTokens = tokenize($diff2[$i], $buff1);
					$obj1 +=("Set2" + ":" + "different  " + $buff1[0]) + "\n";
				}
			for ($i=0;$i<size($diff1);$i++ )
				{
					$numTokens = tokenize($diff1[$i], $buff2);	
					$obj2 +=("Set1" + ":" + "different  " + $buff2[0]) + "\n";
				}
		}else if($r3==1&&$r2==1)
			{
				$buffer2 = `CheckFileProc $file2`;
				$buffer1 = `CheckAnimateProc`;
				string $diff1[] = stringArrayRemove($buffer1, $buffer2);
				string $diff2[] = stringArrayRemove($buffer2, $buffer1);
				for ($i=0;$i<size($diff2);$i++ )
					{   
						$numTokens = tokenize($diff2[$i], $buff1);
						$obj1 +=("Set2" + ":" + "different  " + $buff1[0]) + "\n";
					}
				for ($i=0;$i<size($diff1);$i++ )
					{
						$numTokens = tokenize($diff1[$i], $buff2);	
						$obj2 +=("Set1" + ":" + "different  " + $buff2[0]) + "\n";
					}
			}else if ($r4==1&&$r2==1)
				{
					$buffer1 = `CheckAnimateProc`;
					string $str = "", $obj[], $object, $attr[], $attribute,$buff[];
					int $keys[], $key;
					float $times[], $values[];
					string $selmasters[]=`ls -selection`;
					select -hierarchy $selmasters[0];
					$obj=`ls -selection -type transform`;
					for ($object in $obj)
					{
						$attr = `listAttr -k $object`;
						for ($attribute in $attr)
						{
							$attribute = $object + "." + $attribute;
							if (`objExists $attribute`)
							{
								$keys = `keyframe -time ":" -query -indexValue $attribute`;
								if(size($keys)!=0)
								{
									$str += "\n" + $attribute;
									for ($key in $keys)
									{
										$times = `keyframe -index $key -query -timeChange $attribute`;
										$values = `keyframe -index $key -query -valueChange $attribute`;
										$str += "\t" + $key + " " + $times[0] + " " + $values[0];
									}
								}	
							}
						}
					}
					$numTokens = tokenize($str,"\n", $buffer2);
					string $diff1[] = stringArrayRemove($buffer1, $buffer2);
					string $diff2[] = stringArrayRemove($buffer2, $buffer1);
					for ($i=0;$i<size($diff2);$i++ )
						{   
							$numTokens = tokenize($diff2[$i], $buff1);
							$obj1 +=("Set1" + ":" + "diffrent " + $buff1[0]) + "\n";
						}
					for ($i=0;$i<size($diff1);$i++ )
						{
							$numTokens = tokenize($diff1[$i], $buff2);	
							$obj2 +=("Set2" + ":" + "diffrent " + $buff2[0]) + "\n";
						}
				}


	}else{

		if($r1==1&&$r3==1)
		{
			$buffer1 = `CheckFileProc $file1`;
			$buffer2 = `CheckFileProc $file2`;
			for ($i=0;$i<size($buffer2);$i++ )
			{
				if (stringArrayCount($buffer2[$i], $buffer1)==0)
				{
					
					string $filna=`textFieldGrp -q -text FILE`;
					string $filname[];
					$numT=tokenize ($filna, "/", $filname);
					int $k2=size($filname) - 1;
					$obj1 +=($filname[$k2] + ":" + "cannot find " + $buffer2[$i]) + "\n";
				}	
			}
			
			for ($i=0;$i<size($buffer1);$i++ )
			{
				if (stringArrayCount($buffer1[$i], $buffer2)==0)
				{
					string $filna2=`textFieldGrp -q -text FILE2`;
					string $filname2[];
					$numT=tokenize ($filna2, "/", $filname2);
					int $k2=size($filname2) - 1;
					$obj2 +=($filname2[$k2] + ":" + "cannot find " + $buffer1[$i]) + "\n";
				}	
			}
			////////////////////////////////////////////////////////////////////////
			//Tazz add:
			for ($i=0;$i<size($buffer2);$i++ )
			{
				string $meshes[];
				int $comnum = `tokenize $buffer2[$i] " " $meshes`;
				if ( $comnum == 3 )
				{
					for ($j=0;$j<size($buffer1);$j++ )
					{
						string $meshes2[];
						int $comnum2 = `tokenize $buffer1[$i] " " $meshes2`;
						if ( $comnum2 == 3 )
						{
							if ($meshes[0] == $meshes2[0])
							{
								if ($meshes[1]!=$meshes2[1]||$meshes[2]!=$meshes2[2])
								{	
									$obj3 +=($meshes[0] + " has different verts and faces between 2 files." + "\n");
									break;
								}
							}
						}
					}

				}
			}
			////////////////////////////////////////////////////////////////////////

		}else if($r1==1&&$r4==1)
			{
				$buffer1 = `CheckFileProc $file1`;
				string $selected[] = `ls -selection`;
				select -hierarchy ;
				if ($cbv2==1&&$cbv1==0)
				{
					$buf1=`ls -sl -type mesh`;
					$buf2=`ls -sl -type nurbsSurface`;
					$buffer2=stringArrayCatenate($buf1,$buf2);
				}else if($cbv2==0&&$cbv1==1) 
					{
						$buffer2= `ls -sl -type transform`;
					
					}else
					{
						$buf1=`ls -sl -type mesh`;
						$buf2=`ls -sl -type nurbsSurface`;
						$buf3= `ls -sl -type transform`;
						$buf4=stringArrayCatenate($buf1,$buf2);
						$buffer2=stringArrayCatenate($buf3,$buf4);
					}
				for ($i=0;$i<size($buffer2);$i++ )
				{
					if(stringArrayCount($buffer2[$i], $buffer1)==0)
					{
						string $filna=`textFieldGrp -q -text FILE`;
						string $filname[];
						$numT=tokenize ($filna, "/", $filname);
						int $k2=size($filname) - 1;
						$obj1 +=($filname[$k2] + ":" + "cannot find " + $buffer2[$i]) + "\n";
					}	
				}
			
				for ($i=0;$i<size($buffer1);$i++ )
				{
					if(stringArrayCount($buffer1[$i], $buffer2)==0)
					{
						
						$obj2 +=("Set2" + ":" + "cannot find " + $buffer1[$i]) + "\n";
					}	
				}
				select -clear;
				select $selected;
			  }else if($r2==1&&$r3==1)
				{
					$buffer2 = `CheckFileProc $file2`;
					string $selected[] = `ls -selection`;
					select -hierarchy ;
					if ($cbv2==1&&$cbv1==0)
					{
						$buf1=`ls -sl -type mesh`;
						$buf2=`ls -sl -type nurbsSurface`;
						$buffer1=stringArrayCatenate($buf1,$buf2);
					}else if($cbv2==0&&$cbv1==1) 
						{
							$buffer1= `ls -sl -type transform`;
						
						}else
						{
							$buf1=`ls -sl -type mesh`;
							$buf2=`ls -sl -type nurbsSurface`;
							$buf3= `ls -sl -type transform`;
							$buf4=stringArrayCatenate($buf1,$buf2);
							$buffer1=stringArrayCatenate($buf3,$buf4);
						}

					for ($i=0;$i<size($buffer2);$i++ )
					{
						if(stringArrayCount($buffer2[$i], $buffer1)==0)
						{
						
							
							$obj1 +=("Set1" + ":" + "cannot find " + $buffer2[$i]) + "\n";
						}	
					}
				
					for ($i=0;$i<size($buffer1);$i++ )
					{
						if(stringArrayCount($buffer1[$i], $buffer2)==0)
						{
							string $filna2=`textFieldGrp -q -text FILE2`;
							string $filname2[];
							$numT=tokenize ($filna2, "/", $filname2);
							int $k2=size($filname2) - 1;
							$obj2 +=($filname2[$k2] + ":" + "cannot find " + $buffer1[$i]) + "\n";
						}	
					}
					select -clear;
					select $selected;
				 }else if($r2==1&&$r4==1)
						{
							string $selected[] = `ls -selection`;
							select -hierarchy $selected[0];
							if ($cbv2==1&&$cbv1==0)
							{
								$buf1=`ls -sl -type mesh`;
								$buf2=`ls -sl -type nurbsSurface`;
								$buffer1=stringArrayCatenate($buf1,$buf2);
							}else if($cbv2==0&&$cbv1==1) 
								{
									$buffer1= `ls -sl -type transform`;
								
								}else
								{
									$buf1=`ls -sl -type mesh`;
									$buf2=`ls -sl -type nurbsSurface`;
									$buf3= `ls -sl -type transform`;
									$buf4=stringArrayCatenate($buf1,$buf2);
									$buffer1=stringArrayCatenate($buf3,$buf4);
								}
							select -hierarchy $selected[1];
							if ($cbv2==1&&$cbv1==0)
							{
								$buf1=`ls -sl -type mesh`;
								$buf2=`ls -sl -type nurbsSurface`;
								$buffer2=stringArrayCatenate($buf1,$buf2);
							}else if($cbv2==0&&$cbv1==1) 
								{
									$buffer2= `ls -sl -type transform`;
								
								}else
								{
									$buf1=`ls -sl -type mesh`;
									$buf2=`ls -sl -type nurbsSurface`;
									$buf3= `ls -sl -type transform`;
									$buf4=stringArrayCatenate($buf1,$buf2);
									$buffer2=stringArrayCatenate($buf3,$buf4);
								}
							for ($i=0;$i<size($buffer2);$i++ )
							{
								if(stringArrayCount($buffer2[$i], $buffer1)==0)
								{
								
									
									$obj1 +=($selected[0] + ":" + "cannot find " + $buffer2[$i]) + "\n";
								}	
							}
						
							for ($i=0;$i<size($buffer1);$i++ )
							{
								if(stringArrayCount($buffer1[$i], $buffer2)==0)
								{
									
									$obj1 +=($selected[1] + ":" + "cannot find " + $buffer1[$i]) + "\n";
								}
							}
							select -clear;
							select $selected;
						}
		}	

	$obj4= $obj1 + "\n" + $obj2+ "\n" + $obj3;
	scrollField -edit -clear $sc;
	scrollField -edit -text $obj4 $sc;
	
	string $dre=`internalVar -userTmpDir`;
	string $tempfile = $dre + "\selecfile.txt";
	sysFile -delete $tempfile;

	if ($obj4=="")
	{
		string $kk="All objects OK!";
		scrollField -edit -text $kk $sc;
	}
}

