/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


proc int kcIsLight(string $obj)
{
	// $obj is the tranform node of the light

	string $children[] = `listRelatives -children $obj`;

	for ($item in $children)
		if ((`nodeType $item` == "directionalLight") ||
		    (`nodeType $item` == "areaLight")        ||
		    (`nodeType $item` == "pointLight")       ||
		    (`nodeType $item` == "ambientLight")     ||
		    (`nodeType $item` == "spotLight"))
			return true;

	return false;
}

proc kcSelInverse(string $selected[])
{
	string $geometry[] = `ls -type mesh -type nurbsSurface -type particle -type subdiv`;

	for ($item in $geometry)
	{
		string $parents[] = `listRelatives -path -allParents $item`;

		for ($j = 0; $j < size($parents); $j++)
		{
			int $found = false;

			for ($i = 0; $i < size($selected); $i++)
				if ($parents[$j] == $selected[$i])
				{
					$found = true;
					break;
				}

			if (!$found)
				select -add $parents[$j];				
		}
	}
}

global proc kcLightSelLinkedObj(int $showLink)
{
	string $light[] = `ls -selection`;

	if ((size($light) != 1) || (!kcIsLight($light[0])))
		error("Please select one and only one light.");

	string $objs[] = `lightlink -query -shapes false -hierarchy false -light $light[0]`;

	string $transforms[];

	for ($item in $objs)
		if (`nodeType $item` == "transform")
			$transforms[size($transforms)] = $item;

	select -clear;

	if ($showLink)	
		select $transforms;	
	else
		kcSelInverse($transforms);
}