//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WanShouLong
//	Created: 2008-12-9
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////


global proc slRepairReferenceYoda()
{
	//print "text\n";
	
	string $referenceFiles[] = `file -q -r`;
	for ($file in $referenceFiles )
	{
		string $referenceNode = `referenceQuery -rfn $file`;
		if (!`referenceQuery -il $file`)
		{
			file -lr $referenceNode $file;
		}
		string $unresolved = `referenceQuery -f -un $referenceNode`;
		string $resolved = `referenceQuery -f $referenceNode`;
		string $nodes[] = `referenceQuery -n $referenceNode`;

		string $asset_type="";
		if (`match "/fx/" $unresolved` != "" || `match "/prop/" $unresolved` != "" )
			$asset_type = "props";
		if (`match "/char/" $unresolved` != "")
			$asset_type = "characters";
		if (`match "/set/" $unresolved` != "" )
			$asset_type = "sets";
		
		//print ($nodes[0]+$asset_type+"\n");
		if (!`objExists ($nodes[0]+".Asset_Type")`)
		{
			addAttr -ln "Asset_Type"  -dt "string" $nodes[0];
			setAttr -e-keyable true ($nodes[0]+".Asset_Type");
		}
		setAttr -type "string" ($nodes[0]+".Asset_Type") $asset_type;
		
		
		string $buff[];
		int $num = `tokenize $resolved "{}" $buff`;
		string $idmtFile = $buff[0];
		
		
		//string $idmtFile = `slOemRRGetFileYoda $unresolved`;
		//if ($unresolved != $idmtFile)
		//{
			file -lr $referenceNode $idmtFile;
		//}
	}

	string $fullName= `file -q -sn`;
	string $shortName = `file -q -sn -shn`;
	//string $path = `substring $fullName 1 (size($fullName)-size($shortName))`;
	
	string $fn = `file -q -sn -shn`;
	string $buff[]={};
	int $num = `tokenize $fn "_" $buff`;
	string $es = $buff[0]+"_"+$buff[1]+"_"+$buff[2]+"_";
	string $path = "D:/YODA/Episode_"+$buff[0]+"/Sequence_"+$buff[1]+"/";
	if (match("aware",$buff[0])!="")
	{
		$path = "D:/YODA/Episode_E0010/Sequence_"+$buff[1]+"/";
	}
	sysFile -md $path;


	string $newName="yd_"+$shortName;
	if (match("aware",$newName)!="")
	{
		$newName = substituteAllString($newName,"aware","E0010");
	}

	string $cam[] = `ls -type camera ("*_"+$buff[1]+"_*")`;
	if (size($cam))
	{
		string $camtr[] = `listRelatives -f -p $cam[0]`;
		if (`match ("_"+$buff[1]+"_"+$buff[2]) $camtr[0]` == ("_"+$buff[1]+"_"+$buff[2]))
		{
			select -r $camtr[0];
			//source zwCameraImportExport.mel; zwBakeCamera;
		}
	}
	select -cl;
	
	file -rename ($path+$newName);
	file -save;

	string $avi = `substring $shortName 1 (size($shortName)-size($buff[$num-1]))`+"avi";
	string $aviobj[] = `getFileList -fld $path -fs $avi`;
	if (size($aviobj))
	{
		$avi = `substring $newName 1 (size($newName)-size($buff[$num-1]))`+"avi";
		sysFile -copy ($path+$avi) ($path+$aviobj[0]);
	}
	
	string $txt = `substring $shortName 1 (size($shortName)-size($buff[$num-1]))`+"txt";
	string $txtobj[] = `getFileList -fld $path -fs $txt`;
	if (size($txtobj))
	{
		$txt = `substring $newName 1 (size($newName)-size($buff[$num-1]))`+"txt";
		sysFile -copy ($path+$txt) ($path+$txtobj[0]);
	}
	
	print ("ÐÂÎÄ¼þ------"+$path+$newName+"\n");

	string $cmd = "\""+`getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -file \""+ $path+$newName+"\" -command \"source ydAnimCameraSequence.mel;ydAnimCameraSequenceSplit();\"";
	//print "\n";
	//print $cmd;
	system("\""+$cmd+"\"");
}

global proc slRepairReferenceUI()
{
	if (`window -q -exists slRepairReferenceWin`)
		deleteUI -window slRepairReferenceWin;

	window -title "Batch Run" -resizeToFitChildren true -h 210 slRepairReferenceWin;
		
		columnLayout -adj true ;
			text -label "FILES:";
			textScrollList -numberOfRows 8 -allowMultiSelection true -w 400 slRepairReferenceWin_fileList;
			string $form = `formLayout `;
				string $butadd = `button -label "Add"  -command "slRepairReferenceAddFile" `;
				string $butrem = `button -label "Remove" -command "slRepairReferenceRemoveFile" `;
			setParent ..;
			formLayout -edit
			-af		$butadd		"left"	5
			-ap		$butadd		"right"	0	49
			-ac		$butrem		"left"	10	$butadd
			-af		$butrem		"right"	5
			$form;
			separator -st "doubleDash" -h 10;
			button -label "Run" -h 20 -command "slRepairReferenceRun" ;
		setParent ..;	
	showWindow slRepairReferenceWin;
}

global proc slRepairReferenceAddFile()
{
	string $buf[] = `idmtFileDialog -filter "Maya Scene (*.mb;*.ma)|*.mb;*.ma||" -m`;

	string $objFiles[] = `textScrollList -q -ai slRepairReferenceWin_fileList`;
	for ($item in $buf)
	{
		if (!stringArrayCount($item,$objFiles))
		{
			textScrollList -e -a $item slRepairReferenceWin_fileList;
		}
	}
}

global proc slRepairReferenceRemoveFile()
{
	string $selected[] = `textScrollList -q -selectItem slRepairReferenceWin_fileList`;

	for ($item in $selected)
		textScrollList -edit -removeItem $item slRepairReferenceWin_fileList;
}

global proc slRepairReferenceRun()
{
	global string $WHOOempath;
	global string $P2ProjectPath;
	string $P2ProjectPath = "//file-cluster/GDC/Projects/YODA/Reference/Handout Files/Asset from Wilfilm/Yoda_Proxy/";
	string $WHOOempath = `internalVar -uad`+"WHO_RR/";
	if (!`filetest -r $WHOOempath`)
		sysFile -md $WHOOempath;
	
	$fileId = `fopen ($WHOOempath+"WHOOem.mel") "w"`;
	fprint $fileId "source slRepairReferenceYoda.mel;slRepairReferenceYoda;";
	fclose $fileId;

	string $allFiles[] = `textScrollList -q -ai slRepairReferenceWin_fileList`;
	for ($file in $allFiles)
	{
		slOemCollectMissReference $file;
		string $cmd = "\""+ `getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -proj \""+$P2ProjectPath+"\" -file \""+$file+"\" -script \""+$WHOOempath+"WHOOem.mel\"";
		//print $cmd;
		system("\""+$cmd+"\"");
	}

	//sysFile -del ($WHOOempath+"WHOOem.mel");
}

global proc slOemCollectMissReference(string $file)
{
	global string $WHOOempath;
	global string $P2ProjectPath;	
	string $cmd = "\""+`getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -proj \""+$P2ProjectPath+"\" -file \""+$file+"\"";
	//print $cmd;
	string $result = `system("\""+$cmd+"\"")`;
	//print $result;

	string $buff[]={};
	int $num = `tokenize $result "\n" $buff`;
	string $missFiles[]={};
	for($col in $buff)
	{
		if(startsWith($col,"Warning"))
		{
			string $buff1[];
			int $num1 = `tokenize $col ":\n" $buff1`;
			for($i=0;$i<$num1;$i++)
			{
				if(`match "Reference file not found." $buff1[$i]` != "")
				{
					string $buff2[];
					int $num2 = `tokenize $col ":" $buff2`;
					$missFiles[size($missFiles)] = strip($buff2[$num2-1]);
				}
			}
		}
	}

	//print "---------\n";
	//print $missFiles;
	
	for ($item in $missFiles)
	{
		string $buff3[]={};
		int $num3 = `tokenize $item "\/" $buff3`;
		string $file = $buff3[$num3-1];
		
		if (!`filetest -r ($P2ProjectPath+$file)`)
		{
			string $copy = `slOemRRGetFileYoda ("Z:"+$item)`;
			sysFile -copy ($P2ProjectPath+$file) $copy;
		}
	}
}

global proc string slOemRRGetFileYoda(string $filename)
{
	global string $P2ProjectPath;	
	
	string $idmtFile;
	int $exist=1;
	
	string $buff[]={};
	int $num = `tokenize $filename "{}" $buff`;
	$filename = $buff[0];
	clear $buff;
	$buff = stringToStringArray($filename,"\\/");
	string $item = $buff[size($buff)-1];
	$item = substitute("_[vV][0-9]+",$item,"_*");
	//print $item;
	//print "\n";

	string $files[]  = `getFileList -fld $P2ProjectPath -fs $item`;//`getFileList -fld $P2ProjectPath -fs ("\""+$item+"\"")`;
	//print $files;
	//print "\n";
	if (size($files))
		$idmtFile = $P2ProjectPath + $files[size($files)-1];

		/*$idmtFile = `substituteAllString $filename "Z:/Client/263_tvs_yoda/Workfiles/Assets/proxy/release/" "//file-cluster/GDC/Projects/YODA/Reference/Handout Files/Asset from Wilfilm/"`;
		string $tempBuff[] = stringToStringArray($idmtFile,"/\\");
		$idmtFile = substituteAllString($idmtFile,("/"+$tempBuff[size($tempBuff)-2]+"/"),("/proxy/"+$tempBuff[size($tempBuff)-2]+"/"));

		string $tempFile = $idmtFile;*/


	return  $idmtFile;
}