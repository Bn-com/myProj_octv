global proc yd_RenderTools()
{
	source "//file-cluster/GDC/Resource/Support/Maya/projects/YODA/yd_FixBeforeRendering.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/njEnvMaterialChange.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/YODA/ydEnvMaterialChange.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjIdPassInfo.mel";
	python("import sys");
	python("sys.path.append(\"//File-cluster/GDC/Resource/Support/Maya/Python/IDMT/TTMS\")");
	
	if (`window -exists YodaRenderTools`) deleteUI YodaRenderTools;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/YODA/yd_RenderToolsUI.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
}





global proc yd_RenderTools_ReplaceReference_P006001()
{
   	string $fileName =`file -q -sn`;
	
		string $references[] = `file -q -r`;
		for ($r in $references)
		{
			if (`gmatch $r "*yd_p006001MillenniumFalcon_h_ms_anim*"`)
			{
				string $rfn = `file -q -rfn $r`;
				file -loadReference $rfn -type "mayaBinary" -options "v=0" "//file-cluster/GDC/Projects/YODA/Project/scenes/props/E0010/p006001MillenniumFalcon/master/yd_p006001MillenniumFalcon_o_ms_anim.mb";
			}
		}
	
   }



global proc nj_RenderTools_Create_Layer_UI()
{
    // Get the dialog's formLayout.
    string $form = `setParent -q`;

    formLayout -e -width 20 $form;

	string $t = `text -l "层名"`;
    textField -w 30 "nj_RenderTools_Create_Layer_name";
    setFocus "nj_RenderTools_Create_Layer_name";
    string $b1 = `button -l "建层"    -c "nj_RenderTools_Create_Layer_Button();layoutDialog -dismiss \"Abort\""`;

	formLayout -edit
		-attachForm            $t   "top"    5
		-attachForm            $t   "left"   5
		-attachNone            $t   "bottom"
		-attachForm            $t   "right"  5   	
		
		-attachControl         "nj_RenderTools_Create_Layer_name"   "top"    5 $t
		-attachForm            "nj_RenderTools_Create_Layer_name"   "left"   5
		-attachNone            "nj_RenderTools_Create_Layer_name"   "bottom"
		-attachForm            "nj_RenderTools_Create_Layer_name"   "right"  5
		
		-attachControl         $b1  "top"    5 "nj_RenderTools_Create_Layer_name"
		-attachForm            $b1  "left"   25
		-attachNone            $b1  "bottom"
		-attachForm            $b1  "right"  25 

    $form;
    
}
global proc nj_RenderTools_Create_Layer_Button()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name=` textField -q -tx "nj_RenderTools_Create_Layer_name"`;
	
}

global proc nj_RenderTools_Color()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_Color";
	createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name;
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
	zzjSetMentalrayQuality("ninjago");
	setAttr miDefaultOptions.contrastA 0.1;

	
}

global proc nj_RenderTools_RGB()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_RGB";
	createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name;
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
	zzjSetMentalrayQuality("ninjago");
	
}

global proc nj_RenderTools_AO(string $type)
{
	global string $nj_RenderTools_Create_Layer_Name;
	string $selectOBJ[]=`ls -sl -l`;
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_AO";
	string $newLayer =`createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name`;
	
	renderLayerBuiltinPreset occlusion $newLayer;
	string $setName[] =`listConnections -s 1 -d 0 -type shadingEngine $newLayer`;
	string $his[]=`listHistory $setName[0]`;
	for ($h in $his)
	{
		if (`objectType $h`=="mib_amb_occlusion")
		{
			if ($type == "chr")
			{
				setAttr ($h+".samples") 128;
				setAttr ($h+".max_distance") 5;				
			}
			else if ($type == "bg")
			{
				setAttr ($h+".samples") 64;
				setAttr ($h+".max_distance") 10;
			}
		}	
	}

//	Hide objs	
	nj_RenderTools_HideObjects($selectOBJ);
	
//	source zzjSetMentalrayQuality.mel;
//	zzjSetMentalrayQuality("ninjago");
	
}

global proc nj_RenderTools_Normal()
{
	global string $nj_RenderTools_Create_Layer_Name;
	string $selectOBJ[]=`ls -sl -l`;
	
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_Normal";
	string $newLayer =`createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name`;
	
	renderLayerBuiltinPreset normal $newLayer;
	
//	Hide objs	
	nj_RenderTools_HideObjects($selectOBJ);

//	source zzjSetMentalrayQuality.mel;
//	zzjSetMentalrayQuality("ninjago");
	
}

global proc nj_RenderTools_UnlockNodes()
{
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/cyBakeClothMain.mel";

	string $allNodes[]=`ls -type mesh -type nurbsSurface -type transform -type nParticle -type fluidShape`;
	
	for ($a in $allNodes)
	{
		if (`attributeExists "overrideEnabled" $a`)
		{
			string $connect= `connectionInfo -sfd ($a + ".overrideEnabled")`;
			myCBdeleteConnection ($a + ".overrideEnabled");
			setAttr ($a + ".overrideEnabled") 0;				
		}
		lockNode -lock off $a;
	}
}


global proc nj_RenderTools_HideObjects(string $obj[])
{
	
	string $hideGroups[]={};
	int $i =0;
	for ($p in $obj)
	{
		if (`gmatch  $p "*brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*DEFORMERS*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*drape*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*Brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;

	}
	
	for ($hg in $hideGroups)
	{
		evalDeferred ("setAttr -lock 0  "+$hg + ".visibility");
		evalDeferred ("setAttr -k 1  "+$hg + ".visibility");
		CBdeleteConnection  ($hg +".v");	
		setAttr  ($hg +".v") 0;		
	}

	
}


global proc yd_RenderTools_StoneRotateRandUI()
{
    
    	if (`window -exists yd_RenderTools_StoneRotateRandUI`) deleteUI yd_RenderTools_StoneRotateRandUI;
	window  "yd_RenderTools_StoneRotateRandUI";
        rowColumnLayout -numberOfColumns 2
            -columnWidth 1 100
            -columnWidth 2 80;
            text -label "起始帧：";
            intField "yd_RenderTools_StoneRotateRandUI_startFrame"; 
            text -label "结束帧：";
            intField "yd_RenderTools_StoneRotateRandUI_endFrame"; 
            text -l "";text -l "";
            separator -style "single";separator -style "single";
            text -l "";text -l "";

            
            text -label "位移---随机值从：";
            intField -v 2 "yd_RenderTools_StoneRotateRandUI_randFrom_t"; 
            text -label "位移---随机值到：";
            intField -v 8 "yd_RenderTools_StoneRotateRandUI_randTo_t";  
            button -l "位移---GO!!"  -c  "yd_RenderTools_StoneRotateRand_t" ;
            text -label "";

            text -l "";text -l "";
            separator -style "single";separator -style "single";
            text -l "";text -l "";            
                                           
            text -label "旋转---随机值从：";
            intField -v 40 "yd_RenderTools_StoneRotateRandUI_randFrom_r"; 
            text -label "旋转---随机值到：";
            intField -v 160 "yd_RenderTools_StoneRotateRandUI_randTo_r";         
            button -l "旋转---GO!!"  -c  "yd_RenderTools_StoneRotateRand_r" ;
            text -label "";

            text -l "";text -l "";
            separator -style "single";separator -style "single";
            text -l "";text -l "";
            
	showWindow "yd_RenderTools_StoneRotateRandUI";
	float $sf = `playbackOptions -q -min` ;
        float $ef = `playbackOptions -q -max` ;

	intField -e -v $sf "yd_RenderTools_StoneRotateRandUI_startFrame"; 
	intField -e -v $ef "yd_RenderTools_StoneRotateRandUI_endFrame"; 

}
global proc yd_RenderTools_StoneRotateRand_t()
{
    source "channelBoxCommand.mel";
    
    int $stf = `intField -q -v  "yd_RenderTools_StoneRotateRandUI_startFrame"`; 
    int $edf = `intField -q -v  "yd_RenderTools_StoneRotateRandUI_endFrame"`; 
    
    string $sls[] = `ls -sl -type "transform"`;
    for ($s in $sls)
    {
        string $his[]=`listHistory $s `;
        string $jointX = "";
        for ($h in $his)
        {
            if (`objectType $h` =="joint")
            {
                $jointX = $h;
                break;
            }
        }
        
        if (`objExists $jointX`)
        {
            string $parent[] = `listRelatives -p $jointX`;
            string $ctrl = $parent[0];
            CBdeleteConnection ($ctrl +".tx");
            CBdeleteConnection ($ctrl +".ty");
            CBdeleteConnection ($ctrl +".tz");
            
            int $randFrom = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randFrom_t"`; 
            int $randTo = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randTo_t"`; 
            float $randValue = rand($randFrom,$randTo);    
            
            int $yyyy =trunc(rand(3));
            if ($yyyy == 0)        
            {
                setKeyframe -itt linear -ott linear -t $stf -at tx -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at tx -v $randValue $ctrl;   
            }
            else if ($yyyy == 1)
            {
                setKeyframe -itt linear -ott linear -t $stf -at ty -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at ty -v $randValue $ctrl;
            }
            else
            {
                setKeyframe -itt linear -ott linear -t $stf -at tz -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at tz -v $randValue $ctrl;
            }
        }
        else
        {
            string $ctrl = $s;
            CBdeleteConnection ($ctrl +".tx");
            CBdeleteConnection ($ctrl +".ty");
            CBdeleteConnection ($ctrl +".tz");
            
            int $randFrom = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randFrom_t"`; 
            int $randTo = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randTo_t"`; 
            float $randValue = rand($randFrom,$randTo);    
            
            int $yyyy =trunc(rand(3));
            if ($yyyy == 0)        
            {
                setKeyframe -itt linear -ott linear -t $stf -at tx -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at tx -v $randValue $ctrl;   
            }
            else if ($yyyy == 1)
            {
                setKeyframe -itt linear -ott linear -t $stf -at ty -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at ty -v $randValue $ctrl;
            }
            else
            {
                setKeyframe -itt linear -ott linear -t $stf -at tz -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at tz -v $randValue $ctrl;
            }            
        }
    }
}

global proc yd_RenderTools_StoneRotateRand_r()
{
    source "channelBoxCommand.mel";
    
    int $stf = `intField -q -v  "yd_RenderTools_StoneRotateRandUI_startFrame"`; 
    int $edf = `intField -q -v  "yd_RenderTools_StoneRotateRandUI_endFrame"`; 
    
    string $sls[] = `ls -sl -type "transform"`;
    for ($s in $sls)
    {
        string $his[]=`listHistory $s `;
        string $jointX = "";
        for ($h in $his)
        {
            if (`objectType $h` =="joint")
            {
                $jointX = $h;
                break;
            }
        }
        
        if (`objExists $jointX`)
        {
            string $parent[] = `listRelatives -p $jointX`;
            string $ctrl = $parent[0];
            CBdeleteConnection ($ctrl +".rx");
            CBdeleteConnection ($ctrl +".ry");
            CBdeleteConnection ($ctrl +".rz");
            
            int $randFrom = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randFrom_r"`; 
            int $randTo = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randTo_r"`; 
            float $randValue = rand($randFrom,$randTo);    
            
            int $yyyy =trunc(rand(3));
            if ($yyyy == 0)        
            {
                setKeyframe -itt linear -ott linear -t $stf -at rx -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at rx -v $randValue $ctrl;   
            }
            else if ($yyyy == 1)
            {
                setKeyframe -itt linear -ott linear -t $stf -at ry -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at ry -v $randValue $ctrl;
            }
            else
            {
                setKeyframe -itt linear -ott linear -t $stf -at rz -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at rz -v $randValue $ctrl;
            }
        }
        else
        {
            string $ctrl = $s;
            CBdeleteConnection ($ctrl +".rx");
            CBdeleteConnection ($ctrl +".ry");
            CBdeleteConnection ($ctrl +".rz");
            
            int $randFrom = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randFrom_r"`; 
            int $randTo = `intField -q -v "yd_RenderTools_StoneRotateRandUI_randTo_r"`; 
            float $randValue = rand($randFrom,$randTo);    
            
            int $yyyy =trunc(rand(3));
            if ($yyyy == 0)        
            {
                setKeyframe -itt linear -ott linear -t $stf -at rx -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at rx -v $randValue $ctrl;   
            }
            else if ($yyyy == 1)
            {
                setKeyframe -itt linear -ott linear -t $stf -at ry -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at ry -v $randValue $ctrl;
            }
            else
            {
                setKeyframe -itt linear -ott linear -t $stf -at rz -v 0 $ctrl;
                setKeyframe -itt linear -ott linear -t $edf -at rz -v $randValue $ctrl;
            }            
        }
    }
}

global proc yd_RenderTools_SubStituteFileNodePath()
{
    python "import sys";
    python "sys.path.append(r'\\file-cluster\gdc\Resource\Support\Maya\projects\YODA')";
    python "import nj_Rnd_RenderToolsCMD as ydRT";
    python "reload(ydRT)";
    
    
    window;
    columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 250;
    button -l "法语" -c "python \"ydRT.SubStituteFileNodePath('french')\"";
    button -l "德语" -c "python \"ydRT.SubStituteFileNodePath('german')\"";
    showWindow;

    
}