global proc SHL_RenderProxyArnold()
{
	source "//file-cluster/GDC/Resource/Support/Maya/projects/HolyP5/HhRenderProxyTools.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/HolyP5/HhRenderProxyArnold.mel";
	HhcurveRecord();
	HhcurveRecordP();
	//HhDelectProxy();
	HhArnoldLoad();
	SHL_AronldProxyExport();
	CSL_AronldProxyCreat();
	SHL_ProxyExportArnold();
}



global proc SHL_AronldProxyExport()
{
	global string $filepath;
	global string $arnoldname;
	global string $arnoldNetFile;
	global string $poxyfile;
	string $file=`file -q -sn`;
	string $filename=`match "[^/]+$" $file`;
	string $buf[];
	tokenize $filename "_" $buf;
	string $proxyname=$buf[0]+"_"+$buf[1]+"_p";
	$poxyfile = `substitute $filename $file $proxyname`+".ass";
	SHL_selectHProxy();

	file -force -options "-mask 255;-lightLinks 1;-shadowLinks 1" -typ "ASS Export" -pr -es "D:/ShunLiu/SQ_ss/SC_ss/scenes/csl_p000001zhizu_p.ass";
	arnoldExportAss -f "D:/ShunLiu/SQ_ss/SC_ss/scenes/csl_p000001zhizu_p.ass" -s -mask 255 -lightLinks 1 -shadowLinks 1-cam perspShape;
	file -force -options "-mask 255;-lightLinks 1;-shadowLinks 1" -typ "ASS Export" -pr -es $poxyfile;
	arnoldExportAss -f $poxyfile -s -mask 255 -lightLinks 1 -shadowLinks 1-cam perspShape;
}

global proc SHL_ProxyExportArnold()
{
	global string $curve;
	global string $curveP;
	string $file=`file -q -sn`;
	string $filename=`match "[^/]+$" $file`;
	string $buf[];
	tokenize $filename "_" $buf;
	string $proxyname=$buf[0]+"_"+$buf[1]+"_p_"+$buf[3];
	string $proxynam = `substitute $filename $file $proxyname`;
	string $pgroup=$curveP;
	string $ctrl=$buf[1]+"_p_ctrl";
	select -cl;
	HhProxyShaderSwichArnold();
	select -cl;
	string $objs[]=`ls -type "aiStandIn"`;
	for($obj in $objs)
	{
		string $tr[]=`listRelatives -p $obj`;
		string $p[]=`listRelatives -p $tr[0]`;
		if($p[0]!= $pgroup)
		{
			parent $tr[0] $pgroup;
		}
	}
	select $ctrl;
	file -force -options "v=0" -typ "mayaBinary" -pr -es $proxynam;
}
global proc CSL_AronldProxyCreat()
{
	global string $poxyfile;
	string $fileName=`file -q -sn -shn`;
	$StandIn=`match "[^.]+" $fileName`+"_StandIn";
	if(`objExists $StandIn`)
	{
		delete $StandIn;
	}
	string $node=`createNode "aiStandIn" -n ($StandIn+"Shape")`;
	setAttr  -type "string" ($node+".dso") $poxyfile;
	setAttr ($node+".mode") 0;
	
}
global proc SHL_selectHProxy()
{

	string $objs[]=stringArrayCatenate(`ls -type "mesh"`,`ls -type "nurbsSurface"`);
	string $file=`file -q -sn`;
	string $filename=`match "[^/]+$" $file`;
	string $buf[];
	tokenize $filename "_" $buf;
	string $px=$buf[1]+"_h_";
	select -cl;
	for($obj in $objs)
	{

			if(`match $px $obj`!="" )
			{
				select -add $obj;
				
		
    		}
    		clear $buf;
	}

}



