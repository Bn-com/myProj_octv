//windowPref -q -wh ZM_AutoCollideWin delete "defaultObjectSet";
global proc zmAutoCollideSmoke()
{
string $filePath = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\projects\\Enyo\\lightingStyles\\";	

if(`window -exists  ZM_AutoCollideWin`)
	deleteUI ZM_AutoCollideWin;
window 
	-title "ZM_AutoCollideSmoke " 
       -menuBar true
	-wh 303 380
	-mxb 0
	ZM_AutoCollideWin;
 	columnLayout  -h 72 -adj 1;
	image -w 303 -h 72 -image ($filePath+"zmAutoCollideSmoke.png");
	setParent..;
	setParent..;

 formLayout  -h 300 ZM_AutoCollideForm;

//-----------------------------------

 text -label "碰撞地面 (单选/单个)"  ZM_AutoCollideGrText;
 text -label "碰撞物体 (多选/多个)"  ZM_AutoCollideObjText;
 
 textScrollList    -fn "boldLabelFont" -allowMultiSelection 1 ZM_AutoCollideGrTSL;
 textScrollList    -fn "boldLabelFont" -allowMultiSelection 1 ZM_AutoCollideObjTSL;

 button -label "Load Gr" -w 50 -c "loadGrTSL" loadGrButton;
 button -label "Clear Gr" -w 50 -c "textScrollList -e -ra ZM_AutoCollideGrTSL" clearGrButton;
 
 button -label "Load Obj" -w 50 -c "loadObjTSL" loadObjButton;
 button -label "Clear Obj" -w 50 -c "textScrollList -e -ra ZM_AutoCollideObjTSL"  clearObjButton;
 
 separator -w 150 sepTSL;
 
 textFieldGrp -l "Pre Name"  -text "Enyo" -cw 1  58 -cw 2  200  autoCollideText;
 intField -v 1001 autoCollideStartFrame;
 intFieldGrp 
    -label "Max Particle" 
    -value1 20000   -cw 1  70 -cw 2  200 autoCollideIntField;
    
 radioButtonGrp -numberOfRadioButtons 2
     -labelArray2 "Noise" "Smooth"  -sl 2 -cw 1 60 -cw 2 60 autoCollideRadioShade;
 
 button -label "Create Auto Collide Smoke" -c "CreateAutoSmoke" autoCollideSmokeButton;
//==================================


formLayout -e 
		-af ZM_AutoCollideGrText top 2
    		-af ZM_AutoCollideGrText left 2
    		-ap ZM_AutoCollideGrText right 2 50
    		
    		
		-af ZM_AutoCollideObjText top 2
    		-ac ZM_AutoCollideObjText left 2 ZM_AutoCollideGrText
    		-ap ZM_AutoCollideObjText right 2 100
    		
    		

		-ac ZM_AutoCollideGrTSL top 2 ZM_AutoCollideGrText
		-af ZM_AutoCollideGrTSL left 2
		-ap ZM_AutoCollideGrTSL right 2 50
		-af ZM_AutoCollideGrTSL bottom 90 
		
		-ac ZM_AutoCollideObjTSL top 2 ZM_AutoCollideObjText
		-ac ZM_AutoCollideObjTSL left 2 ZM_AutoCollideGrTSL
		-af ZM_AutoCollideObjTSL right 2
		-af ZM_AutoCollideObjTSL bottom 90 
		
		-ac loadGrButton top 2 ZM_AutoCollideGrTSL
		-af loadGrButton left 1
		-ap loadGrButton right 2 25
		-af loadGrButton bottom 65

		-ac clearGrButton top 2 ZM_AutoCollideGrTSL
		-ac clearGrButton left 1 loadGrButton 
		-ap clearGrButton right 2 50
		-af clearGrButton bottom 65
		
		
		
		-ac loadObjButton top 2 ZM_AutoCollideGrTSL
		-ac loadObjButton left 1 clearGrButton 
		-ap loadObjButton right 2 75
		-af loadObjButton bottom 65
		
		-ac clearObjButton top 2 ZM_AutoCollideGrTSL
		-ac clearObjButton left 1 loadObjButton 
		-ap clearObjButton right 2 100
		-af clearObjButton bottom 65		
		
		-ac sepTSL top 2 clearObjButton
		-af sepTSL left 1 
		-ap sepTSL right 2 100
		-af sepTSL bottom 60	
		
		-ac autoCollideText top 2 sepTSL
		-af autoCollideText left 1 
		-ap autoCollideText right 2 45
		-af autoCollideText bottom 35
		
		
		
		-ac autoCollideStartFrame top 2 sepTSL
		-ac autoCollideStartFrame left 3 autoCollideText 
		-ap autoCollideStartFrame right 2 60
		-af autoCollideStartFrame bottom 35
		
		-ac autoCollideIntField top 2 sepTSL
		-ac autoCollideIntField left 1 autoCollideStartFrame 
		-ap autoCollideIntField right 2 100
		-af autoCollideIntField bottom 35	
		
		-ac autoCollideRadioShade top 9 autoCollideText
		-af autoCollideRadioShade left 1 
		-ap autoCollideRadioShade right 2 40
		-af autoCollideRadioShade bottom 1	
		
		-ac autoCollideSmokeButton top 2 autoCollideText
		-ac autoCollideSmokeButton left 1 autoCollideRadioShade 
		-ap autoCollideSmokeButton right 2 100
		-af autoCollideSmokeButton bottom 1	
						
		ZM_AutoCollideForm;
		
		popupMenu -p ZM_AutoCollideObjTSL;  
		menuItem -label "Remove Select Item" -c "removeAutoCollideObjItem";
		menuItem -label "Delete ACS System" -c "deleteACS";


	
		showWindow ZM_AutoCollideWin;


}
global proc deleteACS()
{
	delete "*_ACS";
	delete "*_FX_Grp";
	}

global proc CreateAutoSmoke()
{
		//int $particleMaxCout=`intFieldGrp -q -v1 autoCollideIntField`;
		string $prefixName=`textFieldGrp -q -text autoCollideText`;
		int $particleStartFrame=`intField -q -v autoCollideStartFrame`;
		int $maxParticle=`intFieldGrp -q -v1 autoCollideIntField`;
		
		//string $cllideBirthParticle=$prefixName+"_CollideBirthParticle";
		string $groundParticle=$prefixName+"_GrParticle";
		
		
		string $gr[]=`textScrollList -q -ai ZM_AutoCollideGrTSL`;
		string $createEmitter[]=`emitter -type surface -r 99999 -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n ($prefixName+"_GrEmitter") $gr[0]`;
		string $grParticle[]=`particle -n $groundParticle`;
		connectDynamic -em $createEmitter[1] $grParticle[0];
		
		setAttr ($grParticle[0]+"Shape.startFrame") $particleStartFrame;
		setAttr ($grParticle[0]+"Shape.maxCount") $maxParticle;
		setAttr ($grParticle[0]+"Shape.primaryVisibility") 0;
		setAttr ($grParticle[0]+"Shape.receiveShadows") 0;
		setAttr ($grParticle[0]+"Shape.castsShadows") 0;
		
		int $frame=$particleStartFrame;
		while ($frame<33333)
		{
			currentTime $frame;
			int $maxCount=`getAttr ($grParticle[0]+"Shape.count")`;
			if ($maxCount>=$maxParticle)
				break;
			$frame++;
		}
		
		saveInitialState $grParticle[0];
		delete $createEmitter[1];
		//setAttr ($createEmitter[1]+".rate") 0;
		currentTime $particleStartFrame;
		setAttr ($grParticle[0]+".translateY") 3;
		//setAttr ($grParticle[0]+".visibility") 0;

	
		
		

		string $collideObjs[]=`textScrollList -q -ai ZM_AutoCollideObjTSL`;
		
		for ($collideObj in $collideObjs)	
		{	
		collision -r 0 -f 0 -o 0.01 $groundParticle  $collideObj;
		}
		
		
		string $hitBirthParticle=$prefixName+"_CollideBirthParticle";
		particle -i 1.0 -name $hitBirthParticle;
		setAttr ($hitBirthParticle+".inheritFactor") 0.29;
		setAttr ($hitBirthParticle+"Shape.startFrame") $particleStartFrame;
		
		event -em 6 -die 1 -target $hitBirthParticle -spread 0.93 -random 0 -count 0 $groundParticle;
		collision -r 0 -f 0 -o 0.01 $hitBirthParticle  $gr[0];
		setAttr ($hitBirthParticle+"Shape.conserve") 0.95;
		setAttr ($hitBirthParticle+"Shape.lifespanMode") 2;
		setAttr ($hitBirthParticle+"Shape.lifespan") 1.3;
		setAttr ($hitBirthParticle+"Shape.lifespanRandom") 0.5;
		setAttr ($hitBirthParticle+"Shape.depthSort") 1;
		setAttr ($hitBirthParticle+"Shape.particleRenderType") 8;
		addAttr -ln radiusPP -dt doubleArray ($hitBirthParticle+"Shape");
		addAttr -ln radiusPP0 -dt doubleArray ($hitBirthParticle+"Shape");
		addAttr -ln "opacityPP" -dt doubleArray ($hitBirthParticle+"Shape");
		addAttr -ln "opacityPP0" -dt doubleArray ($hitBirthParticle+"Shape");
		string $opacityPPArrayMap[]=`arrayMapper -target ($hitBirthParticle+"Shape") -destAttr opacityPP -inputV ageNormalized -type ramp `;
		string $reNameOpacityPPArrayMap=`rename $opacityPPArrayMap[0] ($prefixName+"_opacityPPArrayMap")`;
		
		string $opacityPPArrayMapRamp[]=`listConnections -d 0 -type "ramp"  $reNameOpacityPPArrayMap`;
		removeMultiInstance -break true ($opacityPPArrayMapRamp[0]+".colorEntryList[1]");
		setAttr ($opacityPPArrayMapRamp[0]+".colorEntryList[0].color") -type double3 0.5 0.5 0.5 ;

		setAttr ($opacityPPArrayMapRamp[0]+".colorEntryList[2].position") 0.84;
		setAttr ($opacityPPArrayMapRamp[0]+".colorEntryList[2].color") -type double3 0 0 0 ;

		string $radiusPPArrayMap[]=`arrayMapper -target ($hitBirthParticle+"Shape") -destAttr radiusPP -inputV ageNormalized -type ramp`;
		string $reNameRadiusPPArrayMap=`rename $radiusPPArrayMap[0] ($prefixName+"_radiusPPArrayMap")`;
		
		setAttr ($reNameRadiusPPArrayMap+".minValue") 15;
		setAttr ($reNameRadiusPPArrayMap+".maxValue") 45;
		
		string $radiusPPArrayMapRamp[]=`listConnections -d 0 -type "ramp"  $reNameRadiusPPArrayMap`;
		removeMultiInstance -break true ($radiusPPArrayMapRamp[0]+".colorEntryList[1]");
		setAttr ($radiusPPArrayMapRamp[0]+".colorEntryList[0].color") -type double3 0 0 0 ;
		setAttr ($radiusPPArrayMapRamp[0]+".colorEntryList[2].position") 0.84;
		setAttr ($radiusPPArrayMapRamp[0]+".colorEntryList[2].color") -type double3 1 1 1 ;
		

		string $hitGravity[]=`gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($prefixName+"_CollideGraivty")`;
		connectDynamic -f $hitGravity[0]  $hitBirthParticle;
		
		string $hitDrag[]=`drag -pos 0 0 0 -m 0.05 -att 0 -dx 0 -dy 0 -dz 0 -ud 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($prefixName+"_CollideDrag")`;
		connectDynamic -f $hitDrag[0]  $hitBirthParticle;
		setAttr ($hitDrag[0]+".magnitude") 1.5;
		
		string $hitTrublulence[]=`turbulence -pos 0 0 0 -m 5 -att 1 -f 1 -phaseX 0 -phaseY 0 -phaseZ 0 -noiseLevel 0 -noiseRatio 0.707  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($prefixName+"_CollideTurbulence")`;
		connectDynamic -f $hitTrublulence[0]  $hitBirthParticle;
 		setAttr ($hitTrublulence[0]+".magnitude") 60;
		setAttr ($hitTrublulence[0]+".attenuation") 0;
		setAttr ($hitTrublulence[0]+".frequency") 11;
		setAttr ($hitTrublulence[0]+".phaseY") 3;
		string $exp=$hitTrublulence[0]+".phaseZ=time*3;";
		expression -s $exp;
		setAttr ($hitTrublulence[0]+".noiseLevel") 3;
		string $filePath = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\projects\\Enyo\\lightingStyles\\";	
		file -import -type "mayaBinary" -rpr "shader_dust" -options "v=0;p=17"  -pr -loadReferenceDepth "all" ($filePath+"shader_dust.mb");
		int $shadeSel=`radioButtonGrp -q -sl autoCollideRadioShade`;	
		select -r $hitBirthParticle;
		if ($shadeSel==2)
		{
		hyperShade -assign dust_smoothness__ACS;
		}
		else
		{
		hyperShade -assign dust_noise__ACS;
		}
		
		if( `objExists ($prefixName+"_FX_Grp")`!=1 ) {
    		group -em -n ($prefixName+"_FX_Grp");
		}
		parent $groundParticle $hitBirthParticle $hitGravity[0] $hitDrag[0] $hitTrublulence[0] ($prefixName+"_FX_Grp");


	}
		
global proc loadGrTSL()
{

	string $grSelTsl[]=`ls -sl`;
	
	if (`size($grSelTsl)`==1)
	{
		textScrollList -e -ra ZM_AutoCollideGrTSL;
		textScrollList -e -a $grSelTsl[0] ZM_AutoCollideGrTSL;
	}
	else
	warning "please select one Obj";
}

global proc loadObjTSL()
{

	string $objSelTsl[]=`ls -sl`;
	string $objTslList[]=`textScrollList -q -ai ZM_AutoCollideObjTSL`;

  	string $diff[] = stringArrayRemove($objTslList, $objSelTsl);
  
  	for ($item in $diff)
  	{
		textScrollList -e -a $item ZM_AutoCollideObjTSL;
	
	}


}

global proc removeAutoCollideObjItem()
{
	string $objTslSelect[]=`textScrollList -q -si ZM_AutoCollideObjTSL`;
  
  	for ($remove in $objTslSelect)
  	{
		textScrollList -e -ri $remove ZM_AutoCollideObjTSL;
	
	}
};
