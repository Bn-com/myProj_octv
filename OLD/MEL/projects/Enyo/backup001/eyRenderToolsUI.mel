global proc eyRenderToolsUI()
{
	if  (`pluginInfo -query -loaded "Mayatomr"`==0)
	loadPlugin Mayatomr;
	setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mentalRay" ;
		
	if (!`objExists miDefaultOptions`)
	{
		createNode  mentalrayOptions -name "miDefaultOptions";
	}
	source "//file-cluster/GDC/Resource/Support/Maya/Projects/BenAndIzzy/ezRenderMainLayoutMaterial.mel";
	
	global string $aoSwitch = "ysAddAOPass";
	global string $normalSwitch = "ysAddNormalPass";
	global string $depthSwitch = "ysAddDepthPass";
	global string $shadowSwitch = "ysSelfshadowPass";
	global string $aoLayer = "ysAORenderLayer";
	global string $normalLayer = "ysNormalRenderLayer";
	global string $sShadowLayer = "ysSshadowRenderLayer";
	global string $filePath;
	string $iconPath = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Enyo\\Render\\";
	if(`window -ex eyRenderToolsUIWin`)
	{
		deleteUI eyRenderToolsUIWin;
	}
	
	window -title "Enyo Render Tools 1.0"  -menuBar true  -mxb false -sizeable true  -resizeToFitChildren true eyRenderToolsUIWin;
		string $mainColumLayout = `columnLayout -adjustableColumn true -rs 2`;
			string $mainImage = `symbolButton -image ($iconPath+"EnyoRender.bmp")`;
			string $bufferTools = `frameLayout -label "frameBufferMethod" -labelAlign "top" -cl true -cc "" -cll true  -borderStyle "etchedOut"`;
				string $form = `gridLayout -numberOfColumns 2 -cellWidth 149 `;
					button -label "制作角色" -height 30 -width 146 -bgc 1 0.783 0.814 -command "ysMakeCharByPass";
					button -label "制作背景" -height 30 -width 146 -bgc 1 0.783 0.814 -command "ysMakeBGByPass";
					
					checkBox -label "AO Pass" -height 30 -width 146 -v true -onc "$aoSwitch=\"ysAddAOPass\";" -ofc "$aoSwitch=\"\"";
					checkBox -label "normal Pass" -height 30 -width 146 -v true -onc "$normalSwitch=\"ysAddNormalPass\";" -ofc "$normalSwitch=\"\"";
					checkBox -label "depth Pass" -height 30 -width 146 -v true -onc "$depthSwitch=\"ysAddDepthPass\";" -ofc "$depthSwitch=\"\"";
					checkBox -label "selfShadow Pass" -height 30 -width 146 -v true -onc "$shadowSwitch=\"ysSelfshadowPass\";" -ofc "$shadowSwitch=\"\"";						
					
					button -label "复原场景" -height 30 -width 146 -bgc 1 0.783 0.814 -command "ysbackToTheInitialState";
					button -label "制作眼睛" -height 30 -width 146 -bgc 1 0.783 0.814 -command "ysMakeEyes";
				setParent ..;
			setParent ..;
			
			string $renderLayerTools = `frameLayout -label "traditionalMethod" -labelAlign "top" -cl true -cc "" -cll true  -borderStyle "etchedIn"`;
				string $form = `gridLayout -numberOfColumns 2 -cellWidth 149 `;
				button -label "分层制作角色" -height 30 -width 146 -bgc 1 0.933 0.810 -command "ysMakeCharByLayer";
				button -label "分层制作背景" -height 30 -width 146  -bgc 1 0.933 0.810 -command "ysMakeBGByLayer";
				
				checkBox -label "AO Layer" -height 30 -width 146 -v true -onc "$aoLayer=\"ysAORenderLayer\";" -ofc "$aoLayer=\"\"";
				checkBox -label "normal Layer" -height 30 -width 146 -v true -onc "$normalLayer=\"ysNormalRenderLayer\";" -ofc "$normalLayer=\"\"";
				checkBox -label "selfShadow Layer" -height 30 -width 146 -v true -onc "$sShadowLayer=\"ysSshadowRenderLayer\";" -ofc "$sShadowLayer=\"\"";
				separator;
					
				button -label "AO layer" -height 30 -width 146 -bgc 1 0.933 0.810 -command "ysAORenderLayer";
				button -label "Normal Layer" -height 30 -width 146 -bgc 1 0.933 0.810 -command "ysNormalRenderLayer";
				button -label "depth Layer" -height 30 -width 146 -bgc 1 0.933 0.810 -command "zwTaowaZConfirm";
				button -label "selfShadow Layer" -height 30 -width  146 -bgc 1 0.933 0.810 -command "ysSshadowRenderLayer";
				button -label "castShadow Layer" -height 30 -width 146 -bgc 1 0.933 0.810 -command "ysCastShadowRenderLayer";	
				button -label "castAO Layer" -height 30 -width 146 -bgc 1 0.933 0.810 -command "ysCastAORenderLayer";
				setParent ..;
			setParent ..;
		setParent ..;		
		
		string $bufferTools = `frameLayout -label "inCommonUseTools" -labelAlign "top" -cl false -cc "" -cll true  -borderStyle "etchedOut"`;
			columnLayout -rs 3 -adj true;
				rowLayout -numberOfColumns 6
					-columnWidth6 50 50 50 50 50 50
 					-columnAlign  1 "right"
					-columnAttach 1 "both" 	0
 					-columnAttach 2 "both"  0
					-columnAttach 3 "both"  0
					-columnAttach 4 "both"  0
					-columnAttach 5 "both"  0
					-columnAttach 6 "both"  0; 
						symbolButton -ann "ColorR" -image ($iconPath+"colorR.xpm") -command "ezRenderMainLayoutMaterial_Assign(\"colorR\")";
						symbolButton -ann "ColorG" -image ($iconPath+"colorG.xpm") -command "ezRenderMainLayoutMaterial_Assign(\"colorG\")";
						symbolButton -ann "ColorB" -image ($iconPath+"colorB.xpm") -command "ezRenderMainLayoutMaterial_Assign(\"colorB\")";
						symbolButton -ann "ColorA" -image ($iconPath+"colorA.xpm") -command "ezRenderMainLayoutMaterial_Assign(\"colorA\")";
						symbolButton -ann "Matte"  -image ($iconPath+"matte.xpm")  -command "ezRenderMainLayoutMaterial_Assign(\"matte\")";
						symbolButton -ann "AO"  -image ($iconPath+"AO.bmp") -command "ezRenderMainLayoutMaterial_Assign(\"AO\")";
				setParent ..;
				
				gridLayout -numberOfColumns 3 -cellWidth 100;
				$filePath = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\projects\\Enyo\\lightingStyles\\";	
					text -label "导入角色灯光" -align "center" -height 30 -width 100;
						popupMenu;
						 	menuItem -label "SunRise_SunSet_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Character_SunRise_SunSet_EXT.ma\")";
							menuItem -label "MidDay_EXT" 
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Character_MidDay_EXT.ma\")";
							menuItem -label "Dusk_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Character_Dusk_EXT.ma\")";
							menuItem -label "Night_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Set_Night_EXT.ma\")";
							
					text -label "导入背景灯光" -align "center" -height 30 -width 100;
						popupMenu ;
						string $filePath = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\projects\\Enyo\\lightingStyles\\";
							menuItem -label "SunRise_SunSet_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Set_SunRise_SunSet_EXT.ma\")";
							menuItem -label "MidDay_EXT" 
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Set_MidDay_EXT.ma\")";
							menuItem -label "Dusk_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Set_DuskDay_EXT.ma\")";
							menuItem -label "Night_EXT"
							-command "file -import -type \"mayaAscii\" ($filePath + \"LightRig_Set_Night_EXT.ma\")";
							
					text -label "导入IBL灯光" -align "center" -height 30 -width 100;
						popupMenu ;
							menuItem -label "IBL_SunRise_SunSet"
							-command "ysMakeIBL(\"SunRise_SunSet\")";
							menuItem -label "IBL_MidDay"
							-command "ysMakeIBL(\"MidDay\")";
							menuItem -label "IBL_Dusk"
							-command "ysMakeIBL(\"Dusk\")";
							menuItem -label "IBL_Night"
							-command "ysMakeIBL(\"Night\")";								
					
					button -label "CheckTrans" -height 30 -width 100 -command "ysCheckTransExceptEyes";
					button -label "ImportGeo"	-height 30 -width 100 -command "source yuImportGeoTool.mel; yuImportGeoTool;";				
					button -label "refresh" -height 30 -width 100 -command "ysRefresh";
					button -label "show" -height 30 -width 100 -command "ezRenderShow; ysSetCameraClip;";
					button -label "Get camera" -height 30 -width 100 -command "source zwCameraImportExport.mel; zwGetCameraUI;";
					button -label "Id Pass" -height 30 -width 100 -command "zzjIdPassInfo";
					button -label "Nuke-MV" -height 30 -width 100 -command "ysMotionVectorRenderLayerForNuke";						
				setParent ..;
			setParent ..;
		setParent ..;
		
		button -l "CLOSE"  -w 100 -h 30 -command "deleteUI eyRenderToolsUIWin";
	showWindow;
}

global proc zwTaowaZConfirm()
{	
	string $message = "透明深度渲染层只能单独一个文件，确定吗？";
	if(`confirmDialog -message $message 
		-button "Yes" -button "Cancel"
		-defaultButton "Cancel"
		-cancelButton "Cancel"`
		!= "Yes")
	{
		return;
	}
	setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mayaSoftware";
	setAttr defaultRenderGlobals.imageFormat 10;
	zwTaowaZ;
}

global proc ysMakeCharByPass()
{	
	string $userBuffersCount[] = `ls -type "mentalrayUserBuffer"`;  
	
	//Check, If exists userbuffers.
	if(size($userBuffersCount)!=0)
	{
		string $camera[] = `listCameras -p`;
		string $persp[] = {"persp"};
		string $camera[] = stringArrayRemove($persp, $camera);
		string $camera[] = `listRelatives -children $camera`;
		if(size($camera) != 1)
		{
			confirmDialog -title "Confirm" -message "场景里没有摄像机或者有多个摄像机"
						  -button "Yes" ;
						  return;	
		}
		
		//Make new camera available for user buffers.
		string $outPassOld[] = `ls -type mentalrayOutputPass`;
		delete $outPassOld;
				
		int $i = 1;
		string $userBuffer[] = `listConnections -s on "miDefaultOptions.frameBufferList"`;
		string $outPassZero = `createNode "mentalrayOutputPass" -name "mentalrayOutputPass0"`;
		string $outName, $outputPassName;
		connectAttr -force ($outPassZero + ".message") ($camera[0] + ".miOutputShaderList[0]");
		for($i; $i<size($userBuffer); $i++)
		{
			$outputPassName = ($userBuffer[$i] + "Pass");
			$outName = `substring $userBuffer[$i] 9 (size($userBuffer[$i]))`;
			$outputNode = `createNode "mentalrayOutputPass" -name $outputPassName`;
			setAttr -type "string" ($outputNode + ".fileName") $outName;
			connectAttr -force ($outputPassName + ".message") ($camera[0] + ".miOutputShaderList["+$i+"]");
			connectAttr -force ($userBuffer[$i] + ".message") ($outputPassName + ".dataType");
			setAttr ($outputPassName + ".fileMode") 1;
		}
		
		string $outPassNew[] = `ls -type mentalrayOutputPass`;
		if(size($userBuffersCount) == size($outPassNew))
		{
			confirmDialog -title "Confirm" -message "新增摄像机的Buffer属性添加完毕"
						  -button "Yes" ;	
		}
	}
	
	if(size($userBuffersCount)==0)
	{
		global string $aoSwitch;
		global string $normalSwitch;
		global string $depthSwitch;
		global string $shadowSwitch;
	
		$cmd = "ysPrepRendering;";
		$cmdMatte = "ysSetMatteBufferShader;";
		$cmdChar = "ysCreatRenderLayerChar;";
		eval ($cmd + $aoSwitch+";" + $normalSwitch+";" + $depthSwitch+";" + $shadowSwitch+";" + $cmdMatte + $cmdChar);
	}
}

global proc ysMakeBGByPass()
{	
	string $userBuffersCount[] = `ls -type "mentalrayUserBuffer"`;  
	
	//Check, If exists userbuffers.
	if(size($userBuffersCount)!=0)
	{
		string $camera[] = `listCameras -p`;
		string $persp[] = {"persp"};
		string $camera[] = stringArrayRemove($persp, $camera);
		string $camera[] = `listRelatives -children $camera`;
		if(size($camera) != 1)
		{
			confirmDialog -title "Confirm" -message "场景里没有摄像机或者有多个摄像机"
						  -button "Yes" ;
						  return;	
		}
		
		//Make new camera available for user buffers.
		string $outPassOld[] = `ls -type mentalrayOutputPass`;
		delete $outPassOld;
				
		int $i = 1;
		string $userBuffer[] = `listConnections -s on "miDefaultOptions.frameBufferList"`;
		string $outPassZero = `createNode "mentalrayOutputPass" -name "mentalrayOutputPass0"`;
		string $outName, $outputPassName;
		connectAttr -force ($outPassZero + ".message") ($camera[0] + ".miOutputShaderList[0]");
		for($i; $i<size($userBuffer); $i++)
		{
			$outputPassName = ($userBuffer[$i] + "Pass");
			$outName = `substring $userBuffer[$i] 9 (size($userBuffer[$i]))`;
			$outputNode = `createNode "mentalrayOutputPass" -name $outputPassName`;
			setAttr -type "string" ($outputNode + ".fileName") $outName;
			connectAttr -force ($outputPassName + ".message") ($camera[0] + ".miOutputShaderList["+$i+"]");
			connectAttr -force ($userBuffer[$i] + ".message") ($outputPassName + ".dataType");
			setAttr ($outputPassName + ".fileMode") 1;
		}
		
		string $outPassNew[] = `ls -type mentalrayOutputPass`;
		if(size($userBuffersCount) == size($outPassNew))
		{
			confirmDialog -title "Confirm" -message "新增摄像机的Buffer属性添加完毕"
						  -button "Yes" ;	
		}
	}
	
	if(size($userBuffersCount)==0)
	{
		global string $aoSwitch;
		global string $normalSwitch;
		global string $depthSwitch;
		global string $shadowSwitch;
	
		$cmd = "ysPrepRendering;";
		$cmdMatte = "ysSetMatteBufferShader;";
		$cmdChar = "ysCreatRenderLayerBG;";
		eval ($cmd + $aoSwitch+";" + $normalSwitch+";" + $depthSwitch+";" + $shadowSwitch+";" + $cmdMatte + $cmdChar);
	}
}

global proc ysMakeCharByLayer()
{
	global string $aoLayer;
	global string $normalLayer;
	global string $sShadowLayer;
	
	$cmd = "";
	$colorLayer = "ysColorRenderLayer;";
	eval ($cmd + $colorLayer + $aoLayer+";" + $normalLayer+";" + $sShadowLayer+";");
}

global proc ysMakeBGByLayer()
{
	global string $aoLayer;
	global string $normalLayer;
	global string $sShadowLayer;
	
	$cmd = "";
	$colorLayer = "ysColorRenderLayer;";
	eval ($cmd + $colorLayer + $aoLayer+";" + $normalLayer+";" + $sShadowLayer+";");
}

global proc ysRefresh()
{
	// 获取材质和对应物体的名称
	//string $ttt[]=`zzjReturnMatList`;
	
	//重新载入参考物体
	string $ref[] = `ls -type "reference"`;
	string $skip[] = {"CAMRN","sharedReferenceNode"};
	string $ref[] = stringArrayRemove($skip, $ref);
	for($item in $ref)
	{
		$file = `referenceQuery -filename $item`;
		file -unloadReference $item $file;
		file -loadReference $item $file;		
	}
	
	/*将材质重新赋予相对应的物体
	for ($z=0;$z<`size $ttt`;$z+=2)
	{
		select (stringToStringArray($ttt[$z], " "));
		hyperShade -assign $ttt[$z+1];select -cl;
	}	*/
	ReferenceEditor;
}

global proc ysMakeIBL(string $IBL)
{	
	// check renderer 
	if  (`pluginInfo -query -loaded "Mayatomr"`==0)
		loadPlugin Mayatomr;
		setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mentalRay" ;
	if (!`objExists miDefaultOptions`)
	{
		createNode  mentalrayOptions -name "miDefaultOptions";
	}
	
		string $ibls[] = `ls -type "mentalrayIblShape"`;
	if(size($ibls)>1)
	{
		warning "场景中有多个IBL，只能有一个";
		return;
	}	
	
	switch($IBL)
	{
		case "SunRise_SunSet" :
		file -import -type "mayaBinary" "//file-cluster/GDC/Resource/Support/Maya/projects/Enyo/lightingStyles/SunRise_SunSet_ibl.mb";
		break;
		
		case "MidDay" :
		file -import -type "mayaBinary" "//file-cluster/GDC/Resource/Support/Maya/projects/Enyo/lightingStyles/MidDay_ibl.mb";
		break;
		
		case "Dusk" :
		file -import -type "mayaBinary" "//file-cluster/GDC/Resource/Support/Maya/projects/Enyo/lightingStyles/Dusk_ibl.mb";
		break;
		
		case "Night" :
		file -import -type "mayaBinary" "//file-cluster/GDC/Resource/Support/Maya/projects/Enyo/lightingStyles/Night_ibl.mb";
		break;
	}
			
	connectAttr -force "IBL_RampShape.message" ("mentalrayGlobals.imageBasedLighting");
}

global proc ysSetCameraClip()
{		
	string $array[] = `listCameras -p`;
	for($item in $array)
	{
		setAttr ($item + ".nearClipPlane") 1;
		setAttr ($item + ".farClipPlane") 10000000;
	}	
}