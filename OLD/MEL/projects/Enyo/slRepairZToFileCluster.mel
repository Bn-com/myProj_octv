//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2009-6-1
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//			将文件中的"Z:"替换为"//file-cluster/GDC"
//			包含的节点有Reference  Textures  Cachefile  Audio等
//				
//////////////////////////////////////////////////////////

global proc slRepairZToFileCluster()
{
	string $fullname = "//file-cluster/GDC";


	//reference 
	string $referenceFiles[] = `file -q -r`;
	for ($rf in $referenceFiles)
	{
		string $referenceNode = `referenceQuery -rfn $rf`;
		string  $file = `referenceQuery -wcn -f $rf`;
		$file = substituteAllString($file,"\\","/");
		if (gmatch($file,"[z-Z]:/*"))
		{
			string $replacefile = $fullname+`substring $file 3 (size($file))`;
			//print $replacefile;
			file -lr $referenceNode $replacefile;
		}
	}

	
	//其他
	string $repairTypes[] = {"file","cacheFile","audio","diskCache"};
	string $addTypes[]={};
	if (`pluginInfo -query -loaded "RenderMan_for_Maya"`)
	{
		$addTypes[size($addTypes)] = "RenderManShader";
	}
	$repairTypes = stringArrayCatenate($repairTypes,$addTypes);
	
	for ($type in $repairTypes)
	{
		//存在"Z"字符的节点的属性
		string $attr;
		switch ($type)
		{
			case "file" :
				$attr = "fileTextureName";
				break;
			case "cacheFile" :
				$attr = "cachePath";
				break;
			case "audio" :
				$attr = "filename";
				break;
			case "diskCache" :
				$attr = "cacheName";
				break;
			case "RenderManShader" :
				$attr = "shadername";
				break;
		}
		
		
		string $repairObjects[] = `ls -type $type`;
		for ($ro in $repairObjects)
		{
			string $repairAttr = `getAttr ($ro+"."+$attr)`;
			$repairAttr = substituteAllString($repairAttr,"\\","/");
			if (gmatch($repairAttr,"[z-Z]:/*"))
			{
				string $replacefile = $fullname+`substring $repairAttr 3 (size($repairAttr))`;
				setAttr -type "string" ($ro+"."+$attr) $replacefile;
			}
		}
	}

	if (`pluginInfo -query -loaded "RenderMan_for_Maya"`)
	{
		string $mm[] = `ls -type RenderMan `;
		for ($item in $mm)
		{
			deleteIfNotReferenced $item;
		}
	}
	print "修正完成!";
	/*
	//file
	string $textureFiles[] = `ls -type file`;
	for ($tf in $textureFiles)
	{
		string $imageName = `getAttr ($tf+".fileTextureName")`;
		$imageName = substituteAllString($imageName,"\\","/");
		if (gmatch($imageName,"[z-Z]:/*"))
		{
			string $replacefile = $fullname+`substring $imageName 3 (size($imageName))`;
			setAttr -type "string" ($tf+".fileTextureName") $replacefile;
		}
	}

	//cacheFile
	string $cacheFiles[] = `ls -type cacheFile`;
	for ($cf in $cacheFiles)
	{
		string $cachePath = `getAttr ($cf+".cachePath")`;
		$cachePath = substituteAllString($cachePath,"\\","/");
		if (gmatch($cachePath,"[z-Z]:/*"))
		{
			string $replacefile = $fullname+`substring $cachePath 3 (size($cachePath))`;
			setAttr -type "string" ($cf+".cachePath") $replacefile;
		}
	}
	*/
}