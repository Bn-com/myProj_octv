// Create normal  render layer 
global proc ysNormalRenderLayer()
{
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
	zzjSetMentalrayQuality("production");
	setMayaSoftwareFrameExt(3, 0);
	// turn default render layer off
	string $Array[] = `listConnections "renderLayerManager.renderLayerId"`;
	for($item in $Array)
	{
		if((`gmatch $item "*:*defaultRenderLayer*"`)||(`gmatch $item "*defaultRenderLayer*"`))
		setAttr ($item + ".renderable") 0;
	}	
	createRenderLayer -name "normal";
	// Put All geometry into render layers
	string $allLayers[] = `ls -type renderLayer`;
	string $defaultLayer[] = {"defaultRenderLayer"};
	string $layers[] = stringArrayRemove($defaultLayer, $allLayers);
	string $objShape[] = `ls -geometry`;
	
	int $i = 0;
	int $layerCount = size($layers);
	for($i; $i<$layerCount; $i++)
	{
		editRenderLayerMembers -noRecurse $layers[$i] $objShape `ls -lights`;
	}
	
	editRenderLayerGlobals -currentRenderLayer "normal";
	editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
	// normal shader
	string $norTex = `shadingNode -asTexture mib_amb_occlusion -name "norTexture"`;
	setAttr ($norTex + ".output_mode" ) 2;
	//setAttr ($norTex + ".max_distance" ) 10;
	string $norShader = `shadingNode -asShader surfaceShader -name "norShader"`;
	string $norShaderSG = `sets -renderable true -noSurfaceShader true -empty -name ($norShader+"SG")`;
	connectAttr -force ($norTex + ".outValue") ($norShader + ".outColor");
	connectAttr -force ($norShader + ".outColor") ($norShaderSG + ".surfaceShader");
	//Ìí¼ÓÊôÐÔ¿ØÖÆmax_distance
	addAttr -ln "max_distance"  -at double  $norShader;
	setAttr -e-keyable true ($norShader+".max_distance");
	setAttr ($norShader+".max_distance") 10;
	connectAttr -f ($norShader+".max_distance") ($norTex + ".max_distance");	

	// normal for others 
	//select $objShape;
	//hyperShade -assign $norShader; 
	source slRenderAllTools.mel;
	slRenderAllToolsHookShaderOverride("normal","norShader");
	select -cl;	
}		
