global proc HbSkRenderTools()
{
	if(`window -ex HbSkRenderToolsWin`) 
          deleteUI HbSkRenderToolsWin; 
             window -t "Render Tools" HbSkRenderToolsWin; 
		columnLayout -adjustableColumn true;
    		button -label "1" -c "HbSetRenderServer(\"1\")";
    		button -label "2" -c "HbSetRenderServer(\"2\")";
    		button -label "3" -c "HbSetRenderServer(\"3\")";
    		button -label "4" -c "HbSetRenderServer(\"4\")";
    		button -label "5" -c "HbSetRenderServer(\"5\")";
    		button -label "6" -c "HbSetRenderServer(\"6\")";
    		button -label "7" -c "HbSetRenderServer(\"7\")";
    		button -label "8" -c "HbSetRenderServer(\"8\")";
    		button -label "9" -c "HbSetRenderServer(\"9\")";
    		button -label "10" -c "HbSetRenderServer(\"10\")";





		showWindow HbSkRenderToolsWin;

}
HbSkRenderTools;

global proc  HbRenderStart(string $Number)
	{
		string $TheServer=$Number;
		print $Number;
		string $ThePath="Z:/Projects/Strawberry/Strawberry_Scratch/TD/TheRenderServer/render"+$TheServer+"/";	
		string $getTheFiles[]=`getFileList -folder $ThePath`;
		if (`size($getTheFiles)`!=0)
			{

				catch(`file -f  -typ "mayaBinary" -o ($ThePath+$getTheFiles[0])`);
				renderlayer;
				catch(`sysFile -delete ($ThePath+$getTheFiles[0])`); 

			}
		if (`size($getTheFiles)`==0)
			{
				file -f -new;
			}
	
	}


global proc HbSetRenderServer(string $Number)
{
	string $TheCmd="HbRenderStart("+$Number+")";
	scriptJob  -event "NewSceneOpened" $TheCmd;
	scriptJob  -event "SceneOpened" $TheCmd;
	file -f -new;
}

global proc renderlayer()
    {
     string $layers [];
     int $i;
    $layers = `ls -type "renderLayer"`;
    $n = `size $layers`;
    for ($i=0;$i<$n;$i++ )
    {  
       string $buf2[];
       tokenize $layers[$i] ":" $buf2;
        $nn = `size $buf2`;
	if ($nn == "1")
	{
	
          int $df;
          $df =eval("getAttr "+$layers[$i]+".renderable");
       

            if ($df =="1")
            {
            editRenderLayerGlobals -currentRenderLayer $layers[$i];
	    xFrameInit();
            xFrameRender();
            }
      }

    }

    }

global proc xFrameInit() {
	global int $xSt;
	global int $xTot;
	global string $xTheCamera;
	global string $xOutputName;

	string $xTheCameraArray[] = `ls -sn -ca`;
	string $xTheCameraItem;
	string $xUseCamera[];

	int $xEn =  `getAttr "defaultRenderGlobals.endFrame" `;
	$xSt = `getAttr "defaultRenderGlobals.startFrame" `;
	$xTot = $xEn;

	$xOutputName = basenameEx(`file -q -exn`);

	currentTime $xSt;
     //list renderable camera
     string $incam;
    select -cl;
    $allcam =  `ls -type "camera"`;
    for ($incam in $allcam)
    {
     $i=   eval("getAttr \""+$incam+".renderable\"");
     if ($i =="1")
     {
      select -add $incam;
     }
    }
     $rendercam=`ls -sl`;
     int $numcam = `size $rendercam`;
     if ($numcam =="0")
     {       
       string $camA [];
       print "没有可以渲染的摄像机" ;
       cam;
       $camA=`ls -sl`;
       $xTheCamera = $camA[0];
       $print2 = "使用参考相机"+$camA[0]+"渲染";

        print $print2;
     }
     else if ($numcam =="1")
     {
      select -r $rendercam;
      pickWalk -d up;
      $xUseCamera = `ls -sl`;
      $xTheCamera = $xUseCamera[0];
     }
         else if ($numcam > 1 )
     { print "文件中有多个可渲染相机";
       string $camA [];
       cam;
       $camA=`ls -sl`;
       $xTheCamera = $camA[0];
       $print2 = "使用参考相机"+$camA[0]+"渲染";
       print $print2;
     }
     ///////////////////////////////////////////////////


	RenderViewWindow;
}

global proc xFrameRender() 
{
	global int $xSt;
	global int $xTot;
	global string $xTheCamera;
	global string $xOutputName;
	string $getFileName=`file -q -shn -sn`;
	string $Ep="";
	string $buff[];
	int $num = `tokenize $getFileName "_" $buff`;
	if (int($buff[1])%2==1)
		$Ep="ODD";
	if (int($buff[1])%2==0)
		$Ep="EVEN";
	print $Ep;
	string $TheImagePath="Z:/Projects/Strawberry/Production/Render/Images/"+$Ep+"/"+"ep_"+$buff[1]+"/sc_"+$buff[2]+"/lr/";

	string $xStPad;
	int $zz = $xSt;
	int $xFrameIndex = $xSt;
	                   int $img;
                  $img = `  getAttr "defaultRenderGlobals.imageFormat"` ;
		  if ($img != "7"&& $img != "0")
		  {
		   print $img;
		   error "目前仅支持输出iff序列";
		  }

	
	string $pathnam=$TheImagePath;


  int $bbb=size($pathnam);
  string $ttt=`substring $pathnam $bbb ($bbb+1)`;

  if ($ttt != "/")
  {
   $pathnam = $pathnam  +"/";
  }



	string $xDirTest = $pathnam;
	if (`filetest -d $xDirTest` == 0) { sysFile -md $xDirTest; }

	progressWindow -minValue $xSt  -maxValue $xTot -ii 1 -st "" -title "Rendering..." ;

	for ($zz; $zz <= $xTot; $zz++) {

		if (`progressWindow -q -isCancelled `) {
			progressWindow -endProgress ;
			break;
		}

		if (`progressWindow -q -progress ` >= `getAttr "defaultRenderGlobals.endFrame"`) {
			progressWindow -endProgress ;
			break;
		}
		
		if ($xFrameIndex <= 9) { $xStPad = ("000" + $zz); }
		else if (($xFrameIndex >= 10) && ($xFrameIndex <= 99)) { $xStPad = ("00" + $zz); }
		else if (($xFrameIndex >= 100) && ($xFrameIndex <=999)) { $xStPad = ("0" + $zz); }
		else { $xStPad = $zz ;}
	
		progressWindow -edit -progress $xFrameIndex -st ("Rendering frame " + $xFrameIndex + " of " + $xTot) ;
		$layername=`editRenderLayerGlobals -q -currentRenderLayer`; 

		renderWindowRenderCamera render renderView $xTheCamera;
		renderWindowSaveImageCallback "renderView" ($pathnam+"/"+$layername+"/" + $xOutputName+"_"+$layername + "." + $xStPad ) "image";
		//print("$zz = " + $xOutputName + "/" + $xOutputName + "." + $xStPad  + "\n");
		playButtonStepForward;
	
		$xFrameIndex++;
	}
	
	progressWindow -endProgress ;
}
