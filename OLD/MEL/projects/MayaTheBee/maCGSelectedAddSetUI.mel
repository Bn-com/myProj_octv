//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////


global proc maCGSelectedAddSetUI()
{
	if (`window -ex maCGSelectedAddSet`)
		deleteUI maCGSelectedAddSet;
	
	window -t "add set" maCGSelectedAddSet;
		columnLayout -adj 1;
			optionMenu -label "Select Set:" maCGSelectedAddSet_OM;
				    menuItem -label "BG";
				    menuItem -label "MG";
				    menuItem -label "FG";
				    menuItem -label "Matte";
			button -l "Add" -h 20 -c "maCGSelectedAddSet(\"add\")";
			button -l "Remove" -h 20 -c "maCGSelectedAddSet(\"remove\")";
			setParent ..;
	showWindow maCGSelectedAddSet;
	string $renderSets[] = {"BG","MG","FG","Matte","Unassigned"};
	for ($set in $renderSets)
	{
		if (!objExists($set))
		{
			sets -name $set;
		}
	}
}

global proc maCGSelectedAddSet(string $type)
{
	string $sel[] = `ls -l -sl`;
	string $selShapes[]={};
	for ($item in $sel)
	{
		string $temp="";
		if (nodeType($item)=="transform")
		{
			string $shape[] = `listRelatives -f -ni -s $item`;
			$temp = $shape[0];
		}
		else
		{
			$temp = $item;
		}
		$selShapes[size($selShapes)] = $temp;
	}
	string $objset = `optionMenu -q -v maCGSelectedAddSet_OM`;
	//sets -e -add $objset $sel;
	switch ($type)
	{
		case "add" :
			sets -e -rm "BG" $selShapes;
			sets -e -rm "MG" $selShapes;
			sets -e -rm "FG" $selShapes;
			sets -e -rm "Matte" $selShapes;
			sets -e -add $objset $selShapes;
			break;
		case "remove" :
			sets -e -rm $objset $sel;
			sets -e -rm $objset $selShapes;
			break;
	}
}