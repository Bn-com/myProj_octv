//=====================================================================
//选择不能正常显示的模型，运行脚本后会把材质球的hardware 显示的质量设置为low。
//
//

global proc zb_setHardwareTextureToLow()
{
	string $selObj[] = `ls -sl -l`;
	for($each in $selObj)
	{
		zb_setHardwareTextureToLowDis($each);
	}
}

global proc zb_setHardwareTextureToLowDis(string $abnormityMesh)
{
	 string $type = `nodeType $abnormityMesh`;
	 string $shape[] ;
	 //if user select transform node of the modle
	 // find the shape node
	 if($type == "transform")
	 {
		$shape = `listRelatives -s $abnormityMesh`;	 
	}
	 else if ($type =="mesh")
      	 {
		$shape = {$abnormityMesh};
	 }
	//string $component = $shape[0]; 
	//select -r MA_C:Button_mshShape;
	// find the shading engine
	string $connections[] = `listConnections -source false -type "shadingEngine"  $shape[0] `;
	// there may be more than one shading group connected to the
	// geometry so find the exact one
	$connections = `stringArrayRemoveDuplicates $connections`;
	
	for($shadingGroup in $connections)
	{	
		string $shader[];
		// find the shader connected to the shading group
		string $shaderConnection = `connectionInfo -sourceFromDestination ($shadingGroup + ".surfaceShader")`;
		tokenize $shaderConnection "." $shader;
		string $colorAttr =  $shader[0] + ".color";
        	string $getTextures[]=`listConnections -s 1 $colorAttr`;
		string $texture = $getTextures[0];
		string $buffer[] = `listAttr -string resolution $texture`;
    		int $hasResolutionAttr = (size($buffer) != 0);
		string $attrName = $texture + ".resolution";

    		if ($hasResolutionAttr== 1) 
		{
			setAttr $attrName 256;
    		}
   	 	else 
		{
        	// Create a resolution attribute if one doesn't exist
        	//
			addAttr -ln resolution -at long -dv 32 $texture;
	

       		}
	} 
}


