
global proc s100moveAndReconnectTexturesFilesToJpg()
{
$var = `ls -type file` ;
$fName = `file -q -sceneName  `;
$path = stringToStringArray($fName , "/") ;
$last =  size($path) - 1 ;
$beforeLast = size($path) - 2 ;
$nameOfThisFile = $path[$last] ;
$extTF = fileExtension( $nameOfThisFile )  ;
$nameOfThisFileNoExt = substituteAllString($nameOfThisFile , ("." +$extTF) , "") ;

	if( $path[$beforeLast ] == "01_Mod" || $path[$beforeLast ] == "02_Setup" || $path[$beforeLast ] == "01_Local" )
	{
	string $rebuildPathJpg = "" ;
	string $rebuildPathPSD = "";

		for($i = 0 ; $i < $beforeLast ; $i++)
		{

		$rebuildPathJpg += ($path[$i] + "/" ) ;

        }
	$tmpPath = $rebuildPathJpg ;
	$rebuildPathJpg += "03_Maps/" ;
	$rebuildPathPSD = ($rebuildPathJpg + "sources/" )  ;
	$destFold = $rebuildPathJpg;
	//createFolder in case
	$folder = s1KeepOnlyFolderReturnLocalPath( $tmpPath ) ;
 	$check = stringArrayContains("03_Maps",$folder) ;
		if($check == 0 )
			sysFile -makeDir $rebuildPathJpg ;

	$folder = s1KeepOnlyFolderReturnLocalPath( $rebuildPathJpg ) ;
		 	$check = stringArrayContains("sources",$folder) ;
				sysFile -makeDir $rebuildPathPSD ;

	//

		for ($vart in $var)
			{
			$textFullPath = `getAttr ($vart +".fileTextureName")`;
			$pathT = stringToStringArray($textFullPath , "/") ;
			$lastT = size($pathT) -1   ;
			$textName = $pathT[$lastT] ;
			$ext = fileExtension($textName ) ;
			$nameToCopy = substituteAllString($vart , "_Textures", "") ;

			$fPathToCopy =  ($destFold + $nameOfThisFileNoExt + "_" + $nameToCopy + ".jpg") ;

				if	($ext == "psd")
					{

										setAttr -type "string" ($vart +".fileTextureName") $fPathToCopy;

                    }


			}

	}else{

	warning "Files is not in a right place";

    }

}