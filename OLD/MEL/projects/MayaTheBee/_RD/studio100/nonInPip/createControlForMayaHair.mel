$var = `ls -sl `;


	for($tmp in $var)
	{
	$subC = substituteAllString($tmp , "_jnt" , "_ctrl") ;
	$subG = substituteAllString($tmp , "_jnt" , "_grp") ;
	$subGC = substituteAllString($tmp , "_jnt" , "_cGrp") ;
	$subL = substituteAllString($tmp , "_jnt" , "_loc") ;

	$sp = `createNode locator`;
	$p = `listRelatives -p $sp `;
	$loc = `rename $p[0] $subL `;
	$grp   = `group -em  -n $subG   `;
	parent $loc $grp  ;
	$dup = `duplicate -n $subC "controller1"`;
	$cGrp   = `group  -em  -n $subGC   `;
	parent $dup $cGrp ;
	parent $grp $tmp ;
	$p = `listRelatives -p $tmp `;
	select $grp ;
	setAttr ($grp +".tx") 0 ;
	setAttr ($grp +".ty") 0 ;
	setAttr ($grp +".tz") 0 ;

	parent $cGrp  $tmp ;
	select $cGrp ;


	ResetTransformations ;
	parent $cGrp $loc  ;

	parent $grp $p ;
	parent $tmp $dup ;

		if(`gmatch $tmp "*01_jnt"`)
		{
		connectAttr "hair_pJnt.rotX"  ($loc +".rx") ;
		connectAttr "hair_pJnt.rotZ"  ($loc +".rz") ;



        }else{
		connectAttr "hair_pJnt.rotX1"  ($loc +".rx") ;
		connectAttr "hair_pJnt.rotZ1"  ($loc +".rz") ;
        }
	connectAttr ("traj.showHairCtrl") ($grp +".v" ) ;
	lockAndHiddeAll($grp) ;
	lockAndHiddeAll($cGrp)  ;
	lockAndHiddeAll($loc)  ;
	lockAndHiddeAll($tmp)   ;
	$list = `listRelatives -s $loc  `;
	delete $list ;
    }