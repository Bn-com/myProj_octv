
global proc s100fillFullPArticleInsideAmesh()
{


	string $mySelectedMeshArray[] = `ls -sl`;	// on recupere la selection
	string $mySelectedMesh = $mySelectedMeshArray[0];	// on ne prend que le premier element de la selection
	string $mySelectedMeshShapeArray[] = `listRelatives -shapes $mySelectedMesh`;	// on recupere le node de mesh depuis le node de transforme
	string $mySelectedMeshShape = $mySelectedMeshShapeArray[0];	// on ne prend que le premier element de la liste renvoye

	string $myClosestPointOnMeshNode = `createNode closestPointOnMesh`;	// on cree le node de closestPointOnMesh
	connectAttr -f ($mySelectedMeshShape+".worldMesh[0]") ($myClosestPointOnMeshNode+".inMesh");    // on lui connecte le mesh
	//connectAttr -f ($mySelectedMeshShape+".worldMatrix[0]") ($myClosestPointOnMeshNode+".inputMatrix");	// et la matrice de transformation

	//create Emitter Volume
	string $myEmitterArray[] = `emitter -pos 0 0 0 -type volume -r 100 -sro 0 -nuv 0 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -vsh cube -vof 0 0 0 -vsw 360 -tsr 0.5 -afc 1 -afx 1 -arx 0 -alx 0 -rnd 0 -drs 0 -ssz 0`;
	string $myEmitter = $myEmitterArray[0];
	string $myParticleSystemArray[] = `particle`;	// cree un systeme de particule
	string $myParticleSystem = $myParticleSystemArray[0];
	connectDynamic -em $myEmitter $myParticleSystem;	// connecte l'emitter au systeme de particule



	setAttr ($myEmitter+".awayFromCenter") 0;	// desactive la vitesse des particules
	setAttr ($myParticleSystem+".lifespanMode") 3;	// on va mettre le lifespan nous meme

	// cree l'expression
	string $expression = "vector $particlePos = "+$myParticleSystem+".position;\n";
	$expression += "\n";
	$expression += "setAttr "+$myClosestPointOnMeshNode+".inPositionX ($particlePos.x);\n";
	$expression += "setAttr "+$myClosestPointOnMeshNode+".inPositionY ($particlePos.y);\n";
	$expression += "setAttr "+$myClosestPointOnMeshNode+".inPositionZ ($particlePos.z);\n";
	$expression += "\n";
	$expression += "float $n[] = `getAttr "+$myClosestPointOnMeshNode+".normal`;\n";
	$expression += "float $pointPos[] = `getAttr "+$myClosestPointOnMeshNode+".position`;\n";
	$expression += "\n";
	$expression += "vector $difference = "+$myParticleSystem+".position - <<$pointPos[0],$pointPos[1],$pointPos[2]>>;\n";
	$expression += "\n";
	$expression += "vector $normal = <<$n[0],$n[1],$n[2]>>;\n";
	$expression += "\n";
	$expression += "float $test = rad_to_deg(angle($normal,unit($difference)));\n";
	$expression += "\n";
	$expression += "if ($test > 90)\n";
	$expression += "{\n";
	$expression += "	"+$myParticleSystem+".lifespanPP = 1000000;\n";
	$expression += "}\n";
	$expression += "else\n";
	$expression += "{\n";
	$expression += "	"+$myParticleSystem+".lifespanPP = 0;\n";
	$expression += "}\n";

	dynExpression -s $expression -c $myParticleSystem;


}