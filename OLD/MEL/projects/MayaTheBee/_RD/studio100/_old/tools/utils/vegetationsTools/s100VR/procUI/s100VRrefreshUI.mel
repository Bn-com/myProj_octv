global proc s100VRrefreshUI()
{
s100VRrefreshUIName;
$ctrl = "VRAE_main_ctrl" ;

if(`objExists $ctrl`)
	{
	s100VRUIAELayoutRefresh;
	s100refreshAElistObject ;
	}

}



global proc s100VRrefreshUIName()
{
$varA = `ls -type script  ("VR_*_scN")`;
	if (size($varA)==1)
	{
	textField -e -tx $varA[0] s100VRUITFAssetName ;
	print ("\n" + $varA[0] + " was found \n");
	button -e -en 0 s100VRNewNameBt  ;
	button -e -en 1 s100VREditNameBt  ;

	button -e -en  1 s100VRaddVegetationToAutoRigUIbt ;
	button -e -en  1 s100VRRemGuideFromARbt ;
	button -e -en  1 s100VRARbtShowAllARbt ;
	button -e -en  1 s100VRARbtHideAllARbt ;
	button -e -en  1 s100VRIsolateSelectedARbt ;
	button -e -en  1 s100VRIsolateSelectedARbt ;
	button -e -en  1 s100VRRigItbt ;
    }

	if (size($varA)==0)
	{
	textField -e -tx "" s100VRUITFAssetName ;
	button -e -en 1 s100VRNewNameBt  ;
	button -e -en 0 s100VREditNameBt  ;
	button -e -en  0 s100VRaddVegetationToAutoRigUIbt ;
	button -e -en  0 s100VRRemGuideFromARbt ;
	button -e -en  0 s100VRARbtShowAllARbt ;
	button -e -en  0 s100VRARbtHideAllARbt ;
	button -e -en  0 s100VRIsolateSelectedARbt ;
	button -e -en  0 s100VRIsolateSelectedARbt ;
	button -e -en  0 s100VRRigItbt ;
    }

	if (size($varA)>1)
	{
	button -e -en 0 s100VRNewNameBt  ;
	button -e -en 0 s100VREditNameBt  ;
	button -e -en  0 s100VRaddVegetationToAutoRigUIbt ;
	button -e -en  0 s100VRRemGuideFromARbt ;
	button -e -en  0 s100VRARbtShowAllARbt ;
	button -e -en  0 s100VRARbtHideAllARbt ;
	button -e -en  0 s100VRIsolateSelectedARbt ;
	button -e -en  0 s100VRIsolateSelectedARbt ;
	button -e -en  0 s100VRRigItbt ;

	warning "many script node for vegetation rigging in scene, use the tools \"clean\" in \"edit\" menu";
    }

$deformed = "deformed_grp" ;
$joint  = "joint_grp" ;

	if(`objExists $deformed`)
	{
	$var = `listRelatives -ad  -type "mesh" $deformed`;
		if(size($var) > 0)
		{
			if(`objExists $joint`)
			{
			$listJ = `listRelatives -ad  -type "joint" $joint`;
				if(size($listJ) > 0)
				{
				button -e -en 1   s100VRSkinProcBt;

                }else{
				button -e -en 0   s100VRSkinProcBt;

                }
            }
			button -e -en 1   s100VRSkinProcBt;

        }else{
		button -e -en 0   s100VRSkinProcBt;

        }

    }else{
	button -e -en 0   s100VRSkinProcBt;
    }


$ctrl  = "root_ctrl" ;
	if(`objExists $ctrl`)
	{
		$varCtrl = `listRelatives -ad  -type "transform" $ctrl`;
		if(size($varCtrl)> 0)
		{
		button -e -en 1 s100VRVRDefautPoseBt;
		button -e -en 1 s100VRRandomizeBt;
		}else{
		button -e -en 0 s100VRVRDefautPoseBt;
		button -e -en 0 s100VRRandomizeBt;
		}

    }


}

global proc s100refreshAElistObject()
{
$world = "world_anim_grp";
$ctrl = "VRAE_main_ctrl" ;
	if(`objExists $world`)
	{
		if(`objExists $ctrl`)
		{

			$var = `listRelatives -ad -type "transform" $world` ;
			string $array[];
				for($i = 0 ; $i < size($var) ; $i++)
				{
				$tmp = stringToStringArray($var[$i] , "_" ) ;
				$array[$i] =  $tmp[1] ;

				}
			string $gArray[] = stringArrayRemoveDuplicates( $array ) ;

			textScrollList -e -removeAll s100VRAElistObject;

				for( $i = 0 ; $i < size($gArray) ; $i++)
				{
				textScrollList -e -append $gArray[$i] s100VRAElistObject;
				}

        }else{
			textScrollList -e -removeAll s100VRAElistObject;

        }
	}else{
	textScrollList -e -removeAll s100VRAElistObject;

    }

}
global proc s100refreshAElistObjectSel()
{
	s100refreshLatAElistObjectSel("s100VRfalloffCurve") ;

	s100refreshLatAElistObjectSel("s100VRfalloffCurve2") ;
}


global proc s100refreshLatAElistObjectSel(string $gradient)
{
/*
$gradient = "s100VRfalloffCurve2" ;
*/
string $attr ;
	if ($gradient == "s100VRfalloffCurve2")
	{
	$attr = "overLap";
	}else{
	$attr = "amplitude";

	}

gradientControlNoAttr  -e -asString "1"  $gradient  ;

$sel  = `textScrollList -q -si s100VRAElistObject`;
textField -e -tx ("VR_" + $sel[0]) s100VRGradientTF ;

$varCtrl = `ls ("VR_"+$sel[0] +"*_wGrp")` ;
float $tmpF ;
float $iF ;
float $sizeF = size($varCtrl)-1 ;
string $return ="" ;
float $overs[] ;
string $overS[] ;
string $position[] ;

	for($i = 0 ; $i < size($varCtrl) ;$i++)
	{
	$iF = $i ;
	$overS[$i] = $overs[$i]  = `getAttr ($varCtrl[$i] + "." +$attr) ` ;
	$tmpF = $iF / $sizeF ;
	$position[$i] = $tmpF ;
    }

int $toDuplicate[] = s100VRAEsimplifyReturnToDuplicate( $overs ) ;

	for ($i = 0 ; $i < size($toDuplicate) ; $i++)
	{

		if ($i >0)
		{
			for ($j = $i ; 	$j < size($toDuplicate) ; $j++)
			{
			$toDuplicate[$j] = $toDuplicate[$j] -1 ;
            }
        }
	stringArrayRemoveAtIndex($toDuplicate[$i] , $overS ) ;
	stringArrayRemoveAtIndex($toDuplicate[$i] , $position ) ;

    }
//print $position ;
//print $overS ;
string $returnArray[] ;
string $tmpString = "" ;
	for($i = 0 ; $i < size($position) ;$i++)
	{
	$tmpString += $overS[$i] +"," +$position[$i] + "," + "1" +"," ;
    }



gradientControlNoAttr  -e -as $tmpString $gradient ;



}

global proc int[] s100VRAEsimplifyReturnToDuplicate( float $grad[])
{
//string $gradientS[] = $overS ;
//float $grad[] = $overs;
float $tmpF2 ;

//normalize

	for ($i = 0; $i < size($grad) ; $i++)
	{
	if($grad[$i] < 0)
		{
			$grad[$i] = 0 ;
			$grad[$i] = 0 ;
		}
    }

float 	$tmpVB ;
string $toRemoveS[] ;
$l = 0 ;

	for ($i = 1 ; $i < size($grad) ; $i++)
	{
	 $tmpF2 = $grad[$i] ;

	$j = $i - 1 ;
	$k = $i + 1;
	float $bef =$grad[$j] ;
	float $after =$grad[$k] ;

	$tmp = ($bef + $after ) / 2 ;
		if(floatEq($tmp, $tmpF2) )
		{
		$toRemoveS[$l]= $i ;
		$l++;
        }






    }
stringArrayRemoveDuplicates($toRemoveS) ;
int $returnIn[] ;

	for( $i = 0 ; $i < size($toRemoveS) ; $i++)
	{
	$returnIn[$i] = $toRemoveS[$i] ;


    }

return  $returnIn;


}



global proc int floatEq( float $vLhs, float $vRhs )
{
return abs( $vLhs - $vRhs ) < 0.01;
}



