
global proc s100VMcreateRigForCheckingResolution()
{
$camRecup   = `textField -q -text s100VMAutoSwitchResolutionSelTF `;
$name = `s100VMcreateVMNode` ;

$defHs = `getAttr  ($name +".m_HighSize") ` ;
$defLs = `getAttr  ($name +".m_LowSize") `;

	if(`objExists $camRecup`)
	{
	$nameSphHigh = "VM_sphere_high_grp" ;
	$nameSphLow = "VM_sphere_low_grp" ;


	$sphereHigh = s100createNurbsSphereWithCtrl($nameSphHigh,$defHs , "yellow","" )  ;
	$sphereLow = s100createNurbsSphereWithCtrl($nameSphLow,$defLs , "red","" )  ;
	$grp = "VM_guide_grp";
		if(`objExists $grp`)
		{
		delete $grp ;
		group -em -n $grp ;

        }else{
		group -em -n $grp ;
        }
		parent $sphereHigh $sphereLow $grp ;
		$po = `pointConstraint $camRecup $grp `;
		string $toHidde[] = {$nameSphHigh, $nameSphLow , $grp  } ;
			for($i = 0 ; $i < size($toHidde) ; $i++)
			{
			lockAndHiddeAll($toHidde[$i] );
			setAttr ($toHidde[$i] +".template" ) 0 ;
			setAttr ($toHidde[$i] +".overrideDisplayType " ) 2 ;
			setAttr -l 0 ($toHidde[$i] +".scaleX") ;
			setAttr -l 0 ($toHidde[$i] +".sy") ;
			setAttr -l 0 ($toHidde[$i] +".sz") ;
            }

    }else{
	warning "camera does not exist" ;
    }
button -e -en 1 s100VMAutoSwitchResolutionAutoReplaceBt ;
select -cl ;
}
