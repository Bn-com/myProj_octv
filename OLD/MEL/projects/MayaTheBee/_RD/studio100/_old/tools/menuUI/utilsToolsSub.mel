global proc utilsToolsSub()
{
/*
		menuItem -l "utils Tools"
		-echoCommand true
		-tearOff 1

		-subMenu 2
		utilsTools;
*/
		menuItem -l "animation//layout"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			animationUtilsTools;

				menuItem -l "s100 playBlast"
				-echoCommand true
				-c "s100playblastToolsCheck" -annotation "playblast scene"
				s100playblastToolsCheck_item ;



				menuItem -l "s100 Biped Selector"
				-echoCommand true
				-c "s100asSelectorbiped" -annotation "run script to select character"
				s100asSelectorbiped_item ;


				menuItem -l "dk Anim"
				-echoCommand true
				-c "dkAnim" -annotation " export import animation"
				dkAnim_item ;


				menuItem -l "Unload Ref Non in Cam"
				-echoCommand true
				-c "s100URNICUI"
				s100URNICUI_item ;





			menuItem -l "advanced skeleton"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			asUtilsTools;



				menuItem -l "asFitTools"
				-echoCommand true
				-c "asFitTools" -annotation "fit tools"
				asFitTools_item ;

				menuItem -l "advanced Skeleton"
				-echoCommand true
				-c "advancedSkeleton" -annotation "build skeleton"
				as_item ;


				menuItem -l "asUtilities"
				-echoCommand true
				-c "asUtilities" -annotation "asUtilities"
				asUtilities_item ;


				menuItem -l "asFace"
				-echoCommand true
				-c "asFace" -annotation "asFace"
				asFace_item ;



				menuItem -l "asSelectorDesigner"
				-echoCommand true
				-c "asSelectorDesigner" -annotation "asSelectorDesigner"
				asSelectorDesigner_item ;

				menuItem -l "asPoserDesigner"
				-echoCommand true
				-c "asPoserDesigner" -annotation "asPoserDesigner"
				asPoserDesigner_item ;

								menuItem -l "asHelp"
				-echoCommand true
				-c "asHelp" -annotation "asHelp"
				asHelp_item ;

									menuItem -l "asSelectorbiped"
				-echoCommand true
				-c "asSelectorbiped" -annotation "asSelectorbiped"
				asSelectorbiped_item ;

				menuItem -l "asSelectorface"
				-echoCommand true
				-c "asSelectorface" -annotation "asSelectorface"
				asSelectorface_item ;


		setParent -menu animationUtilsTools;

		setParent -menu s100Menu;

//

		menuItem -l "automatisation"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			automatisationUtilsTools;

					menuItem -l "Batch"
						-echoCommand true
						-subMenu 1
						-tearOff 1
						batchUtilsTools;

					menuItem -l "Generate Vegetation's All Version And Sprite"
					-echoCommand true
					-c "s100RegenerateAllVersionForVegFolderUI"
					s100RegenerateAllVersionForVegFolderUI_item ;


				setParent -menu automatisationUtilsTools;



				menuItem -l "abBatchFile"
				-echoCommand true
				-c "abBatchFile"
				abBatchFileUI_item ;

				menuItem -l "s100 automatisation UI"
				-echoCommand true
				-c "s100automatisationUI"
				s100automatisationUI_item ;




		setParent -menu s100Menu;



			menuItem -l "camera"
			-echoCommand true
			-subMenu 1
			-tearOff 1

			cameraUtilsTools;


				menuItem -l "camera Zoom 2d"
				-echoCommand true
				-c "lntCameraZoomUI"
				lntCameraZoomUI_item ;


		setParent -menu s100Menu;


//
		menuItem -l "check Scene"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			checkUtilsTools;



				menuItem -l "checkSameName"
				-echoCommand true
				-c "s100checkSameName" -annotation "check if there is many object with the same name"
				s100getAllReferencedPathUI_item ;

				menuItem -l "get all references paths"
				-echoCommand true
				-c "s100getAllReferencedPathUI" -annotation "check if there is many object with the same name"
				s100checkSameName_item ;


				menuItem -l "reconnect Textures Locally"
				-echoCommand true
				-c "s100reconnectTexturesLocally" -annotation "if folder tree is good, it will reconnect the textures"
				s100reconnectTexturesLocally_item ;



		setParent -menu s100Menu;


//

			menuItem -l "clean"
			-echoCommand true
			-subMenu 1
			-tearOff 1

			cleanUtilsTools;


				menuItem -l "nameSpace Cleaner"
				-echoCommand true
				-c "nscNameSpaceCleanerUI"
				nscNameSpaceCleanerUI_item ;


				menuItem -l "nameSpace Rename"
				-echoCommand true
				-c "s100namespaceRenameUI"
				s100namespaceRenameUI_item ;



				menuItem -l "comet Rename"
				-echoCommand true
				-c "cometRename"
				cometRename_item ;




				menuItem -l "clean Shape Name"
				-echoCommand true
				-c "cleanNameShape"
				-ann "automatic rename All shape"
				cleanNameShape_item ;



				menuItem -l "cleanAll"
				-echoCommand true
				-c "cleanAll"
				-ann "clean many nodes in scene"
				cleanAll_item ;




		setParent -menu s100Menu;



//converting
		menuItem -l "converting"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			convertingUtilsTools;


				menuItem -l "export file for Deep View"
				-echoCommand true
				-c "s1ExpToFbxForDeepUI"
				s1ExpToFbxForDeepUI_item ;



				menuItem -l "convert a directory to Deep View"
				-echoCommand true
				-c "s1Convert3dBankToFBXBankLaunchUI"
				s1Convert3dBankToFBXBankLaunchUI_item ;


		setParent -menu s100Menu;






//modelling
			menuItem -l "modelling"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			modellingUtilsTools;

				menuItem -l "abSymMesh"
				-echoCommand true
				-c "abSymMesh" -annotation " to mirror Shape"
				abSymMesh_item ;




				menuItem -l "duplicate Instance"
				-echoCommand true
				-c "s100dupInInstanceCleanUI"
				s100dupInInstanceCleanUI_item ;


				menuItem -l "duplicate double face"
				-echoCommand true
				-c "s100DeleteDoubleFaceAndConformForSelUI"
				s100DeleteDoubleFaceAndConformForSelUI_item ;




 	setParent -menu s100Menu;

//rigging tools
			menuItem -l "rigging"
			-echoCommand true
			-subMenu 1
			-tearOff 1

			riggingUtilsTools;


				menuItem -l "desactive all LRA"
				-echoCommand true
				-c "ALL_LRA_desactivate"
				ALL_LRA_desactivate_item ;

				menuItem -l "skinningTools"
				-echoCommand true
				-c "skinningTools"
				skinningTools_item ;

				menuItem -l "WireControllers_TOOL"
				-echoCommand true
				-c "WireControllers_TOOL"
				WireControllers_TOOL_item ;

				menuItem -l "DoraSkin Imp Exp"
				-echoCommand true
				-c "DoraSkinWeightImpExp"
				DoraSkinWeightImpExp_TOOL_item ;

				menuItem -l "Combine all Descendante Shape"
				-echoCommand true
				-c "s100combineAllDescendanteShapeUI"
				s100combineAllDescendanteShapeUI_item ;



		setParent -menu s100Menu;



// rendering sub menu
menuItem -l "rendering"
			-echoCommand true
			-subMenu 1
			-tearOff 1

			renderingUtilsTools;
				menuItem -l "create scene to check Render"
					-echoCommand true
					-c "s100prepareAssetToBeRenderManUI"
					s100prepareAssetToBeRenderManUI_item ;

				menuItem -l "convert to MIA"
					-echoCommand true
					-c "s100createMIAPreviewUI"
					s100createMIAPreviewUI_item ;

				menuItem -l "gamma Tools"
					-echoCommand true
					-c "jjj_gammaTools"
					jjj_gammaTools_item ;


				menuItem -l "Depth Shader Creator"
					-echoCommand true
					-c "Depth_Shader_Creator"
					Depth_Shader_Creator_item ;


				menuItem -l "ObjectID"
					-echoCommand true
					-c "ObjectID_Pass_Creator"
					ObjectID_Pass_Creator_item ;

				menuItem -l "smooth Render"
					-echoCommand true
					-c "s100smoothRenderUI"
					s100smoothRenderUI_item ;



			setParent -menu s100Menu;


// vegetation sub menu

			menuItem -l "vegetations Tools"
			-echoCommand true
			-subMenu 1
			-tearOff 1


			vegetationUtilsTools;


					menuItem -l "Vegetation Auto Rig"
						-echoCommand true
						-c "s100VRUI"
						VegetationUI_item ;

					menuItem -l "Vegetations Create Resolution"
						-echoCommand true
						-c "s100VCRUI"
						VegetationCRUI_item ;

					menuItem -l "Vegetations Manager"
						-echoCommand true
						-c "s100VMUI"
						VegetationMUI_item ;

					menuItem -l "Random Micro Veg On Surface"
						-echoCommand true
						-c "s100ROSUI"
						s100ROSUI_item ;


					menuItem -l "micro Veg Create Thumbnail"
						-echoCommand true
						-c "s100createThumbnailsForMVCheck"
						s100createThumbnailsForMVCheck_item ;



		setParent -menu s100Menu;

				menuItem -l "Reload Menu"
				-echoCommand true
				-c "Reload_s100MenuUI"
				Reload_s100MenuUI_item ;







}