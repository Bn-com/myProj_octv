global proc s100reconnectTexturesLocallyAndPrintOnAFile()
{
$listFolder = `s1ListAllSubFolder("Y:/000_3D_Bank/") ` ;

$files = s1ListAllMayaScene($listFolder ) ;


$d = `date`;

$sub = substituteAllString($d , "/" ,"_") ;
$sub = substituteAllString($sub , " " ,"-") ;
$sub = substituteAllString($sub , ":" ,"_") ;
$file = ("y:/_RD/log/logForReconnTexturesOn3DBANK_" + $sub  +".txt");
$ch = `filetest -e $file  `;

	if($ch ==0)
	{
	$fileId=`fopen $file "w"`;
	fclose $fileId;
    }



string $s;
$fileId=`fopen $file "w"`;

progressWindow -endProgress ;
progressWindow  -title "reconnect textures on 3D Bank" -maxValue (size($files))  ;
$i = 0 ;
$s =("Studio 100 : Maya Production\ndate : " + $d   +"\nAuto Reconnect Textures on entire 3D Bank\n" );
fprint $fileId $s  ;



		for ($tmp2 in $files  )
				{
				progressWindow -e -progress $i ;
				$i++;

					if(`gmatch $tmp2 "*_old*"` ||`gmatch $tmp2 "*Geo.ma"` )
					{
					//ignore all files contained "_old"
                    }else{
					string $fileO = ( "file -f -options \"v=0\"" + " -ignoreVersion -o \"" +  $tmp2 +"\";");
					eval($fileO) ;
					string $aRet[] = `s100reconnectTexturesLocally`;

					$padNumber = padNumber ($i, 5) ;
					$s =("\n----------------------------------------------\n----------------------------------------------\nAsset Number : "+ $padNumber +"\nfile : "+ $tmp2 +"\n ");
					fprint $fileId $s  ;

						for($tmp in $aRet)
						{
						fprint $fileId $tmp;
						}

					fprint $fileId "\n\n" ;

					file -f -save ;
					}

				}


$d = `date`;

$s =("Studio 100 : Maya Production\nend at : " + $d   +"\nAuto Reconnect Textures on entire 3D Bank\n" );

fclose $fileId;
progressWindow -endProgress ;



}
global proc string[] s100reconnectTexturesLocally()
{
/*
$pathToR = "Y://000_BANK/BananaWork/01_IN/MA0000D_Vrac_Plans_Pilote/textures maya/" ;
*/
$var = `ls -type file` ;

$file = `file -q -sn ` ;


string $path = `s100returnRootPathForAnAsset($file)` ;


$path += "_maps/";

string $return[] ;
$i = 0 ;
	for ($vart in $var)
	{
	$textFullPath = `getAttr ($vart +".fileTextureName")`;
	$textFullPath = substituteAllString ($textFullPath , "\\" ,"/");
	$sep = stringToStringArray($textFullPath, "/") ;
	$last = size($sep) -1  ;

	$sub = substituteAllString( $sep[$last] , "_Hi1." ,"_Hi.") ;
	$sub = substituteAllString( $sub , "_hi." ,"_Hi.") ;
	$sub = substituteAllString( $sub , "_RTK." ,".") ;


	$name1 = $path + $sub ;
	$check1 = `filetest -e $name1 `;
	string $ret ;

		if ($check1 == 0)
			{
			$name2 =$path + "high/" +  $sub ;
			$check2 = `filetest -e $name2 `;
				if ($check2 == 1)
				{
				setAttr -type "string" ($vart +".fileTextureName") $name2;
				$ret= ("\n----- reconnect : " + $name2 +"\n");
                }else{
				$ret =  ("\n***** fail to reconnect : " + $vart +"\n" + $name2 );


                }


            }else{
			setAttr -type "string" ($vart +".fileTextureName") $name1;
			$ret =  ("\n reconnect : " + $name1 +"\n");
            }


	print $ret ;
	$return[$i] = $ret ;
	$i++;
    }

return $return ;
}



