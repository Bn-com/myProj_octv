global proc string[] s1ListAllSubFolder(string $pa)
{
//$pa ="C://mayaTheBee/03_Modelisation/" ;

string $allFolder[] ;
$allFolder[0]=$allFolderT[0] = $pa ;
$size= $size2 = size($allFolder) ;
int $numb = 1 ;
string $listT[];
$numb2 = 0 ;

	while ($numb != $numb2)
	{

	clear $listT;
	$allFolder = $allFolderT ;

		for($i = $numb2 ; $i < size($allFolderT) ; $i++)
		{
		$last = "" ;
		$end = endString ($allFolderT[$i] , 1 ) ;
			if($end != "/" )
				$last = "/" ;
		$folderP = ($allFolderT[$i] + $last ) ;
		$l = s1KeepOnlyFolder($folderP ) ;

		//$numb++ ;
		$listT = stringArrayCatenate($listT, $l ) ;
		}

	$numb2 = size($allFolder) ;

	$allFolderT = stringArrayCatenate($allFolder ,$listT ) ;

	$numb = size($allFolderT) ;


	}




return $allFolderT ;

}
/*
$listFolder = `s1ListAllSubFolder("C://mayaTheBee/03_Modelisation/") ` ;
$listMayaFiles = `s1ListAllMayaScene($listFolder ) `;
print $listMayaFiles ;
*/
global proc string[] s1ListAllMayaScene(string $folder[])
{
string $return[] ;

	for($i = 0 ; $i < size($folder) ; $i++)
	{
	$last = "" ;
	$end = endString ($folder[$i] , 1 ) ;
		if($end != "/" )
			$last = "/" ;
	$folderP = ($folder[$i] + $last ) ;
	$listMA = `getFileList -folder ($folderP  ) -fs "*.ma"`;
	$listMB = `getFileList -folder ($folderP ) -fs "*.mb"`;
	$list = stringArrayCatenate($listMA ,$listMB);
	string $nList[] ;
		for($j = 0 ; $j < size($list) ; $j++)
		{
		$nList[$j] = ($folderP  + $list[$j] )  ;

		}



	$return = stringArrayCatenate($return ,$nList) ;


	}
$return = stringArrayRemoveDuplicates($return ) ;
return $return ;

}

global proc string[] s1ListAllMelFiles(string $folder[])
{
string $return[] ;

	for($i = 0 ; $i < size($folder) ; $i++)
	{
	$last = "" ;
	$end = endString ($folder[$i] , 1 ) ;
		if($end != "/" )
			$last = "/" ;
	$folderP = ($folder[$i] + $last ) ;
	$listMA = `getFileList -folder ($folderP  ) -fs "*.mel"`;
	$list = $listMA ;
	string $nList[] ;
		for($j = 0 ; $j < size($list) ; $j++)
		{
		$nList[$j] = ($folderP  + $list[$j] )  ;

		}



	$return = stringArrayCatenate($return ,$nList) ;


	}
$return = stringArrayRemoveDuplicates($return ) ;
return $return ;

}


global proc string[] s1KeepOnlyFolder(string $fold)
{
// $fold = $pa ;
string $list[] ;
$list = `getFileList -folder ($fold ) -fs "*.*"`;

string $foldReturn[];
$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
	$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
		$foldReturn[$j] =($fold + $list[$i] ) ;
		$j++;

		}
	}

return $foldReturn ;
}


global proc string[] s1KeepOnlyFolderReturnLocalPath(string $fold)
{
// $fold = $pa ;
string $list[] ;
$list = `getFileList -folder ($fold ) -fs "*.*"`;

string $foldReturn[];
$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
	$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
		$foldReturn[$j] =($list[$i] ) ;
		$j++;

		}
	}

return $foldReturn ;
}


global proc int s100checkIfFileExist(string $file)
{
//$file = "Y:/000_BANK/BananaWork/02_OUT/03_Props/Accessories/leafSleepingBag_01/03_Maps/sources/leafDiffuse.psd";

$separate  = stringToStringArray($file,"/") ;
$last = size($separate) - 1 ;
$pathTmp  = substituteAllString($file , $separate[$last] , "" ) ;
$list = `getFileList -folder ($pathTmp ) -fs "*.*"`;
$check = stringArrayContains($separate[$last] , $list ) ;

return $check ;


}

global proc int s100checkIfFolderExist(string $folder ,string  $path)
{
string $folders[] ;
	$folders = s100ListOnlyFolder($path);
	$return = stringArrayContains($folder , $folders) ;

	return $return ;


}


global proc string[] s100ListOnlyFolder(string $path)
{
//

$list = `getFileList -folder ($path  ) -fs "*.*" `;
string $folder[] ;
$j = 0 ;
	for ($i = 0 ; $i < size($list) ; $i++)
	{
	$sep = stringToStringArray($list[$i] , ".") ;
		if(size($sep) == 1 )
		{
		$folder[$j] = $list[$i] ;
		$j++ ;

        }
    }

return $folder ;
}