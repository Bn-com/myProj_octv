

menuItem -parent TimeSliderMenu
	-label "s100 playblast"
	-command "s100playblastToolsCheck"
	-annotation "playblast the scene" s100playblastToolsMenu;


global proc s100playblastToolsCheck()
{
$fileN = `file -q -sn -shortName  `;
$file = `file -q -sn  `;

	if($fileN != "")
	{
	$rootP = `s100findRootFolderForShoot`;
		if(($file +"/") != $rootP)
		{
			$folder = "02_Playblast" ;
			$fileN = `file -q -sn -shortName  `;
			$rootP = `s100findRootFolderForShoot`;
			$ch = `s100askIfSceneIsWip`;
			$path = $rootP + $folder  +"/" ;
			$name = `s100PTBuildNameForPlayblast($fileN) `;
			$pathName = $path + $name ;

			if(`filetest -e $pathName `)
			{
			$msg = "playblast already exist, continues?";
			$chk = `confirmDialog -title "Override? " -message $msg
				-button "Yes" -button "No" -defaultButton "Yes"
				-cancelButton "No" -dismissString "No"`;

				if($chk == "Yes")
				{
				sysFile -delete $pathName ;
				s100playblastTools ;

                }


			}else{
			s100playblastTools ;

            }



        }else{
		warning "file does not look in the pip" ;
        }
    }else{
	warning "save file before using this tools" ;
    }

}

global proc int[] s100PBTreturnRes(string $name )
{
int $w = 1280  ;
int $h = 720 ;


	if($name == "MA")
	{
	$w = 1280  ;
	$h = 720 ;
    }


return {$w, $h} ;

}

global proc string s100PBTreturnName(string $suff )
{
string $name = "unknow" ;

	if($suff == "MA")
	{
	$name = "Maya The Bee" ;
    }
return $name ;
}


global proc s100playblastTools()
{
//$file

select -cl ;
s100PBTRemHeadUp ;
$getA = `s100getListForAllPanel`;
$folder = "02_Playblast" ;
$fileN = `file -q -sn -shortName  `;
$rootP = `s100findRootFolderForShoot`;
$ch = `s100askIfSceneIsWip`;


$head = `s100getHeadUp`;
s100HiddeForAllPanel ;
s100HiddeHeapUp ;
$path = $rootP + $folder  +"/" ;
	if($ch == 1 )
	{
	$path += "_wip/";
    }

$name = `s100PTBuildNameForPlayblast($fileN) `;

$suffGGG = stringToStringArray($name,"_" ) ;

string $suf = $suffGGG[0] ;

int $resolution[] = `s100PBTreturnRes($suf ) ` ;
$cam = `s100PTGetCam` ;
$pathName = $path + $name ;
s100PTcreateModelPanelWithCam($cam)  ;
$ch = `optionVar -q collapseIconBarsInPanels `;


toggleModelEditorBarsInAllPanels 1;




$s = `playbackOptions -q -minTime `;
$e = `playbackOptions -q -maxTime  `;
s100PBTAddHeadUp ;



playblast -format movie -forceOverwrite -compression none   -clearCache 1  -showOrnaments 1  -percent 100  -w $resolution[0] -h $resolution[1]  -filename $pathName -startTime $s -endTime $e  ;



	if ($ch == 0 )
	{
	toggleModelEditorBarsInAllPanels 0;
	}


	if(`window -ex s100PTcreateModelPanelWithCamUI`)
	{
		deleteUI s100PTcreateModelPanelWithCamUI ;
    }
	if(`modelPanel -ex s100PTcreateModelPanelWithCamMP `)
	{
		deleteUI -panel s100PTcreateModelPanelWithCamMP  ;
    }
	s100RestoreForAllPanel($getA ) ;


s100PBTRemHeadUp;

s100restoreHeadUp($head) ;

system ("load"+ $pathName ) ;

}

global proc string s100PTGetCam()
{
$var = `ls -type camera  "Cam_*"`;

$pa = `listRelatives -p $var  ` ;


return $pa[0] ;


}


global proc s100PTcreateModelPanelWithCam(string $cam)
{

	if(`window -ex s100PTcreateModelPanelWithCamUI`)
	{
	deleteUI s100PTcreateModelPanelWithCamUI ;
    }

string $window = `window -title  "capturing playblast" -sizeable 1  -w 1294  -height 762 s100PTcreateModelPanelWithCamUI`;
$pan = `paneLayout `;
	if(`modelPanel -ex s100PTcreateModelPanelWithCamMP`)
		deleteUI -panel s100PTcreateModelPanelWithCamMP ;

modelPanel -p $pan  -menuBarVisible 0  -camera $cam   s100PTcreateModelPanelWithCamMP;
$ed = `modelPanel -q -modelEditor s100PTcreateModelPanelWithCamMP`;


modelEditor -e  -textures 1 -displayAppearance "smoothShaded"  -pm 0 -m 1 -hud 1  -grid 0 s100PTcreateModelPanelWithCamMP ;
modelEditor -e -allObjects 0 -polymeshes 1  -nurbsSurfaces 1  s100PTcreateModelPanelWithCamMP ;

showWindow $window;

window -e  -w 1294 -h 762  s100PTcreateModelPanelWithCamUI;




DisplayShadedAndTextured;


}


global proc s100PBTAddHeadUp()
{
headsUpDisplay -section 5
	-block 2
	-blockSize "medium"
	-command s100PBTGETProd
	-label ("")
	-labelFontSize "large"
	-dataFontSize "large"

	s100PBTProdHUp;

headsUpDisplay -section 5
	-block 1
	-blockSize "medium"
	-label ""
	-command s100PBTGETEp
	-labelFontSize "large"
	-dataFontSize "large"

	s100PBTepHUp;

headsUpDisplay -section 7
	-block 2
	-blockSize "medium"
	-label ""
	-command s100PBTGETStep
	-blockAlignment "center"
	-labelFontSize "large"
	-dataFontSize "large"

	s100PBTstepHUp;

headsUpDisplay -section 7
	-block 1
	-blockSize "medium"
	-label ""
	-command s100PBTGETShot
	-labelFontSize "large"
	-dataFontSize "large"

	s100PBTSqHUp;


headsUpDisplay -section 8
	-block 1
	-blockSize "medium"
	-label ""
	-command s100getFrameNumber
	-labelFontSize "large"
	-dataFontSize "large"
	-attachToRefresh

	s100PBTFrame;
}


global proc string s100getFrameNumber()
{
	string $frame = `currentTime -q`;
	return ("frame : "+ $frame);
}


global proc string s100PBTGETEp()
{
$fileN = `file -q -sn -shortName  `;


$suffGGG = stringToStringArray($fileN,"_" ) ;

string $suf = $suffGGG[0] ;
string $ep = substituteAllString( $suffGGG[1], "Ep","Episode : ") ;



return ($ep);
}



global proc string s100PBTGETProd()
{
$fileN = `file -q -sn -shortName  `;


$suffGGG = stringToStringArray($fileN,"_" ) ;

string $suf = $suffGGG[0] ;
$name = `s100PBTreturnName($suf)` ;


	return ("Project: " + $name);
}


global proc string s100PBTGETShot()
{
$fileN = `file -q -sn -shortName  `;


$suffGGG = stringToStringArray($fileN,"_" ) ;
$to = ($suffGGG[3] + " " +$suffGGG[4] + " " +$suffGGG[5]) ;
$sub = substituteAllString($to , ".ma","") ;


	return $sub;
}

global proc string s100PBTGETStep()
{
$fileN = `file -q -sn -shortName  `;


$suffGGG = stringToStringArray($fileN,"_" ) ;



	return $suffGGG[2] ;
}

global proc s100PBTRemHeadUp()
{
string $heads[] = {"s100PBTProdHUp",
					"s100PBTepHUp",
					"s100PBTstepHUp",
					"s100PBTSqHUp",
					"s100PBTFrame"
};

	for($tmp in $heads)
	{
		if(`headsUpDisplay -ex $tmp`)
			headsUpDisplay -remove $tmp;

    }

}

global proc string s100PTBuildNameForPlayblast(string $name )
{
//$name = $fileN ;

string $arr[] = stringToStringArray( $name , ".") ;
$name   = $arr[0]  +"_playblast.avi" ;

return $name ;







}


global proc int s100askIfSceneIsWip()
{
$file = `file -q -sn `;
string $fileA[] = stringToStringArray($file ,"/" );
$ch = 0 ;
	for($i = 0; $i < size($fileA) ; $i++)
	{

		if(`gmatch $fileA[$i] "_wip"`)
		{
		$ch = 1 ;
		break ;

        }



    }

	return $ch ;
}

global proc string  s100findRootFolderForShoot()
{
$file = `file -q -sn `;
string $fileA[] = stringToStringArray($file ,"/" );
string $path = "";
	for($i = 0; $i < size($fileA) ; $i++)
	{
	$ch1 = `gmatch $fileA[$i] "SC*"` ;
	$ch2 = `gmatch $fileA[$i] "Sc*"` ;
	$ch = $ch1 + $ch2 ;

		$path += $fileA[$i]  ;
		$path += "/" ;

		if($ch == 1 )
		break ;



    }

return $path ;

}

//s100playblastTools;