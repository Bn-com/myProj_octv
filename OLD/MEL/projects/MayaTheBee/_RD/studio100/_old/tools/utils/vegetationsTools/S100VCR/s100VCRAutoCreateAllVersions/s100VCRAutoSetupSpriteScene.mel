
global proc s100VCRautoSetupSpriteScenePrep()
{

$scene = `file -q -sn `;
$numb = `intField -q -v s100VCRCreateSpriteInfFieldNumber`;
s100VCRautoSetupSpriteScene($scene, $numb) ;
}


global proc s100VCRautoSetupSpriteScene(string $scene, int $numberSprite)
{
/*
$scene = $file;
$numberSprite = 2 ;
*/
$file = `file -q -sn `;

	if ($scene != $file )
		file -o $scene ;
//s100VCRRemoveSmoothAllMeshes;

playbackOptions -minTime 1 -maxTime $numberSprite ;
setAttr "defaultRenderGlobals.endFrame" $numberSprite;
setAttr "defaultRenderGlobals.startFrame" 1;
$spPath = s100VCRgetSpriteFolderAndName($file,"");

setAttr  -type "string" "defaultRenderGlobals.imageFilePrefix" $spPath;




$ref = `ls -type  "script" "*:VR*_scN" `;
string $prefix ;

	if(size( $ref) > 0)
	{
		if(size($ref) == 1)
		{
		select $ref;
		$ref2 = stringToStringArray($ref[0], ":") ;
		$prefix ="";

			for($j= 0 ; $j < size($ref2) -1 ;$j++ )
			$prefix += $ref2[$j] +":" ;

		string $root = $prefix + "root_ctrl" ;
		float $turn ;
		$var = `listRelatives -ad -type "nurbsCurve" ($prefix + "root_ctrl") ` ;
		$varP = `listRelatives -p $var ` ;
		$varCtrl = stringArrayRemove({$root}, $varP) ;
		     int $amount = 0;

    	 progressWindow
         -title "Creating Poses For Vegetation"
         -progress $amount
         -status "% done : 0%"

         -isInterruptable false;
		float $iF2 ;
		float $maxF = $numberSprite ;


			for($i = 1 ; $i <= $numberSprite ; $i++)
			{
			currentTime $i;
			float $randRoot = rand(360);
			setAttr ($root + ".ry" )  $randRoot ;
			setKeyframe ($root + ".ry" ) ;
			$iF2 = $i ;
			$amount = ($iF2 / $maxF) * 100  ;

				for($j = 0 ; $j < size($varCtrl) ; $j++)
				{
				float $randRoot = rand(10) - 5;
				string $attrR[] = {".rx",".ry",".rz"};

					for($at in $attrR)
					{
					float $randRoot = rand(10) - 5;
					setAttr ($varCtrl[$j] + $at) $randRoot ;


                    }
				//setKeyframe $varCtrl[$j]  ;
				//

                }

			s100VCRRescaleVegForSpriteRenderingScene ;

			setKeyframe $varCtrl ;
			progressWindow -edit
             -progress $amount
             -status ("posing: "+$amount+"%");

			}

        }else{
		warning "many reference in the scene, correct it ! " ;

        }

    }else{

	warning "no assets founded in the scene, check it! " ;

	}
progressWindow -endProgress;
s100VCRRescaleVegForSpriteRenderingScene ;

s100VCRsmoothAllMeshes($prefix) ;
file -s ;
}


global proc s100VCRRemoveSmoothAllMeshes()
{
$var = `ls  -type polySmoothFace`;

	for($vart in $var)
	{
	$ch = `referenceQuery -inr $vart `;
		if($ch == 0 )
			delete $vart;

	}

}


global proc s100VCRsmoothAllMeshes(string $prefix)
{
$var = `ls -visible  -type mesh `;
//$varP = `listRelatives -p $var`;

	for($i = 0 ; $i < size($var) ; $i++)
	{
	setAttr ($var[$i] +".smoothLevel") 0;
	setAttr ($var[$i] + ".useSmoothPreviewForRender") 0;

	}

select $var  ;
HighQualityDisplay ;
}
