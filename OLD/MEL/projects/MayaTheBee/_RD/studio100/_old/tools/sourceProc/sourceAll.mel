////////////////////////////////////
//List of the folder to source
////////////////////////////////////


global proc sourceAll()
{
//sourceAll;
	//commons
sourcePnt("/commons/createAttr/");
sourcePnt("/commons/creaObj/");
sourcePnt("/commons/");

sourcePnt("/menuUI/");



	//utils
sourcePnt("/utils/");
sourcePnt("/utils/animation/");

sourcePnt("/utils/AdvancedSkeleton/");
sourcePnt("/utils/AdvancedSkeleton/FitSkeletons/");
sourcePnt("/utils/AdvancedSkeleton/helpfiles/");
sourcePnt("/utils/AdvancedSkeleton/Selector/");
sourcePnt("/utils/AdvancedSkeleton/biped/");
sourcePnt("/utils/AdvancedSkeleton/face/");
sourcePnt("/utils/layout/");

sourcePnt("/utils/camera/");
sourcePnt("/utils/rendering/");
sourcePnt("/utils/rendering/AETemplate/");

sourcePnt("/utils/rigging/");

//s100VR
sourcePnt("/utils/vegetationsTools/s100VR/");
sourcePnt("/utils/vegetationsTools/s100VR/commons/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/aEffect/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/autoRig/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/rig/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/utilsProc/");
sourcePnt("/utils/vegetationsTools/s100VR/procRig/firstAdd/");
sourcePnt("/utils/vegetationsTools/s100VR/procUI/");
sourcePnt("/utils/vegetationsTools/s100VR/rz/");

//s100VCR

sourcePnt("/utils/vegetationsTools/S100VCR/");
sourcePnt("/utils/vegetationsTools/S100VCR/commons/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100CVRtemplateSpriteScene/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100VCRAutoCreateAllVersions/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100VCRAutoRigLow/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100VCRCheckExists/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100VCRincrementation/");
sourcePnt("/utils/vegetationsTools/S100VCR/s100VCRUIProc/");


//s100VM
sourcePnt("/utils/vegetationsTools/s100VM/commons/");
sourcePnt("/utils/vegetationsTools/s100VM/autoLoadResolution/");
sourcePnt("/utils/vegetationsTools/s100VM/sprites/");
sourcePnt("/utils/vegetationsTools/s100VM/uiProc/");
sourcePnt("/utils/vegetationsTools/s100VM/vm/");

sourcePnt("/utils/vegetationsTools/s100VM/");



sourcePnt("/utils/vegetationsTools/s100ROS/");




sourcePnt("/utils/modelling/");
sourcePnt("/utils/automatisation/");

sourcePnt("/utils/rename/");
sourcePnt("/utils/clean/");
sourcePnt("/utils/check/");

sourcePnt("/utils/converting/");



	//menuUI
sourcePnt("/menuUI/");
sourcePnt("/");


}



global proc sourcePnt(string $pathM)
{

/*
$pathM = "/commons/";


*/
print ("\n path : " + $pathM +"\n\n"  ) ;

global string  $base_script_path;
$path = substituteAllString ($base_script_path , ";","");
print ($path + $pathM ) ;
$script = `getFileList -folder ($path + $pathM ) -filespec "*.mel" `;

		for ($scriptT in $script)
		{
		print ($scriptT+"\n");
		$sub = substituteAllString ($scriptT , ".mel","");
		evalEcho("source \""+  $sub + "\"") ;
		print ("source \""+  $sub + "\"");
		}


}

sourceAll;