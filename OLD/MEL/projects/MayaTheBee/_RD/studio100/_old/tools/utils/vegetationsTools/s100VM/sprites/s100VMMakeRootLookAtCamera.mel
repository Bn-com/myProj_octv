global proc string[] s100VMMakeRootLookAtCamera(string $camera)
{
//$camera = "camTest" ;
$list = `s100VMlistVegetationPrefix`;
string $returnList[] ;
$j = 0 ;
	for($i = 0 ; $i< size($list) ; $i++)
	{
	$root = $list[$i] + "lookRot_grp" ;

		if(`objExists $root `)
		{
		setAttr ($root +".rotateOrder") 1 ;
		$tmp   = `aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "scene" -skip x -skip z $camera $root`;
		$returnList[$j] =$tmp[0];
		$j++;
        }
    }

return $returnList ;
}


global proc s100VMDeleteAllAimOnSprite()
{
//$camera = "camTest" ;
$list = `s100VMlistVegetationPrefix`;
string $returnList[] ;
$j = 0 ;
string $roots[] ;

	for($i = 0 ; $i< size($list) ; $i++)
	{
	$root = $list[$i] + "lookRot_grp" ;

		if(`objExists $root `)
		{
			$roots[$j] = $root ;
			$j++;
        }

    }

//print $roots ;

	for($i = 0 ; $i< size($roots) ; $i++)
	{

	$list2 = `listConnections -type "aimConstraint" $roots[$i]`;
	$list3 = stringArrayRemoveDuplicates($list2) ;

			for($j = 0 ; $j < size($list3) ; $j++)
			{
			$chR = `referenceQuery -isNodeReferenced  $list3[$j]`;
				if($chR == 0 )
				{
					if(`objExists $list3[$j]`)
					{
					delete $list3[$j] ;

                    }

                }

            }



    }
select -cl ;
}

global proc s100VMMakeRootLookAtCameraProc()
{
string $sel[] =`textScrollList -q -selectItem   s100VMSMResolutionTSL `;

string $aim[] = `s100VMMakeRootLookAtCamera($sel[0]) `;
delete $aim ;
select -cl ;
}

global proc s100VMMakeRootAimAtCameraProc()
{
string $sel[] =`textScrollList -q -selectItem   s100VMSMResolutionTSL `;

string $aim[] = `s100VMMakeRootLookAtCamera($sel[0]) `;
select -cl ;
}

//s100VMMakeRootLookAtCamera("camera_MAYA_Test_Layout") ;

