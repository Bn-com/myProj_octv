//proc for selecting objec in scene for the passes Creator
global proc string[] s100PClightForChar()
{

return {"sunDirectionPerso"};
}
global proc string[] s100PClightForLoc()
{

return {"sunDirectionDecor"};
}
global proc string[] s100PCselectMain(string $arg[])
{
string $var[] = `ls -visible -noIntermediate -type mesh -type nurbsSurface $arg`;
string $parent[] = `listRelatives -p -fullPath $var `;

return $parent;
}
//prefix for Character and Locations
global proc string[] s100PCprefixLoc()
{
return  {"L_*:*","L_*:*:*", "L_*:*:*:*", "MA_L_*:*","MA_L_*:*:*", "MA_L_*:*:*:*"} ;
}
global proc string[] s100PCprefixChar()
{

return  {"C_*:*","MA_C_*:*"} ;
}
global proc string[] s100PCprefixProps()
{

return  {"P_*:*","MA_P_*:*"} ;
}
global proc string[] s100PCprefixVegetations()
{

return  {"V_*:*","MA_V_*:*"} ;
}
global proc string[] s100PCprefixMicroVegetations()
{

return  {"MV_*:*","MA_MV_*:*"} ;
}
global proc string[] s100PCprefixBottle()
{

return  {"*:*.S100BottleAfterFall","*:*:*.S100BottleAfterFall"} ;
}
global proc string[] s100PCprefixGround()
{

return  {"*L*:*ground*","*L*:*Ground*"} ;
}
global proc string[] s100PCprefixTree()
{

return  {"*V_*Tree*:*","*L*:*V_*Tree*:*"} ;
}
global proc string[] s100PCprefixLeavesShaders()
{

return  {"*V_*Tree*:*.S100TreeLeafshadow_id_aoPass","*L*:*V_*Tree*:*.S100TreeLeafshadow_id_aoPass"} ;
}
global proc string[] s100PCselectMicroveg()
{
string $ret[];
	if(`objExists "s100ROSDupRef_grp"`)
	{
	string $tmp[]  = `listRelatives -c "s100ROSDupRef_grp"`;
	$ret  = $tmp;


	}

return $ret;
}

//Define Arg For Specifique object Selection
global proc string[] s100PCObjselectWater()
{

return  {"water","Water"} ;
}
global proc string[] s100PCObjNameMattes()
{

return  {"matte","cloud","Matte","Cloud","sky","Sky","cyclo","Cyclo"} ;
}
global proc string[] s100PCObjNameSprites()
{

return  {"Sprite","sprite"} ;
}

global proc string[] s100PCObjNameTreeLeaves()
{
return  {"Tree*:*Leaves*","Tree*:*Leaves*"} ;
}


//selection Proc
global proc string[] s100PCselectCharacters()
{
string $charArg[]= `s100PCprefixChar` ;
string $var[] = ` s100PCselectMain($charArg) `;
return $var;
}
global proc string[] s100PCselectLocations()
{
string $locArg[] ;
string $var[] ;
clear $var ;
$locArg= `s100PCprefixLoc`;
$var = ` s100PCselectMain($locArg) `;
print $var;
return $var;
}
global proc string[] s100PCselectSprites()
{

string $mattesPrefArg[]= `s100PCprefixLoc`;
string $mattesNameArg[]= `s100PCObjNameSprites`;
string $mattesArg[];
$k = 0 ;
	for($i = 0 ; $i < size($mattesPrefArg) ; $i++)
	{

		for($j = 0 ; $j < size($mattesNameArg) ; $j++)
		{
		$mattesArg[$k]=  $mattesPrefArg[$i] + $mattesNameArg[$j] +"*" ;
		$k++;

		}
		$mattesArg[$k]=  "*V_*:Sprite*" + $mattesNameArg[$j] +"*Sprite*" ;
		$k++;
    }
string $var[] = ` s100PCselectMain($mattesArg) `;

return $var ;



}
global proc string[] s100PCselectMattes()
{
string $mattesPrefArg[]= `s100PCprefixLoc`;
string $mattesNameArg[]= `s100PCObjNameMattes`;
string $mattesArg[];
$k = 0 ;
	for($i = 0 ; $i < size($mattesPrefArg) ; $i++)
	{

		for($j = 0 ; $j < size($mattesNameArg) ; $j++)
		{
		$mattesArg[$k]=  $mattesPrefArg[$i] + $mattesNameArg[$j] +"*" ;
		$k++;
		}
    }
string $var[] = ` s100PCselectMain($mattesArg) `;

return $var ;

}
global proc string[] s100PCselectWater()
{
string $mattesPrefArg[]= `s100PCprefixLoc`;
string $mattesNameArg[]= `s100PCObjselectWater`;
string $mattesArg[];
$k = 0 ;
	for($i = 0 ; $i < size($mattesPrefArg) ; $i++)
	{

		for($j = 0 ; $j < size($mattesNameArg) ; $j++)
		{
		$mattesArg[$k]=  $mattesPrefArg[$i] + $mattesNameArg[$j] +"*" ;
		$k++;
		}
    }
string $var[] = ` s100PCselectMain($mattesArg) `;

return $var ;

}
global proc string[] s100PCselectProps()
{
string $propsArg[]= `s100PCprefixProps` ;
string $var[] = ` s100PCselectMain($propsArg) `;
return $var;
}
global proc string[] s100PCselectVegetations()
{
string $vegArg[]= `s100PCprefixVegetations` ;
string $var[] = ` s100PCselectMain($vegArg) `;
return $var;
}
global proc string[] s100PCselectMicroVegetations()
{
string $vegArg[]= `s100PCprefixMicroVegetations` ;
string $var[] = ` s100PCselectMain($vegArg) `;
return $var;
}
global proc string[] s100PCselectBottleShader()
{
string $arg[]= `s100PCprefixBottle` ;
string $vars[] = ` ls $arg `;
string $ret[] ;
	for ($i = 0 ; $i < size($vars) ; $i++)
	{
	string $arr[] = stringToStringArray(	$vars[$i] , ".") ;
	$ret[$i]= $arr[0];



    }

return $ret;


}
global proc string[] s100PCselectBottleComeFromShader()
{
string $arg[]= `s100PCselectBottleShader` ;
string $ret[] ;
	if(size($arg) > 0)
	{
	string $list[] = `listConnections -type "shadingEngine" -d 1 -s 0 $arg `;

		if(size($list) > 0)
		{
		string $list2[] = `listConnections -type "mesh" -d 0 -s 1 $list `;
			if(size($list2) > 0)
			$ret =  $list2 ;
        }

    }

return $ret;


}
global proc string[] s100PCselectAllMesh()
{
string $var[] = `ls -visible -noIntermediate -type mesh `;
string $parent[] = `listRelatives -p -fullPath $var `;
/*
string $sprite[] = `s100PCselectSprites`;

string $return[] = stringArrayRemove($sprite, $parent ) ;
*/




string $veg[] = `s100PCselectMicroveg` ;
$parent = stringArrayCatenate($parent , $veg ) ;
return $parent ;
}
global proc string[] s100PCselectEyeBrows()
{

string $var[] = `ls -visible -noIntermediate -type mesh "*:*_brow*" "*:*_Brow*""*:*_brows*" "*:*_Brows*"`;
string $parent[] = `listRelatives -p -fullPath $var `;
/*
string $sprite[] = `s100PCselectSprites`;

string $return[] = stringArrayRemove($sprite, $parent ) ;
*/
return $parent ;
}
global proc string[] s100PCselectGround()
{
string $arg[]= `s100PCprefixGround` ;
string $vars[] = ` ls $arg `;
string $ret[] ;
	for ($i = 0 ; $i < size($vars) ; $i++)
	{
	string $arr[] = stringToStringArray(	$vars[$i] , ".") ;
	$ret[$i]= $arr[0];



    }

return $ret;


}

global proc string[] s100PCselectTree()
{
string $arg[]= `s100PCprefixTree` ;
string $var[] = `ls -visible -noIntermediate -type mesh $arg`;
string $parent[] = `listRelatives -p -fullPath $var `;


return $parent;


}

global proc string[] s100PCselecTreeWithoutLeaves()
{
string $tree[] = `s100PCselectTree`;
string $leaves[] = `s100PCselectLeaves` ;

string $get[] = stringArrayRemove($leaves, $tree) ;

string $more[]= `ls -allPaths "*Tree*:*Branch*" "*:*Tree*:*Branch*"`;
string $rem[]= `ls -allPaths "*Tree*:*Leaves*" "*:*Tree*:*Leaves*"`;

$get = stringArrayCatenate($more , $get) ;
$get = stringArrayRemove($rem, $get) ;


string $ret[] ;

$j = 0 ;

	for($tmp in $get )
	{
		if(! `gmatch 	$tmp "*Leaves*"` && ! `gmatch 	$tmp "*:*Leaves*"`  && ! `gmatch 	$tmp "*:*:*Leaves*"`)
		{
		$listT = `listRelatives -s $tmp ` ;
			if(size($listT)> 0)
			{
   			$ret[$j] = $tmp ;
			$j++;

            }
        }
    }

return $ret;
}

global proc string[] s100PCselectLeavesShaders()
{
string $ret[] ;
string $leavesSh[] = `s100PCprefixLeavesShaders`;
string $ls[] = `ls $leavesSh `;

string $retu[] ;
	for($i = 0 ; $i < size($ls) ; $i++)
	{
	$array = stringToStringArray($ls[$i] , "." ) ;

	$retu[$i] = $array[0] ;

    }


return $retu;

}


global proc string[] s100PCselectLeaves()
{
string $mesh[] ;
string $ls[] ;
string $ls2[] ;
string $sh[]  = `s100PCselectLeavesShaders` ;
	if(size($sh) >0)
	{
	string $shE[] = `listConnections -type "shadingEngine" -d 1 -s 0 $sh `;
		if(size($shE) >0)
		{
		$mesh = `listConnections -type "shape"  -d 0 -s 1 $shE `;

        }

    }
//select $mesh ;

string $fRet[] ;

	if(size( $mesh)> 0)
	{
	$list2 = `listRelatives -c -fullPath $mesh `;
	$fRet = `listRelatives -p -fullPath $list2 `;
	$fRet = stringArrayRemoveDuplicates($fRet ) ;

    }

//select $fRet ;
return $fRet;

}


//select `s100PCselectTree`;




/*
global proc string[] s100PCselectSprites()
{
string $vegArg[]= `s100PCObjNameSprites` ;
string $var[] = ` s100PCselectMain($vegArg) `;
return $var;
}

*/
global proc string[] s100PCselectMRefract()
{
string $mRef [] = `ls -allPaths "*:m_refract_grp"`;

return 	$mRef ;
}
global proc string[] s100PCselectMRefractObj()
{
string $mRef [] = `s100PCselectMRefract`;
string $return[] ;
	if(size($mRef) > 0)
	{
	$return = `listRelatives -fullPath -c -type "transform" $mRef`;
    }


return $return ;

}


global proc string[] s100PCselectAll()
{
string $getAllM[]= `s100PCselectAllMesh` ;
string $getLight[]= `s100PCgetAllLights` ;
string $return[] = stringArrayCatenate($getAllM ,$getLight ) ;

return $return ;
}
global proc string[] s100PCselectAllExpectSprites()
{
string $getAllM[]= `s100PCselectAllMesh` ;
string $getLight[]= `s100PCselectSprites` ;
string $return[] = stringArrayRemove($getLight,$getAllM  ) ;

return $return ;
}


//select `s100PCselectAllMesh`

//passes Selection
//AO

global proc string[] s100PCgetAllLights()
{
string $ligths[] =  `ls -type light `;
string $p[] = `listRelatives -p $ligths`;
return $p ;
}

global proc string[] s100PCselectForPassAO()
{
string $all[] = `s100PCselectAllMesh` ;
string $sprites[] = `s100PCselectSprites`;
string $mattes[] = `s100PCselectMattes`;
string $brow[] = `s100PCselectEyeBrows`;


string $toDel[] = stringArrayCatenate($sprites, $mattes ) ;
string $toDel[] = stringArrayCatenate($brow, $toDel ) ;


string $return[]= stringArrayRemove($toDel, $all) ;
return $return ;
}

global proc string[] s100PCselectForPassShadows()
{
string $all[] = `s100PCselectAllMesh` ;
string $sprites[] = `s100PCselectSprites`;
string $mattes[] = `s100PCselectMattes`;

string $toDel[] = stringArrayCatenate($sprites, $mattes ) ;
string $return[]= stringArrayRemove($toDel, $all) ;
return $return ;
}

//idPadd
global proc string[] s100PCselectForPassID()
{
string $all[] = `s100PCselectAllMesh` ;
string $mattes[] = `s100PCselectMattes`;
string $return[]= stringArrayRemove($mattes, $all) ;

return $return ;

}

//Z select `s100PCselectForPassZ`
global proc string[] s100PCselectForPassZ()
{
string $all[] = `s100PCselectAllMesh`;
string $mv[] = `s100PCselectMicroveg`;
string $ret[] = stringArrayRemove($mv, $all) ;
return $all ;

}

//CharBeauty
//select `s100PCselectForPassCharBeauty`
global proc string[] s100PCselectForPassCharBeauty()
{
string $char[] = `s100PCselectCharacters`;
string $props[] = `s100PCselectProps`;


string $return[] = stringArrayCatenate($char, $props ) ;
return $return ;

}


//bg Beauty select `s100PCselectLocations`
global proc string[] s100PCselectLocations()
{
string $char[] = `s100PCselectForPassCharBeauty`;
string $mattes[] = `s100PCselectMattes`;
string $light[]=`s100PCgetAllLights`;
string $ligthRemove[] = `s100PClightForLoc`;
string $lightAdd[] = stringArrayRemove($ligthRemove , $light ) ;

string $toDel[] = stringArrayCatenate($char, $mattes ) ;

string $all[] = `s100PCselectAllMesh`;

string $return[]= stringArrayRemove($toDel, $all) ;

string $tree[] = `s100PCselectTree` ;

string $toDel[] = stringArrayRemove($tree, $return ) ;



return $toDel ;
}

global proc string[] s100PCselectAllExpectMattes()
{
string $all[] = `s100PCselectAll`;
string $mattes[] = `s100PCselectMattes` ;


string $return[]= stringArrayRemove($mattes, $all) ;




return $return ;
}
global proc string[] s100PCselectAllExpectCharactersAndProps()
{
string $all[] = `s100PCselectAll`;
string $char[] = `s100PCselectCharacters` ;
string $props[] = `s100PCselectProps` ;
string $mattes[] = `s100PCselectMattes `;

string $return[]= stringArrayRemove($char, $all) ;
string $return[]= stringArrayRemove($props, $return) ;
string $return[]= stringArrayRemove($mattes, $return) ;




return $return ;
}
//sky Beauty
global proc string[] s100PCselectForPassSkyBeauty()
{
return `s100PCselectMattes`;

}

/*

select $sel ;
*/

global proc  string[] s100PCselectForPassBG()
{
string $sel[] = `s100PCselectAllExpectMattes`;
string $lightRem[] = `s100PClightForChar `;
string $return[] = stringArrayRemove($lightRem , $sel ) ;
string $mRef[] = `s100PCselectMRefractObj` ;
string $return2[] = stringArrayCatenate($return , $mRef ) ;



return $return2 ;
}
global proc  string[] s100PCselectForPassTG()
{
string $sel[] = `s100PCselectAllExpectMattes`;
string $lightRem[] = `s100PClightForChar `;
string $return[] = stringArrayRemove($lightRem , $sel ) ;
string $mRef[] = `s100PCselectMRefractObj` ;
string $return2[] = stringArrayCatenate($return , $mRef ) ;



return $return2 ;
}


global proc  string[] s100PCselectForPassCB()
{
string $sel[] = `s100PCselectAllExpectMattes`;
string $lightRem[] = `s100PClightForLoc`;
string $return[] = stringArrayRemove($lightRem , $sel ) ;

return $return ;

}


global proc  string[] s100PCselectForPassShadows()
{
string $sel[] = `s100PCselectForPassBG`;
string $lightRem[] = `s100PCselectSprites`;
string $return[] = stringArrayRemove($lightRem , $sel ) ;

return $return ;

}


global proc  string[] s100PCselectForTreeBeauty()
{
string $sel[] = `s100PCselectForPassBG`;
string $lightRem[] = `s100PCselectSprites`;
string $return[] = stringArrayRemove($lightRem , $sel ) ;

return $return ;

}

