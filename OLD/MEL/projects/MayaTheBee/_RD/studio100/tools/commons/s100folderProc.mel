global proc string[] s100listAllAssetRootFolder(string $bank)
{
//$bank = "Y:/000_3d_Studio100/" ;
$listS = `s1ListAllSubFolder($bank) `;
size($listS) ;
string $allRoot[]  ;
$j = 0 ;
	for($i = 0 ; $i < size ($listS) ; $i++)
	{
	string $arra[] = stringToStringArray($listS[$i] ,"/");
	$last = size($arra) -1 ;
		if(`gmatch $arra[$last] "MA_?_*"`)
		{
		$allRoot[$j] = $listS[$i] ;
		$j++ ;
        }
    }


return $allRoot ;
}

global proc string[] s100listAllAssetModFolder(string $folder[])
{
string $return[] ;
	for($i = 0 ; $i < size($folder ) ; $i++)
	{
	$tmpN = $folder[$i]  + ".ma" ;
	$modF = `s100returnModFolder($tmpN) `;
	$return[$i] =$folder[$i] +"/" + $modF[0]  ;
    }
return $return ;
}

global proc string[] s100ReturnListFileInFoldersList(string $folder[],string $matchsFile[])
{
//$folder = $listA2 ;
//string $matchsFile[] = {"*Hi.ma","*.ma"} ;
string $return2[] ;
$m = 0 ;
	for($i = 0 ; $i < size($folder ) ; $i++)
	{
	string $fileList[] ;
		for($j = 0 ; $j < size($matchsFile) ; $j++)
		{
		string $fileListT[] = `getFileList -folder ($folder[$i] )  -filespec $matchsFile[$j] `;
			for($k = 0 ; $k < size($fileListT) ; $k++)
			{
			$return2[$m] = $folder[$i] + $fileListT[$k] ;
			$m++;
            }
        }
    }
return $return2 ;
}

global proc string s100returnAssetRootFolder(string $pathS)
{
//$pathS = `file -q -sn`;
int $chInFolder = 0 ;





$baseName = basename($pathS ,"") ;

$sub = substituteAllString($pathS , $baseName , "") ;

string $arrP[] = stringToStringArray( $sub,"/" ) ;
string $pathClean ="";

	for($i = 0 ; $i < size($arrP) ; $i++)
	{
	$pathClean += $arrP[$i] + "/";

		if(`gmatch $arrP[$i] "??_*_*"`)
		{
		break ;
        }



    }

return $pathClean ;

}

global proc string s100returnAssetThumbFolder(string $pathS)
{


$rootF = `s100returnAssetRootFolder($pathS ) `;

$return = $rootF + "_Thumbnails/" ;
return $return ;

}

global proc string[] s100returnModFolder(string $pathS)
{
string $type = `s100returnTypeAsset($pathS) `;


string $return[] ;

	switch  ($type){


	case "character" :
	case "location" :
	case "props" :

		string $return[]  = {"02_Rig","01_Geo","02_UV","03_Rig","04_Shapes","01_WhiteSet","02_Geo","03_UV"} ;

	break ;

	case "vegetation" :
	string $return[]  = {"01_Local/", "02_Ref/"} ;

	break ;



	}

return $return ;

}

global proc string s100returnTypeAsset(string $pathS)
{

$name = basename($pathS , ".ma");

string $array[] = stringToStringArray($name,"_") ;

string $return ;

	switch  ($array[1]){


	case "C" :

	$return = "character" ;
	break ;

	case "P" :
	$return = "props" ;

	break ;

	case "V" :
	$return = "vegetation" ;

	break ;

	case "L" :
	$return = "location" ;

	break ;


	}

return $return ;
}

global proc string s100returnFolder(string $path)
{
string $var[] = stringToStringArray($path , "/" ) ;
string $return ;

	for($i = 0 ; $i < size($var) - 1 ; $i++)
	{
	$return += $var[$i] + "/" ;
    }

return $return ;
}

global proc string s100returnSequenceFolder(string $path)
{
string $var[] = stringToStringArray($path , "/" ) ;
string $return ;

	for($i = 0 ; $i < size($var) - 1 ; $i++)
	{
	$return += $var[$i] + "/" ;
		if(`gmatch $var[$i] "Sq*" `)
		{
		break ;
        }

    }

return $return ;

}


global proc string s100returnSequenceFolder(string $path)
{
string $var[] = stringToStringArray($path , "/" ) ;
string $return ;

	for($i = 0 ; $i < size($var) - 1 ; $i++)
	{
	$return += $var[$i] + "/" ;
		if(`gmatch $var[$i] "Sq*" `)
		{
		break ;
        }

    }

return $return ;

}



global proc string s100returnShotFolder(string $path)
{
string $var[] = stringToStringArray($path , "/" ) ;
string $return ;
print ("\npath  " + $path ) ;
		if(`s100FMCurrentsceneIsAPreviez`)
		{
			for($i = 0 ; $i < size($var) - 1 ; $i++)
			{
			$return += $var[$i] + "/" ;
				if(`gmatch $var[$i] "Sq*" `)
				{
				$return +=  "_PREVIZ/" ;

				break ;
				}

			}
        }else{
			for($i = 0 ; $i < size($var) - 1 ; $i++)
			{
			$return += $var[$i] + "/" ;
				if(`gmatch $var[$i] "Sc*" `)
				{
				break ;
				}

			}
			////GDC Modify 6/27/2012
			$return = maGDCReturnShotFolder($path);
        }


print ("\nreturn  " + $return ) ;

return $return ;

}