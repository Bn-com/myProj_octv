
global proc string[] s100ReturnAssetListForAPathWithLevel(string $pa,int $level)
{
	string $folders[] = s100ListAllSubFolderWithLevel($pa , $level) ;
	string $rootScene[] = `s1ListAllMayaScene($folders) `;
	return $rootScene ;
}


global proc string[] s100ListAllSubFolderWithLevel(string $pa,int $level)
{
	//$pa = ( $getFileList[$i] +"/") ;
	//$level = 2 ;
	//clear $folders ;
	//clear $folderTmpReturn ;
	int $m = 0 ;
	$folders[$m] = $pa;
	$folderTmpReturn[$m] = $pa ;
	string $folder1[] ;

	for($i = 0 ; $i < $level ; $i++)
	{
		for($j = 0 ; $j < size($folders) ; $j++)
		{
			clear $folder1 ;
			$folder1 = `s100ListOnlyFolderWithCompletePath($folders[$j])`;
			$folderTmpReturn = stringArrayCatenate($folderTmpReturn , $folder1) ;
			$m += size($folder1);
        }

		$folders = $folderTmpReturn ;
		clear $folderTmpReturn ;
    }
	string $returnA[] = sort(stringArrayRemoveDuplicates($folders) );
	return $returnA ;
}


global proc string[] s1ListAllSubFolder(string $pa)
{
	//$pa ="C://mayaTheBee/03_Modelisation/" ;

	string $allFolder[] ;
	$allFolder[0]=$allFolderT[0] = $pa ;
	$size= $size2 = size($allFolder) ;
	int $numb = 1 ;
	string $listT[];
	$numb2 = 0 ;

	while ($numb != $numb2)
	{
		clear $listT;
		$allFolder = $allFolderT ;

		for($i = $numb2 ; $i < size($allFolderT) ; $i++)
		{
			$last = "" ;
			$end = endString ($allFolderT[$i] , 1 ) ;
			if($end != "/" )
				$last = "/" ;
			$folderP = ($allFolderT[$i] + $last ) ;
			$l = s1KeepOnlyFolder($folderP ) ;
			//$numb++ ;
			$listT = stringArrayCatenate($listT, $l ) ;
		}
		$numb2 = size($allFolder) ;
		$allFolderT = stringArrayCatenate($allFolder ,$listT ) ;
		$numb = size($allFolderT) ;
	}
	return $allFolderT ;
}


/*
$listFolder = `s1ListAllSubFolder("C://mayaTheBee/03_Modelisation/") ` ;
$listMayaFiles = `s1ListAllMayaScene($listFolder ) `;
print $listMayaFiles ;
*/
global proc string[] s1ListAllMayaScene(string $folder[])
{
	string $return[] ;
	for($i = 0 ; $i < size($folder) ; $i++)
	{
		$last = "" ;
		$end = endString ($folder[$i] , 1 ) ;
		if($end != "/" )
			$last = "/" ;
		$folderP = ($folder[$i] + $last ) ;
		$listMA = `getFileList -folder ($folderP  ) -fs "*.ma"`;
		$listMB = `getFileList -folder ($folderP ) -fs "*.mb"`;
		$list = stringArrayCatenate($listMA ,$listMB);
		string $nList[] ;
		for($j = 0 ; $j < size($list) ; $j++)
		{
			$nList[$j] = ($folderP  + $list[$j] )  ;
		}
		$return = stringArrayCatenate($return ,$nList) ;
	}
	$return = stringArrayRemoveDuplicates($return ) ;
	return $return ;
}



global proc string[] s1ListAllMelFiles(string $folder[])
{
	string $return[] ;
	for($i = 0 ; $i < size($folder) ; $i++)
	{
		$last = "" ;
		$end = endString ($folder[$i] , 1 ) ;
		if($end != "/" )
			$last = "/" ;
		$folderP = ($folder[$i] + $last ) ;
		$listMA = `getFileList -folder ($folderP  ) -fs "*.mel"`;
		$list = $listMA ;
		string $nList[] ;
		for($j = 0 ; $j < size($list) ; $j++)
		{
			$nList[$j] = ($folderP  + $list[$j] )  ;
		}
		$return = stringArrayCatenate($return ,$nList) ;
	}
	$return = stringArrayRemoveDuplicates($return ) ;
	return $return ;
}


global proc string[] s1KeepOnlyFolder(string $fold)
{
	// $fold = $pa ;
	string $list[] ;
	$list = `getFileList -folder ($fold ) -fs "*.*"`;
	string $foldReturn[];
	$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
		$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
			$foldReturn[$j] =($fold + $list[$i] ) ;
			$j++;
		}
	}
	return $foldReturn ;
}

global proc string[] s1KeepOnlyFolderWhitoutFullPath(string $fold)
{
	// $fold = $pa ;
	string $list[] ;
	$list = `getFileList -folder ($fold ) -fs "*.*"`;
	string $foldReturn[];
	$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
		$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
			$foldReturn[$j] =($list[$i] ) ;
			$j++;
		}
	}
	return $foldReturn ;
}



global proc string[] s100returnAllSubRootSceneFromAssetsFolders(string $folder[])
{
	//$folder[0] = "y:/000_3D_BANK/01_Characters/" ;
	string $return[] ;
	$z = 0 ;
	for($i = 0 ; $i < size($folder ) ; $i++)
	{
		$retu = `s1KeepOnlyFolderReturnLocalPathIgnoreUnderscore($folder[$i] ) ` ;
		string $retu2[] ;
		for($j = 0 ; $j < size($retu) ; $j++)
		{
			$pTmp = $folder[$i] + $retu[$j] +"/";
			$retu2 = `s1KeepOnlyFolderReturnLocalPathIgnoreUnderscore($pTmp) ` ;
			for($k  = 0 ; $k < size($retu2) ; $k++)
			{
   				$pTmp2 = $pTmp + $retu2[$k] +"/" ;
				string $filesTmp[] = `getFileList -folder $pTmp2 -filespec "*.ma" `;
				for($l = 0 ; $l < size($filesTmp) ; $l++)
				{
					$return[$z] = $pTmp2 + $filesTmp[$l] ;
					$z++;
                }
            }
        }
    }
	return $return ;
}



global proc string[] s100returnAllSubRootSceneForShotsFolders(string $folder[])
{
	//$folder[0] = substituteAllString($path , "/_sound","")   ;
	string $return[] ;
	$z = 0 ;
	for($i = 0 ; $i < size($folder ) ; $i++)
	{
		$retu = `s1KeepOnlyFolderReturnLocalPathIgnoreUnderscore($folder[$i] ) ` ;
		string $retu2[] ;
		for($j = 0 ; $j < size($retu) ; $j++)
		{
			$pTmp = $folder[$i] + $retu[$j] +"/";
			$retu2 = `s1KeepOnlyFolderReturnLocalPathIgnoreUnderscore($pTmp) ` ;
			for($k  = 0 ; $k < size($retu2) ; $k++)
			{
				$pTmp2 = $pTmp + $retu2[$k] +"/" ;
				$return[$z] = $pTmp2 ;
				$z++;
            }
        }
    }
	return $return ;
}


global proc string[] s1KeepOnlyFolderReturnLocalPath(string $fold)
{
	// $fold = $pa ;
	string $list[] ;
	$list = `getFileList -folder ($fold ) -fs "*.*"`;
	string $foldReturn[];
	$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
		$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
			$foldReturn[$j] =($list[$i] ) ;
			$j++;
		}
	}
	return $foldReturn ;
}



global proc string[] s1KeepOnlyFolderReturnLocalPathIgnoreUnderscore(string $fold)
{
	// $fold = $path ;
	string $list[] ;
	$list = `getFileList -folder ($fold ) -fs "*.*"`;

	string $foldReturn[];
	$j = 0 ;
	for($i = 0; $i<size($list) ; $i++)
	{
	$checkFolder = `filetest -d ($fold + $list[$i] )`;
		if($checkFolder == 1 )
		{
		$s = startString($list[$i],1) ;
			if($s != "_" )
			{
				if($s != "000" )
				{
				$foldReturn[$j] =($list[$i] ) ;
				$j++;
				}
            }
		}
	}
	return $foldReturn ;
}


global proc int s100checkIfFileExist(string $file)
{
	//$file = "Y:/000_BANK/BananaWork/02_OUT/03_Props/Accessories/leafSleepingBag_01/03_Maps/sources/leafDiffuse.psd";
	$separate  = stringToStringArray($file,"/") ;
	$last = size($separate) - 1 ;
	$pathTmp  = substituteAllString($file , $separate[$last] , "" ) ;
	$list = `getFileList -folder ($pathTmp ) -fs "*.*"`;
	$check = stringArrayContains($separate[$last] , $list ) ;
	return $check ;
}


global proc int s100checkIfFolderExist(string $folder ,string  $path)
{
	string $folders[] ;
	$folders = s100ListOnlyFolder($path);
	$return = stringArrayContains($folder , $folders) ;
	return $return ;
}


global proc string[] s100ListOnlyFolder(string $path)
{
//
	$list = `getFileList -folder ($path ) -fs "*.*" `;
	string $folder[] ;
	$j = 0 ;
	for ($i = 0 ; $i < size($list) ; $i++)
	{
		$sep = stringToStringArray($list[$i] , ".") ;
		if(size($sep) == 1 )
		{
			$folder[$j] = $list[$i] ;
			$j++ ;
        }
    }
	return $folder ;
}


global proc int s100testIfFileIsARootFile(string $path)
{
	//$path = $fName ;
	string $root = `s100returnAssetRootFolder($path)` ;
	string $test = dirname($path)  + "/" ;
	$r = 0 ;
	if($root == $test)
		$r = 1 ;
	return $r ;
}


global proc string[] s100ListOnlyFolderWithCompletePath(string $path)
{
//
	$list = `getFileList -folder ($path  ) -fs "*.*" `;
	string $folder[] ;
	$j = 0 ;
	for ($i = 0 ; $i < size($list) ; $i++)
	{
		$sep = stringToStringArray($list[$i] , ".") ;
		if(size($sep) == 1 )
		{
			$folder[$j] = ($path +  $list[$i] +"/");
			$j++ ;
        }
    }
	return $folder ;
}