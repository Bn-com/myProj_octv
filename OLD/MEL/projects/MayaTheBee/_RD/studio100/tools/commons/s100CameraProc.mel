
global proc string[] s100ReturnCamInSceneWithDefaultCam()
{

$var = `ls -type "camera"` ;
string $cam[]  ;
string $camParent[] = `listRelatives -type "transform" -parent  $var` ;
string $toDup[] = {"persp","side", "top", "front","side","side1","top1","top2"};
clear $cam ;
$j = 0 ;
	for($i = 0 ; $i < size( $camParent ) ; $i++)
	{
		if(`referenceQuery -isNodeReferenced $var[$i] `)
		{

        } else{
		$ch = 0 ;
			for($k = 0 ; $k < size($toDup) ; $k++)
			{
			//print ("\n$toDup :" + $toDup[$k] ) ;
			//print ("\n$camParent :" + $camParent[$i] ) ;
			$ch = eval("gmatch \"*" + $toDup[$k] + "*\" \"" + $camParent[$i] +"\"") ;
			$ch = `gmatch ("\*"+$toDup[$k]+"\*") $camParent[$i] `;
			//print ("\n$ch : " + $ch );

			if($ch == 1 )
				break ;

				if($toDup[$k] == $camParent[$i] )
				{
				$ch = 1 ;
				break ;
                }





            }

		//	print $ch ;

			if($ch == 0 )
			{
			$cam[$j] =  $camParent[$i] ;
	  		$j++;

            }

        }

    }



return $cam ;

}


global proc s100makeCameraRenderableWithArg(string $cam[],int $renderable )
{

	for($tmp in $cam)
	{
	setAttr ($tmp +".renderable") $renderable ;

    }

}
global proc s100setattrcamera(string $camFrom, string $camTo)
{

$listAttr = `listAttr -settable -output -shortNames  $camFrom` ;

	for($tmp in $listAttr)
		{
			if(size(stringToStringArray($tmp,"."))< 2 )
			{
				if(`attributeExists $tmp $camTo `)
				{
				$listConnect = `listConnections ($camTo  + "." + $tmp ) ` ;
					if(size($listConnect)== 0)
					{
						if(`getAttr -settable ($camTo +"."+$tmp) `)
						{
						string $type = `getAttr -type ($camFrom +"." + $tmp)`;
						//print ("\n" + $type);
							if($type == "string" )
							{
							setAttr -type $type ($camTo +"."+ $tmp)  `getAttr  ($camFrom +"."+$tmp) `	;

							}else if ($type == "bool"|| $type == "double"  || $type == "doubleLinear" || $type == "enum"|| $type == "float"){
							setAttr ($camTo +"."+ $tmp)  `getAttr ($camFrom +"."+$tmp) `	;
							}
						}
					}
				}
			}
		}

}

global proc s100connectSupAttr(string $objFrom, string $objTo ,string $attr)
{

	if(`attributeExists $attr $objFrom`)
	{

		if(`attributeExists $attr $objTo`)
		{
			if(`getAttr -l ($objTo +"."+  $attr)` == 0)
			{

				connectAttr -f ($objFrom +"." + $attr) ($objTo +"."+ $attr) ;

            }else{
			warning ($attr + " is lock on object " + $objTo ) ;
            }
		}else{
		warning ("attribut "+ $attr + " doesn't exists on obj " + $objTo);
		}

    }else{
	warning ("attribut "+ $attr + " doesn't exists on obj " + $objFrom);
    }


}

global proc int  s100CameraGetCurrentSaffeTittleStat(string $cam)
{
return `camera -q -displaySafeTitle $cam`;
}

global proc int  s100CameraGetCurrentDisplayResolutionStat(string $cam)
{
return `camera -q -displayResolution $cam`;
}


global proc float  s100CameraGetCurrentoverscanValue(string $cam)
{
return `camera -q -overscan $cam`;
}



global proc s100GetValueForCamera(string $cam)
{

global int $s100PBTtit ;
global int $s100PBTResol;
global float $s100PBTover;
global float $s100PBTMaskOpa ;
global float $s100PBTMaskColor[]  ;

$s100PBTtit = `s100CameraGetCurrentSaffeTittleStat($cam)`;
$s100PBTResol = `s100CameraGetCurrentDisplayResolutionStat($cam)`;
$s100PBTover = `s100CameraGetCurrentoverscanValue($cam)`;

$s100PBTMaskColor = `getAttr ($cam +".displayGateMaskColor")  `;
$s100PBTMaskOpa = `getAttr ($cam +".displayGateMaskOpacity")  `;

}


global proc s100SetValueForCamera(string $cam)
{
	camera -e -displaySafeTitle 1 -displayResolution 1 -overscan 1.1 $cam  ;
	setAttr ($cam +".displayGateMaskColor") -type double3 0 0 0 ;
	setAttr ($cam +".displayGateMaskOpacity") 1.0;
	print ("\n// \""+$cam+"\" MaskColor and Opacity of Overscan (1.1) set to Opaque Black.\n");
}



global proc s100SetBackOriginalValueForCamera(string $cam)
{
global float $s100PBTMaskOpa ;
global int $s100PBTtit ;
global int $s100PBTResol;
global float $s100PBTover;
global float $s100PBTMaskColor[]  ;

camera -e -displaySafeTitle $s100PBTtit -displayResolution $s100PBTResol -overscan $s100PBTover $cam  ;

setAttr ($cam +".displayGateMaskOpacity") $s100PBTMaskOpa;
setAttr ($cam +".displayGateMaskColor") -type double3 $s100PBTMaskColor[0] $s100PBTMaskColor[1] $s100PBTMaskColor[2]   ;


}


