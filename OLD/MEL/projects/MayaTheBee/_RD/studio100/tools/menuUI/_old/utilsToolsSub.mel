
global proc utilsToolsSub()
{
	menuItem -en 1 -l "File Manager"
		-echoCommand true
		-c "s100FileManagerUI"
		s100FileManagerUI_item ;

	menuItem -divider 1;

	s100MenuPip ;
	s100MenuCheckCleanScene ;
	s100MenuModelling ;
	s100MenuUVText ;
	s100MenuRigging ;
	s100MenuAnim ;
	//s100MenuFx;
	s100MenuRendering ;
	s100MenuVegetations ;

	menuItem -divider 1;

	menuItem -l "Close All Floating Windows"
		-echoCommand true
		-c "s100deleteAllFloatingWindowMan"
		Rs100deleteAllFloatingWindowMan_item ;

	menuItem -l "Reload Menu"
		-echoCommand true
		-c "Reload_s100MenuUI"
		Reload_s100MenuUI_item ;

	menuItem -l "Re-source all procs + reload Menu"
		-echoCommand true
		-c "sourceAll() ; Reload_s100MenuUI();"
		RefreshAndReload_s100MenuUI_item ;
}

global proc s100MenuUVText()
{
	menuItem -l "SHADER//TEXTURE"
	-echoCommand true
	-subMenu 1
	-tearOff 1
	uvTextUtilsTools;

		menuItem -l "SHADER.TEXTURE.TOOLBOX"
		-echoCommand true
		-c "s100_launchPyGui(\"ShaderToolbox\")" -annotation "Switch texture proxy"
		s100SwitchTexture_item ;
/*
		menuItem -l "Render check <TO BE DEL>"
			-echoCommand true
			-c "s100prepareAssetToBeRenderManUI"
			s100prepareAssetToBeRenderManUI_item ;
*/
		menuItem -l "Transfert UV from a scene"
		-echoCommand true
		-c "s100getUVUI" -annotation "s100getUVUI"
		s100getUVUI_item ;
/*
		menuItem -l "check and convert textures to low"
		-echoCommand true
		-c "s100convertTexturesToLowUI" -annotation "s100getUVUI"
		s100convertTexturesToLowUI_item ;
*/

		menuItem -l "Reconnect textures locally"
		-echoCommand true
		-c "s100reconnectTexturesLocally" -annotation "if folder tree is good, it will reconnect the textures"
		s100reconnectTexturesLocally_item ;

/*
		menuItem -l "convert to MIA"
			-echoCommand true
			-c "s100createMIAPreviewUI"
			s100createMIAPreviewUI_item ;

		menuItem -l "Gamma toolbox <TO BE DEL>"
			-echoCommand true
			-c "jjj_gammaTools"
			jjj_gammaTools_item ;
*/

		menuItem -l "RoadKill"
			-echoCommand true
			-c "RoadKill"
			RoadKillUI_item ;
		menuItem -l "add prefix to shading engine node"
			-echoCommand true
			-c "s100FM_exportSubRef_renameShadingEngineUI"
			s100FM_exportSubRef_renameShadingEngineUI_item ;

/*
		menuItem -l "Fix MipMap and Alpha is Luminance"
			-echoCommand true
			-c "S100MipMapUI"
			S100MipMapUI_item ;
*/

 	setParent -menu s100Menu;
}

global proc s100MenuAnim()
{
	menuItem -l "ANIM//LAYOUT"
		-echoCommand true
		-subMenu 1
		-tearOff 1
		animationUtilsTools;

			menuItem -l "s100.Final.layout.toolbox"
			-echoCommand true
			-c "s100_launchPyGui(\"FinalLayoutToolbox\")" -annotation "s100 Final layout toolbox"
			s100FinalLayoutSource_item ;

		menuItem -l "s100 animation manager"
			-echoCommand true
			-c "s100_launchPyGui(\"AnimationManager\")" -annotation "animation manager"
			s100animManager_item ;


		menuItem -l "s100 Animation toolbox"
			-echoCommand true
			-c "s100_launchPyGui(\"AnimationToolbox\")" -annotation "animation toolbox"
			s100AnimationToolbox_item ;

		menuItem -l "s100 Random toolbox"
			-echoCommand true
			-c "s100_launchPyGui(\"RandomToolbox\")" -annotation "Random toolbox"
			s100RandomToolboxSource_item ;

			menuItem -l "s100 Unload selected reference"
			-echoCommand true
			-c "s100_launchPyGui(\"ReferencesRemover\")" -annotation "playblast scene"
			s100UnloadSelectedRefSource_item ;


			menuItem -l "s100 playBlast"
			-echoCommand true
			-c "s100playblastToolsCheck" -annotation "playblast scene"
			s100playblastToolsCheck_item ;

			menuItem -l "s100 Biped Selector"
			-echoCommand true
			-c "s100asSelectorbiped" -annotation "run script to select character"
			s100asSelectorbiped_item ;

			menuItem -l "tear off facial camera "
			-echoCommand true
			-c "s100asAddHeadCamForSelectedCharacter" -annotation "select character, this will create a tear of the facial camera"
			s100asAddHeadCamForSelectedCharacter_item ;


			menuItem -l "dk Anim"
			-echoCommand true
			-c "dkAnim" -annotation " export import animation"
			dkAnim_item ;

			menuItem -l "zoo Shots"
			-echoCommand true
			-c "zooShots" -annotation "open Zoo Shots Camera Manager"
			zooShots_item ;


			menuItem -l "Unload Ref Non in Cam < WIP >"
			-echoCommand true
			-c "s100URNICUI"
			s100URNICUI_item ;

			menuItem -l "asSelectorbiped"
			-echoCommand true
			-c "asSelectorbiped" -annotation "asSelectorbiped"
			asSelectorbiped_item ;

			menuItem -l "asSelectorface"
			-echoCommand true
			-c "asSelectorface" -annotation "asSelectorface"
			asSelectorface_item ;


			menuItem -l "camera Zoom 2d"
			-echoCommand true
			-c "lntCameraZoomUI"
			lntCameraZoomUI_item ;
/*
			menuItem -l "check with occlu <TO BE DEL>"
			-echoCommand true
			-c "s100CKAUI"
			s100CKAUI_item ;
*/
			menuItem -l "Manage Dyn Hair System"
			-echoCommand true
			-c "s100MDUI"
			s100MDUI_item ;


			menuItem -l "AutoTangent"
			-echoCommand true
			-c "autoTangent"
			autoTangent_item ;


			menuItem -l "Tween Machine"
			-echoCommand true
			-c "tweenMachine"
			tweenMachine_item ;


		setParent -menu s100Menu;
}

global proc s100MenuCheckCleanScene()
{

	menuItem -l "CHECKER//CLEANER"
		-echoCommand true
		-subMenu 1
		-tearOff 1
		checkUtilsTools;

			menuItem -l "checkSameName"
			-echoCommand true
			-c "s100checkSameName" -annotation "check if there is many object with the same name"
			s100getAllReferencedPathUI_item ;

			menuItem -l "get all references paths"
			-echoCommand true
			-c "s100getAllReferencedPathUI" -annotation "check if there is many object with the same name"
			s100checkSameName_item ;

			menuItem -l "s100 Attribute manager"
			-echoCommand true
			-c "s100_launchPyGui(\"AttributeToolbox\")"
			s100AttributeManager_item ;

			menuItem -l "nameSpace Cleaner"
			-echoCommand true
			-c "nscNameSpaceCleanerUI"
			nscNameSpaceCleanerUI_item ;


			menuItem -l "nameSpace Rename"
			-echoCommand true
			-c "s100namespaceRenameUI"
			s100namespaceRenameUI_item ;

			menuItem -l "comet Rename"
			-echoCommand true
			-c "cometRename"
			cometRename_item ;

			menuItem -l "clean Shape Name"
			-echoCommand true
			-c "cleanNameShape"
			-ann "automatic rename All shape"
			cleanNameShape_item ;

			menuItem -l "rename all nodes"
			-echoCommand true
			-c "cleanAll"
			-ann "clean many nodes name in current scene"
			cleanAll_item ;

			menuItem -l "s100 Clean Ref"
			-echoCommand true
			-c "s100KRECUI"
			-ann "clean ref but keep some modification inside"
			s100KRECUI_item ;

		setParent -menu s100Menu;
}


global proc s100MenuPip()
{
	menuItem -l "PIPE"
	-echoCommand true
	-subMenu 1
	-tearOff 1
	pipUtilsTools;


		menuItem -l "TBDL reader/ create File and folder"
			-echoCommand true
			-c "s100PRCUI"
			s100PRCUI_item ;


		menuItem -l "automatisation"
			-echoCommand true
			-subMenu 1
			-tearOff 1
			automatisationUtilsTools;


			menuItem -l "Maya The Bee Batch UI"
			-echoCommand true
			-c "s100MayaBatchUI"
			s100MayaBatchUI_item ;

			menuItem -l "converting Images For Avid"
			-echoCommand true
			-c "s100cToAvidUI"
			s100cToAvidUI_item ;
/*
			menuItem -l "Maya convert texture in low <TO BE DEL>"
			-echoCommand true
			-c "s100convertTexturesToLowUIForBank"
			s100convertTexturesToLowUIForBank_item ;
*/

			menuItem -l "move and rename sound UI"
			-echoCommand true
			-c "s100moveAndRenameSoundAutoUI"
			s100moveAndRenameSoundAutoUI_item ;

			menuItem -l "move and rename Lips UI"
			-echoCommand true
			-c "s100moveAndRenameLipsAutoUI"
			s100moveAndRenameLipsAutoUI_item ;


				menuItem -l "abBatchFile"
				-echoCommand true
				-c "abBatchFile"
				abBatchFileUI_item ;

				menuItem -l "s100 automatisation UI"
				-echoCommand true
				-c "s100automatisationUI"
				s100automatisationUI_item ;


	//setParent -menu pipUtilsTools;
		//menuItem -l "converting <TO BE DEL>"
		//	-echoCommand true -subMenu 1 -tearOff 1 convertingUtilsTools;
				//menuItem -l "export file for Deep View <TO BE DEL>"
				// -echoCommand true -c "s1ExpToFbxForDeepUI" s1ExpToFbxForDeepUI_item ;
				//menuItem -l "convert a directory to Deep View <TO BE DEL>"
				// -echoCommand true -c "s1Convert3dBankToFBXBankLaunchUI" s1Convert3dBankToFBXBankLaunchUI_item ;
	//setParent -menu pipUtilsTools;

	setParent -menu s100Menu;
}

global proc s100MenuModelling()
{
	menuItem -l "MODELLING"
	-echoCommand true
	-subMenu 1
	-tearOff 1
	modellingUtilsTools;

		menuItem -l "abSymMesh"
		-echoCommand true
		-c "abSymMesh" -annotation " to mirror Shape"
		abSymMesh_item ;

/*
		menuItem -l "mirror Vertex"
		-echoCommand true
		-c "mirrorVtx"
		mirrorVtx_item ;

		menuItem -en 0 -l "duplicate Instance"
		-echoCommand true
		-c "s100dupInInstanceCleanUI"
		s100dupInInstanceCleanUI_item ;


		menuItem -l "delete double face <TO BE DEL>"
		-echoCommand true
		-c "s100DeleteDoubleFaceAndConformForSelUI"
		s100DeleteDoubleFaceAndConformForSelUI_item ;

		menuItem -l "disable double And Opposite <TO BE DEL>"
		-echoCommand true
		-c "doubleAndOppsiteUI"
		doubleAndOppsiteUI_item ;

		menuItem -l "random point position on geo <TO BE DEL>"
		-echoCommand true
		-c "S100rand_transUI"
		S100rand_transUI_item ;
*/

		menuItem -l "Prepare selected to be smooth"
		-echoCommand true
		-c "s100_prepareSmoothSource"
		s100_prepareSmoothUI_item ;

		menuItem -l "Random toolbox"
		-echoCommand true
		-c "s100_launchPyGui(\"RandomToolbox\")"
		s100_RandToolboxSource_item ;

		menuItem -l "s100 Apply Max Z Value"
		-echoCommand true
		-c "s100_applyMaxZValueSource"
		s100_applyMaxZValueSource_item ;

 	setParent -menu s100Menu;
}

/*
global proc s100MenuFx()
{
	menuItem -l "FX <TO BE DEL>"
	-echoCommand true
	-subMenu 1
	-tearOff 1
	fxUtilsTools;

		menuItem -l "s100 CrowdMaker <TO BE DEL>"
		-echoCommand true
		-c "s100TALtransferAnimLowModelUI" -annotation "crowd maker"
		s100_crowdmakerUI_item ;

		menuItem -l "CrowdMaker creation UI <TO BE DEL>"
		-echoCommand true
		-c "cMakerCreationUI" -annotation "cMakerCreationUI"
		cMakerCreationUI_item ;


		menuItem -l "CrowdMaker setup UI <TO BE DEL>"
		-echoCommand true
		-c "cMakerSetupUI"
		cMakerSetupUI_item ;


		menuItem -en 1 -l "CrowdMaker add Obstacle <TO BE DEL>"
		-echoCommand true
		-c "cMakerAddObstacle"
		cMakerAddObstacle_item ;

 	setParent -menu s100Menu;
}
*/

global proc s100MenuRigging()
{
	menuItem -l "RIGGING"
		-echoCommand true
		-subMenu 1
		-tearOff 1

		riggingUtilsTools;


		menuItem -l "advanced skeleton"
		-echoCommand true
		-subMenu 1
		-tearOff 1
		asUtilsTools;

			menuItem -l "asFitTools"
			-echoCommand true
			-c "asFitTools" -annotation "fit tools"
			asFitTools_item ;

			menuItem -l "advanced Skeleton"
			-echoCommand true
			-c "advancedSkeleton" -annotation "build skeleton"
			as_item ;

			menuItem -l "asUtilities"
			-echoCommand true
			-c "asUtilities" -annotation "asUtilities"
			asUtilities_item ;

			menuItem -l "asFace"
			-echoCommand true
			-c "asFace" -annotation "asFace"
			asFace_item ;

			menuItem -l "asSelectorDesigner"
			-echoCommand true
			-c "asSelectorDesigner" -annotation "asSelectorDesigner"
			asSelectorDesigner_item ;

			menuItem -l "asPoserDesigner"
			-echoCommand true
			-c "asPoserDesigner" -annotation "asPoserDesigner"
			asPoserDesigner_item ;

			menuItem -l "asHelp"
			-echoCommand true
			-c "asHelp" -annotation "asHelp"
			asHelp_item ;


	setParent -menu riggingUtilsTools;

			menuItem -l "s100 Additive Auto Rig"
			-echoCommand true
			-c "s100ARUadditiveRigUI"
			s100ARUadditiveRigUI_item ;


			menuItem -l "s100 Rig Toolbox"
			-echoCommand true
			-c "s100_launchPyGui(\"RigToolbox\")"
			s100_RigToolboxSource_item ;

/*
			menuItem -l "transfert skinning <TO BE DEL>"
			-echoCommand true
			-c "s100skinTransfUI"
			s100skinTransfUI_item ;
*/

			menuItem -l "orient Joint"
			-echoCommand true
			-c "ciadAimJointUI"
			ciadAimJointUI_item ;

			menuItem -l "create Dynamique on Joint"
			-echoCommand true
			-c "createHairIK"
			createHairIK_item ;

			menuItem -l "desactive all LRA"
			-echoCommand true
			-c "ALL_LRA_desactivate"
			ALL_LRA_desactivate_item ;

			menuItem -l "skinningTools"
			-echoCommand true
			-c "skinningTools"
			skinningTools_item ;

			menuItem -l "WireControllers_TOOL"
			-echoCommand true
			-c "WireControllers_TOOL"
			WireControllers_TOOL_item ;

			menuItem -l "DoraSkin Imp Exp"
			-echoCommand true
			-c "DoraSkinWeightImpExp"
			DoraSkinWeightImpExp_TOOL_item ;

			menuItem -l "Combine all Descendante Shape"
			-echoCommand true
			-c "s100combineAllDescendanteShapeUI"
			s100combineAllDescendanteShapeUI_item ;

			menuItem -l "check Zero Transformations"
			-echoCommand true
			-c "zeroCheckerUI"
			zeroCheckerUI_item ;

			menuItem -l "s100 Skin Toolbox..."
			-echoCommand true
			-c "s100_launchPyGui(\"SkinToolbox\")"
			s100_SkinToolboxUI_item ;

			menuItem -l "s100 patch: Tata's AimEye/squash fix"
			-echoCommand true
			-c "s100crp_fixTatasAimEyeVsSquashSys"
			s100_fixTatasAimEyeVsSquashSys_item ;

			menuItem -l "s100 Combine Selected Skinned Meshes..."
			-echoCommand true
			-c "s100_CombineBySelectionUI"
			s100_CombineBySelectionUI_item ;




	setParent -menu s100Menu;
}


global proc s100MenuRendering()
{
	menuItem -l "LIGHTING//RENDERING"
			-echoCommand true
			-subMenu 1
			-tearOff 1

			renderingUtilsTools;

			menuItem -l "s100 BG shadow pass manager"
				-echoCommand true
				-c "s100_launchPyGui(\"BGshadowPassManager\")" -annotation "BGshadowPassManager"
				s100BGshadowPassManager_item ;

			menuItem -l "s100 Lighting Toolbox"
					-echoCommand true
					-c "s100_launchPyGui(\"LightingToolbox\")"
					s100_LightingToolboxSource_item ;
/*
			menuItem -l "LIGHTING.RENDERING.TOOLBOX"
					-echoCommand true
					-c "s100PCUI"
					s100PCUI_item ;


			menuItem -l "SOuP UI"
					-echoCommand true
					-c "s100_SOuPSource"
					s100_SOuPUI_item ;

			menuItem -l "Create Light Ambiances"
						-echoCommand true
						-c "s100VSMUI"
						VegetationSMUI_item ;

			menuItem -l "Submit Job To Deadline"
					-echoCommand true
					-c "SubmitJobToDeadline"
					SubmitJobToDeadline_item ;

			menuItem -l "s100RMVreconnectAllMicroVeg"
					-echoCommand true
					-c "s100RMVreconnectAllMicroVeg"
					Ss100RMVreconnectAllMicroVeg_item ;
*/
			menuItem -l "s100 Fix Render Error"
					-echoCommand true
					-c "s100fixRenderUI"
					s100fixRenderUI_item ;

			menuItem -l "s100 FinalGatherHide Selected Objects"
					-echoCommand true
					-c "djFinalGatherHide"
					s100djFinalGatherHide_item ;

			menuItem -l "s100 FinalGatherUnhide Selected Objects"
					-echoCommand true
					-c "djFinalGatherUnhide"
					s100djFinalGatherUnhide_item ;


			menuItem -l "Auto Interactive Render (\"IK_renderViewBr\")"
					-echoCommand true
					-c "IK_renderViewBr"
					IK_renderViewBr_item ;

			menuItem -l "s100 Create a isolate renderlayer BGbeauty"
					-echoCommand true
					-c "s100launchDefPy(\"api.createInSelectionARenderlayerIsolateBGbeauty\")"
					s100_createInSelectionARenderlayerIsolateBGbeauty_item ;
/*
							menuItem -l "Pass Script"
							-echoCommand true
							-subMenu 1
							-tearOff 1
							psUtilsTools;



								menuItem -l "Depth Shader Creator"
									-echoCommand true
									-c "Depth_Shader_Creator"
									Depth_Shader_Creator_item ;


								menuItem -l "ObjectID"
									-echoCommand true
									-c "ObjectID_Pass_Creator"
									ObjectID_Pass_Creator_item ;

								menuItem -l "smooth Render"
									-echoCommand true
									-c "s100smoothRenderUI"
									s100smoothRenderUI_item ;
						setParent -menu renderingUtilsTools;


*/
			setParent -menu s100Menu;
}


global proc s100MenuVegetations()
{
		menuItem -l "VEGETATIONS TOOLS"
		-echoCommand true
		-subMenu 1
		-tearOff 1


		vegetationUtilsTools;

			menuItem -l "Vegetations"
			-echoCommand true
			-subMenu 1
			-tearOff 1


			vegetationSubUtilsTools;

				menuItem -l "Auto Rig"
					-echoCommand true
					-c "s100VRUI"
					VegetationUI_item ;

				menuItem -l "Create Resolution"
					-echoCommand true
					-c "s100VCRUI"
					VegetationCRUI_item ;

				menuItem -l "Manager"
					-echoCommand true
					-c "s100VMUI"
					VegetationMUI_item ;



	setParent -menu vegetationUtilsTools;

			menuItem -l "Micro Vegetations"
			-echoCommand true
			-subMenu 1
			-tearOff 1


			microVegetationSubUtilsTools;

				menuItem -l "Random On Surface"
					-echoCommand true
					-c "s100ROSUI"
					s100ROSUI_item ;


				menuItem -l "micro Veg Create Thumbnail"
					-echoCommand true
					-c "s100createThumbnailsForMVCheck"
					s100createThumbnailsForMVCheck_item ;

	setParent -menu vegetationUtilsTools;


	setParent -menu s100Menu;
}
