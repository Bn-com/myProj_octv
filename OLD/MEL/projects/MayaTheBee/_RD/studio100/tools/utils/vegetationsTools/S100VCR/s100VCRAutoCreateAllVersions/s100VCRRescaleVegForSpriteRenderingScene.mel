global proc s100VCRRescaleVegForSpriteRenderingScene()
{

$var = `ls "*:root_ctrl" `;



	if(size($var) >0)
	{


	setAttr ($var[0] +".sx") 1 ;
	setAttr ($var[0] +".sy") 1 ;
	setAttr ($var[0] +".sz") 1 ;

	float $vert = `s100VCRGetSizeForRescaleScene("dt_vert_dt")` ;
	float $hor = `s100VCRGetSizeForRescaleScene("dt_hor_dt")`;

	float $returnScene[] = `s100VCRGetScaleVegForSpriteRenderingScene `;

	float $quota = 1 ;
	$quota =  ($vert/$returnScene[0]) * .9 ;
	setAttr ($var[0] +".sx") $quota ;
	setAttr ($var[0] +".sy") $quota ;
	setAttr ($var[0] +".sz") $quota ;

	float $returnScene[] = `s100VCRGetScaleVegForSpriteRenderingScene `;

		if(($returnScene[1]) > ($hor*.9))
		{
		$quota =  ($hor/$returnScene[1] )*.9 * $quota;
		setAttr ($var[0] +".sx") $quota ;
		setAttr ($var[0] +".sy") $quota ;
		setAttr ($var[0] +".sz") $quota ;
		}

	setKeyframe ($var[0] +".sx") ;
	setKeyframe ($var[0] +".sy") ;
	setKeyframe ($var[0] +".sz") ;

    }




}


global proc float s100VCRGetSizeForRescaleScene(string $dt)
{
//$dt = "dt_hor_dt";
$listS = `listRelatives -s $dt` ;


float $get = `getAttr ($listS[0] +".distance")`;


return $get;



}


global proc float[] s100VCRGetScaleVegForSpriteRenderingScene()
{
// $return[0] = retour vertical et le [1] horizontal
$var = `ls "*:msh_grp" `;




float $returnVert ;
float $returnHor ;

	if(size($var) >0)
	{
	$varT = `listRelatives -fullPath  -ad -type "mesh" $var`;
	$varT2 = `listRelatives -fullPath  -p -type "transform" $varT` ;
	float $bbox[] = `exactWorldBoundingBox -ignoreInvisible 1 $varT2`;

	$tA1 = abs($bbox[3]) ;
	$tA2 = abs($bbox[0]) ;
	$tmpA = sort({ $tA1, $tA2}) ;

	$returnVert =$tmpA[1] *2 ;
	$returnHor = abs($bbox[4] - $bbox[1]) ;

    }


$return[0] = $returnVert ;
$return[1] = $returnHor ;

return $return ;

}