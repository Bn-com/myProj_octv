
global proc s100VCRCheckResolutionLayProc()
{
$height = 490;

formLayout -h $height s100VCRCheckResolutionLay;

$width = 430;

$tx1 = `text -w $width  -font "tinyBoldLabelFont" -label "tab to see the stat of the differents versions"`;
$sp1 = `separator -w $width `;


//tab


$txM  = `text -l "mesh"`;
$txR = `text -l "rig"`;
$txT = `text -l "textures"`;
$txE = `text -l "exists"`;





$sp2 = `separator -w $width `;

//local version
$txLocal = `text -l "local :" `;
$sp3 = `separator -w $width `;

//high version
$high = `text - l "high version:" `;
$hMCheck = `checkBox -v 1  -en 0 -l "" `;
$hRCheck = `checkBox -v 1  -en 0 -l "" `;
$hTCheck = `checkBox  -v 1  -en 0 -l "" `;
$hVExistsT = `text s100VCRCHVET`;

//low version
$low = `text - l "low version:" `;
$lMCheck = `checkBox -v 1  -en 0 -l "" `;
$lRCheck = `checkBox -v 1  -en 0 -l "" `;
$lRCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;

$lTCheck = `checkBox -v 1 -en 0 -l "" `;
$lVExistsT = `text s100VCRCLVET`;





//Ref version
$txRef = `text -l "Ref :" `;
$sp4 = `separator -w $width `;

//high version
$highRef = `text - l "high version:" `;

//hi1
$high1Ref = `text - l "high 1:" `;
$high1RefMCheck = `checkBox -v 1 -en 0 -l "" `;
$high1RefRCheck  = `checkBox -v 1  -en 0 -l "" `;
$high1RefTCheck = `checkBox -v 1 -en 0 -l "" `;
$h1VExistsT = `text s100VCRCH1VET`;


//hi2
$high2Ref = `text - l "high 2:" `;
$high2RefMCheck = `checkBox -v 1 -en 0 -l "" `;
$high2RefRCheck  = `checkBox  -v 1  -en 0 -l "" `;
$high2RefRCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;
$h2VExistsT = `text s100VCRCH2VET`;


$high2RefTCheck = `checkBox -v 1 -en 0 -l "" `;


//hi3
$high3Ref = `text - l "high 3:" `;
$high3RefMCheck = `checkBox -v 1 -en 0 -l "" `;
$high3RefRCheck  = `checkBox -v 0  -en 0 -l "" `;
$high3RefTCheck = `checkBox -v 1 -en 0 -l "" `;
$h3VExistsT = `text s100VCRCH3VET`;




//low version
$lowRef = `text - l "low version:" `;

//lo1
$low1Ref = `text - l "low 1:" `;
$low1RefMCheck = `checkBox -v 1 -en 0 -l "" `;
$low1RefRCheck  = `checkBox -v 1  -en 0 -l "" `;
$low1RefRCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;
$l1VExistsT = `text s100VCRCL1VET`;


$low1RefTCheck = `checkBox -v 1 -en 0 -l "" `;

//lo2
$low2Ref = `text - l "low 2:" `;
$low2RefMCheck = `checkBox -v 1 -en 0 -l "" `;
$low2RefRCheck  = `checkBox -v 0  -en 0 -l "" `;
$low2RefTCheck = `checkBox -v 1 -en 0 -l "" `;
$l2VExistsT = `text  s100VCRCL2VET`;



//sprite version
$sRef = `text - l "sprite version:" `;

//lo1
$spRef = `text - l "Sprite :" `;
$spRefMCheck = `checkBox -v 1 -en 0 -l "" `;
$spRefMCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;

$spRefRCheck  = `checkBox -v 1  -en 0 -l "" `;
$spRefRCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;


$spRefTCheck = `checkBox -v 1 -en 0 -l "" `;
$spRefTCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;

$spVExistsT = `text  s100VCRCLSPVET`;


//lo2
$spLRef = `text - l "Sprite low:" `;

$spLRefMCheck = `checkBox -v 1 -en 0 -l "" `;
$spLRefMCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;

$spLRefRCheck  = `checkBox -v 0  -en 0 -l "" `;

$spLRefTCheck = `checkBox -v 1 -en 0 -l "" `;
$spLRefTCheckTx  = `text -w 20  -font "obliqueLabelFont" -l "low"`;

$spLVExistsT = `text s100VCRCLSPLVET`;


//scroll list + button

$scrol = `scrollField -h 50 -w $width   -editable 0 -wordWrap 1  s100VCRExistsScrollList`;
$button = `button -c s100VCRCheckResolutionExists -w $width -l "check For Versions"`;

string $ambiance[] = `s100returnDifferentLightAmbiance`;


//edit layout
	 formLayout -e
	 -attachForm $tx1 "top" 5
	 -attachControl $sp1 "top" 5 $tx1

//tab
 	 -attachControl $txM "top" 10 $sp1
 	 -attachControl $txR "top" 10 $sp1
 	 -attachControl $txT "top" 10 $sp1
 	 -attachControl $txE "top" 10 $sp1

 	 -attachForm $txM "left" 180
 	 -attachControl $txR "left" 40 $txM
 	 -attachControl $txT "left" 40 $txR
 	 -attachControl $txE "left" 60 $txT



 	 -attachControl $sp2 "top" 0 $txT

//local
	 -attachControl $txLocal "top" 0 $sp2


//high version
	 -attachControl $high "top" 0 $txLocal
	 -attachControl $high "left" 20 $txLocal


	 -attachControl $hMCheck "top" 0 $txLocal
	 -attachControl $hRCheck "top" 0 $txLocal
	 -attachControl $hTCheck "top" 0 $txLocal
	 -attachControl $hVExistsT "top" 0 $txLocal



	 -attachControl $hMCheck "left" -20 $txM
	 -attachControl $hRCheck "left" -12 $txR
	 -attachControl $hTCheck "left" -27 $txT
	 -attachControl $hVExistsT "left" -20 $txE



//low version
	 -attachControl $low "top" 0 $high
	 -attachControl $low "left" 20 $txLocal

	 -attachControl $lMCheck "top" 0 $high
	 -attachControl $lRCheck "top" 0 $high
	 -attachControl $lRCheckTx "top" 0 $high
	 -attachControl $lTCheck "top" 0 $high
	 -attachControl $lVExistsT "top" 0 $high

	 -attachOppositeControl $lMCheck "left" 0 $hMCheck
	 -attachOppositeControl $lRCheck "left" 0 $hRCheck
	 -attachControl $lRCheckTx "left" -10 $lRCheck
	 -attachOppositeControl $lTCheck "left" 0 $hTCheck
	 -attachOppositeControl $lVExistsT "left" 0 $hVExistsT


 	-attachControl $sp3 "top" 10 $low

//ref
	 -attachControl $txRef "top" 0 $sp3
//high version
	 -attachControl $highRef "top" 0 $txRef
	 -attachControl $highRef "left" 20 $txLocal


	//hi1
	 -attachControl $high1Ref "top" 0 $highRef
	 -attachOppositeControl $high1Ref "left" 20 $highRef


	 -attachControl $high1RefMCheck "top" 0 $highRef
	 -attachControl $high1RefRCheck "top" 0 $highRef
	 -attachControl $high2RefRCheckTx "top" 0 $high1Ref
	 -attachControl $high1RefTCheck "top" 0 $highRef


	 -attachOppositeControl $high1RefMCheck "left" 0 $hMCheck
	 -attachOppositeControl $high1RefRCheck "left" 0 $hRCheck

	-attachControl $high2RefRCheckTx "left" -10 $high2RefRCheck


	 -attachOppositeControl $high1RefTCheck "left" 0 $hTCheck
	 -attachOppositeControl $h1VExistsT "left" 0 $hVExistsT
	 -attachControl $h1VExistsT "top" 0 $highRef



	//hi2
	 -attachControl $high2Ref "top" 0 $high1Ref
	 -attachOppositeControl $high2Ref "left" 20 $highRef


	 -attachControl $high2RefMCheck "top" 0 $high1Ref
	 -attachControl $high2RefRCheck "top" 0 $high1Ref
	 -attachControl $high2RefTCheck "top" 0 $high1Ref
	 -attachControl $h2VExistsT "top" 0 $high1Ref

	 -attachOppositeControl $high2RefMCheck "left" 0 $hMCheck
	 -attachOppositeControl $high2RefRCheck "left" 0 $hRCheck
	 -attachOppositeControl $high2RefTCheck "left" 0 $hTCheck
	 -attachOppositeControl $h2VExistsT "left" 0 $hVExistsT

	//hi3
	 -attachControl $high3Ref "top" 0 $high2Ref
	 -attachOppositeControl $high3Ref "left" 20 $highRef


	 -attachControl $high3RefMCheck "top" 0 $high2Ref
	 -attachControl $high3RefRCheck "top" 0 $high2Ref
	 -attachControl $high3RefTCheck "top" 0 $high2Ref
	 -attachControl $h3VExistsT "top" 0 $high2Ref

	 -attachOppositeControl $high3RefMCheck "left" 0 $hMCheck
	 -attachOppositeControl $high3RefRCheck "left" 0 $hRCheck
	 -attachOppositeControl $high3RefTCheck "left" 0 $hTCheck
	 -attachOppositeControl $h3VExistsT "left" 0 $hVExistsT



//low version
	 -attachControl $lowRef "top" 20 $high3RefTCheck
	 -attachControl $lowRef "left" 20 $txLocal


	//lo1
	 -attachControl $low1Ref "top" 0 $lowRef
	 -attachOppositeControl $low1Ref "left" 20 $lowRef


	 -attachControl $low1RefMCheck "top" 0 $lowRef
	 -attachControl $low1RefRCheck "top" 0 $lowRef
	 -attachControl $low1RefRCheckTx "top" 0 $lowRef
	 -attachControl $low1RefTCheck "top" 0 $lowRef
	 -attachControl $l1VExistsT "top" 0 $lowRef

	 -attachOppositeControl $low1RefMCheck "left" 0 $hMCheck
	 -attachOppositeControl $low1RefRCheck "left" 0 $hRCheck
	 -attachControl $low1RefRCheckTx "left" -10 $low1RefRCheck

	 -attachOppositeControl $low1RefTCheck "left" 0 $hTCheck
	 -attachOppositeControl $l1VExistsT "left" 0 $hVExistsT


	//lo2
	 -attachControl $low2Ref "top" 0 $low1Ref
	 -attachOppositeControl $low2Ref "left" 20 $lowRef


	 -attachControl $low2RefMCheck "top" 0 $low1Ref
	 -attachControl $low2RefRCheck "top" 0 $low1Ref
	 -attachControl $low2RefTCheck "top" 0 $low1Ref

	 -attachOppositeControl $low2RefMCheck "left" 0 $hMCheck
	 -attachOppositeControl $low2RefRCheck "left" 0 $hRCheck
	 -attachOppositeControl $low2RefTCheck "left" 0 $hTCheck
	 -attachControl $l2VExistsT "top" 0 $low1Ref
	 -attachOppositeControl $l2VExistsT "left" 0 $hVExistsT

//sprite version
	 -attachControl $sRef "top" 20 $low2RefTCheck
	 -attachControl $sRef "left" 20 $txLocal

	//sprite
	 -attachControl $spRef "top" 0 $sRef
	 -attachOppositeControl $spRef "left" 20 $sRef

	 -attachControl $spRefMCheck "top" 0 $sRef
	 -attachControl $spRefMCheckTx "top" 0 $sRef

	 -attachControl $spRefRCheck "top" 0 $sRef
	 -attachControl $spRefRCheckTx "top" 0 $sRef

	 -attachControl $spRefTCheck "top" 0 $sRef
	 -attachControl $spRefTCheckTx "top" 0 $sRef


	 -attachOppositeControl $spRefMCheck "left" 0 $hMCheck
	 -attachControl $spRefMCheckTx "left" -10 $spRefMCheck

	 -attachOppositeControl $spRefRCheck "left" 0 $hRCheck
	 -attachControl $spRefRCheckTx "left" -10 $spRefRCheck

	 -attachOppositeControl $spRefTCheck "left" 0 $hTCheck
	 -attachControl $spRefTCheckTx "left" -10 $spRefTCheck

	 -attachControl $spVExistsT "top" 0 $sRef
	 -attachOppositeControl $spVExistsT "left" 0 $hVExistsT


	//sprite Low
	 -attachControl $spLRef "top" 0 $spRef
	 -attachOppositeControl $spLRef "left" 20 $sRef

	 -attachControl $spLRefMCheck "top" 0 $spRef
	 -attachControl $spLRefMCheckTx "top" 0 $spRef

	 -attachControl $spLRefRCheck "top" 0 $spRef

	 -attachControl $spLRefTCheck "top" 0 $spRef
	 -attachControl $spLRefTCheckTx "top" 0 $spRef


	 -attachOppositeControl $spLRefMCheck "left" 0 $hMCheck
	 -attachControl $spLRefMCheckTx "left" -10 $spLRefMCheck

	 -attachOppositeControl $spLRefRCheck "left" 0 $hRCheck

	 -attachOppositeControl $spLRefTCheck "left" 0 $hTCheck
	 -attachControl $spLRefTCheckTx "left" -10 $spLRefTCheck

	 -attachControl $spLVExistsT "top" 0 $spRef
	 -attachOppositeControl $spLVExistsT "left" 0 $hVExistsT


//scroll and button

	 -attachControl $scrol "top" 20 $spLRef
	 -attachControl $button "top" 5 $scrol









		s100VCRCheckResolutionLay ;

	 	setParent..;
		s100VCRCheckResolutionExists ;


}



global proc s100VCRCheckResolutionLayProcRefreshExists()
{

global int $s100VCRCREhigh;
global int $s100VCRCRElow;

global int $s100VCRCREhi1;
global int $s100VCRCREhi2;
global int $s100VCRCREhi3;

global int $s100VCRCRElo1;
global int $s100VCRCRElo2;
global int $s100VCRCRElo3;

global int $s100VCRCREsp;
global int $s100VCRCREspL;

global int $s100VCRCREspN;
global int $s100VCRCREspLN;



int $Value[] = {$s100VCRCREhigh,
				$s100VCRCRElow,
				$s100VCRCREhi1,
				$s100VCRCREhi2,
				$s100VCRCREhi3,
				$s100VCRCRElo1,
				$s100VCRCRElo2,
				$s100VCRCREsp,
				$s100VCRCREspL};


string $field[] = {"s100VCRCHVET",
				"s100VCRCLVET",
				"s100VCRCH1VET",
				"s100VCRCH2VET",
				"s100VCRCH3VET",
				"s100VCRCL1VET",
				"s100VCRCL2VET",
				"s100VCRCLSPVET",
				"s100VCRCLSPLVET"};

int $numb[] = {0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0};


	for($i = 0 ; $i < size($Value); $i++)
	{
	s100VCRCheckResolutionLayProcRefreshExistsModif($Value[$i] ,$field[$i],$numb[$i]);

	}

}


global proc s100VCRCheckResolutionLayProcRefreshExistsModif(int $v , string $fi ,int $numb)
{
string $text;
if($v ==0 )
	$text = "?" ;
if($v ==1 )
	$text = "no" ;
if($v ==2 )
	$text = "yes" ;
if($v >2 )
	$text = $numb ;


text -e -label $text $fi ;



}

