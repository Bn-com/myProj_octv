global proc string s100FMASgetOptionList(string $optionMenu[])
{
	string $tab[];
	string $tabo[];
	string $vegetation[];
	$pathBase = `s100FMGLgetProdInfo`;

	for($i = 0; $i<size($optionMenu); $i++)
	{
		if($i <(size($optionMenu) -1))
		$tab[$i] =  s100FMAScheckOptionMenuList($optionMenu[$i]);
	}

	string $remove[];
	$remove = {"none","--"};
	$tab = stringArrayRemove($remove,$tab);

	$way = stringArrayToString($tab,"/");
	if(size($tab)>0)
		$way = ($pathBase[0]+ "/"+$pathBase[1]+ "/" + $way + "/");

	$vegetation = stringToStringArray($tab[0], "_");


	if($vegetation[1] == "Vegetations")
	{
		optionMenu -e -enable 1 s100FileManagerUIOMLod;
    }
	else
	{
		optionMenu -e -enable 0 s100FileManagerUIOMLod;
    }

	if($vegetation[1] == "Vegetations" && size($tab) > 2)
	{
		//string $tabo = $tab[size($tab) - 1];
		//int $end =  size($tab)-1;
		$way = ($tab[0] + "/" + $tab[1] + "/" + $tab[2]);

		for($i = 0; $i < 3; $i++)
		{
			$tabo[$i] = $tab[$i];
        }
		$tab = stringArrayRemove($tabo,$tab);
		$tabu = stringArrayToString($tab,"/");

		$way = ($pathBase[0]+ "/"+$pathBase[1]+ "/" + $way + "/01_local/" + $tabu + "/");
    }

	/*
	if($vegetation[1] == "FX" && size($tab) > 1)
	{
		$way = ($tab[0] + "/" + $tab[1] + "/" + $tab[2] );
    }
	*/

	return $way;
}


// s100FMASswitchOptionList("name")
//
global proc s100FMASswitchOptionList(string $type)
{
	string $pathBase[];
	string $optionMenu[];
	string $textScrollList[];
	switch($type)
	{
		case"prod":

		break;

		case"type":
			$pathBase = `s100FMGLgetProdInfo`;
			$way = ($pathBase[0]+ "/"+$pathBase[1]+ "/");
			//print ("\n" +$way);
			s100FMASgetTypeList($way, "s100FileManagerUIOMType");
			break;
			case"sub":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub"};
			$way = s100FMASgetOptionList($optionMenu);
			s100FMASgetTypeList($way, $optionMenu[size($optionMenu)-1]);
			break;

		case"name":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub","s100FileManagerUIOPName"};
			$way = s100FMASgetOptionList($optionMenu);
			s100FMASgetTypeList($way, $optionMenu[size($optionMenu)-1]);
		break;

		case"version":
			/*
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub","s100FileManagerUIOPName"};
			$way = s100FMASgetOptionList($optionMenu);
			s100FMASgetTypeList($way, $optionMenu[size($optionMenu)-1]);*/
		break;

		case"state":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub","s100FileManagerUIOPName"/*,"s100FileManagerUIOMVersion"*/,"s100FileManagerUIOMState"};
			$way = s100FMASgetOptionList($optionMenu);
			s100FMASgetTypeList($way, $optionMenu[size($optionMenu)-1]);
			s100FMASgetThumbNail;
		break;

		case"lod":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub","s100FileManagerUIOPName"/*,"s100FileManagerUIOMVersion"*/,"s100FileManagerUIOMState","s100FileManagerUIOMLod"};
			$way = s100FMASgetOptionList($optionMenu);
			s100FMASgetTypeList($way, $optionMenu[size($optionMenu)-1]);
			textField -e -tx $way s100FileManagerUITFPathAsset;
			$textScrollList = s100FMASListMayaObject();
			s100FMASlistMayaPathEdit($textScrollList);
		break;
    }
	s100FileManagerUIRefreshButton ;
}

// NEW QA : (not used)
global proc s100FMASswitchOptionListToValue(string $type, string $value)
{
	switch($type)
	{
		case"prod":

		break;
		case"type":
			optionMenu -e -v $value s100FileManagerUIOMType;
		break;
		case"sub":
			optionMenu -e -v $value s100FileManagerUIOPSub;
		break;

		case"name":
			optionMenu -e -v $value s100FileManagerUIOPName;
		break;
		case"version":

		break;
		case"state":
			optionMenu -e -v $value s100FileManagerUIOMState;
		break;
		case"lod":
			optionMenu -e -v $value s100FileManagerUIOMLod;
		break;
    }
	s100FileManagerUIRefreshButton ;
}

global proc string[] s100FMGLgetProdInfo()
{
$prod = `optionMenu -q -v s100FileManagerUIOMProd` ;
string $pathTab[];
$pathTab = s100assetManagerGetProdPath($prod);
return $pathTab;
}

global proc string s100FMAScheckOptionMenuList(string $optionMenu)
{
	string $value = "none";
	int $optionMenuList;
	$optionMenuList = `optionMenu -q -numberOfItems $optionMenu`;
	if($optionMenuList > 0)
	{
		$value = `optionMenu -q -v $optionMenu`;
	}

	return $value;
}

global proc s100FMASgetTypeList(string $way, string $optionMenu)
{
	string $fileList[];
	if($optionMenu != "s100FileManagerUIOMLod")
	{
		optionMenu -e -enable 1 $optionMenu;
		$fileList = `getFileList -folder $way`;

		string $optionMenuList[];
		$optionMenuList = `optionMenu -q -itemListLong $optionMenu`;

		for($obj in $optionMenuList)
		{
			deleteUI $obj;
		}

		int $intFX = 0;
		$arrayWay = stringToStringArray($way,"/");
		for($obj in $arrayWay)
		{
			$fileDec = stringToStringArray($obj,"_");
			if(stringArrayContains("FX",$fileDec))
				$intFX = 1;
        }

		if($optionMenu == "s100FileManagerUIOPName" && $intFX = 1 && stringArrayContains("_crowd",$fileList))
		{
			if(`filetest -d ($way + "/_crowd/" )`)
				menuItem -p $optionMenu -label "_crowd";
			optionMenu -e -enable 0 $optionMenu;
    	}
		else
		{
			for($obj in $fileList)
			{
				$valid = s100FMAScheckFolderRange($obj);
				int $fileTest = `filetest -d ($way + $obj)`;
				if($valid == 0 && $fileTest == 1)
					menuItem -p $optionMenu -label $obj;
			}
		}
		int $optionMenuCount;
		$optionMenuCount = `optionMenu -q -numberOfItems $optionMenu`;

		if($optionMenuCount == 0)
		{
			menuItem -en 0 -p $optionMenu -label "--";
		}
	}
}


global proc s100FMASchangeOptionMenu(string $type)
{
	string $list[];
	switch($type)
	{
		case "type":
		$list = {"type","sub","name",/*"version",*/"state","lod"};
		break;
		case "sub":
		$list = {"sub","name",/*"version",*/"state","lod"};
		break;
		case "name":
		$list = {"name",/*"version",*/"state","lod"};
		break;
		case "version":
		$list = {/*"version",*/"state","lod"};
		break;
		case "state":
		$list = {"state","lod"};
		break;
		case "lod":
		$list = {"lod"};
		break;
	}

	for($obj in $list)
		s100FMASswitchOptionList($obj);
	//s100FMASgetTypeList($way, $optionMenu);
}

// ex : string $path = "Y://000_3D_BANK/03_Props/Fruit/MA_P_CherryEaten_01/MA_P_CherryEaten_01.ma"
//
global proc s100FMASsetOptionMenusFromAssetPath(string $path)
{
	string $baseName = s100FM_returnAssetBaseNameFromFile($path);
	string $basePath = `match "^.*/" $path`;

	//s100FMASsetOptionMenusFromAssetPath($type, $value);
	string $res[] = s100fai_refImportFindPathsOfAssets({ ("MA"+$baseName) });

}

global proc int s100FMAScheckFolderRange(string $folder)
{
	int $valid = 0;
	//modif by guillaume
	//old one :if(startsWith($folder, "_") || startsWith($folder, "0_") || startsWith($folder, "00") || startsWith($folder, "000") || startsWith($folder, ".") || startsWith($folder,"Poses_Animations")|| startsWith($folder,"Sprites"))

		if(startsWith($folder, "_") || startsWith($folder, "0_")|| startsWith($folder, "000") || startsWith($folder, ".") || startsWith($folder,"Poses_Animations")|| startsWith($folder,"Sprites"))
			$valid = 1;

	return $valid;
}

global proc s100FMASCreateNewFolderUI(string $type, string $exemple)
{
	if(`window -ex 	s100ProdPMGLCreateFolderUIwindow`)
		deleteUI s100ProdPMGLCreateFolderUIwindow;

	int $heigh = 115;
	int $width = 152;

	$window = `window -title ("add new " + $type) s100ProdPMGLCreateFolderUIwindow`;
	columnLayout -adj 1;


	$textName = `text -label "Choose a name"` ;
	$textEx = `text -label ("Ex :" + $exemple)` ;
	$textFieldName = `textField -w  ($width * .8 ) s100ProdPMGLCreateNewTextField`;

	$separator = `separator -w ($width *.91)`;


	$butCrea = `button -label ("add " + $type) -w ($width *.8)` ;



	string $commandCrea = "s100FMASchangeNewFolderOption(\"" + $type + "\")";

	button -e -c $commandCrea $butCrea;

	$side = 5 ;


	window -e -h $heigh  -w $width  -sizeable 0 s100ProdPMGLCreateFolderUIwindow;
	showWindow;
}

global proc s100FMASchangeNewFolderOption(string $type)
{
	$text = `textField -q -tx s100ProdPMGLCreateNewTextField`;
	string $folder;
	switch($type)
	{
		case "sub":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub"};
			$way = s100FMASgetOptionList($optionMenu);
			$text = capitalizeString($text);
			s100FMAScreateFolderSub($way, $text);
			s100FMASchangeOptionMenu("sub");
				optionMenu -e -v $text s100FileManagerUIOPSub;
			s100FMASchangeOptionMenu("name");


		break;
		case "name":
			$optionMenu = {"s100FileManagerUIOMType","s100FileManagerUIOPSub","s100FileManagerUIOPName"};
			$way = s100FMASgetOptionList($optionMenu);
			$folder = s100FMAScreateFolderName($way, $text);
			if($folder != "warn")
			{
			s100FMASchangeOptionMenu("name");
				optionMenu -e -v $folder s100FileManagerUIOPName;
			s100FMASchangeOptionMenu("state");
			}
		break;
		case "version":

		break;

	}

	if($folder != "warn")
	{
	if(`window -ex 	s100ProdPMGLCreateFolderUIwindow`)
		deleteUI s100ProdPMGLCreateFolderUIwindow;
	}
}

global proc s100FMAScreateFolderSub(string $way, string $text)
{
	$new = $way + $text + "/";
	//print ("\n " + $way + "\n ici");
	$fileTest = `filetest -d $new`;
	if($fileTest == 0)
		{
			sysFile -makeDir $new;
			$tab = stringToStringArray($way, "/");
			int $valid = 0;

			for($obj in $tab)
				{
					$cut = stringToStringArray($obj,"_");
					if(stringArrayContains("Characters", $cut))
						{
						$valid = 1;
						}
				}

			if($valid == 1)
				{
				$pose = $new + "/Poses_Animations";
				sysFile -makeDir $pose;
				sysFile -makeDir ($pose + "/Poses");
				sysFile -makeDir ($pose + "/Animations");
				}
    	}
	else
		{
			confirmDialog -title "error" -message "folder already exists"
   				-button "ok" -defaultButton "ok"
    			-cancelButton "ok" -dismissString "ok";
        }

}

global proc string s100FMAScreateFolderName(string $way, string $text)
{
	string $tab[];
	$pathBase = `s100FMGLgetProdInfo`;
	$prodBase = `optionMenu -q -value s100FileManagerUIOMProd`;
	$typeBase = `optionMenu -q -value s100FileManagerUIOMType`;

	$firstCharacter = startString($prodBase,2);
	$AB = $firstCharacter;

		string $tabAB[];
		$int = 1;
		while($int < (size($AB) + 1))
			{
				$endString = endString($AB,$int);
				//print $endString;
				$tabAB[$int] = $endString;
				$int = $int + 1;
			}

	$tabAB[2] = startString($tabAB[2],1);
	$tabAB[2] = capitalizeString($tabAB[2]);
	$tabAB[1] = capitalizeString($tabAB[1]);

	$firstCharacter = $tabAB[2] + $tabAB[1];

	string $secondCharacter;
	$tab = stringToStringArray($typeBase, "_");
	$second = $tab[1];

	if($second == "MicroVegetations")
		$secondCharacter = "MV";
    else
		$secondCharacter = startString($tab[1],1);

	$secondCharacter = capitalizeString($secondCharacter);
	$text = capitalizeString($text);
	$text = ($firstCharacter + "_" + $secondCharacter +"_" + $text);

	$new = $way + $text + "/";


	$tab = stringToStringArray($way, "/");
	int $valid = 0;

	for($obj in $tab)
		{
			$cut = stringToStringArray($obj,"_");

			if(stringArrayContains("Vegetations", $cut))
				{
				$valid = 1;
				}
        }

	int $number = 0;
	$textEnd = endString($text,3);
	$startEnd = startString($textEnd,1);

	if($startEnd == "_")
	{
		$number = `match "[0-9]+$" $textEnd`;
    }


	if($number != 0)
	{
		$fileTest = `filetest -d $new`;
		if($fileTest == 0)
			{

			sysFile -makeDir $new;
			sysFile -makeDir ($new + "/_info");

			if($valid == 1)
				{
				sysFile -makeDir ($new + "/01_Local");
				sysFile -makeDir ($new + "/02_Ref");
				sysFile -makeDir ($new + "/02_Ref/_old");
				sysFile -makeDir ($new + "/_Maps");
				sysFile -makeDir ($new + "/_Maps/Sources");
				sysFile -makeDir ($new + "/_Maps/Sprites");
				sysFile -makeDir ($new + "/_ThumbNails");
				$new = ($new + "/01_Local");
				}

			string $listSubDir[];
			$listSubDir = s100FMASglobalListSubFolder($second);
			for($obj in $listSubDir)
				{
				sysFile -makeDir ($new + "/" + $obj);
				if(startString($obj,1) != "_")
					{
						sysFile -makeDir ($new + "/" + $obj +"/_info");
						sysFile -makeDir ($new + "/" + $obj +"/_wip");
					}

				if($obj == "_Maps")
					{
						if($second != "MicroVegetations")
							{
							sysFile -makeDir ($new + "/" + $obj +"/High");
							sysFile -makeDir ($new + "/" + $obj +"/Low");
							sysFile -makeDir ($new + "/" + $obj +"/Medium");
							}
						sysFile -makeDir ($new + "/" + $obj +"/Sources");
					}
				}
			}
		else
			{
				confirmDialog -title "error" -message "folder already exists"
					-button "ok" -defaultButton "ok"
					-cancelButton "ok" -dismissString "ok";
				$text = "warn";
			}
    }
	else
	{
		confirmDialog -title "error" -message "invalid name at end"
						-button "ok" -defaultButton "ok"
						-cancelButton "ok" -dismissString "ok";
		$text = "warn";
    }
	return($text);
}

global proc string[] s100FMASglobalListSubFolder(string $typeFolder)
{
	string $subFolder[];
	$subFolder = {"00_subRefs","01_Geo","02_UV","03_Rig","_Maps","_Thumbnails"};
	switch($typeFolder)
	{
	case"Characters":
	$subFolder = {"00_subRefs","01_Geo","02_UV","03_Rig","04_Shapes","_Maps","_Thumbnails"};
	break;
	case"Locations":
	$subFolder = {"01_WhiteSet","02_Geo","03_UV","04_Shapes","_Maps","_Thumbnails"};
	break;
	case"Props":
	$subFolder = {"00_subRefs","01_Geo","02_UV","03_Rig","_Maps","_Thumbnails"};
	break;
	case"Vegetations":
	$subFolder = {"01_Geo","02_UV","03_Rig","Sprites"};
	break;
	case"MicroVegetations":
	$subFolder = {"01_Geo","02_UV","_Maps","_Thumbnails"};
	break;
	case"FX":

	break;
    }
return $subFolder;
}


global proc string[] s100FMASListMayaObject()
{
	$pathBase = `s100FMGLgetProdInfo`;
	string $list[];
	string $listWip[];
	string $listA[];
	string $listRefA[];
	string $listWipA[];
	string $return[];

		$type = `optionMenu -q -v s100FileManagerUIOMType`;
		$name = `optionMenu -q -v s100FileManagerUIOPName`;
		$state = `optionMenu -q -v s100FileManagerUIOMState`;
		$sub = `optionMenu -q -v s100FileManagerUIOPSub`;

	$refPath = ($pathBase[0] +"/"+$pathBase[1] +"/" + $type + "/"+$sub +"/" + $name +"/");

	$way = `textField -q -tx s100FileManagerUITFPathAsset`;
	$list = `getFileList -fld ($way)`;
	$listWip = `getFileList -fld ($way + "_wip/")`;
	$listRef = `getFileList -fld ($refPath)`;
	// QA addendum:
	$listSubRef = `getFileList -fld ($refPath + "00_subRefs/")`;

	$list = sort($list);
	$listRef = sort($listRef);
	$listWip = sort($listWip);

	for($obj in $listRef)
	{
		if(fileExtension($obj) == "ma")
			$listA[size($listA)] = "ref:" + ($obj);
	}
/*Remove by guillame
	for($obj in $listSubRef)
	{
		if(fileExtension($obj) == "ma")
			$listA[size($listA)] = "_subRef_:" + ($obj);
	}
*/
	for($obj in $list)
	{
		if(fileExtension($obj) == "ma")
		{
		$add = "published:";
			if(`optionMenu -q -v s100FileManagerUIOMState` == "00_subRefs")
				$add = "_subRef_:";

			$listA[size($listA)] = ($add +$obj);

        }
	}

	for($obj in $listWip)
	{
		if(fileExtension($obj) == "ma")
		$listA[size($listA)] = ("wip:" +$obj);
	}

	$return = stringArrayCatenate($listA,$listWipA);
	string $folderopenlist = "unknow";
	$fileTest = `filetest -f ($way + "_info/info_ref.txt")`;
	if($fileTest == 1)
	{
		$listFolderO = `fopen ($way + "_info/info_ref.txt") "r"`;
		$folderopenlist = `fread $listFolderO $folderopenlist`;
		fclose $listFolderO;
	}

	textField -e -tx $folderopenlist s100FileManagerUITFprepublishedRef;
	s100FMASgetRefProc;
	s100FMASrefreshRefFrom;

	return $return;
}

global proc s100FMASlistMayaPathEdit(string $list[])  // string $list[] = $textScrollList
{
	textScrollList -e -removeAll s100FileManagerUITSExplore;

	$textScrollListStr = "textScrollList -e ";
	for($obj in $list)
		$textScrollListStr += (" -append \""+$obj+"\"");

	$textScrollListStr += " s100FileManagerUITSExplore";
	eval($textScrollListStr);

if(`popupMenu -ex s100FileManagerUITSAssetsPopMenu`)
		{
		popupMenu -e -deleteAllItems s100FileManagerUITSAssetsPopMenu ;
        }else{


	       popupMenu -p s100FileManagerUITSExplore s100FileManagerUITSAssetsPopMenu;


        }
		menuItem -p s100FileManagerUITSAssetsPopMenu -l "load" -c "s100FMASOpenScene" ;
		menuItem -p s100FileManagerUITSAssetsPopMenu -l "create reference" -c FMCreateRef ;
		menuItem -p s100FileManagerUITSAssetsPopMenu -l "import" -c FMimport ;



}

global proc s100FMASgetRefProc()
{
	string $listA[];
	$pathBase = `s100FMGLgetProdInfo`;

		$type = `optionMenu -q -v s100FileManagerUIOMType`;
		$name = `optionMenu -q -v s100FileManagerUIOPName`;
		$state = `optionMenu -q -v s100FileManagerUIOMState`;
		$sub = `optionMenu -q -v s100FileManagerUIOPSub`;

	$refPath = ($pathBase[0] +"/"+$pathBase[1] +"/" + $type + "/"+$sub +"/" + $name +"/");

	$list = `getFileList -fld ($refPath)`;

	for($obj in $list)
	{
		if(fileExtension($obj) == "ma")
			$listA[size($listA)] = ($obj);
    }

	$ref = stringArrayToString($listA,"   ");

	if(size($ref) == 0)
		{
		$ref = "unknow";
		button -e -vis 0 s100FMASpublishRefButtonUI;
		button -e -vis 1 -backgroundColor 0.8 0 0 s100FMASpublishRefButtonUI;
		//button -e -en 0 s100OFMASOpenRefButton;
        }
	else
		{
		button -e -vis 0 s100FMASpublishRefButtonUI;
		button -e -vis 1 -backgroundColor 0 0.8 0 s100FMASpublishRefButtonUI;
		//button -e -en 1 s100OFMASOpenRefButton;
		}

	//textField -e -tx $ref s100FileManagerUITFpublishedRef;
}

global proc s100FMASopenRefScene()
{
	string $file = `file -q -sn -shortName`;
	$pathBase = `s100FMGLgetProdInfo`;
	$type = `optionMenu -q -v s100FileManagerUIOMType`;
	$sub = `optionMenu -q -v s100FileManagerUIOPSub`;
	$name = `optionMenu -q -v s100FileManagerUIOPName`;
	string $lod = `optionMenu -q -v s100FileManagerUIOMLod`;

	$typeTab = stringToStringArray($type,"_");

	$refPath = ($pathBase[0] +"/"+$pathBase[1] +"/" + $type + "/"+$sub +"/" + $name +"/");
	$refName = `textField -q -tx s100FileManagerUITFpublishedRef` ;
	$refNameTab = stringToStringArray($refName,"   ");



	$conf = `confirmDialog -title "Save Changes" -message ("Save changes to" + $file)
		-button "Save" -button "Don't Save" -button "Cancel" -defaultButton "Save"
		-cancelButton "Cancel" -dismissString "No"`;

	if($typeTab[1] == "Vegetations")
		{
			switch($lod)
				{
					case"Hi":
					$refName = $refNameTab[0];
					break;
					case"Lo":
					$refName = $refNameTab[1];
					break;
				}
		}
	else
		$refName = $refNameTab[0];

	if($conf == "Save" || $conf == "Don't Save")
		{
			if($conf == "Save")
				file -f -save ;
			$fileTest = `filetest -f ($refPath + $refName)`;
			if($fileTest == 1)
				file -f -o ($refPath + $refName);

		}
	else
		warning "canceled";



}

global proc s100FMASsetFileIdOnOptionMenu()
{
	$tabLayout = `tabLayout -q -selectTab s100FileManagerUITLMain`;
	if($tabLayout == "s100FileManagerUIFLAsset")
	{
		$pathBase = `s100FMGLgetProdInfo`;
		$fileName = `file -q -sn`;
			string $fileNameTab[];
				$fileNameTab = stringToStringArray($fileName,"/");

		if(stringArrayContains($pathBase[1],$fileNameTab) == 1)
		{
			$fileShortName = `file -q -sn -shortName `;
				$fileShortNameTabLOD = stringToStringArray($fileShortName,".");
				$fileShortNameTab = stringToStringArray($fileShortNameTabLOD[0],"_");
				//print $fileShortNameTab;


			$pathBaseTab = stringToStringArray($pathBase[0],"/");
			$pathBaseTab[size($pathBaseTab)] = $pathBase[0];

			$fileNameTab = stringArrayRemove($pathBaseTab,$fileNameTab);


			$type = `optionMenu -e -v $fileNameTab[1] s100FileManagerUIOMType`;
				s100FMASswitchOptionList("sub");

			$type = `optionMenu -q -v s100FileManagerUIOMType`;
				$typeTab = stringToStringArray($type, "_");


			$sub = `optionMenu -e -v $fileNameTab[2] s100FileManagerUIOPSub`;
				s100FMASswitchOptionList("name");


			$name = `optionMenu -e -v $fileNameTab[3] s100FileManagerUIOPName`;
				s100FMASswitchOptionList("state");

			string $optionMenuList[];
			$optionMenuList = `optionMenu -q -itemListShort s100FileManagerUIOMState`;
			string $listA[];
			for($obj in $optionMenuList)
			 $listA[size($listA)] = `menuItem -q -l $obj`;

			if($typeTab[1] == "Vegetations" )
			{
				if(stringArrayContains($fileNameTab[5],$listA))
				{
					$state = `optionMenu -e -v $fileNameTab[5] s100FileManagerUIOMState`;
				}

				$contain = stringArrayContains("Hi",$fileShortNameTab);
					if($contain == 1)
						$lod = `optionMenu -e -v "Hi" s100FileManagerUIOMLod`;

				$contain = stringArrayContains("Lo",$fileShortNameTab);
					if($contain == 1)
						$lod = `optionMenu -e -v "Lo" s100FileManagerUIOMLod`;



			}
			else if(stringArrayContains($fileNameTab[4],$listA))
				$state = `optionMenu -e -v $fileNameTab[4] s100FileManagerUIOMState`;
		}
		else
		{
			s100FMASswitchOptionList("type");
			$lod = `optionMenu -e -v "Hi" s100FileManagerUIOMLod`;
		}
		s100FMASswitchOptionList("lod");
	}
}

// New QA : exaclt same than above with $filename filled with passed $path
// and $fileShortName guessed from it.
// + error if tablayout not in Assets mode:
//
global proc s100FMASsetFileIdOnOptionMenuFromPath( string $path )
{
	$tabLayout = `tabLayout -q -selectTab s100FileManagerUITLMain`;
	if($tabLayout == "s100FileManagerUIFLAsset")
	{
		$pathBase = `s100FMGLgetProdInfo`;
		$fileName = $path;
			string $fileNameTab[];
				$fileNameTab = stringToStringArray($fileName,"/");

		if(stringArrayContains($pathBase[1],$fileNameTab) == 1)
		{
			$fileShortName = `match "[^/\\]*$" $path`;
				$fileShortNameTabLOD = stringToStringArray($fileShortName,".");
				$fileShortNameTab = stringToStringArray($fileShortNameTabLOD[0],"_");
				//print $fileShortNameTab;


			$pathBaseTab = stringToStringArray($pathBase[0],"/");
			$pathBaseTab[size($pathBaseTab)] = $pathBase[0];

			$fileNameTab = stringArrayRemove($pathBaseTab,$fileNameTab);


			$type = `optionMenu -e -v $fileNameTab[1] s100FileManagerUIOMType`;
				s100FMASswitchOptionList("sub");

			$type = `optionMenu -q -v s100FileManagerUIOMType`;
				$typeTab = stringToStringArray($type, "_");


			$sub = `optionMenu -e -v $fileNameTab[2] s100FileManagerUIOPSub`;
				s100FMASswitchOptionList("name");


			$name = `optionMenu -e -v $fileNameTab[3] s100FileManagerUIOPName`;
				s100FMASswitchOptionList("state");

			string $optionMenuList[];
			$optionMenuList = `optionMenu -q -itemListShort s100FileManagerUIOMState`;
			string $listA[];
			for($obj in $optionMenuList)
			 $listA[size($listA)] = `menuItem -q -l $obj`;

			if($typeTab[1] == "Vegetations" )
			{
				if(stringArrayContains($fileNameTab[5],$listA))
				{
					$state = `optionMenu -e -v $fileNameTab[5] s100FileManagerUIOMState`;
				}

				$contain = stringArrayContains("Hi",$fileShortNameTab);
					if($contain == 1)
						$lod = `optionMenu -e -v "Hi" s100FileManagerUIOMLod`;

				$contain = stringArrayContains("Lo",$fileShortNameTab);
					if($contain == 1)
						$lod = `optionMenu -e -v "Lo" s100FileManagerUIOMLod`;



			}
			else if(stringArrayContains($fileNameTab[4],$listA))
				$state = `optionMenu -e -v $fileNameTab[4] s100FileManagerUIOMState`;
		}
		else
		{
			s100FMASswitchOptionList("type");
			$lod = `optionMenu -e -v "Hi" s100FileManagerUIOMLod`;
		}
		s100FMASswitchOptionList("lod");
	}
	else
		error "FileManager is not open on 'Assets' tab... Stopped";
}



global proc s100FMsaveOptionVar()
{
	$prodMenu = `optionMenu -q -v s100FileManagerUIOMProd`;
	$optionvar =`optionVar -iv "prodSelected" 4 -sv "selectedOption" $prodMenu`;
	//optionVar -q  "selectedOption";
}



global proc s100FMloadOptionVar()
{
	string $tab[];
	string $list[];
	if(`optionVar -exists "prodSelected"`)
	{
		string $optionVar2 = `optionVar -q "selectedOption"`;
		$tab = `optionMenu -q -itemListShort s100FileManagerUIOMProd`;
		for($obj in $tab)
			$list[size($list)] = `menuItem -q -label $obj`;

		if(stringArrayContains($optionVar2, $list)==1)
		{
		 optionMenu -e -v $optionVar2 s100FileManagerUIOMProd;
			//print $optionVar2;
		}
    }
}


