//UI for passes Creator

global proc s100PCUI()
{

//s100smoothApprox(2, "all");

	if(`window -ex 	s100PCUI`)
			deleteUI s100PCUI;

		window -title "Lightning and rendering Manager" s100PCUI;
		columnLayout -adjustableColumn true s100PCUICLMain;


	menuBarLayout s100PCUIMLMain;
	$cmd = s100openWikiTo("PC") ;


		menu -en 0 -label "Help" -helpMenu true;
			menuItem -en 1 -c s100PCUI   -label "refresh";
			menuItem -en 1  -c $cmd  -label "help";
			menuItem -en 0  -label "About...";

		setParent ..;

		formLayout -p s100PCUICLMain s100PCUIFLSmooth;

	$textSmooth = `text -p s100PCUIFLSmooth  -l "smooth level :"`;
	$btSmooth1 = `button  -p s100PCUIFLSmooth -l "0" -c "s100smoothApprox(0,\"all\")" `;
	$btSmooth2 = `button -p s100PCUIFLSmooth -l "1" -c "s100smoothApprox(1,\"all\")" `;
	$btSmooth3 = `button  -p s100PCUIFLSmooth -l "2" -c "s100smoothApprox(2,\"all\")" `;


	formLayout -e




	-attachForm $textSmooth "top" 10
	-attachForm $textSmooth "left" 5

	-attachForm $btSmooth1 "top" 5
	-attachControl  $btSmooth1 "left" 5 $textSmooth

	-attachForm $btSmooth2 "top" 5
	-attachControl  $btSmooth2 "left" 5 $btSmooth1

	-attachForm $btSmooth3 "top" 5
	-attachControl  $btSmooth3 "left" 5 $btSmooth2
s100PCUIFLSmooth ;

$width = 300 ;


	tabLayout -changeCommand s100PCrefreshWhenChangeTab  -p s100PCUICLMain  s100PCUITL;

		s100PCUIFormPC($width);
		s100PCUIFormLM($width);
		s100PCUIFormSM($width);
		s100PCUIFormRM($width);
		s100PCUIFormCM($width);
		window -e -resizeToFitChildren 1  -h 540 -w 310  s100PCUI;

	showWindow ;

}

global proc s100PCrefreshWhenChangeTab()
{

	$tab = `tabLayout  -q -selectTab     s100PCUITL `;


		if($tab == "s100PCUIFLLightM" )
		{
		window -e -h 600  s100PCUI;
        }else{
		window -e -h 420  s100PCUI;
        }

		if($tab == "s100PCUIFLLightM" )
		{
		s100PClistClassForUI ;

        }else if ($tab == "s100PCUIFLLightM" )
        {
		s100PCUIRefreshPass ;
		}

		if($tab == "s100PCUIFLMain" )
		{
		window -e -h 540  s100PCUI;
		s100PCUIRefreshPass ;

        }
	  s100PCPrecomprefreshComp ;


}

global proc s100PCUIFormPC(int $width)
{



	formLayout -p s100PCUITL s100PCUIFLMain;

	$txtField = `textScrollList -doubleClickCommand s100PCSwitchLayer  -selectCommand s100PCUIRefreshTextScroll  -allowMultiSelection 1  -w ($width -20) -h 200 s100PCUIbtTxtField `;



	$btUpdateSel = `button -en 0 -w ($width -20) -l "update Assignation on selected" -ann "scene must not be already a render scene(with light and passes)"  -c s100PCupdateselected s100PCUIbtUpdateSelect`;
	$rmSelPass = `button -en 0 -w ($width -20) -l "remove Assignation on selected" -ann "Remove Selected"  -c s100PCRemoveselected s100PCUIbtRemSelect`;

	$sep = `separator -w ($width - 20 )`;

	$btCreate = `button -w ($width - 20 )-l "create render scenes from current scene" -ann "scene must not be already a render scene(with light and passes)"  -c s100PCcreateFile s100PCUIbtCreate`;

	$btUpdate = `button -w ($width - 20 )-l "update All Assignations" -ann "scene must not be already a render scene(with light and passes)"  -c s100PCupdateAll s100PCUIbtUpdate`;
	$rmAllPass = `button -en 1 -w ($width -20) -l "remove All Assignation " -ann "Remove All assignation"  -c s100PCRemoveAllFromToPasses s100PCUIbtRemoveAll`;

	$sep1 = `separator -w ($width - 20 )`;

	$rmAllREndering = `button -en 1 -w ($width -20) -l "remove Light/Passes/RenderCam " -ann "Remove All Lights/ passes/ rendercam"  -c s100PCDeleteAllForRendering s100PCDeleteAllForRenderingBt`;
	$sep2 = `separator -w ($width - 20 )`;


	$cleanRef = `button -en 1 -w ($width -20) -l "Official Fix Error" -ann "open UI For Fix render Error"  -c s100fixRenderUI s100KRECUIBT`;


	$op = `optionMenu s100PCoptionMenuScene`;


	$chBP = `checkBox -annotation "could fix problem of assignation, but longer to process" -v 0 -w ($width -20) -label "force Beauty Assign" s100PCCBBeautyAssign`;
	$chBP1 = `checkBox -annotation "create Render layer and setup scene without assign anything" -v 0 -w ($width -20) -label "ignore Assign during creating" s100PCIgnoreAssign`;

	$sep3 = `separator -w ($width - 20 )`;

$tSpace = 1 ;

	formLayout -e





	-attachForm $txtField  "top" $tSpace
	-attachForm $txtField "left" 5


	-attachControl $btUpdateSel  "top" $tSpace $txtField
	-attachForm $btUpdateSel "left" 5

	-attachControl $rmSelPass  "top" $tSpace $btUpdateSel
	-attachForm $rmSelPass "left" 5

	-attachControl $sep  "top" $tSpace $rmSelPass
	-attachForm $sep "left" 5


	-attachControl $op  "top" $tSpace $sep
	-attachForm $op "left" 5

	-attachControl $chBP  "top" $tSpace $op
	-attachForm $chBP "left" 5

	-attachControl $chBP1  "top" $tSpace $chBP
	-attachForm $chBP1 "left" 5


	-attachControl $btCreate  "top" $tSpace $chBP1
	-attachForm $btCreate "left" 5

	-attachControl $sep3  "top" $tSpace $btCreate
	-attachForm $sep3 "left" 5


	-attachControl $btUpdate  "top" $tSpace $sep3
	-attachForm $btUpdate "left" 5

	-attachControl $rmAllPass  "top" $tSpace $btUpdate
	-attachForm $rmAllPass "left" 5

	-attachControl $sep1  "top" $tSpace $rmAllPass
	-attachForm $sep1 "left" 5

	-attachControl $rmAllREndering  "top" $tSpace $sep1
	-attachForm $rmAllREndering "left" 5


	-attachControl $sep2  "top" $tSpace $rmAllREndering
	-attachForm $sep2 "left" 5

	-attachControl $cleanRef  "top" $tSpace $sep2
	-attachForm $cleanRef "left" 5

	s100PCUIFLMain ;
	tabLayout -e -tabLabel

	s100PCUIFLMain "Passes"

	   s100PCUITL;

s100PCUIRefreshPass ;
s100refreshFileForOP ;


}
global proc s100PCUIFormLM(int $width)
{
	formLayout   -p s100PCUITL s100PCUIFLLightM;

//default preset
	$text = `text -label "defaut preset"` ;
	$scroll = `scrollLayout -p s100PCUIFLLightM -w ($width -10) -h 120 s100PCUIFLLightMSL`;
	$coll = `gridLayout -columnsResizable 0   -numberOfColumns 2 -numberOfRows 2 -w  ($width - 40)  -cellWidth 150 -cellHeight 150 -h 300 -p $scroll s100PCUIFLLightMSLCL`;
			setParent ..;
		setParent ..;
	$sep1 = `separator -p s100PCUIFLLightM  -w $width `;
scrollLayout -e -h 120 s100PCUIFLLightMSL;


//saved preset

$w1  = (($width / 3)) ;
$w2 = (($width / 3) * 2 ) ;

$textSaved = `text -p s100PCUIFLLightM -label "Saved Preset"` ;

$txtFieldSavedLeft = `textScrollList -selectCommand "s100PCrefreshPresetWhenSelected" -p s100PCUIFLLightM  -w $w1  -h 100 s100PCUIRMlightTFSavedLeft `;
$txtFieldSavedRight = `textScrollList -doubleClickCommand s100PCApplyPreset -selectCommand "s100PCUIRefreshTextScrolllightS" -p s100PCUIFLLightM -w $w2 -h 100 s100PCUIRMlightTFSavedRight `;


	//button Class

		$textNF = `text -l "create Class : " ` ;
		$btCreateLocal = `button -w ($w1 / 2 ) -c "s100PCcreateClassUI(\"local\")"  -l "Local"`;
		$btCreateShare = `button -w ($w1 / 2 ) -c "s100PCcreateClassUI(\"share\")" -l "Share"`;

	//button Preset

		$textNF2 = `text -l "Preset : " ` ;
		$btSave  = `button  -en 0 -w ($w2 /2 -10  ) -c "s100PCSAVEPRESETUI()"   -l "Save" s100PCUIFLLightMBSL`;

		$btApply = `button  -en 0  -w ($w2 /2 -10  ) -c s100PCApplyPreset -l "apply" s100PCUIFLLightMBAS`;


$sep2 = `separator -p s100PCUIFLLightM  -w $width `;



//light in scene

	$text2 = `text -p s100PCUIFLLightM  -label "light in scene "`;

	$txtField = `textScrollList -p s100PCUIFLLightM  -doubleClickCommand s100PCSwitchLight -allowMultiSelection 1  -w ($width -20) -h 100 s100PCUIRMlightTF `;




	formLayout -e

//default preset

	-attachForm $text  "top" 5
	-attachForm $text "left" 5


	-attachControl $scroll  "top" 5 $text
	-attachForm $scroll "left" 5



	-attachControl $sep1  "top" 5 $scroll
	-attachForm $sep1 "left" 5
//saved preset

	-attachControl $textSaved  "top" 5 $sep1
	-attachForm $textSaved "left" 5

	-attachControl $txtFieldSavedLeft  "top" 5 $textSaved
	-attachForm $txtFieldSavedLeft "left" 5

	-attachControl $txtFieldSavedRight  "top" 5 $textSaved
	-attachControl $txtFieldSavedRight "left" 5 $txtFieldSavedLeft

	//button Class
		-attachControl $textNF  "top" 0 $txtFieldSavedLeft
		-attachForm $textNF "left" 5

		-attachControl $btCreateLocal  "top" 0 $textNF
		-attachForm $btCreateLocal "left" 5

		-attachControl $btCreateShare  "top" 0 $textNF
		-attachControl $btCreateShare "left" 0 $btCreateLocal


	//button preset


		-attachControl $textNF2  "top" 0 $txtFieldSavedLeft
		-attachControl $textNF2 "left" 0 $txtFieldSavedLeft

		-attachControl $btSave  "top" 0 $textNF
		-attachControl $btSave "left" 5 $txtFieldSavedLeft

		-attachControl $btApply  "top" 0 $textNF
		-attachControl $btApply "left" 0 $btSave






	-attachControl $sep2  "top" 5 $btApply
	-attachForm $sep2 "left" 5
//light in scene

	-attachControl $text2  "top" 5 $sep2
	-attachForm $text2 "left" 5

	-attachControl $txtField  "top" 5 $text2
	-attachForm $txtField "left" 5

	s100PCUIFLLightM ;

	tabLayout -e -tabLabel

	s100PCUIFLLightM "Lights"

	   s100PCUITL;
	  s100PCUIRefreshLight;
	  s100PCUIRefreshScroll(100) ;

}
global proc s100PCUIFormRM(int $width)
{

	formLayout -p s100PCUITL s100PCUIFLRendM;



	$buttonSubmit = `button  -p s100PCUIFLRendM  -w $width -l "submit to Deadline" -c SubmitJobToDeadline`;

	$buttonSubmit2 = `button  -p s100PCUIFLRendM  -en 0  -w $width -l "submit anywhere else" -c SubmitJobToDeadline`;


	formLayout -e


	-attachForm $buttonSubmit  "top" 5
	-attachForm $buttonSubmit "left" 5
	-attachControl $buttonSubmit2  "top" 5 $buttonSubmit
	-attachForm $buttonSubmit2 "left" 5

	s100PCUIFLRendM ;

	tabLayout -e -tabLabel

	s100PCUIFLRendM "Rendering"

	   s100PCUITL;
}
global proc s100PCUIFormSM(int $width)
{
int $values[] = `s100PCZDepthGetValues`;
	formLayout -p s100PCUITL s100PCUIFLRendS;


	$text = `text -l "zdepth :" `;
	$textMin = `text -l "min :" `;
 	$floMin = `floatField -changeCommand s100PCZDepthSetValueMin  s100PCFLMINVALUEZ` ;
	$textMax = `text -l "max :" `;

 	$floMax = `floatField -changeCommand s100PCZDepthSetValueMax  s100PCFLMAXVALUEZ` ;







	formLayout -e


	-attachForm $text  "top" 5
	-attachForm $text "left" 5

	-attachControl $textMin  "top" 5 $text
	-attachForm $textMin "left" 5
	-attachControl $floMin  "top" 5 $text
	-attachControl $floMin "left" 5 $textMin

	-attachControl $textMax  "top" 5 $text
	-attachControl $textMax "left" 5 $floMin
	-attachControl $floMax  "top" 5 $text
	-attachControl $floMax "left" 5 $textMax

	s100PCUIFLRendS ;

	tabLayout -e -tabLabel

	s100PCUIFLRendS "Shaders"

	   s100PCUITL;

	s100PCRefreshShaderL;
}
global proc s100PCUIFormCM(int $width)
{

	formLayout -p s100PCUITL s100PCUIFLCompM;



	$text = `text -l "precomp file :" ` ;
	$item = `optionMenu  -p s100PCUIFLCompM   s100PCCompoptionMenuScene`;

	$buttonSubmit = `button  -p s100PCUIFLCompM  -w $width -l "generate Precomp from file" -c s100createPrecompAndLaunchFromLightToolsBox`;

	$buttonSubmit2 = `button  -p s100PCUIFLCompM  -w $width -l "generate Precomp from file and submit" -c s100createPrecompAndLaunchCheckFromLightToolsBox`;





	formLayout -e

	-attachForm $text  "top" 5
	-attachForm $text "left" 5
	-attachControl $item  "top" 5 $text
	-attachForm $item "left" 5
	-attachControl $buttonSubmit  "top" 5 $item
	-attachForm $buttonSubmit "left" 5
	-attachControl $buttonSubmit2  "top" 5 $buttonSubmit
	-attachForm $buttonSubmit2 "left" 5

	s100PCUIFLCompM ;

	tabLayout -e -tabLabel

	s100PCUIFLCompM "Compositing"

	   s100PCUITL;

s100PCPrecomprefreshComp ;
}



global proc s100PCPrecomprefreshComp()
{
string $files[] = `s100PCreturnFILEComp ` ;


string $item[] = `optionMenu -q -itemListLong s100PCCompoptionMenuScene`;


	for($tmp in $item)
	{
		deleteUI -menuItem  $tmp ;
    }



	for($tmp in $files)
	{
		menuItem -p s100PCCompoptionMenuScene -l $tmp ;
    }

}

global proc s100PCRefreshShaderL()
{
int $values[] = `s100PCZDepthGetValues`;

floatField -e -v $values[0]  s100PCFLMINVALUEZ ;
floatField -e -v $values[1]  s100PCFLMAXVALUEZ ;



}


global proc s100refreshFileForOP()
{
string $files[] = `s100PCreturnFILERender`;

string $item[] = `optionMenu -q -itemListLong s100PCoptionMenuScene`;


	for($tmp in $item)
	{
		deleteUI -menuItem  $tmp ;
    }



	for($tmp in $files)
	{
		menuItem -p s100PCoptionMenuScene -l $tmp ;
    }

}


global proc s100PCSwitchLayer()
{

	$txtField = `textScrollList -q -selectItem  s100PCUIbtTxtField `;
	if( $txtField[0] !=  "------------------" )
			editRenderLayerGlobals -currentRenderLayer $txtField[0] ;

}


global proc s100PCSwitchLight()
{

	$txtField = `textScrollList -q -selectItem  s100PCUIRMlightTF `;
	if( $txtField[0] !=  "------------------" )
	{
		if(`objExists  $txtField[0] `)
		{
		$shape = `listRelatives -shapes  $txtField[0]` ;
			if(size($shape) >0 )
			{
			$p = `listRelatives -p $shape ` ;
			select  $p;

            }

        }

    }

}
global proc s100PCUIRefreshPass()
{
string $passes[] = `s100PCgetAllPasses`;
textScrollList -e -removeAll   s100PCUIbtTxtField ;
textScrollList -e -append "defaultRenderLayer"   s100PCUIbtTxtField ;
textScrollList -e -append "------------------"   s100PCUIbtTxtField ;


	for($tmp in $passes)
	{
	textScrollList -e -append $tmp   s100PCUIbtTxtField ;

    }



}
global proc s100PCUIRefreshLight()
{
string $passes[] = `s100PCgetAllLights`;
textScrollList -e -removeAll   s100PCUIRMlightTF ;


	for($tmp in $passes)
	{
	textScrollList -e -append $tmp   s100PCUIRMlightTF ;

    }



}
global proc s100PCUIRefreshTextScroll()
{
$en = 0;
	if(size(`textScrollList -q -selectItem   s100PCUIbtTxtField `) > 0)
	{
	$en = 1;
	}
	button -e -en $en  s100PCUIbtRemSelect;
	button -e -en $en  s100PCUIbtUpdateSelect;

}
global proc s100PCUIRefreshTextScrolllight()
{
$en = 0;
$temp = `textScrollList -q -selectItem   s100PCUIRMlightTFSavedLeft ` ;
	if(size($temp) > 0)
	{
		if($temp[0] != "---Share---" && $temp[0] != "---Local---" )
			$en = 1;
    }



button -e   -en $en  s100PCUIFLLightMBSL;
//button -e  -en $en   s100PCUIFLLightMBSS;
button -e   -en 0  s100PCUIFLLightMBAS;




}

global proc s100PCUIRefreshTextScrolllightS()
{
$en = 0;
$temp = `textScrollList -q -selectItem   s100PCUIRMlightTFSavedRight ` ;
	if(size($temp) > 0)
	{
			$en = 1;
    }



button -e   -en $en  s100PCUIFLLightMBAS;
//button -e  -en $en   s100PCUIFLLightMBSS;




}


global proc s100PCrefreshPresetWhenSelected()
{

int $ind[]   = `textScrollList -q   -selectIndexedItem   s100PCUIRMlightTFSavedLeft`;
string $nameAll[]  = `textScrollList -q  -allItems  s100PCUIRMlightTFSavedLeft`;

string $class[] = `s100PCgetClassForSelection($ind)`;
	for($i = 0 ; $i < size($ind) ; $i++)
	{
	string $path ;
	$index = $ind[$i] -1  ;
 		if($class[$i] == "local")
		{
		$path = `s100PCSPgetLocalPath`;

        }else{
		$path = `s100PCSPgetSharePath`;
        }
	$path =($path + $nameAll[$index] +"/" );

	string $return[] = `s1KeepOnlyFolderWhitoutFullPath($path) ` ;

	textScrollList -e -removeAll  s100PCUIRMlightTFSavedRight;


		for($tmp in $return)
		{
			textScrollList -e -append $tmp  s100PCUIRMlightTFSavedRight;
        }


    }
s100PCUIRefreshTextScrolllight ;
}

global proc  string[] s100PClistShaderZDepth()
{
string $var[] = `ls  "*.camera_near_clipping_plane" `;
string $return[] ;
$j = 0 ;
		for($i = 0 ; $i < size($var) ; $i ++)
		{
		string $arr[] = stringToStringArray($var[$i] ,".") ;
			if(`attributeExists "camera_far_clipping_plane" $arr[0]`)
			{
			$return[$j] = $arr[0];
			$j++;
            }

        }
return $return ;
}

global proc int[] s100PCZDepthGetValues()
{
string $sel[] = `s100PClistShaderZDepth`;
int $return[] ;
	if(size($sel) > 0)
	{
	$return[0]	 = `getAttr ($sel[0] +".camera_near_clipping_plane")`;
	$return[1]	 = `getAttr ($sel[0] +".camera_far_clipping_plane")`;

    }else{
	$return[0] = 0 ;
	$return[1] = 10000;
    }

return $return ;
}


global proc s100PCZDepthSetValueMin()
{
float $v = `floatField -q -v  s100PCFLMINVALUEZ `;

	for($tmp in `s100PClistShaderZDepth`)
	{
	setAttr ($tmp +".camera_near_clipping_plane") $v ;
    }

}


global proc s100PCZDepthSetValueMax()
{
float $v = `floatField -q -v  s100PCFLMAXVALUEZ `;

	for($tmp in `s100PClistShaderZDepth`)
	{
	setAttr ($tmp +".camera_far_clipping_plane") $v ;
    }

}

/*
s100PCUI;



	tabLayout -e -selectTab

	s100PCUIFLRendS

	   s100PCUITL;