global proc s100VRAddmultiAmplitudeOnRig()
{
$worldAnimGrp = "world_anim_grp";


if (`objExists $worldAnimGrp`)
	{
	string $list[];
	$list = `listRelatives -ad -type "transform" "*_wGrp" $worldAnimGrp` ;
	//$nList = `s100reverseArray($list)` ;

	//print $list ;

	string $firstObj[] ;
		clear $firstObj ;
	$j = 0 ;
		for ($i = 0 ; $i <size(	$list ) ; $i++)
		{
  			if (`gmatch $list[$i] "*01_wGrp"`)
			{
			$firstObj[$j] = $list[$i] ;
			//print ("\n" +$firstObj[$j] +"\n")  ;

			$j++;
			}
        }
	// print $firstObj ;
		for($i = 0 ; $i < size($firstObj) ; $i++)
		{
 		creaAttrFloat($firstObj[$i],"mutliAllChaine", 0.001, 10, 1);
		string $listAD[] = sort(`listRelatives -allDescendents $firstObj[$i]`);
		$listAD = stringArrayCatenate({$firstObj[$i]} , $listAD ) ;

  			for($j = 0  ; $j < size($listAD ) ; $j++)
			{
			//print $listAD[$i] ;

			$conn = `listConnections -skipConversionNodes 1  -type multiplyDivide -s 1 -d 0 $listAD[$j] ` ;
			string $sConn[] = stringArrayRemoveDuplicates($conn);
   				if($sConn[0] == ($listAD[$j] + "_ampAdd_md"))
				{

                }else{
				$gName = $listAD[$j] +  "_ampAdd_md" ;
				$n = `createNode -n $gName multiplyDivide `;
				//connectAttr -f ($sConn[0] +".output") ($n + ".input1" ) ;


    			connectAttr -f ($sConn[0] + ".outputX")  ($n + ".input1X" ) ;
				connectAttr -f ($sConn[0] + ".outputY")  ($n + ".input1Y" ) ;
				connectAttr -f ($sConn[0] + ".outputZ")  ($n + ".input1Z" ) ;


    			connectAttr -f ($firstObj[$i] + ".mutliAllChaine")  ($n + ".input2X" ) ;
				connectAttr -f ($firstObj[$i] + ".mutliAllChaine")  ($n + ".input2Y" ) ;
				connectAttr -f ($firstObj[$i] + ".mutliAllChaine")  ($n + ".input2Z" ) ;

				connectAttr -f ($n  +".outputX") ($listAD[$j] + ".rx" ) ;
				connectAttr -f ($n  +".outputY") ($listAD[$j] + ".ry" ) ;
				connectAttr -f ($n  +".outputZ") ($listAD[$j] + ".rz" ) ;

                }


            }


        }







    }





}