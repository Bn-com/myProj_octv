global proc string[] s100ROSlistAllMeshInGrp()
{
string $list[] = `listRelatives -type transform -ad "s100ROSDupRef_grp"`;
string $return[] ;
$j = 0 ;
	for($i =0 ; $i < size($list) ; $i++)
	{
		if(`gmatch $list[$i] "microVegetation_msh*" `)
		{
		$return[$j] = $list[$i] ;
		$j++;
        }


    }
return $return ;
}
//$listObj =`s100ROSlistAllMeshInGrp`

global proc int s100checkIfObjectIsInsideOther(string $object, string $listObj[], float $facteur)
{
//1 is inside 0 is outside 0 is good !!!
float $pos[] = `s100ROSgetWorldPosition($object) `;

int $ch = 0 ;
	for($i = 0 ; $i < size($listObj); $i++)
	{
	print ("\n check with object " + $listObj[$i] );
	$ch = 0 ;
	$mat = `exactWorldBoundingBox $listObj[$i] ` ;
	$sxX = ($mat[4] - $mat[0] ) *2  ;

		for($i = 0 ; $i < size($mat); $i++)
		{
		$mat[$i] *= $facteur ;
		$mat[$i] *= $sxX ;
		}


		if($pos[0] > $mat[0] && $pos[0] < $mat[3])
		{
			if($pos[1] > $mat[1] && $pos[1] < $mat[4])
			{

				if($pos[2] > $mat[2] && $pos[2] < $mat[5])
				{
				$ch = 1 ;
				break ;
                }
            }

        }

    }

return $ch ;
}

global proc int s100checkIfObjectIsInsideOtherWithAllObject(string $object)
{
$list = `s100ROSlistAllMeshInGrp`;
$fact  = `floatField -q -v s100ROSRandFloatFieldColl `;

int $ch = s100checkIfObjectIsInsideOther($object,$list,$fact);
return $ch ;
}


global proc float[] s100ROSgetWorldPosition(string $obj)
{
$loc = `createNode locator` ;
$listp = `listRelatives -p $loc `;


$point = `pointConstraint $obj $listp` ;
float $get[] = `getAttr ($loc +".worldPosition")`;
delete $listp;
return $get ;
}
//$object =$obj ="pCube1"
//$facteur = 1 ;
//select $listObj[$i]