global proc s100PRCUI()
{
	if(`window -ex s100PRCaskForEPNameUI`)
		deleteUI s100PRCaskForEPNameUI;
	if(`window -ex s100PRCUI `)
		deleteUI s100PRCUI ;
	if(`window -exists s100PRCconformCurrentSceneWithUIBack`)
		deleteUI s100PRCconformCurrentSceneWithUIBack ;
	if(`window -exists s100PRCCheckIfAssetExistsIn3dBankFromACSVFileUI`)
		deleteUI s100PRCCheckIfAssetExistsIn3dBankFromACSVFileUI ;

	window    -title "Production Reader for CSV files" s100PRCUI ;

	s100PRCMenuUI;
	s100PRCFormLayout;
	window -e  -widthHeight 500 480 -sizeable 0    s100PRCUI;
	showWindow;
	s100PRCUIRefresh;
}

global proc s100PRCMenuUI()
{

	menuBarLayout s100PRCprodForReadCSVUIMLMain;
	menu -label "File";
	menuItem -c s100PRCUIopenCSVFileUI -label "open CSV";

	menu -label "Help" -helpMenu true;
			menuItem -c s100PRCUI -label "refresh";
	    menuItem -c s100PRCCheckIfAssetExistsIn3dBankFromACSVFileUI -label "Check if Assets Exists";

    setParent ..;
}

global proc s100PRCFormLayout()
{
	$with = 500 ;
	$height  = 440;
	int $heightTSL = $height - 210 ;
	int $heightTSL2 =$heightTSL - 20 ;
	$withTSL1 = ($with / 2 ) / 3;
	$withTSL = $with - 30  - ($withTSL1 *2 )  ;

	$TFW = 150 ;
	$form = `formLayout -p s100PRCUI s100PRCFormLayout `;


	$TProd = `text -l "prod :" `;
	$TFProd = `textField -w $TFW  -en 0  s100PRCFormLayoutProd`;

	$TEp = `text -l "EP :" `;
	$TFEp = `textField-w $TFW  -en 0  s100PRCFLTFEp`;

	$sep1 = `separator -w $with `;

	$safeFrameText = `text -l "Safe Frame :" `;
	$sfInt = `intField -minValue 0 -v 0 s100PRCFormLayoutProdSafeFrame`;



	$sep1b = `separator -w $with `;

	$TSq = `text -l "Sequences :" `;
	$SLSq = `textScrollList -selectCommand s100PRCUIRefreshWhenSelectSq -allowMultiSelection 1  -w $withTSL1   -h  $heightTSL s100PRCFLTSLSq `;

	$TSh  = `text -l "Shots :" `;
	$SLSh = `textScrollList -selectCommand s100PRCUIRefreshWhenSelectSh -allowMultiSelection 1 -w $withTSL1  -h  $heightTSL s100PRCFLTSLSh `;


	$TAs  = `text -l "Assets :" `;
	$SLAs = `textScrollList  -w $withTSL  -h  $heightTSL2 s100PRCFLTSLAs `;


	$TFr = `text -l "Frames :" `;
	$TFFr = `textField-w $TFW  -en 0  s100PRCFLTFFr`;


	$sep2 = `separator -w $with `;

	$BGenFolder = `button -en 0  -h 20 -w ($with -20)  -c "s100PRCaskForEPNameCheckIfEpExists(0,`textField -q -text s100PRCFormLayoutProd`, `textField -q -tx s100PRCFLTFEp`)"  -l "create Ep Folder tree and Previz Scene" s100PRCFLGenFold`;
	$sep3 = `separator -w $with `;

	$expSelect = `button  -en 0  -h 20 -w ($with -20)  -c "s100PRCaskForEPNameCheckIfEpExists(1,`textField -q -text s100PRCFormLayoutProd`, `textField -q -tx s100PRCFLTFEp`)"  -l "create Scenes  for selected sequences" s100PRCFLGenFold2`;


	$BconformCurrent = `button -en 0  -h 20 -w ($with -20)  -c s100PRCconformCurrentSceneWithUIBack  -l "conform current Scene" s100PRCFLCreateCurScene`;

	$mL = 5;
	$space1 = 10 ;
	$mT1  = 5;
	$mTF1  = 3;

	formLayout -e

		-attachForm $TProd "left" $mL
		-attachForm $TProd "top" $mT1

		-attachControl $TFProd "left" $space1 $TProd
		-attachForm $TFProd "top" $mTF1


		-attachControl $TEp "right" $space1  $TFEp
		-attachForm $TEp "top" $mT1

		-attachForm $TFEp "right" $space1
		-attachForm $TFEp "top" $mTF1

		-attachControl $sep1 "top" $mT1  $TFEp

		-attachControl $safeFrameText "top" ($mT1 +5)  $sep1
		-attachForm $safeFrameText "left" $mT1


		-attachControl $sfInt "top" $mT1  $sep1
		-attachControl $sfInt "left" $mT1  $safeFrameText


		-attachControl $sep1b "top" $mT1  $safeFrameText

	//textScrollList

		-attachControl $TSq "top"  $mT1 $sep1b
		-attachForm $TSq "left" $mT1

		-attachControl $SLSq "top"  $mT1 $TSq
		-attachForm $SLSq "left" $mT1

		-attachControl $TSh "top"  $mT1 $sep1b
		-attachControl $TSh "left" $mT1 $SLSq

		-attachControl $SLSh "top"  $mT1 $TSq
		-attachControl $SLSh "left" $mT1 $SLSq

		-attachControl $TAs "top"  $mT1 $sep1b
		-attachControl $TAs "left" $mT1 $SLSh

		-attachControl $SLAs "top"  $mT1 $TAs
		-attachControl $SLAs "left" $mT1 $SLSh
		-attachForm $SLAs "right"  5
	//frames
		-attachControl $TFFr "top"  $mTF1 $SLAs
		-attachForm  $TFFr "right" $mT1

		-attachControl $TFr "top"  $mT1 $SLAs
		-attachControl $TFr "right"  $mT1 $TFFr

		-attachControl $sep2 "top" $mT1  $SLSq

	//Button
		-attachControl $BGenFolder "top" $mT1  $sep2
		-attachControl $expSelect "top" $mT1  $BGenFolder

		-attachControl $sep3 "top" $mT1  $expSelect
		-attachControl $BconformCurrent "top" $mT1  $sep3


	s100PRCFormLayout;
}


global proc s100PRCUIRefresh()
{
	if(size(`textScrollList -q -selectItem s100PRCFLTSLSh `) == 0 )
	textField -e -text " "  s100PRCFLTFFr;

	$with = ` window -q -width   s100PRCUI`;

	string $sqSel[] = `textScrollList -q -selectItem s100PRCFLTSLSq `;
	string $scSel[] = `textScrollList -q -selectItem s100PRCFLTSLSh `;


	$btCreateScene = 0 ;

	int $btEn ;
		if( `textField -q -text   s100PRCFormLayoutProd` != "")
		{
		$btEn = 1 ;
			if(size($sqSel) > 0 )
			{
			$btCreateScene = 1 ;
			}

			if(size($scSel) > 0 )
			{
				$btCreateScene = 0 ;

			}

		}else{
		$btEn = 0 ;

		}

	button -e -en $btEn s100PRCFLGenFold;
	button -e -en $btCreateScene s100PRCFLGenFold2;

	button -e -en $btEn s100PRCFLCreateCurScene;
}

// open "csv" file:
// ex: string $files = "Y:/005_EPISODES/Ep015_PowderPower/MA_Ep015_PowderPower_TBDL_ForLayout.csv"
//
global proc s100PRCUIopenCSVFileUI()
{
	//string $multipleFilters = "CSV files (*.csv);;All Files (*.*)";
	//fileBrowserDialog -ds 1 -m 0 -fc "s100PRCUIopenCSVFileCommand" -fl $multipleFilters -ft "csv" -an "Import" -om "Import";
	string $file = `fileDialog -m 0 -dm "*.csv" `;
	s100PRCUIopenCSVFileCommand( $file, "Best Guess" );
}

// opening and treating CSV file :
//
global proc s100PRCUIopenCSVFileCommand( string $files, string $fileType )
{
	global string $s100PRCfiles ;
	$s100PRCfiles = $files;

	//print ("// $files : "+$files+"\n // filetype : '"+$fileType+"'\n");
	//error "stop to debug";

	if(`s100PRCreadCSVandGetIfConform( $files)`) // starts with "TBDL"
	{
		// update Ui display according to list of sequence/shots/assets in csv file:
		s100PRCUIPutProd($files);
		s100PRCUIPutEp($files);
		s100PRCUIPutSq($files);
		s100PRCUIPutSh($files);
		s100PRCUIPutAssetAllSc($files);
		s100PRCUIRefresh;

		// force display/setAttr of best/fastest attributes of assets in scene
		float $frameToKeyOn = 100;
        int $rekey = false;
		s100FMattrs_setBestPrevizAttrs( $frameToKeyOn,  $rekey );

    }else{
	warning "file is not a TBDL" ;
    }
}

// returns prod name (ex: "Maya") and puts it in UI
global proc s100PRCUIPutProd(string $files)
{
	string $prod = `s100PRCreadCSVandGetProdFullName($files) `;
	$TFProd = `textField -e -text $prod  s100PRCFormLayoutProd`;
}

// returns episode name (ex : "015") and puts it in UI
global proc s100PRCUIPutEp(string $files)
{
	string $ep = `s100PRCreadCSVandGetEP($files)`;
	string $pad = padNumber($ep,3) ;
	$TFEp = `textField -e -text $pad   s100PRCFLTFEp`;
}

// returns shot list names (ex : "001A 001B 001C 001D 001F 001G 001H 001I 002A 003A 003B") and puts them in UI
global proc s100PRCUIPutSq(string $files)
{
	//$file
	string $sqs[]   = `s100PRCgetAllSequencesFromAFile($files) `;

	textScrollList -e -removeAll  s100PRCFLTSLSq ;

	for($i = 0 ; $i < size($sqs) ; $i++)
	{
	textScrollList -e -append $sqs[$i]  s100PRCFLTSLSq ;
    }
}

// returns sequence list names (ex : "001A 001B 001C 001D 001F 001G 001H 001I 002A 003A 003B") and puts them in UI
global proc s100PRCUIPutSh(string $files)
{
	string $sq[]   = `s100PRCgetAllScenesFromAFile($files) `;

	textScrollList -e -removeAll  s100PRCFLTSLSh ;

	for($i = 0 ; $i < size($sq) ; $i++)
	{
	textScrollList -e -append $sq[$i]  s100PRCFLTSLSh ;
    }
}

// put asset lists in UI according to some shots :
//
global proc s100PRCUIPutAsset(string $files, string $stShot,string $endShot)
{
	/*
	$files = $s100PRCfiles ;
	*/
	$temp = s100PRCreturnAllAssetFromGivenShots($files, $stShot , $endShot);
	textScrollList -e -removeAll  s100PRCFLTSLAs ;

	for($i = 0 ; $i < size($temp) ; $i++)
	{
	textScrollList -e -append $temp[$i]  s100PRCFLTSLAs ;
    }
}

// returns shot list names (per sequence) (ex : "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1")
// and puts all asset list in UI (for all shots)
//
global proc s100PRCUIPutAssetAllSc(string $files)
{
	string $sq[]   = `s100PRCgetAllScenesFromAFile($files) `;
	$last = size($sq) - 1 ;

	s100PRCUIPutAsset( $files,  $sq[0] , $sq[$last]) ;
}

global proc s100PRCUIRefreshWhenSelectSq()
{
	global string $s100PRCfiles ;

	string $seqsSt[]  = `textScrollList -q -selectItem s100PRCFLTSLSq `;

	textScrollList -e -removeAll s100PRCFLTSLSh ;


	textScrollList -e -removeAll s100PRCFLTSLAs ;
	string $seqs[] ;
	clear $seqs ;
		for($i = 0 ; $i < size($seqsSt) ; $i++)
		{
		$seqs[$i] =$seqsSt[$i] ;
		}

	string $shots[] = s100PRCreturnShotBySequences($s100PRCfiles, $seqs);

		for($i = 0 ; $i < size($shots) ; $i++)
		{
		textScrollList -e -append $shots[$i]  s100PRCFLTSLSh ;

		}
	textField -e -text " "  s100PRCFLTFFr;

	$last = size($shots )-1;
	string $stShot =  $shots[0];
	string $endShot =  $shots[$last];
	s100PRCUIPutAsset($s100PRCfiles , $stShot , $endShot) ;

	s100PRCUIRefresh ;

}

global proc s100PRCUIRefreshWhenSelectSh()
{
	global string $s100PRCfiles ;

	string $seqsSt[]  = `textScrollList -q -selectItem s100PRCFLTSLSh `;


	textScrollList -e -removeAll s100PRCFLTSLAs ;


	$last = size($seqsSt )-1;
	string $stShot =  $seqsSt[0];
	string $endShot =  $seqsSt[$last];

	s100PRCUIPutAsset($s100PRCfiles , $stShot , $endShot) ;
	string  $time = "" ;
		if($stShot == $endShot )
		{
		$time =  s100PRCgetAllInfoFromAFileByScene($s100PRCfiles, $stShot, "Duration") ;

		}else{

		}
	textField -e -text $time  s100PRCFLTFFr;

	s100PRCUIRefresh ;
}




//s100PRCUI;


