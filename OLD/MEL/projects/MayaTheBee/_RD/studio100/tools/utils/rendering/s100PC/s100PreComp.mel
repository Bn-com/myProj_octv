
global proc s100createPrecompAndLaunchCheck()
{
	if(`checkBox -q -v   s100DeadLinePrecomp `)
	{
	s100createPrecompAndLaunch ;
    }
}

global proc s100createPrecompAndLaunchFromLightToolsBox()
{

string $opt = "s100PCCompoptionMenuScene";

string $precomp  = `s100copyAndModifyPreComp( $opt) `;
//string $qt  = `s100copyAndModifyQTComp ` ;
}

global proc s100createPrecompAndLaunchCheckFromLightToolsBox()
{
$ch = 0 ;
	if(!`window -ex DeadlineSubmitWindow`)
	{
		SubmitJobToDeadline;
		$ch = 1 ;
    }

eval("s100createPrecompAndLaunchFromLightToolsBox") ;
string $qt  = `s100copyAndModifyQTComp ` ;


string $job = s100submitNukePreCompFileAfterSubmitTheMaya({""}) ;
string $id = `s100submitNukeQTFileAfterSubmitTheMaya({$job}) `;

	if($ch )
	{
		if(`window -ex DeadlineSubmitWindow`)
		deleteUI DeadlineSubmitWindow ;

    }

print "\n compositing submited" ;
}

global proc s100createPrecompAndLaunch()
{

string $opt = "s100PCDEADoptionMenuScene";

string $precomp  = `s100copyAndModifyPreComp($opt) `;
string $qt  = `s100copyAndModifyQTComp ` ;
}

global proc s100PCsubmitAfterRendering()
{
global string $s100JobDepandancie[];
//submit precomp
string $job = s100submitNukePreCompFileAfterSubmitTheMaya($s100JobDepandancie) ;
//submit quick Time Comp
string $id = `s100submitNukeQTFileAfterSubmitTheMaya({$job}) `;
}

global proc string s100submitNukeQTFileAfterSubmitTheMaya(string $s100JobDepandancie[])
{
global string $JobNameGrp;
$sF = `getAttr "defaultRenderGlobals.startFrame" `;
$eF = `getAttr "defaultRenderGlobals.endFrame" `;
string $filename   = `textFieldGrp -q -text  $JobNameGrp` ;
$nForN =s100PCgetFileWithExt("nk") ;
$sub = substituteAllString($nForN, ".nk","_QT.nk") ;//$fileID

$chunk = ($eF - $sF) * 2 ;
string $job = s100PCSubmitPreCompForNuke($s100JobDepandancie, ("QT:"+ $filename),("Quicktime"), $sF,$eF , $chunk , $sub,"nukewithoutplug", "1");
return $job ;
}

global proc string s100submitNukePreCompFileAfterSubmitTheMaya(string $s100JobDepandancie[])
{
	global string $JobNameGrp;

$sF = `getAttr "defaultRenderGlobals.startFrame" `;
$eF = `getAttr "defaultRenderGlobals.endFrame" `;
string $filename   = `textFieldGrp -q -text  $JobNameGrp` ;
//$nForN =s100PCgetFileWithExt("nk") ;
string $path = `s100PCgetFolderPathComp`;
string  $precomp  = `optionMenu -q -value s100PCDEADoptionMenuScene`;
$nForN = $path + $precomp ;
$nForN =s100PCgetFileWithExt("nk") ;
string $tk = `s100ReturnTkName`;
$nForN = substituteAllString($nForN , ".nk" , ("_from_" + $tk +".nk")) ;


string $job = s100PCSubmitPreCompForNuke($s100JobDepandancie, ("PreComp:"+ $filename),("preCompositing"), $sF,$eF , 100 , $nForN,"nukewithplug","");
return $job ;
}

//precomp

global proc   s100copyAndModifyPreComp(string $opt)
{
$nForN =s100PCgetFileWithExt("nk") ;
string $tk = `s100ReturnTkName`;
$nForN = substituteAllString($nForN , ".nk" , ("_from_" + $tk +".nk")) ;
string $path = `s100PCgetFolderPathComp`;
string  $precomp  = `optionMenu -q -value $opt`;
string $oFile = $path + $precomp ;
//$oFile = `s100PreCompLocateCompFile` ;

$outPutPath = `s100PComGetOutputPath` ;
s100modifyComp($oFile, $nForN  ) ;


}

global proc string s100PCgetOutputPath()
{
string $pathroot = `s100PComGetOutputPath` ;
$output = s100PCgetFileWithExt("mov");
$tmp = s100PCgetFileWithExtWithOut("mov");
$output =substituteAllString($tmp ,".mov" ,"") ;


//manage output folder and name
string $arr[] = stringToStringArray($output,"/" ) ;
$last = $arr[size($arr) -1 ] ;
$sub = substituteAllString($output , $last ,"") ;
sysFile -md $sub ;
$sub +="out/" ;
sysFile -md $sub ;
//add Take
string $tk = `s100ReturnTkName`;
$sub += ("from_" +$tk +"/");
sysFile -md $sub ;

$output = $sub + $last + ("_from_" +$tk +"");
return $output ;
}

global proc string s100PCgetPathForComp()
{
$tmp = s100PCgetFileWithExtWithOut("mov");
$input =substituteAllString($tmp ,".mov" ,"") ;

$output = s100PCgetFileWithExt("mov");
$output =substituteAllString($output ,".mov" ,"") ;

$tmp = s100PCgetFileWithExtWithOut("mov");

string $pathroot =substituteAllString($tmp ,".mov" ,"") ;
$pathroot =substituteAllString($pathroot ,"out/" ,"") ;

string $toArr[] = stringToStringArray($output,"/") ;

$last =  $toArr[(size($toArr)-1)] ;
$subOut = substituteAllString($output,$last,"");

string $arr[] = stringToStringArray($output,"/") ;
int $l = size($arr) - 1;

$output = substituteAllString($output, $arr[$l] , "") ;

return $output ;


}
global proc string s100PCGetPathConformForNetwork()
{

$output = `s100PCgetPathForComp`;
$return  = s100PCmodifyPathForQTRender($output) ;

return $return ;
}

global proc s100modifyComp(string $oldComp,string $comp)
{
//$oldComp = $oFile ;
//$comp = $nForN
//system("load " + $oFile)
string $pathroot = `s100PComGetOutputPath` ;
$output = s100PCgetFileWithExt("mov");
$tmp = s100PCgetFileWithExtWithOut("mov");
$output =substituteAllString($tmp ,".mov" ,"") ;


//manage output folder and name
string $arr[] = stringToStringArray($output,"/" ) ;
$last = $arr[size($arr) -1 ] ;
$sub = substituteAllString($output , $last ,"") ;
sysFile -md $sub ;

//add Take
string $tk = `s100ReturnTkName`;
$sub += "out/" ;

	if(!`filetest -d $sub `)
		sysFile -md $sub ;
$sub += ("from_" +$tk +"/");

	if(!`filetest -d $sub `)
		sysFile -md $sub ;

//sysFile -md $sub ;

$output = `s100PCgetOutputPath`;




//frame

 string $sFS = `getAttr "defaultRenderGlobals.startFrame" `;
string $eFS = `getAttr "defaultRenderGlobals.endFrame" `;

global string $JobNameGrp;



string $filename   = `textFieldGrp -q -text  $JobNameGrp` ;



string $get = `s100converFileToString($oldComp ) `;
string $arr[]= stringToStringArray($get , "\n");

string $toCheck[] = {"startframe",
					"endframe",
					"pathroot",
					"filename",
					"outputname",
					"extension",
					"extensionZ"
					} ;


string $value[] = { $sFS,
					$eFS,
					$pathroot,
					($filename+"_"),
					$output,
					"png",
					"tif"

					} ;

int $chA[] ;




	for($i = 0 ; $i < size($arr) ; $i++)
	{

 	//$i++ ;
 	//print $arr[$i] ;



		for($j = 0 ; $j < size($toCheck) ; $j++)
		{
			if(`gmatch $arr[$i] ("*addUserKnob*" +$toCheck[$j] +"*")  `)
			{
				if(!`gmatch $arr[$i] ("* T *")  `)
				{

				print "vi" ;
				$arr[$i + 1 ] = $toCheck[$j] +" " + $value[$j] ;
				$chA[$j] = 1 ;

                }
			}

        }

		if(`gmatch $arr[$i] ("*first_frame*")  `)
		{
		$arr[$i] = "first_frame " + $sFS  ;

        }
		if(`gmatch $arr[$i] ("*last_frame*")  `)
		{
		$arr[$i] = "last_frame " + $eFS  ;
        }

    }


//print $arr ;
string $toPut = stringArrayToString($arr ,"\n") ;
s100convertStringToFile( ($comp), $toPut) ;
print $get ;


}

//QuickTime

global proc  s100copyAndModifyQTComp()
{
$nForN =s100PCgetFileWithExt("nk") ;
$sub = substituteAllString($nForN, ".nk","_QT.nk") ;


$oFile = `s100PreCompQuickTimeLocateFile` ;

s100modifyCompForQT($oFile, $sub  ) ;

}

global proc string s100PCgetSoundInScene()
{
string $var[] = `ls -type "audio"`;
string $return  ;


	for($tmp in $var)
	{
		if(`gmatch $tmp "*_sound"` && !`gmatch $tmp "*:*"`)
		{


		$return = `getAttr ($tmp +".filename") `;
		$return  = s100PCmodifyPathForQTRender($return) ;
		$return = substituteAllString($return ,".wav","");

		break ;
        }
    }
return $return ;

}

global proc s100modifyCompForQT(string $oldComp,string $comp)
{
//$oldComp = $oFile ;
//$comp = $nForN

///////////////////////
// surement a supprimer .
$tmp = s100PCgetFileWithExtWithOut("mov");
$input =substituteAllString($tmp ,".mov" ,"") ;

$output = s100PCgetFileWithExt("mov");
$output =substituteAllString($output ,".mov" ,"") ;

$tmp = s100PCgetFileWithExtWithOut("mov");

string $pathroot =substituteAllString($tmp ,".mov" ,"") ;
$pathroot =substituteAllString($pathroot ,"out/" ,"") ;

string $toArr[] = stringToStringArray($output,"/") ;

$last =  $toArr[(size($toArr)-1)] ;
$subOut = substituteAllString($output,$last,"");

$output = s100PCmodifyPathForQTRender($output) ;
string $arr[] = stringToStringArray($output,"/") ;
int $l = size($arr) - 1;

$output = substituteAllString($output, $arr[$l] , "") ;

$pathroot = $arr[$l] ;

string $sFS = `getAttr "defaultRenderGlobals.startFrame" `;
string $eFS = `getAttr "defaultRenderGlobals.endFrame" `;

string $sound;

 $sound = `s100PCgetSoundInScene` ;
 	if($sound =="")
		$sound = "nosound";
//manage input folder and name
string $arr[] = stringToStringArray($input,"/" ) ;
$last = $arr[size($arr) -1 ] ;
$sub = substituteAllString($output , $last ,"") ;

string $tk = `s100ReturnTkName`;

$pathroot += ("_from_" +$tk +"");



//add Take
string $tk = `s100ReturnTkName`;
$sub += ("from_" +$tk +"/");
//sysFile -md $sub ;


$output = $sub + $last + ("_from_" +$tk +"");

///////////////////////
//c propre
$output = `s100PCGetPathConformForNetwork`;
$input = `s100PCgetOutputPath`;

global string $JobNameGrp;
string $filename   = `textFieldGrp -q -text  $JobNameGrp` ;
string $get = `s100converFileToString($oldComp ) `;
string $arr[]= stringToStringArray($get , "\n");
string $toCheck[] = {"startframe",
					"endframe",
					"pathroot",
					"filename",
					"outputname",
					"extension",
					"extensionZ",
					"audiopath"
					} ;

string $value[] = { $sFS,
					$eFS,
					$output,
					$pathroot,
					$input,
					"png",
					"tif",
					$sound
					} ;

int $chA[] ;




	for($i = 0 ; $i < size($arr) ; $i++)
	{

 	//$i++ ;
 	//print $arr[$i] ;



		for($j = 0 ; $j < size($toCheck) ; $j++)
		{
			if(`gmatch $arr[$i] ("*addUserKnob*" +$toCheck[$j] +"*")  `)
			{
				if(!`gmatch $arr[$i] ("* T *")  `)
				{

				print "vi" ;
				$arr[$i + 1 ] = $toCheck[$j] +" " + $value[$j] ;
				$chA[$j] = 1 ;

                }
			}

        }

		if(`gmatch $arr[$i] ("*first_frame*")  `)
		{
		$arr[$i] = "first_frame " + $sFS  ;

        }
		if(`gmatch $arr[$i] ("*last_frame*")  `)
		{
		$arr[$i] = "last_frame " + $eFS  ;
        }

    }


//print $arr ;
string $toPut = stringArrayToString($arr ,"\n") ;
s100convertStringToFile( ($comp), $toPut) ;
print $get ;


}

global proc string s100PComGetOutputPath()
{
string $file = `file -q -sn `;
string $path =  `s100returnRootPathForAnShot($file)` ;
string $tk = `getAttr  defaultRenderGlobals.renderVersion `;

$path += "03_Rendering/Render_pass/" + $tk;

return $path ;
}

global proc string  s100PCgetFileWithExtWithOut(string $ext)
{
$path = `s100PCOMPgetNewNewPathFolder`;
$path += "out/" ;
sysFile -md $path ;
$cName = `s100PCGetCleanName` ;
$name = $path + $cName +"." +$ext ;
return $name ;

}

global proc string s100PCmodifyPathForQTRender(string $path)
{

//here I change the Path to avoid bug with QuickTIME, thks to apple !

//$path = $sub
$toSub = "Y:/";
$toReplace = "//studio100.grp/Animation/Projects/Maya/Prod/";
	if(!`filetest -d $toReplace`)
	{
	//tata path
	$toReplace = "//agni/Projects/MayaTheBee/Y_drive/";

    }

$sub = substituteAllString($path, $toSub, $toReplace ) ;

return $sub ;


}

global proc string  s100PCgetFileWithExt(string $ext)
{
$path = `s100PCOMPgetNewNewPathFolder`;
//$path += "out/" ;
sysFile -md $path ;
$cName = `s100PCGetCleanName` ;
$name = $path + $cName +"." +$ext ;
return $name ;

}

global proc string  s100PCGetCleanName()
{
$file = `file -q -sn -shortName  `;
$arr =stringToStringArray($file,"_" ) ;
string $r ="";
	for($i = 0 ;$i < 4 ; $i++)
	{
 	$r += $arr[$i] +"_";


    }

 $r += "Compositing_Tk00";
 return $r ;
}

global proc string  s100PCOMPgetNewNewPathFolder()
{
$file = `file -q -sn `;
$path =  `s100returnRootPathForAnShot($file)` ;
$path += "05_Compositing/Tk00/" ;
sysFile -md $path ;

return $path ;

}

global proc s100copyCompToNewPath(string $path)
{

}


//locate files :

global proc string s100PCgetFolderPathComp()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/compositingScenes/" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = 	($basePathToTools  + "studio100/reference_files/compositingScenes/" ) ;
    }
return $sub;
}

global proc string[] s100PCreturnFILEComp()
{
string $fold = `s100PCgetFolderPathComp`;
string $files[] = `getFileList -folder $fold -filespec "*.nk"`;
string $return[] ;
$j = 0 ;
	for($i = 0 ; $i < size($files) ; $i++)
	{
		if(!`gmatch $files[$i] "*QuickTime*" `)
		{
		$return[$j] = 	$files[$i]  ;
		$j++;
        }

    }



return $return;
}

global proc string s100PreCompLocateCompFile()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/compositingScenes/template_compositing_shoot.nk" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = ($basePathToTools  + "studio100/reference_files/compositing/template_compositing_shoot.nk" ) ;
    }
return $sub;

}

global proc string s100PreCompQuickTimeLocateFile()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/compositingScenes/template_imagesToQuickTime.nk" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = ($basePathToTools  + "studio100/reference_files/compositing/template_imagesToQuickTime.nk" ) ;
    }
return $sub;

}

global proc string s100PreCompNukeScriptLocateFile()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/scriptsFiles/base_precomp.py" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = ($basePathToTools  + "studio100/reference_files/scriptsFiles/base_precomp.py" ) ;
    }
return $sub;

}

global proc string s100PreCompNukeToQuickTimeScriptLocateFile()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/scriptsFiles/base_quicktime.py" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = ($basePathToTools  + "studio100/reference_files/scriptsFiles/base_quicktime.py" ) ;
    }
return $sub;

}

