global proc s100namespaceRenameUI()
{
 if(`window -ex 	s100namespaceRenameUI`)
			deleteUI s100namespaceRenameUI;

		window -title "studio 100 nameSpace Rename"  -h 550  s100namespaceRenameUI;
		columnLayout -adjustableColumn true s100namespaceRenameUICLMain;


	menuBarLayout s100namespaceRenameUIMLMain;


		menu -en 0 -label "Help" -helpMenu true;
			menuItem -en 1 -c s100namespaceRenameUI   -label "refresh";
			menuItem -en 0   -label "help";
			menuItem -en 0  -label "About...";

		setParent ..;

			window -e -h 575 -w 460 -sizeable 0  s100namespaceRenameUI;
		showWindow;
$width = 430;
$widthL = 200 ;
$widthR = 230 ;
formLayout s100namespaceRenamefL ;

$text = `text -l "nameSpaces in scene" ` ;
$scrol = `textScrollList -allowMultiSelection 1  -h 420 -w $widthL  s100VCRAutoCreateAllRefLayScrollList`;
$buttonAll = `button -width  $widthL -c s100namespaceRenameSelButProc -l "select All"` ;

$buttonSamePath = `button -width  $widthL -c s100namespaceRenameSelectSameTypeRef -l "select same referenced file"` ;

$buttonSelObj = `button -width  $widthL -c s100namespaceRenameSelObjectButProc -l "select Objects"` ;




$progress = `progressBar -w $widthR s100nameSRenProgressBar` ;
$sep1 = `separator -w $widthR `;

$txSearchTx = ` text -l "Search :" `;
$txSearch = `textField -width $widthR s100nameSRenSearch `;


$txReplaceTx = ` text -l "Replace :" `;
$txReplace = `textField -width $widthR s100nameSRenReplace `;


$btGet = `button -label "get selection first name" -w $widthR -c s100NSSRgetselectionFirstName`;

$butSR = `button -w $widthR -l "Search And Replace" -c s100namespaceRenSearchReplace `;
$sep2 = `separator -w $widthR `;


$check = `checkBox -cc s100namespaceRenameRefreshCheckBox -label "delete last part of the name after the last \"_\"" s100namespaceRenameAndNumberChck` ;

$txRenameTx = ` text -l "Rename :" `;
$txRename  = `textField -width 185 s100namespaceRenameAndNumberRename `;

$txStartTx = ` text -l "Start # :" `;
$txStart = ` intField -w 50  -minValue 0 -value 1 s100namespaceRenameAndNumberStart`;

$txPaddingTx = ` text -l "Padding :" `;
$txPadding = ` intField  -w 50 -minValue 1 -value 2 s100namespaceRenameAndNumberPadding`;

$butRAN = `button -w $widthR -l "Rename and Number" -c s100namespaceRenameAndNumber `;



	 	setParent..;



formLayout -e
	-attachForm $text "top" 5
	-attachControl $scrol "top" 5 $text
	-attachControl $buttonAll "top" 5 $scrol
	-attachControl $buttonSamePath "top" 5 $buttonAll

	-attachControl $buttonSelObj "top" 5 $buttonSamePath





	-attachForm $progress  "top" 5
	-attachControl $progress  "left" 5 $scrol



	-attachControl $sep1  "top" 5 $progress
	-attachControl $sep1  "left" 5 $scrol

//search
	-attachControl $txSearchTx  "top" 5 $sep1
	-attachControl $txSearchTx  "left" 5 $scrol

	-attachControl $txSearch  "top" 5 $txSearchTx
	-attachControl $txSearch  "left" 5 $scrol


//replace
	-attachControl $txReplaceTx  "top" 5 $txSearch
	-attachControl $txReplaceTx  "left" 5 $scrol

	-attachControl $txReplace  "top" 5 $txReplaceTx
	-attachControl $txReplace  "left" 5 $scrol


//button search replace
	-attachControl $butSR  "top" 5 $txReplace
	-attachControl $butSR  "left" 5 $scrol


//sep 2
	-attachControl $sep2  "top" 10 $butSR
	-attachControl $sep2  "left" 5 $scrol


//check box
	-attachControl $check  "top" 10 $sep2
	-attachControl $check  "left" 5 $scrol

//button get
	-attachControl $btGet  "top" 10 $check
	-attachControl $btGet  "left" 5 $scrol



//rename and number
	-attachControl $txRenameTx  "top" 10 $btGet
	-attachControl $txRenameTx  "left" 5 $scrol
	-attachControl $txRename  "top" 5 $btGet
	-attachControl $txRename  "left" 5 $txRenameTx

	-attachControl $txStartTx  "top" 5 $txRenameTx
	-attachControl $txStartTx  "left" 5 $scrol

	-attachControl $txStart  "top" 5 $txRenameTx
	-attachControl $txStart  "left" 5 $txRenameTx

	-attachControl $txPaddingTx  "top" 5 $txStart
	-attachControl $txPaddingTx  "left" 5 $scrol

	-attachControl $txPadding  "top" 5 $txStart
	-attachControl $txPadding  "left" 5 $txRenameTx

	-attachControl $butRAN  "top" 5 $txPadding
	-attachControl $butRAN  "left" 5 $scrol


 s100namespaceRenamefL ;
			window -e -h 575 -w 460 -sizeable 0  s100namespaceRenameUI;
s100namespaceRenameRefreshNameSp;
}

global proc s100namespaceRenameRefreshCheckBox()
{
textField -e -tx "" s100namespaceRenameAndNumberRename ;
int $query = `checkBox -q -v s100namespaceRenameAndNumberChck `;
$value = abs($query -1) ;


textField -e -enable $value s100namespaceRenameAndNumberRename ;

}

global proc s100NSSRgetselectionFirstName()
{
$scrolList = `textScrollList -q -selectItem  s100VCRAutoCreateAllRefLayScrollList`;
	if(size($scrolList) >0)
	{
	textField -e -text $scrolList[0] s100namespaceRenameAndNumberRename ;



    }else{
	warning "selection is empty" ;
    }

}

global proc s100namespaceRenameSelObjectButProc()
{

$scrolList = `textScrollList -q -selectItem  s100VCRAutoCreateAllRefLayScrollList`;
string $toSel[];
		if(size($scrolList) > 0 )
			{
				for($i = 0 ; $i < size($scrolList) ; $i++)
				{
				namespace -setNamespace $scrolList[$i] ;
				$tmpA = `namespaceInfo -listOnlyDependencyNodes `;
				$listM = `ls -type "transform" $tmpA`  ;
				$toSel = stringArrayCatenate($toSel, $listM) ;
				namespace -setNamespace ":" ;
				//file -e -ns $newName $selFileReal[0];


                }
				if(size($toSel) >0 )
				{

                }else{
				warning "namespace is empty";
                }
			select $toSel ;

            }else{
			warning "list is empty" ;
            }




}

global proc s100namespaceRenSearchReplace()
{
$search = `textField -q -text s100nameSRenSearch `;
$replace = `textField -q -text s100nameSRenReplace `;
$scrolList = `textScrollList -q -selectItem  s100VCRAutoCreateAllRefLayScrollList`;
int $max = size($scrolList) ;
progressBar -e -maxValue $max   s100nameSRenProgressBar ;


	if($search !="")
	{

			if(size($scrolList) > 0 )
			{
				for($i = 0 ; $i < size($scrolList) ; $i++)
				{
				progressBar -e -progress $i   s100nameSRenProgressBar ;

				$sub = substituteAllString( $scrolList[$i] , $search,$replace );
					if($sub != $scrolList[$i])
					{
					$nameSp= `namespaceInfo -listOnlyNamespaces `;
					$ch = 0;


						for($tmp in $nameSp)
						{
							if($tmp == $sub )
							{
							 $ch = 1 ;
                            }
                        }

					$ls = `ls -type "reference"`;
					$list2 = `s100findAllReferenceNode `;

					string $ref ;
					string $path ;
					int $chRef = 0 ;
						for($j = 0 ; $j < size($list2) ; $j++)
						{
						string $tmp2[] = `referenceQuery -nodes $list2[$j] `;
							if(size($tmp) > 0)
							{
							$tmpA = stringToStringArray($tmp2[0],":");
							//print $scrolList[$i]
								if(	$tmpA[0] == $scrolList[$i])
								{
								$chRef = 1;

									$ref = `referenceQuery -filename $list2[$j] `;
									file -e -ns $sub $ref;


								//print $sub ;
								break;
                                }
                            }


                        }
						//print $chRef ;

						if($chRef == 0)
						{
							if($ch == 0)
							{
							namespace -f -addNamespace $sub ;
							//referenceQuery -na
							namespace -f -moveNamespace $scrolList[$i] $sub ;
							namespace -f -removeNamespace  $scrolList[$i] ;


							}else{
							warning ("namespace " + $sub +" already exist, operation aborded") ;
							}
						}
                    }



                }
            }else{
			warning "list is empty" ;
            }









    }else{
	warning "search is empty" ;
    }
	progressBar -e -endProgress   s100nameSRenProgressBar ;

s100namespaceRenameRefreshNameSp ;
}

global proc s100namespaceRenameSelButProc()
{
int $numb = `textScrollList -q -numberOfItems  s100VCRAutoCreateAllRefLayScrollList `;
	for($i = 1 ; $i <= $numb ; $i++)
	{
	textScrollList -e -selectIndexedItem $i  s100VCRAutoCreateAllRefLayScrollList ;

    }

}

global proc string[]  s100namespaceRenameRefreshNameSp()
{
namespace -setNamespace ":" ;

$nameS2 = `namespaceInfo -lon `;
$nameS = stringArrayRemove({"UI","shared"},$nameS2 ) ;
string $nameSinR[] ;
$j = 0 ;
namespace -setNamespace ":" ;

$numb = size($nameS) ;
textScrollList -e -removeAll s100VCRAutoCreateAllRefLayScrollList ;
	for($nameStmp in $nameS)
	{
	textScrollList -e -append $nameStmp s100VCRAutoCreateAllRefLayScrollList ;

    }
return $nameS ;
}


global proc s100namespaceRenameAndNumber()
{
int $valueCh = `checkBox -cc s100namespaceRenameRefreshCheckBox -q -v  s100namespaceRenameAndNumberChck`;
int $txStartValue = ` intField -q -v  s100namespaceRenameAndNumberStart`;
int $txPaddingValue  = ` intField  -q -v  s100namespaceRenameAndNumberPadding`;
string $txRename  = `textField -q -tx  s100namespaceRenameAndNumberRename `;
string $scrolList[] = `textScrollList -q -selectItem  s100VCRAutoCreateAllRefLayScrollList`;
$max = size($scrolList)  ;

progressBar -e -maxValue $max   s100nameSRenProgressBar ;

	if($valueCh == 1 || size($txRename) > 0 )
	{
		if(size($scrolList)> 0)
		{
			for($i = 0 ; $i < size($scrolList) ; $i++)
			{
			progressBar -e -progress $i   s100nameSRenProgressBar ;

			$nameS2 = `namespaceInfo -lon `;
			string $add ;
				if($valueCh == 1)
				{
				string $arrayTmp[] = stringToStringArray( $scrolList[$i] , "_") ;
				$last = size($arrayTmp) - 1 ;
       			$sub = substituteAllString( $scrolList[$i], ("_" + $arrayTmp[$last] ) ,"");
    			$txRename = $sub ;
				$add = "_" ;
                }


			$pad = padNumber($txStartValue , $txPaddingValue ) ;
			$newName = $txRename + $add + $pad ;
			int $chExists = 1 ;


				for($tmp in $nameS2)
				{

					if($newName == $tmp)
					{
					$txStartValue++;
					$pad = padNumber($txStartValue , $txPaddingValue ) ;
					$newName = $txRename + $add + $pad ;
                    }

				}


			//print $newName ;
			$list2 = `s100findAllReferenceNode `;

			string $ref ;
			string $path ;
			int $chRef = 0 ;

				for($j = 0 ; $j < size($list2) ; $j++)
				{
				string $tmp2[] = `referenceQuery -nodes $list2[$j] `;
					if(size($tmp) > 0)
					{
					$tmpA = stringToStringArray($tmp2[0],":");
					//print $scrolList[$i]
						if(	$tmpA[0] == $scrolList[$i])
						{
						$chRef = 1;
						print "rename" ;
						$ref = `referenceQuery -filename $list2[$j] `;
						file -e -ns $newName $ref;
						break;
						}
                    }
                }

			print $chRef ;

				if( $chRef == 0)
				{
				namespace -f -addNamespace $newName ;
				namespace -f -moveNamespace $scrolList[$i] $newName ;
				namespace -f -removeNamespace  $scrolList[$i] ;
				}
			//$txStartValue++;

			}

        }else{
		warning "selection is empty" ;
        }



	}else{
	warning "check your input" ;
    }
	progressBar -e -endProgress   s100nameSRenProgressBar ;

s100namespaceRenameRefreshNameSp ;

}


global proc s100namespaceRenameSelectSameTypeRef()
{

string $scrolList[] = `textScrollList -q -selectItem  s100VCRAutoCreateAllRefLayScrollList`;
string $scrolListPath[] ;
clear $scrolListPath ;


$max = size($scrolList)  ;
progressBar -e -maxValue $max   s100nameSRenProgressBar ;

	for($i = 0 ; $i < size($scrolList) ; $i++)
	{
		$list2 = `s100findAllReferenceNode `;

			string $ref ;
			string $path ;
			int $chRef = 0 ;
			progressBar -e -progress $i   s100nameSRenProgressBar ;

				for($j = 0 ; $j < size($list2) ; $j++)
				{
				string $tmp2[] = `referenceQuery -nodes $list2[$j] `;
					if(size($tmp2) > 0)
					{
					$tmpA = stringToStringArray($tmp2[0],":");
					//print $scrolList[$i]
						if(	$tmpA[0] == $scrolList[$i])
						{
						$chRef = 1;
						$tmp  = `referenceQuery -filename $list2[$j] `;
						$tmpArr = stringToStringArray($tmp,".");
						$scrolListPath[$i]= $tmpArr[0] +".ma" ;
						break;
						}
                    }
                }

    }
	progressBar -e -endProgress   s100nameSRenProgressBar ;

string $scrolListAll[] = `textScrollList -q -allItems  s100VCRAutoCreateAllRefLayScrollList`;
string $scrolListAllReturn[] ;
$r = 0 ;

$max = size($scrolListAll)  ;
progressBar -e -maxValue $max   s100nameSRenProgressBar ;


	for($i = 0 ; $i < size($scrolListAll) ; $i++)
	{
					$list2 = `s100findAllReferenceNode `;

			progressBar -e -progress $i   s100nameSRenProgressBar ;

			string $ref ;
			string $path ;
			int $chRef = 0 ;

				for($j = 0 ; $j < size($list2) ; $j++)
				{
				string $tmp2[] = `referenceQuery -nodes $list2[$j] `;
					if(size($tmp2) > 0)
					{
					$tmpA = stringToStringArray($tmp2[0],":");
					//print $scrolList[$i]
						if(	$tmpA[0] == $scrolListAll[$i])
						{
						$chRef = 1;
						$tmp  = `referenceQuery -filename $list2[$j] `;
						$tmpArr = stringToStringArray($tmp,".");
						string $tmp2S = $tmpArr[0] +".ma" ;

							for($k = 0; $k < size($scrolListPath) ; $k++)
							{
								if($scrolListPath[$k] == $tmp2S)
								{
								$scrolListAllReturn[$r] = $scrolListAll[$i] ;
								//print ("add :" + $scrolListAllReturn[$r] );

								$r++ ;
                                }


                            }

						break;
						}
                    }
                }

    }

progressBar -e -endProgress   s100nameSRenProgressBar ;
textScrollList -e -deselectAll  s100VCRAutoCreateAllRefLayScrollList ;

	for($tmp in $scrolListAllReturn)
	{
	textScrollList -e -selectItem $tmp s100VCRAutoCreateAllRefLayScrollList ;
    }

}

//s100namespaceRenameUI;