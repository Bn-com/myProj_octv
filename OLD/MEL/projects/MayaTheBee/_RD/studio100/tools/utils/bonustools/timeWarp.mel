// Copyright (C) 1997-2006 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc timeWarp( string $what ) {
	
	//	Get a list of the selected items

	string $selected[] = `ls -sl`;

	//	Create a timeWarp curve
	
	string $timeWarp = `createNode animCurveTT -n "timeWarp"`;
	setKeyframe -t 0 -v 0 $timeWarp;
	setKeyframe -t 100 -v 100 $timeWarp;

	switch( $what) {
	case "all":
		
		//	Get a list of all animCurves of type T? in
		//	the scene for warping

		string $animCurves[] = `ls -type animCurveTL
			-type animCurveTA -type animCurveTU`;

		for( $animCurve in $animCurves ) {
			connectAttr -f ( $timeWarp + ".output" ) ( $animCurve + ".input" );
		}
		break;

	case "below":
		
		//	Save the current selection

		string $currentSelection[] = `ls -sl`;

		//	Make sure everything below is selected

		select -hi `ls -sl`;

	case "selected":
		
		//	Get a list of all animCurves attached to the
		//	selected objects.

		if( `size $selected` == 0 ) {
			delete $timeWarp;
			error( "Nothing selected..." );
			return;
		}

		for( $item in $selected ) {
			
			//	Get a list of all animCurves attached to
			//	the attrs of the selected objects

			string $connections[] = `listConnections $item`;

			for( $conn in $connections ) {
				
				//	Attach the output of the timeWarp to
				//	the input of this animCurve

				string $type = `nodeType $conn`;

				if( $type == "animCurveTL" ||
					$type == "animCurveTA" ||
					$type == "animCurveTU" ) {
					connectAttr -f ( $timeWarp + ".output") ($conn + ".input" );
				}
			}
		}
	}
	if( $what == "below" ) {
		
		//	Restore the old selection

		select $currentSelection;
	}
}
				

		

