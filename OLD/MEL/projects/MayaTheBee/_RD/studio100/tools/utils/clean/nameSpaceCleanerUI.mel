global proc nscNameSpaceCleanerUI()
{
	 if(`window -ex nameSpaceCleanerUI`)
		deleteUI nameSpaceCleanerUI ;

	window -title "nameSpace Cleaner"  -h 400  nameSpaceCleanerUI;
	columnLayout  -adj 1 nameSpaceCleanerColL;
	button -l "refresh" -ann "lists all namespaces that are NOT related to references" -c nscRefreshNameSp nameSpaceCleanerRefreshBut ;
	textScrollList -allowMultiSelection 1 -h 300 nameSpaceCleanerTScrol;

	button -l "remove" -ann "remove namespace and then rename what's inside, if any" -c nscDeleteNameSpace nameSpaceCleanerRemoveBut ;
	button -l "remove and delete all inside" -ann "remove namespace and then DELETE what's inside, if any" -c nscDeleteNameSpaceAndAllInsideConf nameSpaceCleanerRemoveAndDelBut ;

	nscRefreshNameSp ;
	window -e -rtf 1 nameSpaceCleanerUI;
	window -e -width 200 -h 400 nameSpaceCleanerUI;
	showWindow;
}

global proc  OLDnscRefreshNameSp()
{
	namespace -setNamespace ":" ;

	$nameS = `namespaceInfo -lon `;
	$nameS = stringArrayRemove({"UI","shared"},$nameS ) ;
	string $nameSinR[] ;
	$j = 0 ;
	namespace -setNamespace ":" ;
	for($i = 0 ; $i < size($nameS) ; $i++)
	{
		namespace -setNamespace $nameS[$i] ;
		$ntmp = `namespaceInfo -listOnlyDependencyNodes  ` ;
		if(size($ntmp) > 0 )
		{
			$charIsNode[$i] = `referenceQuery -isNodeReferenced $ntmp[0]`;
			if(	$charIsNode[$i] ==1 )
			{
				$nameSinR[$j] =  $nameS[$i] ;
				$j++ ;
			}
        }
		namespace -setNamespace ":" ;
    }

	$nameS = stringArrayRemove($nameSinR,$nameS ) ;
	$numb = size($nameS) ;
	textScrollList -e -removeAll nameSpaceCleanerTScrol ;
	for($nameStmp in $nameS)
	{
		textScrollList -e -append $nameStmp nameSpaceCleanerTScrol ;
    }
}

// QA retake :
// lists all namespaces, and keep only those that are empty of reference nodes to print into UI
//
global proc  nscRefreshNameSp()
{
	namespace -setNamespace ":" ;
	$nameS = `namespaceInfo -lon `;
	$nameS = stringArrayRemove({"UI","shared"},$nameS ) ;
	string $nameSinR[] ;

	for($i = 0 ; $i < size($nameS) ; $i++)
	{
		namespace -setNamespace $nameS[$i] ;
		$ntmp = `namespaceInfo -dagPath -listOnlyDependencyNodes  ` ;
		string $RNs[] = `ls -type "reference" $ntmp`;
		if(size($ntmp) > 0 )
		{
			for ($node in $ntmp)
			{
				$charIsNode[$i] = `referenceQuery -isNodeReferenced $node`;
				// if current node found in namespace is referenced : this namespace is not empty
				if(	$charIsNode[$i] )
				{
					$nameSinR[size($nameSinR)] =  $nameS[$i] ;
					print ("// namespace '"+$nameS[$i]+"' at least has a reference node (found '"+$node+"') - skipped.\n");
					break;
				}
				print ("// namespace '"+$nameS[$i]+"' seems full of NON-referenced objects");
            }
        }
		else
		{
			print ("// namespace '"+$nameS[$i]+"' seems empty");
			$nameS[$i] = ($nameS[$i] + " (empty)");
        }

		namespace -setNamespace ":" ;
    }

	$nameS = stringArrayRemove($nameSinR,$nameS ) ;
	//$numb = size($nameS) ;
	textScrollList -e -removeAll nameSpaceCleanerTScrol ;
	for($nameStmp in $nameS)
	{
		textScrollList -e -append $nameStmp nameSpaceCleanerTScrol ;
    }
}


global proc nscDeleteNameSpace()
{
	string $nameStoD[] = `textScrollList -q -selectItem  nameSpaceCleanerTScrol`;
	if(size($nameStoD) > 0)
	{

		$test = `confirmDialog -title "remove and rename All inside NameSpace "
			-message  ("That will rename all objects found inside selected namespaces.\n Are you OK with that?" )
			-button "Yes" -button "No" -defaultButton "Yes"
			-cancelButton "No" -dismissString "No"`;

		if ( $test == "Yes"){
			s100DeleteNameSpace($nameStoD) ;}
    }
	else
		warning "select an item !" ;

	nscRefreshNameSp ;
}


global proc nscDeleteNameSpaceAndAllInsideConf()
{
	string $nameStoD[] =  `textScrollList -q -selectItem  nameSpaceCleanerTScrol`;
	if(size($nameStoD) > 0)
	{
		$test = `confirmDialog -title "remove and delete All inside NameSpace "
			-message  ("That will DELETE all objects found inside selected namespaces.\n Are you OK with that?" )
			-button "Yes" -button "No" -defaultButton "Yes"
			-cancelButton "No" -dismissString "No"`;

		if ( $test == "Yes"){
			s100DeleteNameSpaceAndAllInside($nameStoD) ;}
    }
	else
		warning "select an item !" ;

	nscRefreshNameSp ;
}




//nscNameSpaceCleanerUI;