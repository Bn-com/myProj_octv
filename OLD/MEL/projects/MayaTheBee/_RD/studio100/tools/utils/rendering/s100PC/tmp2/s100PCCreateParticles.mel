
global proc string s100PCgetFolderPathForParticle()
{
global string $basePathToTools;
global string $currentProdBank_path ;
//print $currentProdBank_path ;
string $path = ($currentProdBank_path  + "_commons/baseFiles/particles/scenebase_particles.ma" );
string $sub = substituteAllString($path , "//" ,"/" ) ;
string $sub = substituteAllString($sub , ";" ,"" ) ;
	if(! `filetest -e $sub `)
	{
	print ("\nWARNING :  No Base light scenes in these prod use the one in the RD folder\n" ) ;
	$sub = 	($basePathToTools  + "studio100/reference_files/renderscene/" ) ;
    }
return $sub;
}


global proc  s100PCimportParticle(string $camera )
{
//$camera = "camera_cam"

editRenderLayerGlobals  -currentRenderLayer "defaultRenderLayer";

file  -i -loadReferenceDepth all  -type "mayaAscii" -renamingPrefix "clashNameParticles" -options "v=0"  -pr   `s100PCgetFolderPathForParticle`  ;


	if(`objExists "boxEmitterForAmbianceParticle_loc"`&& `objExists $camera`)
	{
	createRenderLayer -name "particlesPass" -number 1 -noRecurse ;

	editRenderLayerMembers -noRecurse particlesPass AmbianceParticle_part;

	$par = `parentConstraint -skipRotate "x"-skipRotate  "y"-skipRotate  "z" $camera "	boxEmitterForAmbianceParticle_loc"` ;
	delete $par ;

    }


}



global proc s100PCbakeParticle()
{

	if(`objExists "AmbianceParticle_part"`)
	{
	print ("baking particles") ;
	particle -e -deleteCache AmbianceParticle_partShape;
		if(`objExists "dynGlobals1"`)
		setAttr "dynGlobals1.useParticleDiskCache" 0;

	setAttr "AmbianceParticle_partShape.startFrame" -150;
	select "AmbianceParticle_part" ;
	dynExport -path "ds" -f cache -mnf -150 -mxf `playbackOptions -q -maxTime ` -oup 0 -all 0;

    }

}