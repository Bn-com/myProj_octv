
global proc s100VRCreateAE()
{
$worldAnimGrp = "world_anim_grp";


if (`objExists $worldAnimGrp`)
	{
	select $worldAnimGrp ;
	string $list[];
	$list = `listRelatives -ad -type "transform" "*_wGrp" $worldAnimGrp` ;
	//$nList = `s100reverseArray($list)` ;

	//print $list ;

	string $firstObj[] ;
		clear $firstObj ;
	$j = 0 ;
		for ($i = 0 ; $i <size(	$list ) ; $i++)
		{
  			if (`gmatch $list[$i] "*01_wGrp"`)
			{
			$firstObj[$j] = $list[$i] ;
			//print ("\n" +$firstObj[$j] +"\n")  ;

			$j++;
			}
        }
	// print $firstObj ;
		for($i = 0 ; $i <size(	$firstObj ) ; $i ++ )
		{
		//print $firstObj[$i] ;
		$tmpName = substituteAllString($firstObj[$i],"_01_wGrp" ,"") ;
		$allChildren = `ls ($tmpName + "*_wGrp") ` ;
		//print $allChildren

			for ($j = 0 ; $j <  size($allChildren ) ; $j++)
			{
				if(`objExists ($allChildren[$j] + "_rotWorldCtrl_md")`)
				{
				}else{
				S100VRcreateNodeForAtmosphereEffect($allChildren[$j],$firstObj[$i], $j, 3) ;
                }
            }

        }




    }else{
	warning ("no "+ $worldAnimGrp +" in scene");
    }

	s100rebuiltFactLate ;


}

//$name = "VRAE_main_ctrl";
//$nameScriptNode = "VRAE_main_scN";

global proc s100VMcreateAttributControlAE()
{
s100createAttributControlAE("VMAE_main_ctrl","VMAE_main_scN",1,"s100VMUIAELayoutPB","s100VMUIAELayoutPBsmall");
s100VMUI ;

tabLayout -e -selectTab s100VMATEffect s100VMUITLMain;
}

global proc s100VRcreateAttributControlAE()
{
s100createAttributControlAE("VRAE_main_ctrl","VRAE_main_scN",0,"s100VRUIAELayoutPB","s100VRUIAELayoutPBsmall");

s100VRUI ;

tabLayout -edit -selectTab s100VRATEffect s100VRUITLMain ;
s100VRUIAELayoutRefresh ;
}

global proc s100createAttributControlAE(string $name,string $nameScriptNode,int $ref,string $progressB1,string $progressB2)
{
//create and connect Attr for main controller
//have to by modify to be able to reExecute it without problem
//$progressB1 = "s100VMUIAELayoutPB" ;
//$ctrl = "VRAE_main_ctrl";
progressBar -e -endProgress  $progressB1;
progressBar -e -maxValue 8  $progressB1;

$ctrl = s100CreateMainCtrlAE($name);

$scn = s100VcreateVMAENode($nameScriptNode);

s100VAEstepMainAdd($progressB1) ;

s100VRcreateAmplitudeMainCtrl($nameScriptNode,$ref) ;

s100VAEstepMainAdd($progressB1) ;

s100VRcreateAnimCurvWorld($nameScriptNode, $ref)  ;

s100VAEstepMainAdd($progressB1) ;

s100VRcreateDrivKeyCtrl($nameScriptNode,$ref,$progressB2) ;

s100VAEstepMainAdd($progressB1) ;
//print "\nok\n";

s100VRcreateDrivKeyAdd($nameScriptNode,$ref,$progressB2) ;
s100VAEstepMainAdd($progressB1) ;

s100VRAEcreateOverLapByLocation($name,$ref,$progressB2) ;

s100VAEstepMainAdd($progressB1) ;


//print "\nok\n";

s100VAEcreateExpressionBetweenCtrlAndScn($ctrl , $scn) ;
s100VAEstepMainAdd($progressB1) ;

cleanUnit2TimeConv ;
s100VAEstepMainAdd($progressB1) ;
progressBar -e -endProgress  $progressB1;

}

global proc s100VAEstepMainAdd(string $progressB1)
{
$query  = `progressBar -q -progress $progressB1` ;
 $query++ ;
 progressBar -e -progress $query $progressB1 ;
}

global proc string s100VAEcreateExpressionBetweenCtrlAndScn(string $ctrl,string $scn )
{
$exp = ( $scn +".frequence = " + $ctrl +".frequence;\r\n");
$exp += ( $scn +".amplitude = " + $ctrl +".amplitude;\r\n");
$exp += ( $scn +".wingsRot = " + $ctrl +".wingsRot;\r\n");
$exp += ( $scn +".rot = " + $ctrl +".ry;\r\n");

$name = ($ctrl + "_exp") ;
	if(`objExists $name`)
		delete $name ;

expression -n $name -s $exp  -o "" -ae 1 -uc all ;

return $name;
}

global proc string s100VcreateVMAENode(string $nameScriptNode)
{
//
	if(`objExists $nameScriptNode`)
	{
	s100VAEcreateAttr($nameScriptNode) ;

    }else{
	createNode -n $nameScriptNode script ;
	s100VAEcreateAttr($nameScriptNode) ;
    }
return $nameScriptNode ;
}

global proc string s100CreateMainCtrlAE(string $name)
{
string $return ;
$var = `ls -sl`;
	if(`objExists $name`)
	{
	s100VAEcreateAttr($name);
	print ("\n" + $name + "already exists" ) ;
	$return = $name;
	}else{
	$tmp = `curve -d 1 -p 0 0 -1.32 -p -0.99 0 0 -p -0.33 0 0 -p -0.33 0 0.99 -p 0.33 0 0.99 -p 0.33 0 0 -p 0.99 0 0 -p 0 0 -1.32 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n $name ` ;
	select ($tmp +".cv[*]") ;
	$cls = `newCluster " -envelope 1"`;
	rotate -y 90 ;
	scale -r -p 0cm 0cm -0.165cm 20.359251 20.359251 20.359251 ;
	scale -r -p 0cm 0cm -0.165cm 0.432488 1 1 ;
	scale -r -p 0cm 0cm -0.165cm 1.970728 1.970728 1.970728 ;
	select $tmp ; DeleteHistory ;
	select -cl ;
	setAttr -k 0 -l 1  ($tmp  + ".rotateX") ;
	setAttr -k 0 -l 1  ($tmp  + ".rotateZ") ;
	setAttr -k 0 -l 1  ($tmp  + ".scaleX") ;
	setAttr -k 0 -l 1  ($tmp  + ".scaleY") ;
	setAttr -k 0 -l 1  ($tmp  + ".scaleZ") ;
	s100VAEcreateAttr($name);
	s100color("red",$tmp ) ;
	$return = $tmp ;
	}

	if(size($var) > 0)
		select $var ;

return $return ;

}

global proc s100VAEcreateAttr(string $ctrl)
{
creaAttrFloat($ctrl,("amplitude") , 0, 10, 1 ) ;
$type = `nodeType($ctrl) `;

	if($type == "script")
	{
	creaAttrFloat( $ctrl,"rot",-1080, 1080, 0 );
    }

creaAttrFloat($ctrl,("frequence") , 0, 10, 1 ) ;

creaAttrFloat($ctrl,("wingsRot" ) , 0, 10, 1 ) ;

}

global proc s100VRcreateAmplitudeMainCtrl(string $ctrl,int $ref)
{
creaAttrFloat($ctrl,("amplitude") , 0, 10, 1 ) ;

string $md = ($ctrl +"_amp_md") ;
string $mdName = ($ctrl +"_amp_md") ;
	if (`objExists $mdName `)
	{
	print ("\n" + $mdName +" exists \n") ;

	}else{

	$md = `createNode -n $md multiplyDivide`;
	connectAttr ($ctrl +".amplitude") ($md +".input1X") ;
	setAttr -l 1 ($md +".input2X") 10;
	setAttr -l 1 ($md +".operation") 2;
	setAttr -l 1 ($md +".input1X") ;

	}

	$toList = ("\"VR_*_rotWorldCtrl_md\"") ;
		if($ref == 1)
		{
		$toList += (" \"*:VR_*_rotWorldCtrl_md\" \"*:*:VR_*_rotWorldCtrl_md\"") ;
		}
	$var = eval("ls -type multiplyDivide  "+$toList);



	for($varT in $var)
	{
	$ch1 = `isConnected ($md +".outputX")  ($varT +".input2X")` ;
		if ($ch1 == 0)
			connectAttr ($md +".outputX")  ($varT +".input2X");

	$ch1 = `isConnected ($md +".outputX")  ($varT +".input2X")` ;
		if ($ch1 == 0)
	connectAttr ($md +".outputX")  ($varT +".input2Y") ;
	$ch1 = `isConnected ($md +".outputX")  ($varT +".input2Z")` ;
		if ($ch1 == 0)

	connectAttr ($md +".outputX")  ($varT +".input2Z");
	}

}

global proc string s100rebuildPrefixRef(string $nameRef)
{
//	$nameRef = $vart ;
string $return ;
$reft = stringToStringArray ($nameRef,":") ;
	for ($i = 0 ; $i < size($reft) -1 ; $i++)
	{
	$return += ($reft[$i]  +":") ;



	}

 return $return ;


}

global proc s100VRAEcreateOverLapByLocation(string $name,string $ref,string $progB)
{
float $Fact = 20 ;

	if(`objExists $name`)
	{
	$toList = ("\"VR_*_worldTime_avg\"") ;
		if($ref == 1)
		{
		$toList += (" \"*:VR_*_worldTime_avg\" \"*:*:VR_*_worldTime_avg\"") ;
		}

	$var = eval("ls -type plusMinusAverage "+$toList);

	$max = size($var) ;


 	progressBar -e -minValue ($max -1) -maxValue $max $progB;

  	progressBar -e -endProgress  $progB;

/*
		progressBar -e -step $i $max ;
		$i++;
*/

		for ($i = 0 ; $i < size($var) ; $i++)
		{
		progressBar -e -step $i $progB ;

		$reft = stringToStringArray ($var[$i] ,":") ;
		string $pref = "";
			if (size($reft) > 1)
			{
			$pref = s100rebuildPrefixRef($var[$i] ) ;
            }

		float $dist = getDistance($name , $pref +("root_ctrl") );
		//print ($dist+"\n")  ;

		float $value = $dist /  $Fact;
		setAttr ($var[$i]  +".input3D[2].input3Dx") $value ;
		setAttr ($var[$i]  +".input3D[2].input3Dy") $value ;
		setAttr ($var[$i]  +".input3D[2].input3Dz") $value ;

        }


    }else{
	warning "main control does not exists" ;
    }

  	progressBar -e -endProgress  $progB;


}

global proc string s100createWorldTimeCurve(string $name)
{
$node = `createNode -n $name animCurveTL`;

setKeyframe -v 0 -t 0 $node ;
setKeyframe -v 1 -t 1 $node ;
select -cl ;selectKey -add -k $node ;
setInfinity -pri linear -poi linear;

return $node ;
}

global proc s100VRcreateAnimCurvWorld(string $ctrl ,int $ref)
{
//$ctrl = "locator1" ;

	$toList = ("\"VR_*_worldTime_avg\"") ;
		if($ref == 1)
		{
		$toList += (" \"*:VR_*_worldTime_avg\" \"*:*:VR_*_worldTime_avg\"") ;
		}
	$var = eval("ls   "+$toList);


	$array = stringToStringArray($ctrl , "_" ) ;
	$prefix  = $array[0] ;

$node = "VRAE_world_cu" ;
$mult = ("VRAE_worldFreq_md") ;
$avg = ("worldNoise_avg") ;

creaAttrFloat($ctrl,("frequence") , 0, 10, 1 ) ;

	if (`objExists $node`)
	{

    }else{
	$node = `createNode -n $node animCurveTL`;
	$mult = `createNode -n $mult multiplyDivide`;
	$mult1 = `createNode -n $avg plusMinusAverage`;

	connectAttr ($node +".output") ($mult1 +".input3D[0].input3Dx") ;
	connectAttr ($ctrl +".frequence") ($mult +".input1X") ;

	connectAttr ($mult1 +".output3Dx") ($mult +".input2X") ;


    }



	for ($vart in $var)
	{
	$ch1 = `isConnected ($mult +".outputX") ($vart +".input3D[1].input3Dx")`;
		if ($ch1 == 0 )
			connectAttr ($mult +".outputX") ($vart +".input3D[1].input3Dx") ;

	$ch1 = `isConnected ($mult +".outputX") ($vart +".input3D[1].input3Dy")`;
		if ($ch1 == 0 )
			connectAttr ($mult +".outputX") ($vart +".input3D[1].input3Dy") ;
	$ch1 = `isConnected ($mult +".outputX") ($vart +".input3D[1].input3Dz")`;
		if ($ch1 == 0 )
			connectAttr ($mult +".outputX") ($vart +".input3D[1].input3Dz") ;
	}


setKeyframe -v 0 -t 0 $node ;
setKeyframe -v 1 -t 1 $node ;
select -cl ;selectKey -add -k $node ;
setInfinity -pri linear -poi linear;
}

global proc s100VRcreateDrivKeyCtrl(string $ctrl,int $ref,string $progB)
{
// multiplie les axes  par rapport a la rotation du ctrl

//$ref = 1 ;
$toList = ("\"VR_*_scN\"") ;
	if($ref == 1)
	{
	$toList += (" \"*:VR_*_scN\" \"*:*:VR_*_scN\"") ;
    }

$var = eval("ls "+$toList);

	$max = size($var) ;
		//	print "ici";

	progressBar -e -minValue  0 $progB;

	if($max == 0 )
		$max = 1 ;
 	progressBar -e -maxValue $max $progB;
  	progressBar -e -endProgress  $progB;



/*
		progressBar -e -step $i $max ;
		$i++;
*/

	for($i = 0 ; $i < size($var) ; $i++)
	{

	progressBar -e -step $i $progB ;

	$name = substituteAllString($var[$i] , "VR_","VRAE_") ;
	$name = substituteAllString($name , "_scN","") ;
	$pref = stringToStringArray($var[$i] ,":" ) ;
	$prefix ="";
		if (size($pref)>1)
		{
		$prefix = ($pref[0] +":");
		}


	$nodeZ = ($name + "_world_RotZ_cu") ;
	string $addZ = ($name + "_world_RotZ_avg") ;
		if (`objExists $nodeZ`)
		{

		}else{
			if(`objExists  ($prefix + "root_ctrl")`)
			{
			$node = `createNode -n $nodeZ animCurveTL`;
			$addZ = `createNode -n $addZ plusMinusAverage`;
			setAttr ($addZ +".operation") 2 ;
			connectAttr ($addZ + ".output3Dx") ($nodeZ +".input") ;
			connectAttr ($ctrl + ".rot") ($addZ + ".input3D[0].input3Dx")  ;
			connectAttr ($prefix + "root_ctrl.ry") ($addZ + ".input3D[1].input3Dx")  ;


			setKeyframe -v 1 -t 0 $nodeZ ;
			setKeyframe -v 0 -t 90 $nodeZ ;
			setKeyframe -v -1 -t 180 $nodeZ ;
			setKeyframe -v 0 -t 270 $nodeZ ;
			setKeyframe -v 1 -t 360 $nodeZ ;

			select  $nodeZ ;

			select -cl ;selectKey -add -k $nodeZ ;
			keyTangent -itt plateau -ott plateau;

			setInfinity -poi cycle -pri cycle;

            }

		}




	//


	$nodeX = ($name +"world_RotX_cu") ;
	string $addX = ($name + "_world_RotX_avg") ;

		if (`objExists $nodeX`)
		{

		}else{
			if(`objExists  ($prefix + "root_ctrl")`)
			{
			$nodeY = `createNode -n $nodeX animCurveTL`;
			$addX = `createNode -n $addX plusMinusAverage`;
			setAttr ($addX +".operation") 2 ;

			//connectAttr ($ctrl +".ry") ($nodeX +".input") ;

			connectAttr ($addX + ".output3Dx") ($nodeX +".input") ;
			connectAttr ($ctrl + ".rot") ($addX + ".input3D[0].input3Dx")  ;
			connectAttr ($prefix + "root_ctrl.ry") ($addX + ".input3D[1].input3Dx")  ;



			setKeyframe -v 0 -t 0 $nodeX ;
			setKeyframe -v 1 -t 90 $nodeX ;
			setKeyframe -v 0 -t 180 $nodeX ;
			setKeyframe -v -1 -t 270 $nodeX ;
			setKeyframe -v 0 -t 360 $nodeX ;

			select  $nodeX ;

			selectKey -add -k $nodeX ;
			keyTangent -itt spline -ott spline;
			setInfinity -poi cycle -pri cycle;

            }
		}


	$var2 = `ls  "*_worldAmp_md" ($prefix +"*_worldAmp_md")` ;

		for ($vart in $var2)
		{
		$ch1 = `isConnected ($nodeX +".output") ($vart +".input2X")`;
			if ($ch1 == 0 )
				connectAttr -f ($nodeX +".output") ($vart +".input2X") ;

		$ch1 = `isConnected ($nodeZ +".output") ($vart +".input2Z")`;
			if ($ch1 == 0 )
				connectAttr -f ($nodeZ +".output") ($vart +".input2Z") ;
		}






    }

  	progressBar -e -endProgress $progB ;


}

global proc s100VRcreateDrivKeyAdd(string $ctrl,int $ref,string $progB)
{
// cree l'amplitude differente par rapport a la rotation du ctrl

//$ctrl = "ctrl";


$toList = ("\"VR_*_scN\"") ;
	if($ref == 1)
	{
	$toList += (" \"*:VR_*_scN\" \"*:*:VR_*_scN\"") ;
    }

$var = eval("ls "+$toList);

	$max = size($var) ;
	progressBar -e -minValue  0 $progB;

	if($max == 0 )
		$max = 1 ;
 	progressBar -e -maxValue $max $progB;
  	progressBar -e -endProgress $progB ;
/*
		progressBar -e -step $i $max ;
		$i++;
*/

	for($i = 0 ; $i < size($var) ; $i++)
	{

		progressBar -e -step $i $progB ;

	$name = substituteAllString($var[$i] , "VR_","VRAE_") ;
	$name = substituteAllString($name , "_scN","") ;
	$pref = stringToStringArray($var[$i] ,":" ) ;
	$prefix ="";
	//print "\n passage \n" ;
	//print ("\n object : " + $var[$i] + "\n") ;

		if (size($pref)>1)
		{
		$prefix = ($pref[0] +":");
		}


	$nodeZ = ($name + "_world_RotZAdd_cu") ;
	string $addZ = ($name + "_world_RotZAdd_avg") ;

		if (`objExists $nodeZ`)
		{

		}else{
			if(`objExists  ($prefix + "root_ctrl")`)
			{
			//print "\nexist z\n";
			$node = `createNode -n $nodeZ animCurveTL`;
			$addZ = `createNode -n $addZ plusMinusAverage`;
			setAttr ($addZ +".operation") 2 ;
			connectAttr ($addZ + ".output3Dx") ($nodeZ +".input") ;
			connectAttr ($ctrl + ".rot") ($addZ + ".input3D[0].input3Dx")  ;
			connectAttr ($prefix + "root_ctrl.ry") ($addZ + ".input3D[1].input3Dx")  ;

			setKeyframe -v 10 -t 0 $nodeZ ;
			setKeyframe -v 0 -t 90 $nodeZ ;
			setKeyframe -v 10 -t 180 $nodeZ ;
			setKeyframe -v 0 -t 270 $nodeZ ;
			setKeyframe -v 10 -t 360 $nodeZ ;

			select  $nodeZ ;

			select -cl ;selectKey -add -k $nodeZ ;
			keyTangent -itt plateau -ott plateau;

			setInfinity -poi cycle -pri cycle;

            }

		}

	$nodeX = ($name +"world_RotXAdd_cu") ;
	string $addX = ($name + "_world_RotXAdd_avg") ;

		if (`objExists $nodeX`)
		{

		}else{

			if(`objExists  ($prefix + "root_ctrl")`)
			{

			$nodeY = `createNode -n $nodeX animCurveTL`;
			$addX = `createNode -n $addX plusMinusAverage`;


			//connectAttr ($ctrl +".ry") ($nodeX +".input") ;
			setAttr ($addX +".operation") 2 ;
			connectAttr ($addX + ".output3Dx") ($nodeX +".input") ;
			connectAttr ($ctrl + ".rot") ($addX + ".input3D[0].input3Dx")  ;
			connectAttr ($prefix + "root_ctrl.ry") ($addX + ".input3D[1].input3Dx")  ;


			setKeyframe -v 0 -t 0 $nodeX ;
			setKeyframe -v 10 -t 90 $nodeX ;
			setKeyframe -v 0 -t 180 $nodeX ;
			setKeyframe -v 10 -t 270 $nodeX ;
			setKeyframe -v 0 -t 360 $nodeX ;

			select  $nodeX ;

			selectKey -add -k $nodeX ;
			keyTangent -itt plateau -ott plateau;
			setInfinity -poi cycle -pri cycle;

            }
		}



	creaAttrFloat($ctrl,("wingsRot" ) , 0, 10, 1 ) ;

	string $md = ($prefix  + "VRAE_wingsRot_md") ;

		if(`objExists $md`)
		{


		}else{
			if(`objExists  ($prefix + "root_ctrl")`)
			{
			$md = `createNode -n $md multiplyDivide` ;

			connectAttr ($nodeZ +".output") ( $md +".input1Z") ;
			connectAttr ($nodeX +".output") ( $md +".input1X") ;
			connectAttr ($ctrl + ".wingsRot" ) ($md +".input2X") ;
			connectAttr ($ctrl + ".wingsRot" ) ($md +".input2Z") ;

            }
		}


	$var2 = `ls "*_world_avg" ($prefix +"*_world_avg")` ;


		for ($vart in $var2)
		{
		$ch1 = `isConnected ($md +".outputX") ($vart +".input3D[1].input3Dx")`;
			if ($ch1 == 0 )
				connectAttr -f ($md +".outputX") ($vart +".input3D[1].input3Dx") ;

		$ch1 = `isConnected ($md +".outputZ") ($vart +".input3D[1].input3Dz")`;

			if ($ch1 == 0 )
				connectAttr -f ($md +".outputZ") ($vart +".input3D[1].input3Dz") ;
		}

    }
 	progressBar -e -endProgress $progB ;


}

global proc string  s100AEcreateCurvRandFreq(string $name, float $def, float $variation,int $sF,int $eF, float $step)
{
/*
$name = "curve_random" ;
$canal = "rx" ;
float $def = 0 ;
float $variation = 5 ;
int $eF = 200;
int $sF = 1;
float $step = 15 ;
*/
$node = `createNode -n $name animCurveTL`;

//select $node ;

float $rand ;


	for ($i = $sF ; $i < $eF ; $i += $step)
	{
	$rand = rand($variation )  -  ($variation /2);
	setKeyframe -v $rand -t $i $node ;

	}



float $get = `getAttr -t $sF ($node +".output") ` ;
setKeyframe -v $get -t $eF $node ;


select -cl ;selectKey -add -k $node ;
keyTangent -itt plateau -ott plateau;
setInfinity -pri cycle -poi cycle;

return $node ;



}

global proc s100VRDeleteAE()
{
s100VAEDeleteAE("VRAE_main_ctrl");
s100VRUI ;
tabLayout -edit -selectTab s100VRATEffect s100VRUITLMain ;

}

global proc s100VMDeleteAE()
{

s100VAEDeleteAE("VMAE_main_ctrl");
s100VMUI ;

tabLayout -e -selectTab s100VMATEffect s100VMUITLMain;
}

global proc s100VAEDeleteAE(string $ctrl)
{

//$ctrl = "VRAE_main_ctrl"
	if(`objExists $ctrl `)
	{
	s100VRDeleteDisconnectLocalAE($ctrl) ;
	setAttr ($ctrl + ".amplitude"  ) 0 ;
	$var = `ls "VRAE_*" "*:*VRAE_*" "*:*:*VRAE_*"`;

	delete $var;

	$var = `ls "VMAE_*" "*:*VMAE_*" "*:*:*VMAE_*"`;
	delete $var;

	$var2 = `ls -type multiplyDivide -type plusMinusAverage "VR_*_rotWorldCtrl_md" "*:*VR_*_rotWorldCtrl_md" "*:*:*VR_*_rotWorldCtrl_md"`;
		for($var2t in $var2)
		{
		setAttr ($var2t +".input2X") 0 ;
		setAttr ($var2t +".input2Y") 0 ;
		setAttr ($var2t +".input2Z") 0 ;
        }

	}


}

global proc s100VRDeleteDisconnectLocalAE(string $ctrl)
{
//$ctrl = "VRAE_main_ctrl";
	if(`objExists $ctrl `)
	{

	setAttr ($ctrl + ".amplitude"  ) 0 ;
	$array = stringToStringArray($ctrl , "_" ) ;
	$toList = $array[0] ;
	$toList = "VRAE";


		string $toListA[]  = { ($toList +"*"), ("*:*" + $toList) , ("*:*:*"  + $toList )} ;

	for($k = 0 ; $k < 3 ; $k++)
	{

		$var = `ls $toListA[$k]`;
			for($i = 0 ; $i <size($var); $i++)
			{
			$attr = `listAttr -locked $var[$i] ` ;
				for($attrT in $attr )
				{
				setAttr -l 0 ($var[$i] +"." + $attrT) ;
				}

			}

			for($i = 0 ; $i <size($var); $i++)
			{
				if(`objExists $var[$i]`)
				{
				$list = `listConnections -source 0 -destination 1 -skipConversionNodes 1  -plugs 1 $var[$i] `;
				 //select $var[$i]

					for($j = 0 ; $j < size($list) ; $j++)
					{
						if(`objExists $list[$j]`)
						{
						$connect2  = `listConnections  -source 1 -destination 0  -skipConversionNodes 1  -plugs 1  $list[$j]` ;
						disconnectAttr ($connect2[0]) $list[$j] ;

						}
					}
				}

			}

		//select $var[$i] ;
		}

   }

}

global proc s100VRAESelectAECtrl(string $pref)
{

select ($pref +"_main_ctrl");


}



global proc s100VRAEKeyAECtrl(string $pref)
{

setKeyframe  ($pref +"_main_ctrl");
select ($pref +"_main_ctrl");

}