

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////
//////////////////////////			LLTjointAim_V1_1	releaseduf
//////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	V1.1 : reparente les joints entre eux

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////	procedure
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc jointAim()

{
	if (`objExists "loc_up"`)
	{

	$aim = `checkBoxGrp -q -v1 aimNeCh`;
	$up = `checkBoxGrp -q -v1 upNeCh`;

	int $factAim ;
	if ($aim == 1)
		{
		 $factAim = -1;
		}else{
		 $factAim = 1;

		}

	int $factUp ;
	if ($up == 1)
		{
		 $factUp = -1;
		}else{
		$factUp = 1;
		}


	$aimX = `checkBoxGrp -q -v1 aimCh1` * $factAim;
	$aimY = `checkBoxGrp -q -v2 aimCh1`* $factAim;
	$aimZ = `checkBoxGrp -q -v3 aimCh1`* $factAim;

	$upX = `checkBoxGrp -q -v1 upCh`* $factUp;
	$upY = `checkBoxGrp -q -v2 upCh`* $factUp;
	$upZ = `checkBoxGrp -q -v3 upCh`* $factUp;




	$inc = 1;			//variable d'incrementation

	$select = `ls -selection`; 	//lister les joints a orienter


	select $select[0];		//selection du premier joint
	select -tgl $select[1];		//selection du joint a orienter


	$rOrder = `getAttr ($select[1] + ".rotateOrder")`;
	setAttr ($select[1] + ".rotateOrder") 0 ;
	setAttr ($select[1]+".jointOrientX") 0;
	setAttr ($select[1]+".jointOrientY") 0;
	setAttr ($select[1]+".jointOrientZ") 0;


	setAttr ($select[1]+".rotateX") 0;
	setAttr ($select[1]+".rotateY") 0;
	setAttr ($select[1]+".rotateZ") 0;
	setAttr ($select[1]+".rotateAxisZ") 0;
	setAttr ($select[1]+".rotateAxisX") 0;
	setAttr ($select[1]+".rotateAxisY") 0;
	setAttr ($select[1]+".jointOrientX") 0;
	setAttr ($select[1]+".jointOrientY") 0;
	setAttr ($select[1]+".jointOrientZ") 0;


	aimConstraint -offset 0 0 0 -weight 1 -aimVector $aimX $aimY $aimZ -upVector $upX $upY $upZ -worldUpType "object" -worldUpObject loc_up -name ("aim"+$inc);

	$aimname = ("aim"+$inc);

	$jointrotateX = getAttr ($select[1]+".rotateX");
	$jointrotateY = getAttr ($select[1]+".rotateY");
	$jointrotateZ = getAttr ($select[1]+".rotateZ");

	delete $aimname;

	setAttr ($select[1]+".jointOrientX") $jointrotateX;
	setAttr ($select[1]+".jointOrientY") $jointrotateY;
	setAttr ($select[1]+".jointOrientZ") $jointrotateZ;

	setAttr ($select[1]+".rotateX") 0;
	setAttr ($select[1]+".rotateY") 0;
	setAttr ($select[1]+".rotateZ") 0;



	select $select[0];		//selection du premier joint
	select -tgl $select[1];		//selection du joint a orienter
	parent;
	setAttr ($select[1] + ".rotateOrder") $rOrder  ;


	}else{

	warning "create \"loc_up\"";

	}

}

global proc createUpV()

{
	if (`objExists "loc_up"`)
	{
	select "loc_up";
	}else{
	spaceLocator -n "loc_up" -p 0 0 0;
	}
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////	procedure d'interface
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc desG(int $choice, int $axe)
{
string $check;
string $V1;
string $V2;
	if( $choice == 0)
	{
	$check = "aimCh1";
	}else{
	$check = "upCh";
	}

	if($axe == 0)
	{
	$V1 = "-v2";
	$V2 = "-v3";
	}

	if($axe == 1)
	{
	$V1 = "-v1";
	$V2 = "-v3";
	}

	if($axe == 2)
	{
	$V1 = "-v1";
	$V2 = "-v2";
	}


checkBoxGrp -e $V1 0 $V2 0 $check;
}

global proc ciadAimJointUI()

{

if ( `window -exists ciadAimJointUI2`)
	{
	deleteUI ciadAimJointUI2;
	}

window -s 1 -w 100 -h 220 -title "ciadAimJointUI" ciadAimJointUI2;

columnLayout -w 100 -h 220 -adj 1;
button -label "refresh" -c "ciadAimJointUI";
separator;


button -label "select//create upV" -c "createUpV";
separator;
text -label "aim";
checkBoxGrp -label "negative" -cw 1 85 aimNeCh;
checkBoxGrp -cw 1 30 -cw 2 30 -cw 3 30
	-on1 "desG(0, 0)" -on2 "desG(0, 1)" -on3 "desG(0, 2)"
	-v1 1
        -numberOfCheckBoxes 3
        -labelArray3 "x" "y" "z" aimCh1;
separator;
text -label "up";
checkBoxGrp -label "negative" -cw 1 85 upNeCh;

checkBoxGrp  -cw 1 30 -cw 2 30 -cw 3 30
	-on1 "desG(1, 0)" -on2 "desG(1, 1)" -on3 "desG(1, 2)"
 	-v2 1
        -numberOfCheckBoxes 3
        -labelArray3 "x" "y" "z" upCh;
separator ;
text -label "select base joint";
text -label "and joint to orient";

button -label "apply" -c "jointAim";
showWindow;



}

