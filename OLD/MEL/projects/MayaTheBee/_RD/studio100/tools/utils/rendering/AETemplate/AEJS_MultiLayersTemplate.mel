/* 	Attribute Editor template for JS_MultiLayers MentalRay shader 
	by Jan Sandstrom (Pixero) pixero@yahoo.se
	7 august 2005.	
*/

global proc AEJS_MultiLayers_mode( string $attrName )
{

	setUITemplate -pst attributeEditorTemplate;

	rowColumnLayout 
		-nc 1
    	-columnWidth 1 400;

	attrEnumOptionMenuGrp 
		-l "Blend Mode" 
		-at $attrName 
			-ei 0 "Normal"
			-ei 1 "Darken"
			-ei 2 "Multiply"
			-ei 3 "Color Burn"
			-ei 4 "Inverse Color burn"
			-ei 5 "Subtract"
			-ei 6 "Add"
			-ei 7 "Lighten"
			-ei 8 "Screen"
			-ei 9 "Color Dodge"
			-ei 10 "Inverse Color Dodge"
			-ei 11 "Overlay"
			-ei 12 "Soft Light"
			-ei 13 "Hard Light"
			-ei 14 "Reflect"
			-ei 15 "Glow"
			-ei 16 "Average"
			-ei 17 "Difference"
			-ei 18 "Exclusion"
			
			bcmodeGrp;

	setUITemplate -ppt;

	AEJS_MultiLayers_replace_mode( $attrName );
}

global proc AEJS_MultiLayers_replace_mode( string $attrName )
{

	attrEnumOptionMenuGrp -e -at $attrName bcmodeGrp;
}



global proc AEJS_MultiLayers_alphamode( string $attrName )
{

	setUITemplate -pst attributeEditorTemplate;

	rowColumnLayout 
		-nc 1
    	-columnWidth 1 400;

	attrEnumOptionMenuGrp 
		-l "Alpha Mode" 
		-at $attrName 
			-ei 0 "Dont add to Alpha"
			-ei 1 "Highest Alpha"
			-ei 2 "Add to Alpha"
			-ei 3 "Full Alpha"
			
			bcalphamodeGrp;

	setUITemplate -ppt;

	AEJS_MultiLayers_replace_alphamode( $attrName );
}

global proc AEJS_MultiLayers_replace_alphamode( string $attrName )
{

	attrEnumOptionMenuGrp -e -at $attrName bcalphamodeGrp;
}





global proc AEenableFade ( string $nodeName ) 
{
int $i;
for ($i = 1; $i < 31; $i++)
	{		

		
	if ((getAttr ($nodeName+".Enable_"+$i)))
		{
		editorTemplate -dimControl $nodeName ("BlendMode_"+$i) false;
		editorTemplate -dimControl $nodeName ("Opacity_"+$i) false;
		editorTemplate -dimControl $nodeName ("Layer_"+$i) false;
		editorTemplate -dimControl $nodeName ("AlphaMode_"+$i) false;
		} 
	else 
		{
		editorTemplate -dimControl $nodeName ("BlendMode_"+$i) true;
		editorTemplate -dimControl $nodeName ("Opacity_"+$i) true;
		editorTemplate -dimControl $nodeName ("Layer_"+$i) true;
		editorTemplate -dimControl $nodeName ("AlphaMode_"+$i) true;
		}

	}
}


global proc AEJS_MultiLayersTemplate( string $nodeName )
{
editorTemplate -beginScrollLayout;
	editorTemplate -beginLayout "JS Multi Layers" -collapse 0 -bn;		
	int $i;	
	for ($i = 1; $i < 31; $i++){		


			
			editorTemplate -beginLayout ("Layer "+$i) -collapse $i -bn;
			editorTemplate -addSeparator;
			editorTemplate -l"Enable" -addControl ("Enable_"+$i)"AEenableFade";
			editorTemplate -addSeparator;
			editorTemplate -s ("BlendMode_"+$i);
			editorTemplate -callCustom "AEJS_MultiLayers_mode"
					   "AEJS_MultiLayers_replace_mode" ("BlendMode_"+$i);
			editorTemplate -addSeparator;
			editorTemplate -l "Opacity" -addControl ("Opacity_"+$i);
			editorTemplate -addSeparator;
			editorTemplate -l ("Layer "+$i) -addControl ("Layer_"+$i);		
			editorTemplate -addSeparator;
			editorTemplate -s ("AlphaMode_"+$i);
			editorTemplate -callCustom "AEJS_MultiLayers_alphamode"
					   "AEJS_MultiLayers_replace_alphamode" ("AlphaMode_"+$i);
			editorTemplate -addSeparator;
			editorTemplate -endLayout;				
	}
			editorTemplate -beginLayout "Color Clip" -collapse 1 -bn;
			editorTemplate -addSeparator;
			editorTemplate -l "Color Clip" -addControl "ColorClip";
			editorTemplate -endLayout;
	editorTemplate -endLayout;	
		
	editorTemplate -beginLayout "Hardware Texturing" -collapse true; 
	editorTemplate -addControl "hardwareColor"; 
	editorTemplate -addSeparator; 
	AEhardwareTextureTemplate $nodeName 
	("hardwareColor"); 
	editorTemplate -endLayout; 		

AEdependNodeTemplate $nodeName;

editorTemplate -addExtraControls;
editorTemplate -endScrollLayout;
}