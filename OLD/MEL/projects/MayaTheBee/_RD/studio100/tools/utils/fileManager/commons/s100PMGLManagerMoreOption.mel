/*
TRISTAN : CECI EST LA PROCEDURE DE CREATION DU MENU DEROULANT POUR CHERCHER UN TEMPLATE
ELLE CHECK LES FICHIER TEXTES QU'ON APPEL VIA LA PROCEDURE $PROC
*/

global proc string[] s100PMAPRefreshOptionMenuTemplate(string $optionMenuTpl, string $parent, int $size, string $proc, string $listFolder, int $vis, string $where)
{
if(`formLayout -exists ($optionMenuTpl + "formLayout")`)
	deleteUI ($optionMenuTpl + "formLayout");

string $tabWay[];

$procComp = ($proc + "(\""+$where+"\")");
$tabWay = `eval($procComp)`;

string $tabList[];
$tabList = s100FMPMlistTxtCatenate($tabWay[0] , $tabWay[1]);

string $formLayout = `formLayout -p $parent -w $size`;
setParent ..;
string $optionMenuTpl = `optionMenu -p $formLayout`;
	if(size($tabList) > 0)
		{

		for($obj in $tabList)
			{
				menuItem -parent $optionMenuTpl -label $obj;
			}
			menuItem -en 0 -l "________________________________";
		}
		else
			menuItem -parent $optionMenuTpl -label "no template";

optionMenu -e -value $tabList[0] $optionMenuTpl;

$procButton = ("s100PMGLlistFolderToCreateUI(\""+ $listFolder + "\",\"" + $proc + "\",\"" + $where + "\",\"" + $optionMenuTpl +"\")");
string $button = `button -p $formLayout -visible $vis -l "+" -c $procButton`;

formLayout -e -numberOfDivisions 100

-attachForm $optionMenuTpl "left" 0
-attachPosition $optionMenuTpl "right" 0 77
-attachForm $button "left" 0
-attachPosition $button "left" 0 79

$formLayout;

return{$formLayout, $optionMenuTpl, $button};
}

/*
TRISTAN: CECI EST LA PROCEDURE DE CREATION DU LAYOUT QUI APPEL LE MENU DEROULANT ET LE MENU DE SCROLL LAYOUT
*/


global proc s100PMGLlistFolderToCreateUI(string $proc, string $name, string $where, string $optionMenuTpl)
{
string $tabWay[];
$procComp = ($proc + "(\""+$where+"\")");
$tabWay = `eval($procComp)`;
string $tabList[];
$tabList = s100FMPMlistTxtCatenate($tabWay[0] , $tabWay[1]);

$window = $where;
		if ( `window -exists $window` )
			{
			 deleteUI $window;
			}

$window = `window -t ("more option window " + $where) $window`;

	/////////////////////////////////////
	$column = `columnLayout -adjustableColumn 1`;



	/////////////////////////////////////
	$optionMenu = s100PMAPRefreshOptionMenuTemplate("s100PMAPoptionMenuMore", $column, 200, "s100FMPMlistTplProdFolder", "s100FMPMlistProdFolder", 0, $where);
	$formLayout = s100PMGLCreateDoubleScrollListLayout($proc, $name, $column, $optionMenu, $where, $window, $optionMenuTpl);
	setParent ..;

	/////////////////////////////////////

showWindow $window;


}

/*
TRISTAN : CECI EST LA PROCEDURE DE CREATION DES SCROLLLIST
*/

global proc string s100PMGLCreateScrollList(string $item[], string $name, string $parent)
{

$textScrollList = ("textScrollList -h 150 -en 1 -ams 1 -p " + $parent);
	for ($obj in $item)
		{
		$textScrollList += (" -append " + $obj);
		}

$eval = `eval($textScrollList)`;

return $eval;
}

/*
TRISTAN : CECI EST LA PROCEDURE DE CREATION DU LAYOUT POUR AVOIR LE MENU DE SWITCH DE SCROLL LAYOUT
*/
global proc string s100PMGLCreateDoubleScrollListLayout(string $proc, string $name, string $parent, string $optionMenu[], string $where, string $window,string $optionMenuTpl)
{
string $tabWay[];
$procComp = ($proc + "(\""+$where+"\")");
$tabWay = `eval($procComp)`;
string $tabList[];
$tabList = s100FMPMlistTxtCatenate($tabWay[0] , $tabWay[1]);



$formLayout = `formLayout -p $parent`;
	$buttonAdd = `button -w 25 -l "+"  -c "" `;
	$buttonRemove = `button -w 25 -l "-" -c "" `;
	$buttonUp =`button -w 40 -l "Up" -c "" `;
	$buttonDown =`button -w 40 -l "Down" -c "" `;
	$buttonLeft =`button -l "->"`;
	$buttonRight =`button -l "<-"`;

	$buttonAddTemplate =`button -l "add template"`;
	$buttonEditTemplate =`button -l "edit template"`;
	$buttonDeleteTemplate =`button -l "delete template"`;

	$separator = `separator -height 20`;

	$buttonValidate = `button -l "VALIDATE"`;

setParent ..;

	$textScrollListRight = s100PMGLCreateScrollList($tabList, ($name + "textScrollListLeft"), $formLayout);
	$textScrollListLeft = s100PMGLCreateScrollList({}, ($name + "textScrollListRight"), $formLayout);

	string $tabString;
	string $tabString = stringArrayToString($tabList, "_");

	$commandLeft = "s100PMGLSwitchItemList(\"" + $textScrollListLeft + "\" , \"" + $textScrollListRight + "\" , \"\" , \"add\" , \"" + $proc + "\",\""+ $where+ "\")";
	$commandRight = "s100PMGLSwitchItemList(\"" + $textScrollListLeft + "\" , \"" + $textScrollListRight + "\" , \"\" , \"remove\" , \"" + $proc + "\",\""+ $where+ "\")";
	button -e -c $commandLeft $buttonLeft;
	button -e -c $commandRight $buttonRight;

	$commandUp = "s100PMGLSwitchItemList(\"" + $textScrollListLeft + "\" , \"" + $textScrollListRight + "\" , \"\" , \"up\" , \"" + $proc + "\",\""+ $where+ "\")";
	$commandDown = "s100PMGLSwitchItemList(\"" + $textScrollListLeft + "\" , \"" + $textScrollListRight + "\" , \"\" , \"down\" , \"" + $proc + "\",\""+ $where+ "\")";

	button -e -c $commandUp $buttonUp;
	button -e -c $commandDown $buttonDown;

	$commandAdd = "s100PMGLCreateNewObjectUI(\""+ $textScrollListRight +"\",\"none\",\"" +$where +"\",\"" + "s100PMGLAddNewObjectToUI" + "\")";
	button -e -c $commandAdd $buttonAdd;

	$commandRemove = "s100PMGLRemoveObjectToUI(\""+ $textScrollListRight +"\",\"" +$where + "\")";
	button -e -c $commandRemove $buttonRemove;

	$commandAddTemplate = "s100PMGLCreateNewObjectUI(\""+ $optionMenu[1]+"\",\""+$textScrollListLeft+"\",\"" +$where +"\",\"" + "s100PMGLAddNewObjectToUI" + "\")";
	button -e -c $commandAddTemplate $buttonAddTemplate;

	$commandDeleteTemplate = "s100PMGLAddNewTemplate(\"delete\",\""+$where+"\",\""+ $optionMenu[1] +"\",\""+ $textScrollListLeft +"\",\"nothing\")";
	button -e -c $commandDeleteTemplate $buttonDeleteTemplate;

	$commandEditTemplate = "s100PMGLAddNewTemplate(\"edit\",\""+$where+"\",\""+ $optionMenu[1] +"\",\""+ $textScrollListLeft + "\",\"nothing\")";
	button -e -c $commandEditTemplate $buttonEditTemplate;

	$commandValidate = "s100PMGLvalidateMoreOption(\"" +$optionMenuTpl + "\",\"" +$where+ "\",\""+$window+ "\",\"" +$textScrollListLeft+"\")";
	button -e -c $commandValidate $buttonValidate;
formLayout -e -numberOfDivisions 100
	-attachForm $buttonAdd "left" 2
	-attachControl $buttonRemove "top" 1 $buttonAdd
	-attachForm $buttonRemove "left" 2

	-attachForm $buttonUp "right" 2
	-attachControl $buttonDown "top" 1 $buttonUp
	-attachForm $buttonDown "right" 2


	-attachPosition $textScrollListRight "right" 25 50
	-attachControl $textScrollListRight "left" 4 $buttonAdd
	-attachForm $textScrollListRight "left" 10
	-attachForm $textScrollListLeft "right" 10
	-attachPosition $textScrollListLeft "left" 25 50
	-attachControl $textScrollListLeft "right" 4 $buttonUp

	-attachControl $buttonRight "right" 4 $textScrollListLeft
	-attachControl $buttonLeft "right" 4 $textScrollListLeft
	-attachControl $buttonRight "left" 4 $textScrollListRight
	-attachControl $buttonLeft "left" 4 $textScrollListRight
	-attachControl $buttonRight "top" 1 $buttonLeft

	-attachControl $buttonAddTemplate "top" 1 $textScrollListLeft
	-attachForm $buttonAddTemplate "left" 4
	-attachForm $buttonAddTemplate "right" 4

	-attachControl $buttonEditTemplate "top" 1 $buttonAddTemplate
	-attachForm $buttonEditTemplate "left" 4
	-attachForm $buttonEditTemplate "right" 4

	-attachControl $buttonDeleteTemplate "top" 1 $buttonEditTemplate
	-attachForm $buttonDeleteTemplate "left" 4
	-attachForm $buttonDeleteTemplate "right" 4

	-attachControl $separator "top" 1 $buttonDeleteTemplate
	-attachForm $separator "left" 4
	-attachForm $separator "right" 4

	-attachControl $buttonValidate "top" 1 $separator
	-attachForm $buttonValidate "left" 4
	-attachForm $buttonValidate "right" 4


$formLayout;

if(`optionMenu -ex $optionMenu[1]`)
	{

	$commandOptionMenu = "s100PMGLSwitchItemList(\"" + $textScrollListLeft + "\",\"" + $textScrollListRight + "\",\"" + $optionMenu[1] + "\",\"template\",\"" + $proc + "\",\""+ $where+ "\")";
	optionMenu -e
	-changeCommand $commandOptionMenu
	$optionMenu[1];
    }

return($formLayout);
}
/*
TRISTAN : CECI EST LA PROCEDURE DE MISE A JOUR DES SCROLL LIST EN TEMPLATE, TRANSITION GAUCHE DROITE, UP DOWN
*/

global proc s100PMGLSwitchItemList(string $scrollListLeft, string $scrollListRight, string $optionMenu, string $what, string $proc, string $where)
{
string $tabWay[];
	$procComp = ($proc + "(\""+$where+"\")");
	$tabWay = `eval($procComp)`;
string $tabList[];
	$tabList = s100FMPMlistTxtCatenate($tabWay[0] , $tabWay[1]);
string $tabString;
	string $tabString = stringArrayToString($tabList, "_");


string $scrollListLeftTabSelect[];
	$scrollListLeftTabSelect = `textScrollList -q -selectItem $scrollListLeft`;
	$scrollListLeftTabSelect = stringArrayRemoveDuplicates($scrollListLeftTabSelect);

string $scrollListRightTabSelect[];
	$scrollListRightTabSelect = `textScrollList -q -selectItem $scrollListRight`;
	$scrollListRightTabSelect = stringArrayRemoveDuplicates($scrollListRightTabSelect);



string $tabList[];
	$tabList = stringToStringArray($tabString, "_");

string $scrollListLeftTabAll[];
	$scrollListLeftTabAll = `textScrollList -q -allItems $scrollListLeft`;

string $scrollListRightTabAll[];
	$scrollListRightTabAll = `textScrollList -q -allItems $scrollListRight`;

	switch($what)
	{
		case "add" :
		$add = "textScrollList -e";
		$remove = "textScrollList -e";
		$int = 0;
			for ($obj in $scrollListRightTabSelect)
			{

			if(stringArrayContains($obj, $scrollListLeftTabAll) == 0)
					{
					$add += (" -append " + $obj);
					$remove += (" -removeItem " + $obj);
					$int = 1;
					}
            }
		$add += (" " + $scrollListLeft);
		$remove += (" " + $scrollListRight);
		if($int == 1)
			{
			eval($add);
			eval($remove);
			}
		break;

		case "remove" :
		$add = "textScrollList -e";
		$remove = "textScrollList -e";
			for ($obj in $scrollListLeftTabSelect)
			{
				if(stringArrayContains($obj, $scrollListRightTabAll) == 0)
					{
					$add += (" -append " + $obj);
					$remove += (" -removeItem " + $obj);
					}
            }
		$add += (" " + $scrollListRight);
		$remove += (" " + $scrollListLeft);
		eval($add);
		eval($remove);
		break;

		case "template":
		if(`optionMenu -ex $optionMenu`)
		{
			$value = `optionMenu -q -v $optionMenu`;
			string $listTemplate[];

			$listTemplate = s100PMGLReadTemplate($where, $value);
			$removeAll = `textScrollList -e -ra $scrollListLeft`;
			$removeAll = `textScrollList -e -ra $scrollListRight`;

			$textScrollListRec = ("textScrollList -e ");
				for ($obj in $tabList)
					{
					$textScrollListRec += (" -append " + $obj);
					}
				$textScrollListRec += (" " + $scrollListRight);
				$eval = `eval($textScrollListRec)`;


			$add = "textScrollList -e";
			$remove = "textScrollList -e";
				for ($obj in $listTemplate)
				{
					if(stringArrayContains($obj, $tabList))
						{
						$add += (" -append " + $obj);
						if(stringArrayContains($obj, $scrollListRightTabAll) != 0)
							{
							$remove += (" -removeItem " + $obj);
                            }

						}
				}

					$add += (" " + $scrollListLeft);
					$remove += (" " + $scrollListRight);
						eval($add);
						eval($remove);
        }
		break;
		case "up":
		for ($i = 0; $i < size($scrollListLeftTabAll); $i++)
		{
		$select = "textScrollList -e ";
			for ($obj in $scrollListLeftTabSelect)
				{
				 $select += (" -si " + $obj);
					if($scrollListLeftTabAll[$i] == $obj && $i != 0)
						{
						$delete = `textScrollList -e -removeItem $obj $scrollListLeft`;
						$move = `textScrollList -e -ap $i $obj $scrollListLeft`;
						}

				}
		$select += " " + $scrollListLeft;
		eval($select);
		}

		break;
		case "down":
		for ($i = 0; $i < size($scrollListLeftTabAll); $i++)
		{
		$select = "textScrollList -e ";
			for ($obj in $scrollListLeftTabSelect)
				{
				 $select += (" -si " + $obj);
					if($scrollListLeftTabAll[$i] == $obj && $i != (size($scrollListLeftTabAll) - 1 ))
						{
						$delete = `textScrollList -e -removeItem $obj $scrollListLeft`;
						$move = `textScrollList -e -ap ($i + 2) $obj $scrollListLeft`;
						}

				}
		$select += " " + $scrollListLeft;
		eval($select);
		}

		break;
    }
}

/*
TRISTAN : CECI EST LA PROCEDURE DE DEMANDE DE NOM
*/

global proc s100PMGLCreateNewObjectUI(string $add, string $textScrollList,string $where, string $proc)
{
if(`window -ex 	s100ProdPMGLCreateNewObjectUIwindow`)
	deleteUI s100ProdPMGLCreateNewObjectUIwindow;

int $heigh = 100 ;
int $width = 152;

$window = `window -title "add new" s100ProdPMGLCreateNewObjectUIwindow`;
columnLayout -adj 1;


$textName = `text -label "Choose a name"` ;
$textFieldName = `textField -w  ($width * .8 ) s100ProdPMGLCreateNewTextField`;

$separator = `separator -w ($width *.91)`;


$butCrea = `button -label "add" -w ($width *.8)` ;
$commandCrea = $proc + "(\"" +$add + "\",\"" + $textScrollList + "\",\"" +$textFieldName +"\",\"" + $where +"\",\"" + "add" +"\",\""+ $window + "\")";
button -e -c $commandCrea $butCrea;

$side = 5 ;


window -e -h $heigh  -w $width  -sizeable 0 s100ProdPMGLCreateNewObjectUIwindow;
	showWindow;
}

/*
TRISTAN : CECI EST LA PROCEDURE DE SELECTION DE L'AJOUT EN FONCTION DU TEXTSCROLLLIST OU DU OPTIONMENU
*/

global proc s100PMGLAddNewObjectToUI(string $add, string $textScrollList, string $textField, string $where, string $type, string $window)
{

$UItype = `objectTypeUI $add`;

$text = `textField -q -tx $textField`;
string $textList[];
string $textTab[];
if(isValidObjectName($text))
	{
		if($UItype == "popupMenu")
			{

			s100PMGLAddNewTemplate("add",$where,$add,$textScrollList,$text);
			}
		else if($UItype == "textScrollList")
			{
			$textList = `textScrollList -q -allItems $add`;
				if(stringArrayContains($text,$textList) == 0)
					{
						$textScrollList = `textScrollList -e -a $text $add`;
						$textTab[0] = $text;
						s100PMGLModifFolderList($where, $textTab, $type);
					}



			}

	if(`window -ex 	$window`)
	deleteUI $window;
    }
else
	warning "no valid object name";
}

/*
TRISTAN : CECI EST LA PROCEDURE DE SUPPRESSION DE LA LISTE DES DOSSIERS POSSIBLE A CREER DANS L'UI TEXTSCROLLLIST
*/

global proc s100PMGLRemoveObjectToUI(string $textScrollList, string $where)
{

if(`textScrollList -ex $textScrollList`)
	{
		global string $base_prodFilesSystem;
		string $folderBaseList;
		$folderBase = ($base_prodFilesSystem + "/folderList/"+ $where + "/folderAddList.txt");
		$listFolderBaseOpen = `fopen $folderBase "r"`;
			$folderBaseList = `fread $listFolderBaseOpen $folderBaseList`;
			fclose $listFolderBaseOpen;

		string $templateArrayList[];

			$templateArrayList = stringToStringArray($folderBaseList, "|");

				string $selectItem[];
				$selectItem = `textScrollList -q -selectItem $textScrollList`;

				s100PMGLModifFolderList($where, $selectItem, "remove");
				for($obj in $selectItem)
				{
				print $templateArrayList[0];
					if(stringArrayContains($obj,$templateArrayList))
					{
					textScrollList -e -removeItem $obj $textScrollList;
					}
				}
	}
}

/*
TRISTAN : CECI ESTL A PROCEDURE DE D'AJOUT ET DE SUPPRESSION DE LA LISTE DES DOSSIER DANS LES FICHIER TEXT
*/

global proc s100PMGLModifFolderList(string $where, string $add[], string $type)
{
	global string $base_prodFilesSystem;
	string $folderBaseList;
	$folderBase = ($base_prodFilesSystem + "/folderList/"+ $where + "/folderAddList.txt");
	$folderTemplate = ($base_prodFilesSystem + "/folderList/"+ $where + "/folderAddTemplate.txt");

	if(`filetest -e $folderBase`)
	{
		$listFolderBaseOpen = `fopen $folderBase "r"`;
			$folderBaseList = `fread $listFolderBaseOpen $folderBaseList`;
			fclose $listFolderBaseOpen;
		string $folderTemplateList;
		$listFolderTemplateOpen = `fopen $folderTemplate "r"`;
			$folderTemplateList = `fread $listFolderTemplateOpen $folderTemplateList`;
			fclose $listFolderTemplateOpen;

		string $templateArrayList[];
		$templateArrayList = stringToStringArray($folderTemplateList, "|");

		string $tempSelect[];
		$tempSelect = stringToStringArray($folderBaseList, "|");
		string $tmp;

		switch($type)
			{
			case "add":

				$tempSelect[size($tempSelect)] = $add[0];
				$tmp = stringArrayToString($tempSelect, "|");
			break;
			case "remove":

				$diff = stringArrayRemove($add, $tempSelect);
				$tmp = stringArrayToString($diff, "|");
				for($obj in $templateArrayList)
					{
					string $templateList;
					$template = ($base_prodFilesSystem + "/folderList/"+ $where + "/" + $obj + ".txt");
						$listTemplateOpen = `fopen $template "r"`;
							$templateList = `fread $listTemplateOpen $templateList`;
							fclose $listTemplateOpen;

					string $objList[];
						$objList = stringToStringArray($templateList, "|");
						$objList = stringArrayRemove($add , $objList);

						$templateList = stringArrayToString($objList, "|");

						$listTemplateOpen = `fopen $template "w"`;
							$templateList = `fwrite $listTemplateOpen $templateList`;
							fclose $listTemplateOpen;
                    }
			break;
			}


		$listFolderBaseOpen = `fopen $folderBase "w"`;
			$folderBaseList = `fwrite $listFolderBaseOpen $tmp`;
			fclose $listFolderBaseOpen;
	}
}

/*
TRISTAN : CECI EST LA PROCEDURE DE CREATION DES TEMPLATES DANS LES FICHIER TXT
*/


global proc s100PMGLAddNewTemplate(string $type, string $where,string $add, string $textScrollList, string $text)
{
string $tabList[];
		$tabList = `textScrollList -q -ai $textScrollList`;
		$stringList = stringArrayToString($tabList,"|");
string $OptionMenuQ[];
switch($type)
	{
	case "add":

		string $tab[];
		$tab = `optionMenu -q -itemListLong $add`;
		$menuItem = `menuItem -p $add -label $text`;
			s100FMPMWriteListTemplate($where,$text,$stringList);
				$listEdit = s100FMPMReadListTemplate($where,"folderAddTemplate");
				$tabListTemplate = stringToStringArray($listEdit, "|");
				//print $tabListTemplate;
				$tabListTemplate[size($tabListTemplate)] = $text;
				$stringListTemplate = stringArrayToString($tabListTemplate, "|");
			s100FMPMWriteListTemplate($where,"folderAddTemplate",$stringListTemplate);
	break;
	case "delete":

		$OptionMenuQ[0] = `optionMenu -q -v $add`;
		int $indexTab = `optionMenu -q -sl $add`;
		$tab = `optionMenu -q -itemListLong $add`;
		$menuItem = $tab[$indexTab -1];
			$listEdit = s100FMPMReadListTemplate($where,"folderAddTemplate");
			$tabListTemplate = stringToStringArray($listEdit, "|");
		if(stringArrayContains($OptionMenuQ[0],$tabListTemplate))
		{

				$tabListTemplate = stringArrayRemove($OptionMenuQ,$tabListTemplate);
				$stringListTemplate = stringArrayToString($tabListTemplate, "|");
				s100FMPMWriteListTemplate($where,"folderAddTemplate",$stringListTemplate);
				s100FMPMDeleteFileTemplate($where,$OptionMenuQ[0]);
				deleteUI -menuItem $menuItem;
				optionMenu -e -sl 1 $add;
		}

	break;
	case "edit":
		$OptionMenuQ[0] = `optionMenu -q -v $add`;
		s100FMPMWriteListTemplate($where,$OptionMenuQ[0],$stringList);
	break;
	}
}



global proc string[] s100PMGLGetSubPath(string $add, string $where)
{
	$UItype = `objectTypeUI $add`;
	string $tab[];
	if($UItype == "popupMenu")
			{
			$name = `optionMenu -q -v $add`;
			$listString = s100FMPMReadListTemplate($where,$name);
			$tab = stringToStringArray($listString, "|");
			}
		else if($UItype == "textScrollList")
			{
			$tab = `textScrollList -q -allItems $add`;
			}
return $tab;
}

global proc s100PMGLvalidateMoreOption(string $optionMenu, string $where,string $windows, string $textScrollListLeft)
 {
	string $list[];
	$list = `textScrollList -q -allItems $textScrollListLeft`;
	string $write;
	global string $base_prodFilesSystem;

		$folderBase = ($base_prodFilesSystem + "/folderList/"+ $where + "/folderCreate.txt");
		$write = stringArrayToString($list,"|");

	$fileId=`fopen $folderBase "w" `;
	$write =`fwrite $fileId $write`;
	fclose $fileId ;

	$menuItem = ("menuItem" + $where);

	if(size($list)>0)
	{
	if(`menuItem -ex $menuItem`)
		deleteUI $menuItem;

 	$item = `menuItem -p $optionMenu -label "custom" $menuItem`;

	optionMenu -e -v "custom" $optionMenu;

	if(`window -ex $windows`)
		deleteUI $windows;
    }
	else
	warning "select minimum 1 element";
 }