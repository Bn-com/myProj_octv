
global proc s100FileManagerOpenSel()
{
	string $name;
	$tkSel = `textScrollList -q -selectItem s100FileManagerUITSTake`;
	$path = `textField -q -tx  s100FileManagerUITFpath `;
	$sel = `textScrollList -q -selectItem  s100FileManagerUITSInc` ;

	$getInc = $sel[0] ;
	$getIncTab = stringToStringArray($getInc,":");
	$getInc = $getIncTab[1];

	if($getIncTab[0] =="wip")
		$path = $path + "WIP_Archives/" + $tkSel[0] + "/";

	//$name = `s100FileManagerBuildName`;
	$name = $getInc + ".ma";
	$path += $name ;

	$file = `file -q -sceneName `;
	$check = ` file -q -modified `;

	if ($check == 1 )
	{
		$conf = `confirmDialog -title "Save Changes" -message ("Save changes to" + $file)
		-button "Save" -button "Don't Save" -button "Cancel" -defaultButton "Save"
		-cancelButton "Cancel" -dismissString "No"`;

		if ($conf == "Save")
		{
			file -f -save ;
			file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
			s100FMopenShotCommon ;
		}

		if ($conf == "Don't Save")
		{
			file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
			addRecentFile($path, "mayaAscii");
			s100FMopenShotCommon;
		}
	}
	else
	{
		file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
		s100FMopenShotCommon ;
	}

	// forces MaskColor and Opacity of every cameras overscan (displaygate) set to opaque black.
	s100FMforceOverscanOpacity();

	// fix sounds names (could have been altered by one old version of splitting system:
	s100PBTfixSoundNamesInScene();
}


global proc s100FileManagerOpenLast()
{
	$tkSel = `textScrollList -q -selectItem s100FileManagerUITSTake`;
	if(size($tkSel)>0)
	{
		$path = `textField -q -tx  s100FileManagerUITFpath ` + "WIP_Archives/" + $tkSel[0] + "/";
		$getInc = `s100FileManagerGetLastInc `;

		//$name = `s100FileManagerBuildName`;
		//$name += "_" + $getInc + ".ma" ;
		$path += $getInc ;

		// debug QA :
		print ("// s100 fileManager >> file to open : \""+$path+"\"\n");

		$file = `file -q -sceneName `;
		$check = ` file -q  -modified `;

		if ($check == 1 )
		{
			$conf = `confirmDialog -title "Save Changes" -message ("Save changes to" + $file)
			-button "Save" -button "Don't Save" -button "Cancel" -defaultButton "Save"
			-cancelButton "Cancel" -dismissString "No"`;

			if ($conf == "Save")
			{
				file -f -save ;
				file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
				s100FMopenShotCommon ;
			}

			if ($conf == "Don't Save")
			{
				file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
				addRecentFile($path, "mayaAscii");
				s100FMconformFolderForShotAndSetProjet;
				s100FMrefreshMenuFromSceneName ;
			}
		}
		else
		{
			file  -f  -options "v=0"  -ignoreVersion  -typ "mayaAscii" -o $path;
			s100FMopenShotCommon ;
		}
	}
	else
		warning "select an Tk option";

	// forces MaskColor and Opacity of every cameras overscan (displaygate) set to opaque black.
	s100FMforceOverscanOpacity();

	// fix sounds names (could have been altered by one old version of splitting system:
	s100PBTfixSoundNamesInScene();
}

// QA addendum (finally using former s100SetValueForCamera() after changing it:
// forces MaskColor and Opacity of every cameras overscan (displaygate) set to opaque black.
global proc s100FMforceOverscanOpacity()
{
	string $cams[] = `ls -type camera`;
	//float $foks = 0;
	for ($cam in $cams) // string $cam = $cams[0]
	{
		s100SetValueForCamera($cam);
		//int $ok = !catch(`setAttr ($cam+".displayGateMaskColor") -type double3 0 0 0 `) ;
		//$ok *= !catch(`setAttr ($cam+".displayGateMaskOpacity ") 1 `) ;
		//$foks += $ok;
	}
	print ("\n// Tried to set "+size($cams)+" MaskColor and Opacity of cameras overscan (displayGate) to 1.1, Opaque Black.\n");
}

global proc s100FMopenShotCommon()
{
	addRecentFile(`file -q -sn`, "mayaAscii");
	s100FMconformFolderForShotAndSetProjet;
	s100FMrefreshMenuFromSceneName ;

	if(`s100FMCurrentsceneIsAPreviez`)
	{
		zooShots ;
	}
}
