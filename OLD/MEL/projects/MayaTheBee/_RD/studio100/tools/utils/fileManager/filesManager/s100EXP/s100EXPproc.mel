global proc s100EXPplayblastPreviz()
{
playbackOptions -minTime `playbackOptions -q -animationStartTime`;
playbackOptions -maxTime `playbackOptions -q -animationEndTime`;
int $text ;
int $textConvert ;

$text = `optionVar -q  "s100playbackMaxTextured" `;
$textConvert = `optionVar -q  "s100playbackMaxTexturedForceConvertion" `;
			if($text )
			{
				if($textConvert)
				{
				s100PBTswitchToLow ;
                }

            }

s100playblastTools ;
}

global proc s100EXPplayblastAllShots()
{
int $numb   = `textScrollList -q -numberOfItems  s100EXPFormLayoutTSL`;
	for($i = 1 ; $i <= $numb ; $i++)
	{
	textScrollList -e  -selectIndexedItem $i s100EXPFormLayoutTSL ;
    }
int $text ;
int $textConvert ;

$text = `optionVar -q  "s100playbackMaxTextured" `;
$textConvert = `optionVar -q  "s100playbackMaxTexturedForceConvertion" `;
			if($text )
			{
				if($textConvert)
				{
				s100PBTswitchToLow ;
                }

            }

s100EXPplayblastSelectedShots ;
s100EXPUIRefresh;
}

global proc s100EXPplayblastSelectedShots()
{

	global string $s100PBTEAddSufToShot;
	global int $s100pbtvarForLoad ;
	$s100pbtvarForLoad = 2 ;

	int $text ;
	int $textConvert ;

	$text = `optionVar -q  "s100playbackMaxTextured" `;
	$textConvert = `optionVar -q  "s100playbackMaxTexturedForceConvertion" `;
	if($text )
	{
		if($textConvert)
		{
		s100PBTswitchToLow ;
		}
	}

	if(`objExists "shotsNode"`)
	{
		zooShots;
		pause -seconds 1;

		string $listAttr[] ;
		$fileN = `file -q -sn -shortName  `;

		$listAttr = `listAttr -userDefined "shotsNode" `;
		string $ArrayLay[] = `columnLayout -q -childArray   zooShotsRowList`;
		string $camFromZoo[] ;
		clear $camFromZoo ;

		for($i = 0 ; $i < size($ArrayLay) ; $i++)
		{
		$camFromZoo[$i]   = `zooGetShotCamera $i `;
		}
		//print $camFromZoo ;

		$start = `playbackOptions -q -animationStartTime`;
		$end = `playbackOptions -q -animationEndTime`;

		$chSucces = 1 ;

		pause -seconds 1;

		string $textF[] = `textScrollList -q -selectItem  s100EXPFormLayoutTSL`;

		string $camera[] ;
		clear $camera ;
		for($i = 0 ; $i < size($textF) ; $i++)
		{
			$camera[$i]  =s100PTGetCamMatchName($textF[$i]);
			if($camera[$i]  == "empty" )
			{
				$chSucces = 0;
				break;
			}
		}


		int $startAllTime[] ;
		int $endAllTime[] ;

		if($chSucces)
		{
			int $intToGet ;

			for($i  = 0 ; $i < size($camera) ; $i++)
			{
				for($j = 0 ; $j < size($camFromZoo) ; $j++)
				{
					if($camera[$i] == $camFromZoo[$j]){
					$intToGet = $j ;
                    }
                }

			zooShotsGoto both $intToGet;
			$s100PBTEAddSufToShot = $textF[$i];
			$rootP = `s100findRootFolderForShoot`;
			$folder =  "_playblastByShots/" ;
			$path = $rootP + $folder   ;
			$name = `s100PTBuildNameForPlayblast($fileN) `;
			$name = substituteAllString($name ,"_PREVIZ" , ("_" +$textF[$i] + "_layout") ) ;
			$pathName = $path + $name ;
			s100playblastToolsWithCamName($camera[$i] ,`playbackOptions -q -minTime`,`playbackOptions -q -maxTime` ,$pathName);
			pause -seconds 1;

            }

			playbackOptions -animationStartTime $start;
			playbackOptions -animationEndTime $end;
			//print "\nPlayblast done";
		}else{
			warning ("script did not find camera, check the cameras\'s name");
		}

	}else{
		warning "use zooShots to manage camera " ;
    }
$s100pbtvarForLoad =0 ;

}

global proc s100EXPExpSelectedShots()
{
string $textF[] = `textScrollList -q -selectItem  s100EXPFormLayoutTSL`;

s100FMExportPrevizToLayoutWithList($textF) ;


}
