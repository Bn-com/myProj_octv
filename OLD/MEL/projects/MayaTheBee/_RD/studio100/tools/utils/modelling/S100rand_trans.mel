global proc S100rand_transUI()
{


if ( `window -exists val_vtx_window` )
{
   deleteUI val_vtx_window; // delete window when it exists
}


window -title "Random translate selected Vertex" -resizeToFitChildren true val_vtx_window;

columnLayout;

text -l "select a geometry";
floatFieldGrp -numberOfFields 3 -label "Offset" -v1 0.3  -v2 0.3 -v3 0.3 s100RandOnMeshFF;


button -label "generate" -command "S100vertex" ;

showWindow val_vtx_window;
}


//S100rand_transUI;

global proc S100vertex()
{

float $rx = `floatFieldGrp -q -v1 s100RandOnMeshFF`;
float $ry = `floatFieldGrp -q -v2 s100RandOnMeshFF`;
float $rz = `floatFieldGrp -q -v3 s100RandOnMeshFF`;


string $sel[] = `ls -sl`;

	for($tmp in $sel)
	{
	string $varS[];
	string $listS[] = `listRelatives -s $tmp `;

		if(size($listS) > 0)
		{

		int $ch = 0 ;


			if(`nodeType $listS[0] ` == "mesh")
			{
			$ch = 1 ;

			select ($tmp +".vtx[*]") ;
			$varS= `filterExpand -sm 31`;

			}
			if(`nodeType $listS[0] ` == "nurbsSurface")
			{

			$ch=1;
			select ($tmp +".cv[*]") ;
			$varS = `filterExpand -sm 28`;
            }

			if($ch)
			{
			int $amount = 0;

				 progressWindow
					 -title "Doing Nothing"
					 -progress $amount
					 -status "random: 0%"
					 -max `size($varS)`
					 -isInterruptable false;

				for($i =0 ; $i < size($varS) ; $i++)
				{
				select $varS[$i] ;
				float $absX = `rand(1) `;
				float $absY = `rand(1) `;
				float $absZ = `rand(1) `;
				float $nRX ;
				float $nRY ;
				float $nRZ ;

					if($absX > .5)
					{
					 $nRX	= `rand($rx)`;
					}else{
					 $nRX	= - `rand($rx)`;
					}
					if($absY > .5)
					{
					 $nRY	= `rand($ry)`;
					}else{
					 $nRY	= - `rand($ry)`;
					}
					if($absZ > .5)
					{
					 $nRZ	= `rand($rz)`;
					}else{
					 $nRZ	= - `rand($rz)`;
					}

				move -r  $nRX $nRY $nRZ	;

					 $amount = $i ;

					 progressWindow -edit
						 -progress $amount
						 -status ("Sleeping: "+$amount+"%");

				}

				 progressWindow -endProgress;



			 }


        }

    }

	if(size($sel) > 0)
	{
		select $sel;
	}
}