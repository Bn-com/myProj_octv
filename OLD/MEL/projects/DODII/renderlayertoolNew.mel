//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
/// Copyright (C) 2000-2010 IDMT. All rights reserved.
///
/// Author:  黄璧 李锐（重庆）
///
/// Creation Date: 2009/06/01
///
/// Description: 渲染工具
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////


//hbRender Tools UI
/////////////////////////////////////////////////

global proc HbRenderTools()
{
	string $path = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\BenAdnIzzy\\render\\";
	if(`window -ex HbRenderToolsWin`) 
          deleteUI HbRenderToolsWin; 
             window -t "Render Tools" HbRenderToolsWin; 
				
		string $mainColumnLayout = `columnLayout -adjustableColumn true -rs 10 HbRenderToolsUIWin_main`;
			menuBarLayout;
					menu -label "Edit";
						menuItem -label "Reset Settings" -command "ResetSetting" ;
					menu -label "Help";
						menuItem -label "Help on Render Tools..." -command "";
				setParent ..;

		string $mainImage = `symbolButton -image ("Z:/Resource/Support/Maya/projects/Lionelville/icons/mytool.bmp") `;
		string $LittleTools = `frameLayout -label "Little Tools" -labelAlign "top" -cl 1  -cll true -cc "" -borderStyle "etchedIn" `;
				rowColumnLayout	 -numberOfColumns 3 -cw 1 120 -cw 2 120 -cw 3 120 ;
				button -l "删除材质"	 -c "source HbLittleTools.mel;HbDeleteMaterials;";
				button -l "模型转换"	 -c "source HbLittleTools.mel;LiRuiMeshConvert;";
				button -l "头发切换"	-c "source HbLittleTools.mel;hbhairofflayer;";
				button -l "替换高模"	 -c "source HbLittleTools.mel;HbReplaceToHight;";
				button -l "个人RGBPass"	 -c "HbRgbaMaterialsToolWin";
				button -l "修复namespace"	-c "source zwNamespace.mel; zwFixNamespace;" ;
				button -l "纹理转换"	 -c "source hbConvertTx1.mel;hbConvertTx;";
				button -l "控制器显隐"	 -c "HbHideAllCharCon;";
				button -l "导入头发灯光"	-c "source HbLittleTools.mel;HbImportHairLight;" ;
				setParent ..;
			setParent ..;
		string $HbRgbMaterrialTools = `frameLayout -label "Materrial Tools" -labelAlign "top" -cl 0   -cc "" -borderStyle "etchedIn" `;
	                   rowColumnLayout	 -numberOfColumns 8 -cw 1 45 -cw 2 45 -cw 3 45 -cw 4 45 -cw 5 45 -cw 6 45 -cw 7 45 -cw 8 45;
				string $colorB = `button -l "ColorB" -bgc 0 0 1 -ann "ColorB"-command "source HbRgbaMaterialTool.mel;HbMaterialB;"`;
				string $colorR = `button -l "ColorR" -bgc 1 0 0 -ann "ColorR"  -command "source HbRgbaMaterialTool.mel;HbMaterialR;"`;
				string $colorG = `button -l "ColorG" -bgc 0 1 0 -ann "ColorG"  -command "source HbRgbaMaterialTool.mel;HbMaterialG;"`;
				string $colorA = `button -l "ColorA" -bgc 1 1 1 -ann "ColorA" -command "source HbRgbaMaterialTool.mel;HbMaterialA;"`;
				string $matte  = `button -l "matte" -bgc 0.2 0.2 0.2 -ann "matte" -command "source HbRgbaMaterialTool.mel;HbMaterialM;"`;
				string $depth  = `button -l "depth" -bgc 0.5 0.5 0.5 -ann "depth"  -command "source ezRenderMainLayoutMaterial.mel;ezRenderMainLayoutMaterial_Assign(\"depth\");"`;
				string $shadow = `button -l "Shadow" -bgc 0.2 0.5 0.2 -ann "Shadow" -command "source ezRenderMainLayoutMaterial.mel;ezRenderMainLayoutMaterial_Assign(\"shadow\");"`;
				string $AO     = `button -l "AO" -bgc 0.9 0.9 0.9 -ann "AO"  -w 45 -h 40   -command "source ezRenderMainLayoutMaterial.mel;ezRenderMainLayoutMaterial_Assign(\"AO\");"`;
					setParent ..;
                               setParent ..;
		string $HbRgbPassTools = `frameLayout -label "RGBPass Tool" -labelAlign "top" -cl 0   -cc "" -borderStyle "etchedIn" `;
	                   rowColumnLayout -numberOfColumns 2 -cw 1 178 -cw 2 178;
                                string $button01=`button -height 30 -width 205 -bgc 0.6 1 0.6 -label "Creat RGBAPass" -c "source HbRgbpass.mel;HbCteatRgbPass"`;
                                string $button02=`button -height 30 -width 205 -bgc 0.6 1 0.6 -label "Get RGBAPass" -c "source HbRgbpass.mel;HbGetRgbPass"`;
				setParent ..;
                               setParent ..;
			   setParent ..;

	      string $RenderLayerTools = `frameLayout -label "Creat Object" -labelAlign "top"  -cl 0  -cc "" -borderStyle "etchedIn"`;
             formLayout CreatLayerListLayout;
		textScrollList -ams true 
                    CreatLayerList;
             columnLayout -rs 5 CreatLayerButton;
				button -l "自动"		-w 80 -c "AutoCreatFileSet";
				button -l "创建"		-w 80 -c "CreatFileSet";
				button -l "删除"		-w 80 -c "DeleteFileSet";
				button -l "改名"		-w 80 -c "RenameFileSet";
				button -l "添加物体"		-w 80 -c "AddObjectToSet";
				button -l "删除物体"		-w 80 -c "RemoveObjectFromSet";
				button -l "合并HBset"		-w 80 -c "HbCombineFile";
				button -l "选择物体"		-w 80 -c "SelectObjInFileSet";
				button -l "选择分割层"		-w 80 -c "SelectRenderLayer";
			//	button -l "分割文件"		-w 80 -c "HbDivideFile";
						setParent ..;
					setParent ..;
                                  setParent ..;


	string $RenderLayerToolsNEW = `frameLayout -label "Creat Render Layer File" -labelAlign "top"  -cl 0  -cc "" -borderStyle "etchedIn"`;
             formLayout CreatLayerRenderListLayout;
		textScrollList -ams true -h 200
                    CreatRenderLayerList;
		     columnLayout -rs 5 CreatRenderLayerButton;
		                button -l "删除层列表"                -w 80 -c "deletrenderlayerlist";
				button -l "分割文件"		-w 80 -c "HbDivideFile";

                             setParent ..;
				setParent ..;
                                  setParent ..;
             string $CreatRenderLayerTools = `frameLayout -label "Creat RenderLayers" -labelAlign "top" -cl 0  -cll false   -cc "" -borderStyle "etchedIn" `;
	     rowColumnLayout	 -numberOfColumns 3 -cw 1 120 -cw 2 120 -cw 3 120 ;

				button -l "Character"  -c "source HbCreatRenderLayerTools.mel;HbCreatCharacter \"\" ;";
				button -l "CharacterOcc"  -c "source HbCreatRenderLayerTools.mel;HbCharacterOcc  \"\" ;";
				button -l "Background"  -bgc 0.8 1 0.8 -c "source HbCreatRenderLayerTools.mel;HbBackgroundBG  \"\" ;";
				button -l "CharacterHair"  -c "source HbCreatRenderLayerTools.mel;HbCharacterHair  \"\" ;";
					popupMenu;
					menuItem -l "Get RenderSetting" -c "HbSettingWithMentalray \"hair\"";
				button -l "CharacterRGB"  -c "";
				button -l "BackgroundOcc" -bgc 0.8 1 0.8 -c "source HbCreatRenderLayerTools.mel;HbBackgroundOcc  \"\" ;";
				button -l "CharacterShaow"  -c "source HbCreatRenderLayerTools.mel;HbCharacterShadow \"\" ;";
				button -l ""  -c "";
				button -l "BackgroundDepth" -bgc 0.8 1 0.8 -c "source HbCreatRenderLayerTools.mel;HbBackgroundDepth  \"\" ;";
				setParent ..;
			setParent ..;
		     formLayout -edit
			 -af	CreatLayerList		"top"		5
			 -af	CreatLayerList		"left"		5
			 -ac	CreatLayerList		"right"		5	CreatLayerButton
			 -af	CreatLayerList		"bottom"   	5

			 -af	CreatLayerButton	"top"		5
			 -af	CreatLayerButton	"right"		5
			 -af	CreatLayerButton	"bottom" 	5
                         CreatLayerListLayout;

		     formLayout -edit
			 -af	CreatRenderLayerList		"top"		5
			 -af	CreatRenderLayerList		"left"		5
			 -ac	CreatRenderLayerList		"right"		5	CreatRenderLayerButton
			 -af	CreatRenderLayerList		"bottom"   	5


			 -af	CreatRenderLayerButton	"top"		5
			 -af	CreatRenderLayerButton	"right"		5
			 -af	CreatRenderLayerButton	"bottom" 	5
		         CreatLayerRenderListLayout;
      
      showWindow HbRenderToolsWin; 
      	string $GetAllSet[]=`ls "***_HBset*"`;
		for($aaaa in $GetAllSet)
		    {
		    textScrollList -e 
                    -append $aaaa
                    CreatLayerList;
		    }

}
/////////////////////////////////////////////////////
/// Auto Creat HBSet
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
global proc deletrenderlayerlist()
 {
      string $GetRenderLayerList[]=`textScrollList -q -si CreatRenderLayerList`;
      for ($renderin in $GetRenderLayerList)
       {
         textScrollList -e -ri $renderin CreatRenderLayerList;
        
       }
 }

global proc SelectRenderLayer()
{        
         string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	 $nnn = `size $GetHBsetList`;
	  if($nnn =="0")
	   {error "请在列表中选择一个\"HBset\"";
	   }
	string $result = `confirmDialog  -title "类别"	-message "请选择类别:" -button "SenceColor"-button "CharColor" -button "Caustic" -button "Depth"   -button "Occ" -b "Normal" -button "CharShadow" -b "BGShadow"  -b "Rgb"    -button "取消"`;
		if($result=="取消"||$result=="dismiss")
			{
			return;
			}
		string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int    $num = `tokenize $sceneName "_" $buff`;
	string $GetSceneNumber = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	string $filename=`file -q -loc`;
	string $buffer[];
	       $numToken= `tokenize $filename "/" $buffer`;
	int    $i;
	string $temp="";
		for($i=0;$i<$numToken-1;$i++)
			{
			$temp=$temp+$buffer[$i]+"/";
			}
		//print $temp;

	string $camname[]=`ls -type camera "**:cam_***_****"`;

		for($FileSetName in $GetHBsetList)
			{
			string $bufferSet[];
			$numTokenSet= `tokenize $FileSetName "_" $bufferSet`;
			string $DivideFileName=$temp+$GetSceneNumber+"_l1"+$bufferSet[0]+$result+"_lr_c001.mb";
                        //print $DivideFileName ; 
                       string  $renderlayerlist[];
			$renderlayerlist = `textScrollList -q -ai CreatRenderLayerList`;
			//print $renderlayerlist;
			 string $renderlayerlistin;
			   for ($renderlayerlistin in $renderlayerlist)
			     { string  $test [];
			       tokenize $renderlayerlistin "|" $test;
			         if ($test[2] == $DivideFileName)
			            {error "已经创建了该文件列表";
			             }
			     }

					textScrollList -e 
					-append ($result+"|"+$FileSetName+"|"+$DivideFileName)
					CreatRenderLayerList;
		     }
}

global proc AutoCreatFileSet()
{
      string $GetGroupName[]=`ls "**_****RN*group*" `;
	for($aaa in $GetGroupName)
		{
			if(`match "pullmor" $aaa `=="pullmor")
			{
				string $buff[];
				int $num = `tokenize $aaa "pull" $buff`;
				int $i=`size($buff[0])`;
				string $AutoSetName=`substring $buff[0] 10 $i`;
				string $GetSet[]=`ls ($AutoSetName+"_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name ($AutoSetName+"_HBset")`;
					select -cl;
					textScrollList -e 
					-append ($AutoSetName+"_HBset")
					CreatLayerList;
				}

			}
/////////////////////////////////////////
/////////////////////////////////////////
			if(`match "006006zw" $aaa `=="006006zw")
			{

				string $GetSet[]=`ls ("zwo_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name "zwo_HBset"`;
					select -cl;
					textScrollList -e 
					-append "zwo_HBset"
					CreatLayerList;
				}

			}
/////////////////////////////////////////
/////////////////////////////////////////
			if(`match "006001zw" $aaa `=="006001zw")
			{

				string $GetSet[]=`ls ("zwy_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name "zwy_HBset"`;
					select -cl;
					textScrollList -e 
					-append "zwy_HBset"
					CreatLayerList;
				}

			}
/////////////////////////////////////////
/////////////////////////////////////////
			if(`match "c007001bruno" $aaa `=="c007001bruno")
			{

				string $GetSet[]=`ls ("bruno_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name "bruno_HBset"`;
					select -cl;
					textScrollList -e 
					-append "bruno_HBset"
					CreatLayerList;
				}

			}
/////////////////////////////////////////
/////////////////////////////////////////
			if(`match "27001billy" $aaa `=="27001billy")
			{

				string $GetSet[]=`ls ("billy_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name "billy_HBset"`;
					select -cl;
					textScrollList -e 
					-append "billy_HBset"
					CreatLayerList;
				}

			}

/////////////////////////////////////////
/////////////////////////////////////////
			if(`match "28001susie" $aaa `=="28001susie")
			{

				string $GetSet[]=`ls ("susie_HBset")`;
				if(size($GetSet)==0)
				{
					select -r $aaa;
					$createSetResult = `sets -name "susie_HBset"`;
					select -cl;
					textScrollList -e 
					-append "susie_HBset"
					CreatLayerList;
				}

			}



		}
}

////////////////////////////////////////
// add Object To  HBSet
////////////////////////////////////////

global proc AddObjectToSet()
{
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
		string $GetNewObjectName[]=`ls -sl`;
		for($NewObject in $GetNewObjectName)
			{
		            sets -edit -forceElement  $GetHBsetList[0] $NewObject ;
			}
   
}


////////////////////////////////////////
// Remove Object To  HBSet
////////////////////////////////////////

global proc RemoveObjectFromSet()
{
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	string $GetNewObjectName[]=`ls -sl`;
		if (size($GetNewObjectName))
		{
			for($ccc in $GetHBsetList)
			{
			sets -edit -rm  $ccc $GetNewObjectName;
			}
		}
}


////////////////////////////////////////
////////////////////////////////////////
global proc CreatFileSet()
{
	string $result = `promptDialog -title "File Set" -message "创建Hbset(层名):" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
	if ($result == "OK") 
		{
			string $HbFileSetName = `promptDialog -query -text`;
			string $GetNewObjectName[]=`ls -sl`;
			$nLR = `size $GetNewObjectName`;


string $LayerType1=`match "SenceColor"  $HbFileSetName `;
string $LayerType2=`match "CharColor"  $HbFileSetName `;
string $LayerType3=`match "Caustic" $HbFileSetName `;
string $LayerType4=`match "Depth"  $HbFileSetName `;
string $LayerType5=`match "Occ"  $HbFileSetName `;
string $LayerType6=`match "Normal"  $HbFileSetName `;
string $LayerType7=`match "CharShadow"  $HbFileSetName `;
string $LayerType8=`match "BGShadow"  $HbFileSetName `;
//string $LayerType9=`match "LightMask"  $HbFileSetName `;
string $LayerType10=`match "Rgb"  $HbFileSetName `;
//string $LayerType11=`match "hair"  $HbFileSetName `;
string $LayerType=$LayerType1+$LayerType2+$LayerType3+$LayerType4+$LayerType5+$LayerType6+$LayerType7+$LayerType8+$LayerType10;

int $nnnn;
$nnnn= `size $LayerType`;
if ($nnnn> 0)
 {
  $string = "请不要包含敏感字符" +$LayerType;
  error $string;
 }

			if ($nLR == "0" )
			 {
			  error "请选择物体";
			 }
			$d=`match "_" $HbFileSetName`;
			$n = `size $d`;
			if ($n =="1")
			{ 
			  error "请不要包含\"_\"字符";
			}
			select -cl;
				for($cc in $GetNewObjectName)
					{
					select -add $cc;

					}
					$createSetResult = `sets -name ($HbFileSetName+"_HBset")`;

					textScrollList -e 
					-append ($HbFileSetName+"_HBset")
					CreatLayerList;
		}
}



////////////////////////////////////////
////////////////////////////////////////
global proc RenameFileSet()
{
	string $result = `promptDialog -title "File Set" -message "重命名为(层名):" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	if ($result == "OK") 
		{
			string $HbFileSetName = `promptDialog -query -text`;
			rename $GetHBsetList[0] ($HbFileSetName+"_HBset");
			textScrollList -e -removeItem $GetHBsetList[0]
			-append ($HbFileSetName+"_HBset")
			CreatLayerList;

		}
}




////////////////////////////////////////
////////////////////////////////////////
global proc DeleteFileSet()

{
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
		for($aa in $GetHBsetList)
		{
			delete $aa;
			textScrollList -e -removeItem $aa
			CreatLayerList;

		}
}




////////////////////////////////////////
////////////////////////////////////////
global proc SelectObjInFileSet()
{
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	select -cl;
	for($FileSetName in $GetHBsetList)
			{
			string $ObjectName[]=`sets -q  $FileSetName`;
				for($aa in $ObjectName)
					{
					select -add $aa;
					}
			}
			
}




////////////////////////////////////////
////////////////////////////////////////
global proc HbCombineFile()
{
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	select -cl;
	for($FileSetName in $GetHBsetList)
		{
		string $ObjectName[]=`sets -q  $FileSetName`;
			for($aa in $ObjectName)
				{
				select -add $aa;
			
				}
		}
	string $result = `promptDialog -title "File Set" -message "创建Hbset(层名):" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
	if ($result == "OK") 
		{
		string $HbFileSetName = `promptDialog -query -text`;
		string $GetNewObjectName[]=`ls -sl`;
		select -cl;
			for($cc in $GetNewObjectName)
				{
				select -add $cc;

				}
				$createSetResult = `sets -name ($HbFileSetName+"_HBset")`;

				textScrollList -e 
				-append ($HbFileSetName+"_HBset")
				CreatLayerList;
		}
				select -cl;
	
			
}



global proc HbDivideFile()
{
	string $sceneName = `file -q -sceneName -shortName`;
	string $GetAllSceneName="";
	string $buff[];
	int    $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	string $cams[] = `ls -type camera ("*_"+$buff[1]+"_"+$buff[2]+"*") ("*:*_"+$buff[1]+"_"+$buff[2]+"*")`;
		if (size($cams)>1)
			{
			confirmDialog  -title "警告" -message "场景中存在多个镜头摄像机，请删除多余的!" -button "确认";
			return ;
			}
		else if (size($cams)==0)
			{
			confirmDialog  -title "警告" -message "场景中没有对应镜头的摄像机，请修正!" -button "确认";
			return ;
			}
	/*string $result = `confirmDialog  -title "类别"	-message "请选择类别:" -button "SenceColor"-button "CharColor" -button "Caustic" -button "Depth"   -button "Occ" -b "Normal" -button "CharShadow" -b "BGShadow" -b "LightMask" -b "Rgb"  -button "hair"   -button "取消"`;
		if($result=="取消"||$result=="dismiss")
			{
			return;
			}*/
	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int    $num = `tokenize $sceneName "_" $buff`;
	string $GetSceneNumber = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	string $filename=`file -q -loc`;
	string $buffer[];
	       $numToken= `tokenize $filename "/" $buffer`;
	int    $i;
	string $temp="";
		for($i=0;$i<$numToken-1;$i++)
			{
			$temp=$temp+$buffer[$i]+"/";
			}
		print $temp;

	string $camname[]=`ls -type camera "**:cam_***_****"`;
	string $GetHBsetList[]=`textScrollList -q -si CreatLayerList`;
	string $GetRendfileList[]=`textScrollList -q -si CreatRenderLayerList`;
	 $nni = `size $GetRendfileList`;
	  if($nni == "0")
	    {error "请选择一个需要分割的文件";
	    }
		for($Renderfile in $GetRendfileList)
			{
			string $buff2[];
                        string $result;
                        string $FileSetName;
			tokenize $Renderfile "|" $buff2;
			 $FileSetName = $buff2[1];
			 $result = $buff2[0];
			string $bufferSet[];
			$numTokenSet= `tokenize $FileSetName "_" $bufferSet`;
			string $DivideFileName=$temp+$GetSceneNumber+"_l1"+$bufferSet[0]+$result+"_lr_c001.mb";
			select -cl;
			string $ObjectName[]=`sets -q  $FileSetName`;
				for($aa in $ObjectName)
					{
					select -add $aa;			
					}
			select -add $camname[0];
			int $FileNumber=`file -q -ex ($DivideFileName)`;
				if($FileNumber==0)
				{
					string $window = `window -w 300 -h 20-title ("正在分割"+$GetSceneNumber+"_l1_"+$bufferSet[0]+$result+"_lr_c001.mb")`;
					columnLayout;
					string $progressControl = `progressBar -maxValue 10 -width 300`;
					showWindow $window;
					deleteUI $window;
					file -op "v=0" -typ "mayaBinary" -pr -es $DivideFileName;
					$GetAllSceneName=$GetAllSceneName+$DivideFileName+"@";
				}
				else if($FileNumber==1)
				{
				 	string $resultNote = `confirmDialog  -title "提示"	-message "已经存在这个文件" -button "覆盖" -button "重命名" -button "取消" `;
							if($resultNote=="取消"||$resultNote=="dismiss")
							{
								select -cl;
								return;
							}
							if($resultNote=="重命名")
							{
								string $resultReman = `promptDialog -title "File Set" -message "重命名(层名):" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
								string $HbFileSetName = `promptDialog -query -text`;
								string $DivideFileName=$temp+$GetSceneNumber+"_l1"+$HbFileSetName+$result+"_lr_c001.mb";
								file -op "v=0" -typ "mayaBinary" -pr -es $DivideFileName;
								$GetAllSceneName=$GetAllSceneName+$DivideFileName+"@";
							}
							if($resultNote=="覆盖")
							{
								file -op "v=0" -typ "mayaBinary" -pr -es $DivideFileName;
								$GetAllSceneName=$GetAllSceneName+$DivideFileName+"@";
							}
				}
			}
			select -cl;
	string $OutPutCmd="";
	string $ProjectName = `workspace -q -fn`;
	string $bufferFile[];
	       $numTokenFile= `tokenize $GetAllSceneName "@" $bufferFile`;
		for($FileName in $bufferFile)
			{
			string $aa="Z:/Resource/Support/Maya/projects/Lionelville/";
			$OutPutCmd=$OutPutCmd+`getenv maya_location`+"/bin/mayabatch   -proj \""+$ProjectName+"\" -file \""+$FileName+"\" -script \""+$aa+"HbCraetRenderLayer_new.mel\""+"\n";
			}
	$exampleFileName ="D:/HbCamd.bat";
	$OutPutCmd =$OutPutCmd+"pause"+"\n";
	$fileId=`fopen $exampleFileName "w"`;
	fprint $fileId $OutPutCmd;
	fclose $fileId;
	system("load d:/HbCamd.bat");

} 



HbRenderTools;