global proc  HJFBshaderSet()
{
string $node[]=`ls -sl -dag`;
for ($i in $node)
{
	if (`gmatch $i "*Shape*"`==1)
	{       
		string $lispath[]=`listConnections -d on -s off $i`;
		int $sizeSG;
		if (`size $lispath`==1)
			$sizeSG=`size $lispath`;
		else 
			$sizeSG=`size $lispath`-1;
	
		for ($m=0;$m<$sizeSG;$m++)
		{
		if (`gmatch $lispath[$m] "*SG*"`==1)
		{
		string $shadea=$lispath[$m];
			if (`gmatch $shadea "*Buffer*"`==0)
			{
			string $MRshadea[]=`listConnections -d off -s on ($shadea+".surfaceShader")`;
			string $sdr = `shadingNode -asShader buffer_store`;
			string $fbrshade = `shadingNode -asShader -name $MRshadea[0] surfaceShader`;
			string $set = `sets -name BufferSG -renderable true -noSurfaceShader true -empty`;
			connectAttr -f ($sdr+".outValue") ($fbrshade+".outColor");
			connectAttr -f ($MRshadea[0]+".outColor") ($sdr+".primarybuffer");
			connectAttr ($fbrshade+".outColor") ($set+".surfaceShader");
			connectAttr -f "FbOcc_Shader.outColor" ($sdr+".inbuffer_1");
			setAttr ($sdr+".store_0") 1;
			setAttr ($sdr+".store_1") 1;
			for ($j=0;$j<1;$j++ )
				{
					int $m=$j+1;
					setAttr ($sdr+".reorder_"+$m) $j;
				}
			string $setshades[]=`sets -query  $shadea`;
			select $setshades;
			hyperShade -assign $fbrshade;
			select -cl;
}
}
}
}
}
}
	


