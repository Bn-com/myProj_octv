//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc doMakeEyes()
{	
	source "doMakeEyes.mel";
	source "zxEdgeConstrain.mel";
	// Make matte shader and assign it to objects
	if(!(`objExists "MatteSG"`) && !(`objExists "Matte"`))
	{
		shadingNode -asShader lambert -name Matte;
		setAttr "Matte.color" -type double3 0 0 0 ;
		setAttr Matte.matteOpacityMode 0;
		sets -renderable true -noSurfaceShader true -empty -name "MatteSG";
		connectAttr -force Matte.outColor MatteSG.surfaceShader;
	}

	//Create Eye's render layer
	createRenderLayer -name "CharEyes" -number 1 -makeCurrent -noRecurse $allObjects $allEyes `ls -lights`;
	editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
	setAttr "defaultRenderLayer.renderable" 0;
				
	string $chars[] = {"drkatedaniels","bethgadgets","ollygadgets","walterscooterglasses","diverdoug","yuming","morayeel"};
	for ($char in $chars)
	{
		switch ($char)
		{
			case "drkatedaniels" :
				
		
		}
	}
				
				
				$leftEyeEdgeL_01 = $rfSN + ":MSH_eye_L_.e[381]" ;
				$leftEyeEdgeR_01 = $rfSN + ":MSH_eye_L_.e[401]" ;
				$rightEyeEdgeL_01 = $rfSN + ":MSH_eye_R_.e[381]" ;
				$rightEyeEdgeR_01 = $rfSN + ":MSH_eye_R_.e[401]";
				select $leftEyeEdgeL_01 $leftEyeEdgeR_01;
				doApplyPointLight($leftEye_01);	
				select $rightEyeEdgeL_01 $rightEyeEdgeR_01;
				doApplyPointLight($rightEye_01);	
	}
}

global proc doApplyPointLight(string $item)
{
	zxEdgeConstrain;
	string $locGrp = `rename zxEdgeCons1 LocGrp`;
	string $pLight = `pointLight`;
	parent $pLight $locGrp;
	$pLightTransform = `listRelatives -parent $pLight`;
	string $listLights[] = `listConnections -s on -d off "defaultLightSet.dagSetMembers"`;
	int $countLight = size($listLights)-1;
	if($countLight != 0)
	{
		disconnectAttr ($pLightTransform[0] + ".instObjGroups") ("defaultLightSet.dagSetMembers["+$countLight+"]");
	}
	if($countLight == 0)
	{
		disconnectAttr ($pLightTransform[0] + ".instObjGroups") ("defaultLightSet.dagSetMembers[0]");
	}
	setAttr ($pLight + ".emitDiffuse") 0;
	setAttr ($pLightTransform[0] + ".rotateX")	0;
	setAttr ($pLightTransform[0] + ".rotateY")	0;	
	setAttr ($pLightTransform[0] + ".rotateZ")	0;
	setAttr ($pLightTransform[0] + ".translateX") -3;
	setAttr ($pLightTransform[0] + ".translateY") -0.796;
	setAttr ($pLightTransform[0] + ".translateZ") 0;
	lightlink -make -light $pLightTransform -object $item;
}
