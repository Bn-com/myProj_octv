

global proc LRshadeclearUI() 
{    
   $mats=`ls -mat -l`;
   $nn =`size $mats`;
    int $n;
    $n=LRcheck();
    if (`window -exists shadeclear`)
		deleteUI shadeclear;
	window -title "删除材质"  -s 1
	       -widthHeight 100 110 -resizeToFitChildren true
	       shadeclear;
	       columnLayout 
		             -w 100 -h 100;
	        text -label ("场景中一共含有" +$nn+"个材质\n其中有"+$n+ "个链接透明通道的材质") info;
	        button -label "删除所有材质" -c "HbDeleteMaterials"  ;
	        button -label "删除无透明通道的材质" -c "LRdel"  ;

	showWindow shadeclear;
	print "";
}




global proc  LRdel() 
{
string $message = "删除无透明通道材质~~请确认~"; 
string $retun = `confirmDialog -title "警告" -message $message -button "确认" -button "取消" -ds "取消" -db "取消"`;
  if($retun == "确认")
    { 
    editRenderLayerGlobals -currentRenderLayer defaultRenderLayer;
$mats=`ls -mat -l`;
$n =`size $mats`;
int $i;
string $to[];
string $from[];
for ($i=0;$i<$n;$i++)
 {

  if( catch(`connectionInfo -isDestination ($mats[$i] + ".transparency")`))

    {
      if (!`connectionInfo -isDestination ($mats[$i] + ".outTransparency")`)
       {
          $from[0]=$mats[$i];
          appendStringArray($to,$from,1);
       }
    }


  else
  {

   if (!`connectionInfo -isDestination ($mats[$i] + ".transparency")`)
   {
    $from[0]=$mats[$i];
    appendStringArray($to, $from,1);
   }
   }
  }
 if (`size $to`>0)
 {  $layer =`listConnections renderLayerManager.renderLayerId`;
    print $layer[0];
    editRenderLayerGlobals -currentRenderLayer $layer[0];
    for ($m in $to)
    {
      select -cl;
     catch(` hyperShade -objects $m`) ;
      $obj =`ls -sl`;
      if (`size $obj` !=0)
      { 

        if( catch(`hyperShade -assign lambert1`))
        {
          print ("无法给"+$obj[0]+"材质\n");
        }
        select -cl;

      }
  }
  }
 catch( hyperShadePanelMenuCommand("hyperShadePanel1", "deleteUnusedNodes"));
clear $from;
clear $to;


}

}





global proc int LRcheck2() 
{

$mats=`ls -mat -l`;
$n =`size $mats`;
int $i;
string $to[];
string $from[];
for ($i=0;$i<$n;$i++)
 {

  if( catch(`connectionInfo -isDestination ($mats[$i] + ".transparency")`))

    {
      if (!`connectionInfo -isDestination ($mats[$i] + ".outTransparency")`)
       {
          $from[0]=$mats[$i];
          appendStringArray($to,$from,1);
       }
    }


  else
  {

   if (!`connectionInfo -isDestination ($mats[$i] + ".transparency")`)
   {
    $from[0]=$mats[$i];
    appendStringArray($to, $from,1);
   }
   }
  }
return `size $to`;
clear $from;
clear $to;
print "\n\n";
}


global proc int LRcheck() 
{

$mats=`ls -mat -l`;
$n =`size $mats`;
int $i;
string $to[];
string $from[];
for ($i=0;$i<$n;$i++)
 {

  if( catch(`connectionInfo -isDestination ($mats[$i] + ".transparency")`))

    {
      if (`connectionInfo -isDestination ($mats[$i] + ".outTransparency")`)
       {
          $from[0]=$mats[$i];
          appendStringArray($to,$from,1);
       }
    }


  else
  {

   if (`connectionInfo -isDestination ($mats[$i] + ".transparency")`)
   {
    $from[0]=$mats[$i];
    appendStringArray($to, $from,1);
   }
   }
  }
return `size $to`;
clear $from;
clear $to;
print "\n\n";
}

global proc HbDeleteMaterials()

{
string $message = "删除所有材质~~请确认~"; 
string $retun = `confirmDialog -title "警告" -message $message -button "确认" -button "取消" -ds "取消" -db "取消"`;
  if($retun == "确认")
    { 
       hyperShadePanelMenuCommand("hyperShadePanel1", "deleteShadingGroupsAndMaterials");
       hyperShadePanelMenuCommand("hyperShadePanel1", "deleteTextures");

       hyperShade -assign lambert1;
       SelectAll;

       hyperShade -assign initialShadingGroup;
       select -cl;
    }

    string $mats2[];
/*
    int $nn2;
    int $n2;
   $mats2=`ls -mat -l`;
   $nn2 =`size $mats2`;
   $n2=LRcheck();

 text -e label ("场景中一共含有" +$nn2+"个材质\n其中"+$n2+ "个链接透明通道的材质") info;
 */
}


