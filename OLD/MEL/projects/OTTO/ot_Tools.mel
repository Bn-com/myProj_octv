//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: HanHong
//	Created: 
//
//	Update/Change: HanHong
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////
//前期工具集
global proc ot_Pretools()
{

	if (`window -exists ot_preTools`) deleteUI ot_preTools;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_Pretools.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//前期mel
global proc ot_createGeoCacheSet()
{
	if (`objExists "GEO_CACHE_SET"`)
	{
	    delete GEO_CACHE_SET;
	}
	sets -name "GEO_CACHE_SET";
	select -r -ne "GEO_CACHE_SET";	
}
//"source \"//file-cluster/GDC/Resource/Support/Maya/projects/OTTO/ot_Tools.mel\";ot_createGeoCacheSet();"
global proc ot_createBackgroundset()
{
	if (`objExists "Background_SET"`)
	{
	    delete Background_SET;
	}
	sets -name "Background_SET";
	select -r -ne "Background_SET";	
}


global proc ot_MeshReplace()
{

	if (`window -exists ot_modSwitch`) deleteUI ot_modSwitch;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_modSwitch.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//解算设置
global proc ot_FxSet()
{

	if (`window -exists ot_FxSet`) deleteUI ot_FxSet;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_FxSet.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//解算工具面板
global proc ot_Fxtools()
{

	if (`window -exists ot_Fxtools`) deleteUI ot_Fxtools;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_Fxtools.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//MS 切换工具面板
global proc HHMSswitche()
{

	if (`window -exists ot_msSwitch`) deleteUI ot_msSwitch;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_msSwitch.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//渲染代理材质切换面板
global proc HHProxyswitche()
{

	if (`window -exists ProxyMat`) deleteUI ProxyMat;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_ProxMat.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//教室场灯光切换面板
global proc HHClassSwitch()
{

	if (`window -exists ot_ClassSwitch`) deleteUI ot_msSwitch;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/OTTO/ot_ClassSwitch.ui"`;
	if (`window -q -topEdge $window` < 0 || `window -q -leftEdge $window` < 0)
	{
		window -e -topLeftCorner 100 80 $window;
	}
	showWindow $window;
}
//存dy文件
global proc ot_dyfilename()
{
	string $source = `file -q -sn -shn`;
	string $fd = `workspace -q  -rootDirectory` + "scenes/";
	string $fn = $fd + `substitute "an" $source "dy"`;
	file -rn $fn;
	file -f -save -options "v=0" -type "mayaBinary" ;
	//file -force -options "v=0" -type "mayaBinary" -pr -ea $fn;
}
//导相机，并转为渲染相机

global proc ot_HHRendercam()
{
	string $oldcam[]=`ls -type camera`;
	source "//file-cluster/GDC/Resource/Support/Maya/projects/OTTO/ot_ImportRenderCam.mel"; ot_ImportRenderCam();
	string $newcam[]=`ls -type camera`;
	string $cams[]=stringArrayRemove($oldcam,$newcam);
	string $camshape=$cams[0];
	string $camdf[]=`listRelatives -p $camshape`;
	select -r $camdf[0];
	python("execfile(\"//file-cluster/GDC/Resource/Support/Maya/projects/JT/HbJtRenderCam.py\")");
	ot_HHCamSet;
	setAttr "defaultRenderGlobals.modifyExtension" 0;
}
global proc ot_HHCamSet()
{
	string $cams[]=`ls -ca`;
	for ($camshape in $cams)
	{
		string $camrenderable = $camshape+".renderable";

		if (`match "RenderCAM" $camshape `!="")
		{
			string $cams[]=`listRelatives -p $camshape`;
			string $camchildren[]=`listRelatives -c $cams[0]`;
			for ($camc in $camchildren)
			{
				if(`match "stereo" $camc`!="")
				{
					string $camShapes[]=`listRelatives -s $camc`;
					setAttr ($camShapes[0]+".renderable") 1;

				}
			}
		}

		else if (`match "stereoCamera" $camshape`=="")
		{
			setAttr $camrenderable 0;
		}
	}
	
}
// 存文件（渲染）
global proc ot_RenderTools_Create_File_UI()
{
    // Get the dialog's formLayout.
    string $form = `setParent -q`;

    formLayout -e -width 20 $form;

	string $t = `text -l "文件名"`;
    textField -w 30 "ot_RenderTools_Create_File_name";
    setFocus "ot_RenderTools_Create_File_name";
    string $b1 = `button -l "存文件"    -c "ot_RenderTools_Create_File_Button();layoutDialog -dismiss \"Abort\""`;

	formLayout -edit
		-attachForm            $t   "top"    5
		-attachForm            $t   "left"   5
		-attachNone            $t   "bottom"
		-attachForm            $t   "right"  5   	
		
		-attachControl         "ot_RenderTools_Create_File_name"   "top"    5 $t
		-attachForm            "ot_RenderTools_Create_File_name"   "left"   5
		-attachNone            "ot_RenderTools_Create_File_name"   "bottom"
		-attachForm            "ot_RenderTools_Create_File_name"   "right"  5
		
		-attachControl         $b1  "top"    5 "ot_RenderTools_Create_File_name"
		-attachForm            $b1  "left"   25
		-attachNone            $b1  "bottom"
		-attachForm            $b1  "right"  25 

    $form;
    
}
global proc ot_RenderTools_Create_File_Button()
{
	global string $ot_RenderTools_Create_File_Name;
	$ot_RenderTools_Create_File_Name=` textField -q -tx "ot_RenderTools_Create_File_name"`;

}



global proc ot_savefile()
{
	string $objselect[]=`ls -sl`;
	string $source = `file -q -sn -shn`;
	string $buffer[];
	$numTokens = `tokenize $source "_" $buffer`;
	string $filename =$buffer[4]+"_"+$buffer[5]+"_"+$buffer[6];
	global string $ot_RenderTools_Create_File_Name;
	$ot_RenderTools_Create_File_Name="";
	layoutDialog -ui "ot_RenderTools_Create_File_UI" -t "存文件";
	if ($ot_RenderTools_Create_File_Name=="")	return;
	$ot_RenderTools_Create_File_Name+="";
	string $fd = `workspace -q  -rootDirectory` + "scenes/";
	string $fn = $fd + `substitute $filename $source $ot_RenderTools_Create_File_Name`+"_lr_c001";
	select  $objselect;
	file -force -options "v=0" -typ "mayaBinary" -pr -es $fn;
//file -f -constructionHistory 0 -channels 0 -constraints 0 -expressions 0 -shader 0 -type "mayaBinary" -exportAll $fn;
}


// Get Camera
global proc otGetCameraUI()
{
	string $project, $episode, $sequence, $scene;

	string $sceneName = `file -query -shortName -sceneName`;
	string $project = zwGetProject($sceneName);
	if ($project == "")
	{
		warning "未知项目";
	}
	else if ($project == "Enyo" || $project == "LilLarikkins" || zwHasSeq($project))
	{
		string $str = `match "^[^_.]+_[^_.]+_[^_.]+_[^_.]+" $sceneName`;
		if ($str != "")
		{
			string $buf[];
			tokenize $str "_" $buf;
			$episode = $buf[1];
			$sequence = $buf[2];
			$scene = $buf[3];
		}
	}
	else if (zwIsRainbowProject($project))
	{
		string $str = `match "^[^_.]+_[^_.]+_[^_.]+_[^_.]+" $sceneName`;
		if ($str != "")
		{
			string $buf[];
			tokenize $str "_" $buf;
			$episode = $buf[1];
			$scene = $buf[2];
		}
	}
	else
	{
		string $str = `match "^[^_.]+_[^_.]+_[^_.]+" $sceneName`;
		if ($str != "")
		{
			string $buf[];
			tokenize $str "_" $buf;
			$episode = $buf[1];
			$scene = $buf[2];
		}
	}

	if (`window -exists zwGetCameraUI`)
		deleteUI zwGetCameraUI;
	window -title "Reference Camera" -resizeToFitChildren true zwGetCameraUI;
		columnLayout -adjustableColumn true;
			textFieldGrp -editable false -label "Project:" -text $project textFieldGrpProject;
				popupMenu -button 1 -postMenuCommandOnce true -postMenuCommand "zwGetCameraPopupMenu \"popupMenuProjectL\"" popupMenuProjectL;
				popupMenu -button 3 -postMenuCommandOnce true -postMenuCommand "zwGetCameraPopupMenu \"popupMenuProjectR\"" popupMenuProjectR;
			textFieldGrp -label "Episode:" -text $episode textFieldGrpEpisode;
			textFieldGrp -visible (zwHasSeq($project)) -label "Sequence:" -text $sequence textFieldGrpSequence;
			textFieldGrp -label "Scene:" -text $scene textFieldGrpScene;
			button -label "Reference" -command "ot_hhMsCamera1111";
	showWindow zwGetCameraUI;
}

//MS导相机渲单帧
/*global proc ot_hhMsCamera()
{
	source "zwCameraImportExport.mel";
	otGetCameraUI;
}
*/

//MS导相机渲单帧
/*global proc ot_hhMsCamera1111()
{
//	string $oldcam[]=`ls -type camera`;
//	source "zwCameraImportExport.mel"; zwGetCameraUI;
//	string $newcam[]=`ls -type camera`;
//	string $camnews[]=stringArrayRemove($oldcam,$newcam);
//	ot_hhCamoff;
//	string $newcamshape=$camnews[0];
	
	string $project = `textFieldGrp -query -text textFieldGrpProject`;
	if ($project == "")
	{
		error "请选择Project";
	}
	string $episode = `textFieldGrp -query -text textFieldGrpEpisode`;
	if ($episode == "")
	{
		error "请选择Episode";
	}
	string $sequence = "";
	if (`textFieldGrp -query -visible textFieldGrpSequence`)
	{
		$sequence = `textFieldGrp -query -text textFieldGrpSequence`;
		if ($sequence == "")
		{
			error "请选择Sequence";
		}
	}
	string $scene = `textFieldGrp -query -text textFieldGrpScene`;
	if ($scene == "")
	{
		error "请选择Scene";
	}
	
	zwGetCameraUIGetCameraEx $project $episode $sequence $scene;

	string $camnews[] = `ls -type "camera" ("CAM*:CAM_" + $episode + "_" + $sequence + "_" + $scene + "_bakedCenterCamShape")`;
	ot_hhCamoff;
	string $newcamshape=$camnews[0];

	string $buff[];
	$nums=`tokenize $newcamshape "_" $buff`;
	string $EP=$buff[1];
	string $SQ=$buff[2];
	string $SE=$buff[3];
	string $cams[]=`ls -ca`;
	for ($camshape in $cams)
	{
		if (`match $newcamshape $camshape `!="")
		{
			
			setAttr ($camshape+".renderable") 1;
		}
	}

	setMayaSoftwareFrameExt(1, 0);
	setAttr "miDefaultOptions.minSamples" 0;
	setAttr "miDefaultOptions.maxSamples" 2;
        setAttr "miDefaultOptions.filter" 2;
	setAttr "defaultRenderGlobals.imageFormat" 32;
	$filename = $SQ+"_"+$SE+".png";
	string $path ="//file-cluster/GDC/Projects/OTTO/OTTO_Scratch/MasterLighting/Compositiong/Detect/"+$EP+"/"+$SQ+"/";
	string $fileshort = `file -q -sn -shn`;
	string $fd = `workspace -q  -rootDirectory` + "scenes/"+$fileshort;
	ot_HHSavefile;
	batchRender -filename $fileshort -renderCommandOptions ("-rd "+ $path + " -im "+ $filename);
}
*/
//后台渲
global proc ot_hhMsCamera()
{
	ot_hhCamoff;
	ot_hhRenameCameras;
	string $camnews[] = `ls -type "camera" `;
	for ($newcamshape in $camnews )
	{
		if (`match "Q0" $newcamshape`!="")
		{
			setAttr ($newcamshape+".renderable") 1;
			string $buff[];
			$nums=`tokenize $newcamshape "_" $buff`;
			string $EP=$buff[1];
			string $SQ=$buff[2];
			string $SE=$buff[3];
			setMayaSoftwareFrameExt(1, 0);
			setAttr "miDefaultOptions.minSamples" 0;
			setAttr "miDefaultOptions.maxSamples" 2;
			setAttr "miDefaultOptions.filter" 2;
			setAttr "defaultRenderGlobals.imageFormat" 32;
			$filename = $SQ+"_"+$SE+".png";
			string $path ="//file-cluster/GDC/Projects/OTTO/OTTO_Scratch/MasterLighting/Compositiong/Detect/"+$EP+"/"+$SQ+"/";
			string $fileshort = `file -q -sn -shn`;
			string $fd = `workspace -q  -rootDirectory` + "scenes/"+$fileshort;
			ot_HHSavefile;
			//batchRender -filename $fileshort -renderCommandOptions ("-rd "+ $path +" -cam "+$newcamshape+" -im "+ $filename);
			string $sceneName = `file -query -sceneName`;
			$sceneName = `substituteAllString $sceneName "/" "\\"`;
			system ("start render.exe -rd " + $path + " -cam " + $newcamshape + " -im " + $filename + " " + $sceneName);
		}
	}
}
//屏渲
global proc ot_hhMSRenderCam()
{
	ot_hhRenameCamera;
	source "renderWindowPanel.mel";
	string $camnews[] = `ls -type "camera" `;
	for ($newcamshape in $camnews )
	{
		if (`match "Q0" $newcamshape`!="")
		{
			setAttr ($newcamshape+".renderable") 1;
			string $buff[];
			$nums=`tokenize $newcamshape "_" $buff`;
			string $EP=$buff[1];
			string $SQ=$buff[2];
			string $SE=$buff[3];
			setMayaSoftwareFrameExt(1, 0);
			setAttr "miDefaultOptions.minSamples" 0;
			setAttr "miDefaultOptions.maxSamples" 2;
			setAttr "miDefaultOptions.filter" 2;
			setAttr "defaultRenderGlobals.imageFormat" 32;
			$filename = $SQ+"_"+$SE+".png";
			string $path ="//file-cluster/GDC/Projects/OTTO/OTTO_Scratch/MasterLighting/Compositiong/Detect/"+$EP+"/"+$SQ+"/";
			renderWindowRenderCamera "render" "renderView" $newcamshape;
			string $fileshort = `file -q -sn -shn`;
			string $fd = `workspace -q  -rootDirectory` + "scenes/"+$fileshort;
			string $sceneName = `file -query -sceneName`;
			$sceneName = `substituteAllString $sceneName "/" "\\"`;
			string $renderedImageName = `optionVar -query "renderedImageName"`;
			sysFile -move ($path+ $filename) $renderedImageName;

		}
	}
}
//关闭所有相机的渲染属性
global proc ot_hhCamoff()
{
	string $cams[]=`ls -ca`;
	for ($cam in $cams)
	{
	   string $camrenderable = $cam+".renderable";
	   setAttr $camrenderable 0; 
	}
}
global proc ot_HHSavefile()
{
	string $source = `file -q -sn -shn`;
	string $fd = `workspace -q  -rootDirectory` + "scenes/";
	string $fn = $fd + $source;
	file -rn $fn;
	file -f -save -options "v=0" -type "mayaBinary" ;
	//file -force -options "v=0" -type "mayaBinary" -pr -ea $fn;
}
//代理树 材质
//color
global proc ot_HHProxyColor()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "tex.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//occ
global proc ot_HHProxyOcc()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "occ.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//normal
global proc ot_HHProxyNormal()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "normal.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//Zdepth
global proc ot_HHProxyZdepth()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "zdepth.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//R
global proc ot_HHProxyR()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "R.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//G
global proc ot_HHProxyG()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "G.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//B
global proc ot_HHProxyB()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "B.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//Mat
global proc ot_HHProxyM()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "M.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//idpass
global proc ot_HHProxyI()
{
	string $objselect[]=`ls  -sl `;
	for ($obj in $objselect)
	{
	    string $Shape[] =`listRelatives -s $obj `;
	    string $proxNode=$Shape[0]+".miProxyFile";
	    string $proxyall =`getAttr  $proxNode`;
	    string $proxyShot=`match "[^/]+$" $proxyall `;
	    string $MI=`match "[^_]+$" $proxyShot `;
	    string $occproxyShot=`substitute $MI $proxyShot "I.mi"`;
	    string $proxyocc = `substitute $proxyShot$proxyall $occproxyShot`;
	   setAttr -type "string" $proxNode $proxyocc;

	}
}
//
global proc HHdisMode()
{
	string $Shapes[]=`ls -s`;
	for ($shape in $Shapes)
	{

		string $disMod=$shape+".displayInvisibleFaces";
		if(`objExists $disMod`)
		{
			setAttr $disMod 0; 
		} 
	}	
}
//
/*
global proc HHReSG()
{
	string $Mats[]=`ls -mat`;
	for ($mat in $Mats)
	{
		if(`match "c0" $mat`!="")
		{
			string $oldSG[]=`listConnections -t "shadingEngine" $mat`;
			if(size($oldSG)!=0)
			{
				string $newSG=$mat+"SG";
				if($oldSG[0]!=$newSG)
				{
					rename $oldSG[0] $newSG;
				}
			}
		}
	}
}
*/
global proc HHReSG()
{
	string $Mats[]=`ls -mat`;
	for ($mat in $Mats)
	{
		if(`match "lambert1" $mat`==""&&`match "particleCloud1" $mat`=="")
		{
			string $oldSG[]=`listConnections -t "shadingEngine" $mat`;
			if(size($oldSG)!=0)
			{
				string $newSG=$mat+"SG";
				if($oldSG[0]!=$newSG)
				{
					rename $oldSG[0] $newSG;
				}
			}
		}
	}
}
//修改相机命名
global proc ot_hhRenameCameras()
{
	string $camnews[] = `ls -type "camera" `;
	for ($newcamshape in $camnews )
	{
		 if(`match "_Camera" $newcamshape`!="")
		 {
		     string $cam[]=`listRelatives -p $newcamshape`;
		     if (`match "CAM_B003_" $cam[0]`=="")
		     {
			     string $newf="CAM_B003_"+$cam[0];
			     rename $cam[0] $newf;
		     }
		 }
	}
}
//蓝房子蓝招牌
global proc ot_hhHouseSwitchB()
{
	ot_hhHouseSwitchDis;
	string $SGS[]=`ls -type "shadingEngine"`;
	for($s in $SGS)
	{
		if(`match "Topperhomelocation_c_hi_wallSG" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_wall_blue" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}
		if(`match "Topperhomelocation_c_hi_logo" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_logo_blue" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}

	}
}
//红房子黄招牌
global proc ot_hhHouseSwitchY()
{
	ot_hhHouseSwitchDis;
	string $SGS[]=`ls -type "shadingEngine"`;
	for($s in $SGS)
	{
		if(`match "Topperhomelocation_c_hi_wallSG" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_wall_red" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}
		if(`match "Topperhomelocation_c_hi_logo" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_logo_yellow" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}

	}
}
//红房子红招牌
global proc ot_hhHouseSwitchR()
{
	ot_hhHouseSwitchDis;
	string $SGS[]=`ls -type "shadingEngine"`;
	for($s in $SGS)
	{
		if(`match "Topperhomelocation_c_hi_wallSG" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_wall_red" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}
		if(`match "Topperhomelocation_c_hi_logo" $s`!="")
		{
			string $mat[]=`ls -mat`;
			for ($m in $mat)
			{
				if (`match "Topperhomelocation_c_hi_logo_red" $m`!="")
				{
					connectAttr -f ($m+".outColor") ($s+".surfaceShader");
				}
			}
		}

	}
}
//断开连接
global proc ot_hhHouseSwitchDis()
{
	string $SGS[]=`ls -type "shadingEngine"`;
	for($s in $SGS)
	{
		if(`match "Topperhomelocation_c_hi_wall" $s`!=""||`match "Topperhomelocation_c_hi_logo" $s`!="")
		{
			string $con[]=`listConnections $s`;
			for($c in $con)
			{
				if (`match "Topperhomelocation_c_hi_wall_blue" $c`!=""||`match "Topperhomelocation_c_hi_wall_red" $c`!=""||`match "Topperhomelocation_c_hi_logo_red" $c`!=""||`match "Topperhomelocation_c_hi_logo_yellow" $c`!=""||`match "Topperhomelocation_c_hi_logo_blue" $c`!="")
				{
					disconnectAttr ($c+".outColor") ($s+".surfaceShader");
				}
			}
		}
	}
}






