global proc rnd_wxII_lgt_chr()
{
	string $light01[]=`ls -type spotLight "LGT_*_key_light_0Shape1" "LGT_*_fill_light_0Shape1" "LGT_*_rim_light_0Shape1" "LGT_*_rim_light_0Shape2"`;
	string $light02[]=`ls -type spotLight "LGT_*_key_light_0Shape2" "LGT_*_fill_light_0Shape2" "LGT_*_bounce_light_0Shape1" "LGT_*_magic_light_0Shape1" "LGT_*_extra_light_0Shape1"`;

	editRenderLayerGlobals  -currentRenderLayer defaultRenderLayer;
	layerEditorLayerButtonSelect 0 defaultRenderLayer;
	select $light01;
	showHidden -a;

	select $light02;
	showHidden -a;

	string $lgtNames[]=`ls -type renderLayer "sq_*_lgt"`;
	string $lshdNames[]=`ls -type renderLayer "sq_*_lshd"`;
	string $extraNames[]=`ls -type renderLayer "sq_*_extra"`;
	string $eshdNames[]=`ls -type renderLayer "sq_*_eshd"`;

	select $light01;
	editRenderLayerMembers -noRecurse $lgtNames[0] `ls -selection`;
	editRenderLayerMembers -noRecurse $lshdNames[0] `ls -selection`;

	select $light02;
	editRenderLayerMembers -noRecurse $eshdNames[0] `ls -selection`;
	editRenderLayerMembers -noRecurse $extraNames[0] `ls -selection`;

//******************lgt layer********************
	editRenderLayerGlobals  -currentRenderLayer $lgtNames[0];
	layerEditorLayerButtonSelect 0 $lgtNames[0];
	//key
	editRenderLayerAdjustment ($light01[0]+".color");
	setAttr ($light01[0]+".color") -type double3 1 0 0 ;
	editRenderLayerAdjustment ($light01[0]+".shadowColor");
	setAttr ($light01[0]+".shadowColor") -type double3 0 0 0 ;

	//fill
	editRenderLayerAdjustment ($light01[1]+".color");
	setAttr ($light01[1]+".color") -type double3 0 1 0 ;
	editRenderLayerAdjustment ($light01[1]+".shadowColor");
	setAttr ($light01[1]+".shadowColor") -type double3 0 0 0 ;

	//rim01
	editRenderLayerAdjustment ($light01[2]+".color");
	setAttr ($light01[2]+".color") -type double3 0 0 1 ;
	editRenderLayerAdjustment ($light01[2]+".shadowColor");
	setAttr ($light01[2]+".shadowColor") -type double3 0 0 0 ;

	//rim02
	editRenderLayerAdjustment ($light01[3]+".color");
	setAttr ($light01[3]+".color") -type double3 0 0 1 ;
	editRenderLayerAdjustment ($light01[3]+".shadowColor");
	setAttr ($light01[3]+".shadowColor") -type double3 0 0 0 ;

//******************lshd layer********************
	editRenderLayerGlobals  -currentRenderLayer $lshdNames[0];
	layerEditorLayerButtonSelect 0 $lshdNames[0];
	//key
	setAttr ($light01[0]+".color") -type double3 0 0 0 ;
	setAttr ($light01[0]+".shadowColor") -type double3 1 0 0 ;

	//fill
	setAttr ($light01[1]+".color") -type double3 0 0 0 ;
	setAttr ($light01[1]+".shadowColor") -type double3 0 1 0 ;

	//rim01
	setAttr ($light01[2]+".color") -type double3 0 0 0 ;
	setAttr ($light01[2]+".shadowColor") -type double3 0 0 1 ;

	//rim02
	setAttr ($light01[3]+".color") -type double3 0 0 0 ;
	setAttr ($light01[3]+".shadowColor") -type double3 0 0 1 ;

//******************extra layer********************
	editRenderLayerGlobals  -currentRenderLayer $extraNames[0];
	layerEditorLayerButtonSelect 0 $extraNames[0];
	//key02
	editRenderLayerAdjustment ($light02[0]+".color");
	setAttr ($light02[0]+".color") -type double3 1 0 0 ;
	editRenderLayerAdjustment ($light02[0]+".shadowColor");
	setAttr ($light02[0]+".shadowColor") -type double3 0 0 0 ;

	//fill02
	editRenderLayerAdjustment ($light02[1]+".color");
	setAttr ($light02[1]+".color") -type double3 0 1 0 ;
	editRenderLayerAdjustment ($light02[1]+".shadowColor");
	setAttr ($light02[1]+".shadowColor") -type double3 0 0 0 ;

	//bounce
	editRenderLayerAdjustment ($light02[2]+".color");
	setAttr ($light02[2]+".color") -type double3 0 1 0 ;
	editRenderLayerAdjustment ($light02[2]+".shadowColor");
	setAttr ($light02[2]+".shadowColor") -type double3 0 0 0 ;

	//magic
	editRenderLayerAdjustment ($light02[3]+".color");
	setAttr ($light02[3]+".color") -type double3 0 0 1 ;
	editRenderLayerAdjustment ($light02[3]+".shadowColor");
	setAttr ($light02[3]+".shadowColor") -type double3 0 0 0 ;

	//extra
	editRenderLayerAdjustment ($light02[4]+".color");
	setAttr ($light02[4]+".color") -type double3 0 0 1 ;
	editRenderLayerAdjustment ($light02[4]+".shadowColor");
	setAttr ($light02[4]+".shadowColor") -type double3 0 0 0 ;

//******************eshd layer********************
	editRenderLayerGlobals  -currentRenderLayer $eshdNames[0];
	layerEditorLayerButtonSelect 0 $eshdNames[0];
	//key02
	setAttr ($light02[0]+".color") -type double3 0 0 0 ;
	setAttr ($light02[0]+".shadowColor") -type double3 1 0 0 ;

	//fill02
	setAttr ($light02[1]+".color") -type double3 0 0 0 ;
	setAttr ($light02[1]+".shadowColor") -type double3 0 1 0 ;

	//bounce
	setAttr ($light02[2]+".color") -type double3 0 0 0 ;
	setAttr ($light02[2]+".shadowColor") -type double3 0 1 0 ;


	//magic
	setAttr ($light02[3]+".color") -type double3 0 0 0 ;
	setAttr ($light02[3]+".shadowColor") -type double3 0 0 1 ;

	//extra
	setAttr ($light02[4]+".color") -type double3 0 0 0 ;
	setAttr ($light02[4]+".shadowColor") -type double3 0 0 1 ;
}





global proc rnd_wxII_lgt_env()
{

	string $light01[]=`ls -type light "LGT_*_key_light_env_*" "*:LGT_*_key_light_env_*" "*:*:LGT_*_key_light_env_*"`;
	string $light02[]=`ls -type light "LGT_*_fill_light_env_*" "*:LGT_*_fill_light_env_*" "*:*:LGT_*_fill_light_env_*"`;
	string $light03[]=`ls -type light "LGT_*_rim_light_env_*" "*:LGT_*_rim_light_env_*" "*:*:LGT_*_rim_light_env_*"`;

	string $lgtNames[]=`ls -type renderLayer "sq_*_lgt"`;		if (!`size $lgtNames`)	error "场景中没有lgt层，请使用RBW工具创建";
	string $lshdNames[]=`ls -type renderLayer "sq_*_lshd"`;		if (!`size $lshdNames`)	error "场景中没有lshd层，请使用RBW工具创建";
	string $extraNames[]=`ls -type renderLayer "sq_*_extra"`;	if (!`size $extraNames`)	error "场景中没有extra层，请使用RBW工具创建";
	string $eshdNames[]=`ls -type renderLayer "sq_*_eshd"`;		if (!`size $eshdNames`)	error "场景中没有eshd层，请使用RBW工具创建";

//******************lgt layer********************
	editRenderLayerGlobals  -currentRenderLayer $lgtNames[0];
	layerEditorLayerButtonSelect 0 $lgtNames[0];

	//key
	for ($a in $light01)
	{
		editRenderLayerAdjustment ($a+".color");
		setAttr ($a+".color") -type double3 1 0 0 ;

		editRenderLayerAdjustment ($a+".shadowColor");
			if (`attributeExists useDepthMapShadows $a`)
			{
				if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
			}
	}
	//fill
	for ($a in $light02)
	{
		editRenderLayerAdjustment ($a+".color");
		setAttr ($a+".color") -type double3 0 1 0 ;

		editRenderLayerAdjustment ($a+".shadowColor");
			if (`attributeExists useDepthMapShadows $a`)
			{
				if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
			}
	}
	//rim01
	for ($a in $light03)
	{
		editRenderLayerAdjustment ($a+".color");
		setAttr ($a+".color") -type double3 0 0 1 ;

		editRenderLayerAdjustment ($a+".shadowColor");
			if (`attributeExists useDepthMapShadows $a`)
			{
				if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
			}
	}

//******************lshd layer********************
	editRenderLayerGlobals  -currentRenderLayer $lshdNames[0];
	layerEditorLayerButtonSelect 0 $lshdNames[0];

	//key
	for ($a in $light01)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 1 0 0 ;
		}
	}
	//fill
	for ($a in $light02)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 1 0 ;
		}
	}
	//rim01
	for ($a in $light03)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 1 ;
		}
	}

//******************extra layer********************
	editRenderLayerGlobals  -currentRenderLayer $extraNames[0];
	layerEditorLayerButtonSelect 0 $extraNames[0];

	//key
	for ($a in $light01)
	{
		setAttr ($a+".color") -type double3 1 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
		}
	}
	//fill
	for ($a in $light02)
	{
		setAttr ($a+".color") -type double3 0 1 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
		}
	}
	//rim01
	for ($a in $light03)
	{
		setAttr ($a+".color") -type double3 0 0 1 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 0 ;
		}

	}


//******************eshd layer********************
	editRenderLayerGlobals  -currentRenderLayer $eshdNames[0];
	layerEditorLayerButtonSelect 0 $eshdNames[0];

	//key
	for ($a in $light01)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 1 0 0 ;
		}
	}
	//fill
	for ($a in $light02)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 1 0 ;
		}
	}
	//rim01
	for ($a in $light03)
	{
		setAttr ($a+".color") -type double3 0 0 0 ;
		if (`attributeExists useDepthMapShadows $a`)
		{
			if (`getAttr ($a+".useDepthMapShadows")`)	setAttr ($a+".shadowColor") -type double3 0 0 1 ;
		}
	}

}





