//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: ZhaoZhongJie
//	Created: 
//
//	Update/Change: ZhaoZhongJie
//	Last Updated: 
//	Description:
//
//	Update/Change: zhangzhengyi
//	Last Updated:  2011.03.08
//	Description:   //buSetRenderLayerTool;
//////////////////////////////////////////////////////////

global proc hjbuhead()
{
string $node[]=`ls -sl -dag`;
for ($i in $node)
{
if (`gmatch $i "*Shape"`==1)
{
string $lispath[]=`listConnections -d on -s off ($i+".instObjGroups")`;
string $shadea[]=`listConnections -d off -s on ($lispath[0]+".surfaceShader")`;
string $laytext[]=`listConnections -d off -s on ($shadea[0]+".color")`;
if (`objectType $laytext[0]`=="layeredTexture")
{

string $texls[]=`listConnections -p on ($laytext[0]+".inputs")`;
setAttr ($laytext[0]+".inputs[0].isVisible") 0;

if(`editRenderLayerGlobals -q -currentRenderLayer`!=0)
{
editRenderLayerAdjustment ($laytext[0]+".alphaIsLuminance");
setAttr ($laytext[0]+".alphaIsLuminance") 0;


}



for ($n in $texls)
{

if (`gmatch $n "*[M-m]outh*"`!=0&&`gmatch $n "*outColor*"`==1)
{
print $n;
string $texlsa[]=`listConnections -p on $n`;
string $buffer[];
$numTokens = `tokenize $texlsa[0] "." $buffer`;
string $listid=$buffer[0]+"."+$buffer[1];
if(`editRenderLayerGlobals -q -currentRenderLayer`!=0)
{
editRenderLayerAdjustment ($listid+"isVisible");
setAttr ($listid+"isVisible") 0;

}
}

}
}

}
}
}


global proc hjmouthonly()
{
string $node[]=`ls -sl -dag`;
for ($i in $node)
{
if (`gmatch $i "*Shape"`==1)
{
string $lispath[]=`listConnections -d on -s off ($i+".instObjGroups")`;
string $shadea[]=`listConnections -d off -s on ($lispath[0]+".surfaceShader")`;
string $laytext[]=`listConnections -d off -s on ($shadea[0]+".color")`;
if (`objectType $laytext[0]`=="layeredTexture")
{

string $texls[]=`listConnections -p on ($laytext[0]+".inputs")`;
connectAttr -force ($laytext[0]+".outTransparency") ($shadea[0]+".transparency");
setAttr ($laytext[0]+".inputs[0].isVisible") 0;

if(`editRenderLayerGlobals -q -currentRenderLayer`!=0)
{
//editRenderLayerAdjustment ($shadea[0]+".ambientColor");
editRenderLayerAdjustment ($shadea[0]+".incandescence");

//setAttr ($shadea[0]+".ambientColor") -type double3 0 0 0 ;
setAttr ($shadea[0]+".incandescence") -type double3 0 0 0 ;

editRenderLayerAdjustment ($laytext[0]+".alphaIsLuminance");
editRenderLayerAdjustment ($i+".doubleSided");
setAttr ($laytext[0]+".alphaIsLuminance") 0;
setAttr ($i+".doubleSided") 0;

}
for ($n in $texls)
{

if (`gmatch $n "*[M-m]outh*"`==0&&`gmatch $n "*outColor*"`==1)
{
string $texlsa[]=`listConnections -p on $n`;
string $buffer[];
$numTokens = `tokenize $texlsa[0] "." $buffer`;
string $listid=$buffer[0]+"."+$buffer[1];
if(`editRenderLayerGlobals -q -currentRenderLayer`!=0)
{
editRenderLayerAdjustment ($listid+"isVisible");
setAttr ($listid+"isVisible") 0;
}
}


}
}

}
}
}


global proc setCau()
{
		hjIlluminaEnv;
		hjligcaubut;
		deleteUI illuminaEnvUI;
		string $lightNames[]=`ls "CauLight_directional*"`;
		setAttr ($lightNames[0]+".rx") -90;
		setAttr ($lightNames[0]+".sx") 70;
		setAttr ($lightNames[0]+".sy") 70;
		setAttr ($lightNames[0]+".sz") 70;
		setAttr ($lightNames[0]+".Jlightspeed") 0.015;
		
		string $cauLayerNames[]=`ls -type renderLayer "lightCau*"`;
		editRenderLayerGlobals -currentRenderLayer $cauLayerNames[0];
		layerEditorLayerButtonSelect 0 ($cauLayerNames[0]);
		
		
		string $diffuseName[]=`ls -type lambert "Diffuse*"`;
		hookShaderOverride($cauLayerNames[0], "", $diffuseName[0]);

		
		miLoadMayatomr();
		miCreateDefaultNodes();
		editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
		setAttr -type "string" defaultRenderGlobals.currentRenderer "mentalRay";	
		
		editRenderLayerAdjustment "miDefaultOptions.rayTracing";
		setAttr "miDefaultOptions.rayTracing" 0;
		
		editRenderLayerAdjustment "miDefaultOptions.maxSamples";
		setAttr "miDefaultOptions.maxSamples" 2;
		
		editRenderLayerAdjustment "miDefaultOptions.contrastR";
		setAttr "miDefaultOptions.contrastR" 0.01;
		
		editRenderLayerAdjustment "miDefaultOptions.contrastG";
		setAttr "miDefaultOptions.contrastG" 0.01;
		
		editRenderLayerAdjustment "miDefaultOptions.contrastB";
		setAttr "miDefaultOptions.contrastB" 0.01;
		
		string $oceans[]=`ls -type ocean `;
		for ($a in $oceans)
		{
		setAttr ($a+".waveHeight[0].waveHeight_Position") 0;
		setAttr ($a+".waveHeight[0].waveHeight_FloatValue") 1;
		setAttr ($a+".waveHeight[1].waveHeight_Position") 1;
		setAttr ($a+".waveHeight[1].waveHeight_FloatValue") 0.6;
		}				
}


global proc setBGOcc()
{

 	string $createLayerName="bgAO";
 	string $slObjNames[]=`ls -sl`;
	string $newLayers=`createRenderLayer -name $createLayerName -number 1 -noRecurse $slObjNames`;
	setAttr "defaultRenderLayer.renderable" 0;
	
	editRenderLayerGlobals -currentRenderLayer $newLayers;
	layerEditorLayerButtonSelect 0 ($newLayers);


	renderLayerBuiltinPreset occlusion $newLayers;
	layerEditorLayerButtonMaterialOverride $newLayers;
	string $surfaceShadeNode[]=`ls -sl`;
	string $occs[]=`defaultNavigation -defaultTraversal -destination ($surfaceShadeNode[0]+".outColor")`;

	setAttr ($occs[0]+".samples") 128;
	setAttr ($occs[0]+".spread") 1;
	setAttr ($occs[0]+".max_distance") 30;
 	



}

global proc setCHOcc()
{
	string $createLayerName;
 	string $result = `promptDialog 
 		-title "Create CHOcc"
 		-message "Enter Layer Name:"
 		-button "OK" -button "Cancel"
 		-defaultButton "OK" -cancelButton "Cancel"
 		-dismissString "Cancel"`;
 
 	if ($result == "OK") {
 		$createLayerName = `promptDialog -query -text`;
 		$createLayerName+="AO";
 	string $slObjNames[]=`ls -sl`;
	string $newLayers=`createRenderLayer -name $createLayerName -number 1 -noRecurse $slObjNames`;
	setAttr "defaultRenderLayer.renderable" 0;
	
	editRenderLayerGlobals -currentRenderLayer $newLayers;
	layerEditorLayerButtonSelect 0 ($newLayers);


	renderLayerBuiltinPreset occlusion $newLayers;
	layerEditorLayerButtonMaterialOverride $newLayers;
	string $surfaceShadeNode[]=`ls -sl`;
	string $occs[]=`defaultNavigation -defaultTraversal -destination ($surfaceShadeNode[0]+".outColor")`;

	setAttr ($occs[0]+".samples") 128;
	setAttr ($occs[0]+".spread") 1.0;
	setAttr ($occs[0]+".max_distance") 30;
//set eyebrow;	
		string $meimao[]=`ls -type transform "*eyebrow""*:*eyebrow""*:*:*eyebrow""*eyelash*""*:*:*eyelash*""*:*eyelash*"`;
		for ($a in $meimao)
		{
		editRenderLayerAdjustment ($a+".miDeriveFromMaya");
		setAttr ($a+".miDeriveFromMaya") 0;
		
		editRenderLayerAdjustment ($a+".miHide");
		setAttr ($a+".miHide") 1;
		
		}
 	}



}


global proc buSetRenderLayerTool()
{
	string $window = `window -title "buSetRenderLayerTool"
 		-iconName "buSRL"`;
 	columnLayout -adjustableColumn true;
 		button -label "Caustic" -c "setCau";
 		button -label "BGOcc" -command "setBGOcc";
 		button -label "CHOcc" -command "setCHOcc";
 		button -label "idPass" -command "source \"//file-cluster/GDC/Resource/Support/Maya/scripts/zzjIdPassInfo.mel\";zzjIdPassInfo;";
		button -label "HeadRender" -command "hjbuhead";
		button -label "MouthRender" -command "hjmouthonly";
 	setParent ..;
 	showWindow $window;
   window -edit -widthHeight 200 120 $window;
}
//buSetRenderLayerTool;
