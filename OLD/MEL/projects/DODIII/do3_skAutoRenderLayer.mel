
/*
global proc do_skAutoRenderLayer()
{
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/nj_FixBeforeRendering.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/njEnvMaterialChange.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjIdPassInfo.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/nj_Rnd_ChangeCarsColor.mel";
	python("execfile('//file-cluster/gdc/Resource/Support/Maya/projects/DODIII/append_syspath.py')");
	python("import do3_config_RG_parameters as dcrp");
	python("reload(dcrp)");
	python("import do3_renderTools_charLight as drtc");
	python("reload(drtc)");
	if (`window -exists AutoRenderLayer`) deleteUI AutoRenderLayer;
	string $window=`loadUI -uiFile "E:/test/AutoRenderLayer.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
}

*/

global proc do3_skAutoRenderLayer()
{
	if(`window -ex do3_skAutoRenderLayer`)
		deleteUI do3_skAutoRenderLayer;
	window -t "Do3自动渲染分层" -menuBar 1 -rtf 1 do3_skAutoRenderLayer;
	menu -label "说明";
		menuItem -label "帮助" -c "";

	global int $FW_m8_RendererNumber=1;
	global int $FW_m8_FieldOptions=1;
	global int $FW_m8_UseFilter=2;
	global int $FW_m8_PixelFilterType=1;
	global int $FW_m8_2DSmooth=1;
	global int $FW_m8_MissionNum=0;
	
	string $form = `formLayout`;
	string $tabs = `tabLayout -innerMarginWidth 5 -innerMarginHeight 5`;

	formLayout -edit
		-attachForm $tabs "top"    0
		-attachForm $tabs "left"   0
		-attachForm $tabs "bottom" 0
		-attachForm $tabs "right"  0
		$form;
		
	string $tab_1 =`paneLayout -configuration "single" -w 315 -h 500 FWing_RL_pane_001`;
		scrollLayout FWing_m8_scroll_001;	
		columnLayout;
		
		//角色CO信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]CO_信息输出" -borderStyle "etchedOut" FWing_RL_frame_001;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150  -cl2 "center" "center";	
				button -l "信息输出" -w 120 -al "center" -c "do3_skChrInfo_write(\"co\");";
				button -l "增加输出" -w 120 -c "do3_skChrInfo_add(\"co\");";
				setParent..;
				setParent..;setParent..;

		//角色AO信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]AO_信息输出" -borderStyle "etchedOut" FWing_RL_frame_002;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "信息输出" -w 120 -c "do3_skChrInfo_write(\"ao\");";
				button -l "增加输出" -w 120 -c "do3_skChrInfo_add(\"ao\");";
				setParent..;
				setParent..;setParent..;

		//角色Normal信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Normal_信息输出" -borderStyle "etchedOut" FWing_RL_frame_003;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "信息输出" -w 120 -c "do3_skChrInfo_write(\"normal\");";
				button -l "增加输出" -w 120 -c "do3_skChrInfo_add(\"normal\");";
				setParent..;
				setParent..;setParent..;

		//角色Eyes信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Eyes_信息输出" -borderStyle "etchedOut" FWing_RL_frame_004;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "灯光信息输出" -w 120 -c "do3_skChrInfo_write(\"eyes_light\");";
				button -l "灯光增加输出" -w 120 -c "do3_skChrInfo_add(\"eyes_light\");";
				setParent..;

			rowLayout -nc 2 -cw2 150 150;	
				button -l "Eyes模型信息输出" -w 120 -c "do3_skChrInfo_write(\"eyes_geo\");";
				button -l "Eyes模型增加输出" -w 120 -c "do3_skChrInfo_add(\"eyes_geo\");";
				setParent..;

			rowLayout -nc 2 -cw2 150 150;	
				button -l "Mask模型信息输出" -w 120 -c "do3_skChrInfo_write(\"eyes_mask\");";
				button -l "Mask模型增加输出" -w 120 -c "do3_skChrInfo_add(\"eyes_mask\");";
				setParent..;
			setParent..;setParent..;

		//角色Fringe信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Fringe_信息输出" -borderStyle "etchedOut" FWing_RL_frame_005;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "模型信息输出" -w 120 -c "do3_skChrInfo_write(\"fringe_geo\");";
				button -l "模型增加输出" -w 120 -c "do3_skChrInfo_add(\"fringe_geo\");";
				setParent..;

			rowLayout -nc 2 -cw2 150 150;	
				button -l "灯光信息输出" -w 120 -c "do3_skChrInfo_write(\"fringe_light\");";
				button -l "灯光增加输出" -w 120 -c "do3_skChrInfo_add(\"fringe_light\");";
				setParent..;
			setParent..;setParent..;

		//角色Rimlight信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Rimlight_信息输出" -borderStyle "etchedOut" FWing_RL_frame_006;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "模型信息输出" -w 120 -c "do3_skChrInfo_write(\"rimlight_geo\");";
				button -l "模型增加输出" -w 120 -c "do3_skChrInfo_add(\"rimlight_geo\");";
				setParent..;

			rowLayout -nc 2 -cw2 150 150;	
				button -l "灯光信息输出" -w 120 -c "do3_skChrInfo_write(\"rimlight_light\");";
				button -l "灯光增加输出" -w 120 -c "do3_skChrInfo_add(\"rimlight_light\");";
				setParent..;
			setParent..;setParent..;

		//角色Rbb信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Rbb_信息输出" -borderStyle "etchedOut" FWing_RL_frame_007;
			columnLayout;
			rowLayout -nc 2 -cw2 150 150;	
				button -l "模型信息输出" -w 120 -c "do3_skChrInfo_write(\"rbb_geo\");";
				button -l "模型增加输出" -w 120 -c "do3_skChrInfo_add(\"rbb_geo\");";
				setParent..;

			rowLayout -nc 2 -cw2 150 150;	
				button -l "发射源信息输出" -w 120 -c "do3_skChrInfo_write(\"rbb_source\");";
				button -l "发射源增加输出" -w 120 -c "do3_skChrInfo_add(\"rbb_source\");";
				setParent..;
			setParent..;setParent..;

		//角色RGB信息输出
		frameLayout -w 300 -cll 0 -cl 0 -label "[角色]Rgb_信息输出" -borderStyle "etchedOut" FWing_RL_frame_008;
			columnLayout ;
			rowLayout -nc 2 -cw2 150 150;	
				textField -text "请输入层名" -w 120 FWing_RL_RGB_name;
				button -l "新增RGB层" -w 120 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;textScrollList -e -a $FWing_RL_RGB_LayerName FWing_RL_RGB_Layers_textScroll";
				setParent..;

			//rowLayout；
			rowLayout -nc 2 -cw2 150 150 -h 122;	
				textScrollList -w 120 -h 122 -numberOfRows 8 -removeAll -allowMultiSelection true -showIndexedItem 4 FWing_RL_RGB_Layers_textScroll;
				columnLayout;
					button -l "R模型信息输出" -w 120 -bgc 1 0 0  -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_write(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_R\");";						
					button -l "R模型增加输出" -w 120 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_add(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_R\");";	
					button -l "G模型信息输出" -w 120 -bgc 0 1 0 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_write(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_G\");";	
					button -l "G模型增加输出" -w 120 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_add(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_G\");";	
					button -l "B模型信息输出" -w 120 -bgc 0 0.4 1 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_write(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_B\");";
				setParent..;
			setParent..;
				
			columnLayout ;
				rowLayout -nc 2 -cw2 150 150;	
				button -l "删除所选层" -w 120 -c "do3_skAutoRender_textFeildScrollRemove(\"FWing_RL_RGB_Layers_textScroll\")";
				button -l "B模型增加输出" -w 120 -c "string $FWing_RL_RGB_LayerName = `textField -q -text FWing_RL_RGB_name`;do3_skChrInfo_add(\"rgb_\"+$FWing_RL_RGB_LayerName+\"_B\");";
				setParent..;
			setParent..;

			columnLayout ;
				rowLayout -nc 2 -cw2 150 150;	
				button -l "输出层信息" -w 120 -c "do3_skAutoRender_RGB_write";
				button -l "重新载入层" -w 120 -c "do3_skAutoRender_RGB_read(\"FWing_RL_RGB_Layers_textScroll\")";
				setParent..;
			setParent..;
			setParent..;setParent..;
		setParent..;
		setParent..;setParent..;

	string $tab_2 =`paneLayout -configuration "single" -w 320 -h 450 FWing_RL_pane_002`;
			
		columnLayout;


		scrollLayout -w 320 -h 450 FWing_m8_scroll_002;
		//角色分层选择
		frameLayout -w 310 -cll 0 -cl 0 -label "角色分层选择" -borderStyle "etchedOut" FWing_RL_frame_101;
			columnLayout;
			//角色CO,AO层创建
			rowLayout -nc 2 -cw2 160 160 -h 30 -cl2 "center" "center";	
				checkBox -v 1 -label "角色CO层创建" FWing_RL_co_checkbox;
				checkBox -v 1 -label "角色AO层创建" FWing_RL_ao_checkbox;
				setParent..;
				
			//角色Normal,Eyes层创建
			rowLayout -nc 2 -cw2 160 160 -h 30;	
				checkBox -v 1 -label "角色Normal层创建" FWing_RL_normal_checkbox;
				checkBox -v 1 -label "角色Eyes层创建" FWing_RL_eyes_checkbox;
				setParent..;

			//角色Rringe，Rimlight层创建
			rowLayout -nc 2 -cw2 160 160 -h 30;	
				checkBox -v 1 -label "角色Rfringe层创建" FWing_RL_rfinge_checkbox;
				checkBox -v 1 -label "角色Rimlight层创建" FWing_RL_rimlight_checkbox;
				setParent..;

			//角色rbb层创建
			rowLayout -nc 2 -h 30;	
				checkBox -v 1 -label "角色rbb层创建" -onCommand ("floatFieldGrp -e -en 1 FWing_RL_rbb_startFrame; intFieldGrp -e -en 1 FWing_RL_rbb_size") -offCommand ("floatFieldGrp -e -en 0 FWing_RL_rbb_startFrame; intFieldGrp -e -en 0 FWing_RL_rbb_size") FWing_RL_rbb_checkbox;
				setParent..;
			
				rowLayout -nc 2 -cw2 130 160 -h 30;	
				floatFieldGrp -en 1 -numberOfFields 1 -label "开始帧" -value1 1001 -en 1 -cw2 50 70 -cat 1 "right" 1 -cat 2 "both" 1 FWing_RL_rbb_startFrame;
				intFieldGrp -en 1 -numberOfFields 1 -label "大小" -value1 1 -en 1 -cw2 50 70 -cat 1 "right" 1 -cat 2 "both" 1  -v1 1 FWing_RL_rbb_size;
				setParent..;

			//角色RGB层创建
			rowLayout -nc 3 -h 30;	
				checkBox -v 1 -label "角色RGB层创建" -onCommand ("textScrollList -e -en 1 FWing_RL_RGB_Layers_textScroll_Load") -offCommand ("textScrollList -e -en 0 FWing_RL_RGB_Layers_textScroll_Load")  FWing_RL_rgb_checkbox;
				setParent..;
			
				rowLayout;
				textScrollList -w 315 -h 100 -en 1 -numberOfRows 8 -removeAll -allowMultiSelection true -showIndexedItem 4 FWing_RL_RGB_Layers_textScroll_Load;				
				do3_skAutoRender_RGB_read("FWing_RL_RGB_Layers_textScroll_Load");
				setParent..;

				rowLayout -nc 2 -cw2 160 160;
				button -l "删除所选层" -w 140 -c "do3_skAutoRender_textFeildScrollRemove(\"FWing_RL_RGB_Layers_textScroll_Load\")";
				button -l "重新载入层" -w 140 -c "do3_skAutoRender_RGB_read(\"FWing_RL_RGB_Layers_textScroll_Load\")";
				setParent..;
				

		//背景分层选择
		frameLayout -w 310 -cll 0 -cl 0 -label "背景分层选择" -borderStyle "etchedOut" FWing_RL_frame_102;
			columnLayout;
			setParent..;setParent..;

			//scrollField -ed 0 -w 300 -h 80 -bgc 1.0 1.0 1.0 FWing_m8_scroll_002;	
			
	setParent..;
	setParent..;setParent..;

			//创建	
		frameLayout -w 320 -cll 0 -cl 0 -l "" -borderStyle "etchedOut" FWing_RL_frame_103;
			columnLayout;
				button -l "自动分层创建" -w 320 -h 35 -al "center" -bgc 0 0.6 1 -c "do3_skAutoRenderCMD;";				
			setParent..;setParent..;


	tabLayout -edit -tabLabel $tab_1 "输出标准信息" -tabLabel $tab_2 "自动分层设置"  $tabs;

	setParent..;setParent..;

	showWindow do3_skAutoRenderLayer;
}


global proc do3_skAutoRender_textFeildScrollRemove(string $name)
{
	string $selected[] = `textScrollList -q -selectItem $name`;

	for ($item in $selected)
		textScrollList -edit -removeItem $item $name;
}


global proc do3_skAutoRenderCMD()
{

	if(`checkBox -q -v FWing_RL_co_checkbox`)
	{
		do3_skRenderTools_CO();
	}

	if(`checkBox -q -v FWing_RL_ao_checkbox`)
	{
		do3_skRenderTools_AO("chr");
	}

	if(`checkBox -q -v FWing_RL_normal_checkbox`)
	{
		do3_skRenderTools_NM();
	}

	if(`checkBox -q -v FWing_RL_eyes_checkbox`)
	{
		do3_skRenderTools_eyes();
	}

	if(`checkBox -q -v FWing_RL_rfinge_checkbox`)
	{
		do3_skRenderTools_fringe();
	}

	if(`checkBox -q -v FWing_RL_rimlight_checkbox`)
	{
		do3_skRenderTools_rimlight();
	}

	if(`checkBox -q -v FWing_RL_rbb_checkbox`)
	{
		float $frame = `floatFieldGrp -q -v1 FWing_RL_rbb_startFrame`;
		int $size = `intFieldGrp -q -v1 FWing_RL_rbb_size`;
		do3_skRenderTools_rbb($frame,$size);
	}


	if(`checkBox -q -v FWing_RL_rgb_checkbox`)
	{	
		string $rgb_layers[] = `textScrollList -q -ai FWing_RL_RGB_Layers_textScroll_Load`;
		
		do3_skRenderTools_RGB($rgb_layers);
	}
}


global proc do3_RenderTools_HideObjects(string $obj[])
{
	
	string $hideGroups[]={};
	int $i =0;
	for ($p in $obj)
	{
		if (`gmatch  $p "*brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*DEFORMERS*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*drape*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*Brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;

	}
	
	for ($hg in $hideGroups)
	{
		evalDeferred ("setAttr -lock 0  "+$hg + ".visibility");
		evalDeferred ("setAttr -k 1  "+$hg + ".visibility");
		CBdeleteConnection  ($hg +".v");	
		setAttr  ($hg +".v") 0;		
	}

	
}

//输出所选分层物体信息
global proc do3_skChrInfo_write(string $type)
{
	string $info_type = $type + ".txt";

	//string $info_path = "E:/DODIII/info/sc_001/chr/" + $info_type;
	string $info_path = "//file-cluster/GDC/Scratch/sk_info_test/DODIII/info/sc_001/chr/" + $info_type;

	string $text_info = "";

	//write
	int $fid = `fopen $info_path "w"`;

	string $temp[] = `ls -sl`;

	for($i = 0 ; $i < size($temp) ;$i++)
	{
		$text_info += $temp[$i] + "\r\n";
	}

	string $w = `fwrite $fid $text_info`;
	fclose $fid;
}

//读取指定分层物体信息
global proc string[] do3_skChrInfo_read(string $type)
{
	string $info_type = $type + ".txt";
	//string $info_path = "E:/DODIII/info/sc_001/chr/" + $info_type;
	string $info_path = "//file-cluster/GDC/Scratch/sk_info_test/DODIII/info/sc_001/chr/" + $info_type;

	string $text_info = "";

	//read
	int $fid = `fopen $info_path "r"`;
	string $r = `fread $fid $r`;

	while($r != "")
	{
		$text_info += $r;
		$r = `fread $fid $r`;	
	}
	fclose $fid;
	string $temp[] = {};
	tokenize $text_info "\r\n" $temp;
	string $co_info[] = {};

	for ($i = 0 ; $i < size ($temp) ; $i++ )
	{
		$co_info[size($co_info)] = $temp[$i];
	}

	return $co_info;
}

//增加输出所选分层物体信息
global proc do3_skChrInfo_add(string $type)
{
	string $info_type = $type + ".txt";
	//string $info_path = "E:/DODIII/info/sc_001/chr/" + $info_type;
	string $info_path = "//file-cluster/GDC/Scratch/sk_info_test/DODIII/info/sc_001/chr/" + $info_type;

	string $text_info = "";

	//load
	int $fid = `fopen $info_path "r"`;
	string $r = `fread $fid $r`;
	while($r != "")
	{
		$text_info += $r;
		$r = `fread $fid $r`;	
	}

	//write
	int $fid = `fopen $info_path "w"`;

	string $temp[] = `ls -sl`;
	
	for($i = 0 ; $i < size($temp) ;$i++)
	{
		$text_info += $temp[$i] + "\r\n";
	}

	string $w = `fwrite $fid $text_info`;
	fclose $fid;
}

//RGB层专用信息输出
global proc do3_skAutoRender_RGB_write()
{
	string $info_type = "rgb_grp" + ".txt";
	//string $info_path = "E:/DODIII/info/sc_001/chr/" + $info_type;
	string $info_path = "//file-cluster/GDC/Scratch/sk_info_test/DODIII/info/sc_001/chr/" + $info_type;

	string $text_info = "";

	//write
	int $fid = `fopen $info_path "w"`;

	string $temp[] = `textScrollList -q -ai FWing_RL_RGB_Layers_textScroll`;

	for($i = 0 ; $i < size($temp) ;$i++)
	{
		$text_info += $temp[$i] + "\r\n";
	}

	string $w = `fwrite $fid $text_info`;
	fclose $fid;
}

//RGB层专用信息读取
global proc do3_skAutoRender_RGB_read(string $name)
{
	string $temp[] = `do3_skChrInfo_read("rgb_grp")`;

	textScrollList -e -removeAll $name;

	for($i = 0; $i<size($temp); $i++)
	{
	  textScrollList -e -a $temp[$i] $name;
	}

}


// 创建角色CO层
global proc do3_skRenderTools_CO()
{
	string $obj[] = `do3_skChrInfo_read("co")`;

	$obj = `do3_skRenderTool_config($obj)`;

	string $renderLayer_chrCO = "chr_clr";	
	createRenderLayer -makeCurrent -name $renderLayer_chrCO -noRecurse $obj;

	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
	zzjSetMentalrayQuality("ninjago");
	setAttr miDefaultOptions.contrastA 0.1;

}

// 创建AO层，分角色和场景
global proc do3_skRenderTools_AO(string $type)
{
	string $obj[] = `do3_skChrInfo_read("ao")`;

	$obj =`do3_skRenderTool_config($obj)`;

	string $renderLayer_chrAO = "chr_AO";
	string $newLayer = `createRenderLayer -makeCurrent -name $renderLayer_chrAO -noRecurse $obj`;
	
	renderLayerBuiltinPreset occlusion $newLayer;
	string $setName[] =`listConnections -s 1 -d 0 -type shadingEngine $newLayer`;
	string $his[]=`listHistory $setName[0]`;
	for ($h in $his)
	{
		if (`objectType $h`=="mib_amb_occlusion")
		{
			if ($type == "chr")
			{
				setAttr ($h+".samples") 128;
				setAttr ($h+".max_distance") 5;				
			}
			else if ($type == "bg")
			{
				setAttr ($h+".samples") 64;
				setAttr ($h+".max_distance") 10;
			}
		}	
	}

	//do3_RenderTools_HideObjects($obj);
}


// 创建Normal层
global proc do3_skRenderTools_NM()
{
	string $obj[] = `do3_skChrInfo_read("normal")`;

	$obj = `do3_skRenderTool_config($obj)`;

	string $renderLayer_chrNM = "chr_Normal";
	string $newLayer = `createRenderLayer -makeCurrent -name $renderLayer_chrNM -noRecurse $obj`;
	
	renderLayerBuiltinPreset occlusion $newLayer;
	string $setName[] =`listConnections -s 1 -d 0 -type shadingEngine $newLayer`;
	string $his[]=`listHistory $setName[0]`;
	for ($h in $his)
	{
		if (`objectType $h`=="mib_amb_occlusion")
		{
				setAttr ($h+".samples") 200;
				setAttr ($h+".max_distance") 0;		
				setAttr ($h+".output_mode") 3;
		}	
	}

	//do3_RenderTools_HideObjects($obj);
}

//创建角色眼睛层
global proc do3_skRenderTools_eyes()
{
	string $obj_eyes_geo[] = `do3_skChrInfo_read("eyes_geo")`;
	string $obj_eyes_mask[] = `do3_skChrInfo_read("eyes_mask")`;
	string $obj_eyes_light[] = `do3_skChrInfo_read("eyes_light")`;

	$obj_eyes_geo = `do3_skRenderTool_config($obj_eyes_geo)`;
	$obj_eyes_mask = `do3_skRenderTool_config($obj_eyes_mask)`;
	$obj_eyes_light = `do3_skRenderTool_config($obj_eyes_light)`;

	string $renderLayer_chrEyes = "chr_eyes";
	string $newLayer = `createRenderLayer -makeCurrent -name $renderLayer_chrEyes -noRecurse $obj_eyes_geo $obj_eyes_mask $obj_eyes_light`;
	
	string $shade = `shadingNode -asShader lambert -name "idmt_IDPass_matte"`;
	setAttr ($shade + ".matteOpacityMode") 0;
	setAttr ($shade + ".color") -type double3 0 0 0 ;
	
	select $obj_eyes_mask;
	hyperShade -assign $shade;

	//do3_RenderTools_HideObjects($obj_eyes_geo);
	//do3_RenderTools_HideObjects($obj_eyes_mask);
}

// 创建rimlight层
global proc do3_skRenderTools_rimlight()
{
	string $obj_light[] = `do3_skChrInfo_read("rimlight_light")`;
	string $obj[] = `do3_skChrInfo_read("rimlight_geo")`;

	$obj_light = `do3_skRenderTool_config($obj_light)`;
	$obj = `do3_skRenderTool_config($obj)`;

	string $renderLayer_chrRimlight = "chr_rimlight";	
	createRenderLayer -makeCurrent -name $renderLayer_chrRimlight -noRecurse $obj $obj_light;

	string $shade = `shadingNode -asShader lambert -name "idmt_IDPass_rimlight"`;

	select $obj;
	hyperShade -assign $shade;

	//do3_RenderTools_HideObjects($obj);
}

//创建rbb层
global proc do3_skRenderTools_rbb(float $startFrame, int $size)
{
	string $obj[] = `do3_skChrInfo_read("rbb_geo")`;
	string $obj_ep[] = `do3_skChrInfo_read("rbb_source")`;

	$obj = `do3_skRenderTool_config($obj)`;
	$obj_ep = `do3_skRenderTool_config($obj_ep)`;

	string $renderLayer_chrRbb = "chr_rbb";	

	//rbb要灯光吗？
	//source "//file-cluster/GDC/Resource/Support/Maya/projects/DODIII/yy_zjBubbleSetup.mel";
	//source "E:/yy_zjBubbleSetup.mel"
	source "yy_zjBubbleSetup.mel";

	float $startFrame = 1001;
	int $size = 1;
	hjBubblesetup($startFrame, $size , $obj_ep );

	createRenderLayer -makeCurrent -name $renderLayer_chrRbb -noRecurse $obj BubbleX Bubble1;

	string $shade = `shadingNode -asShader lambert -name "idmt_IDPass_matte"`;
	setAttr ($shade + ".matteOpacityMode") 0;
	setAttr ($shade + ".color") -type double3 0 0 0 ;
	
	select $obj;
	hyperShade -assign $shade;
}

//创建EdgeLight/Fringe层
global proc do3_skRenderTools_fringe()
{
	string $obj_light[] = `do3_skChrInfo_read("fringe_light")`;
	string $obj[] = `do3_skChrInfo_read("fringe_geo")`;

	$obj_light = `do3_skRenderTool_config($obj_light)`;
	$obj = `do3_skRenderTool_config($obj)`;

	string $renderLayer_chrFringe = "chr_fringe";	
	createRenderLayer -makeCurrent -name $renderLayer_chrFringe -noRecurse $obj $obj_light;

	string $shade = `shadingNode -asShader lambert -name "idmt_IDPass_fringe"`;

	select $obj;
	hyperShade -assign $shade;

	//do3_RenderTools_HideObjects($obj);
}


// 创建RGB层
// 记得加判断。必须存在才能进行
global proc do3_skRenderTools_RGB(string $obj_grp[])
{
	//string $obj_grp[] = `do3_skChrInfo_read("rgb_grp")`;

	string $shade = `shadingNode -asShader lambert -name "idmt_IDPass_matte"`;
	setAttr ($shade + ".matteOpacityMode") 0;
	setAttr ($shade + ".color") -type double3 0 0 0 ;

	string $shade_r = `shadingNode -asShader surfaceShader -name "idmt_IDPass_coloR"`;
	setAttr ($shade_r + ".outMatteOpacity") -type double3 0 0 0 ;
	setAttr ($shade_r + ".outColor") -type double3 1 0 0 ;

	string $shade_g = `shadingNode -asShader surfaceShader -name "idmt_IDPass_coloG"`;
	setAttr ($shade_g + ".outMatteOpacity") -type double3 0 0 0 ;
	setAttr ($shade_g + ".outColor") -type double3 0 1 0 ;

	string $shade_b = `shadingNode -asShader surfaceShader -name "idmt_IDPass_coloB"`;
	setAttr ($shade_b + ".outMatteOpacity") -type double3 0 0 0 ;
	setAttr ($shade_b + ".outColor") -type double3 0 0 1 ;

	for($i = 0 ; $i < size($obj_grp) ; $i++)
	{
		string $obj_all[] = `do3_skChrInfo_read("rgb_" + $obj_grp[$i] + "_all")`;
		string $obj_r[] = `do3_skChrInfo_read("rgb_" + $obj_grp[$i] + "_r")`;
		string $obj_g[] = `do3_skChrInfo_read("rgb_" + $obj_grp[$i] + "_g")`;
		string $obj_b[] = `do3_skChrInfo_read("rgb_" + $obj_grp[$i] + "_b")`;

		$obj_all = `do3_skRenderTool_config($obj_all)`;
		$obj_r = `do3_skRenderTool_config($obj_r)`;
		$obj_g = `do3_skRenderTool_config($obj_g)`;
		$obj_b = `do3_skRenderTool_config($obj_b)`;

		string $renderLayer_chrRbb = ($obj_grp[$i] + "_RGB");	

		createRenderLayer -makeCurrent -name $renderLayer_chrRbb -noRecurse $obj_all;
		
		select $obj_all;
		hyperShade -assign $shade;

		select $obj_r;
		hyperShade -assign $shade_r;

		select $obj_g;
		hyperShade -assign $shade_g;

		select $obj_b;
		hyperShade -assign $shade_b;

		//do3_RenderTools_HideObjects($obj_all);
	}
}

//剔除没有的物体
global proc string[] do3_skRenderTool_config(string $name[])
{
	string $name_last [] = {};
	for($i = 0 ; $i < size($name) ; $i++)
	{
		if(`objExists  $name[$i]`)
		{
			$name_last[size($name_last)] = $name[$i];
			print ($name_last[$i]+"\n");
		}
	}

	return $name_last;
}
