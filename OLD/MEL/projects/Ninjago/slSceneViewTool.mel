//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc slSceneViewHideNonSelected()
{
	string $sel[] = `ls -sl -l`;
	slSceneViewUnloadNonSelectedRef();
	string $vis[]={};
	for ($obj in $sel)
	{
		//if (!`referenceQuery -inr $obj` )
		//{
			string $NIG = slSceneViewGetNonInstanceGroup($obj);
			$vis[size($vis)]=$NIG;
		//}
	}

	string $all[] = `ls -l -type mesh -type nurbsSurface -type subdiv -v -ni -dag`;
	string $hids[]={};
	string $checked[]={};
	for ($obj in $all)
	{
		string $ap[] = `listRelatives -f -ap $obj`;
		if (size($ap)>1)
		{
			string $check[] = stringArrayRemove($checked,$ap);
			for ($item in $check)
			{
				if (stringArrayCount($item,$sel) == 0)
				{
					string $NIG = slSceneViewGetNonInstanceGroup($item);
					$hids[size($hids)]=$NIG;
				}
			}
			$checked=stringArrayCatenate($checked,$ap);
		}
		else
		{
			string $trans[] = `listRelatives -f -p $obj`;
			if (stringArrayCount($trans[0],$sel) == 0)
			{
				string $NIG = slSceneViewGetNonInstanceGroup($trans[0]);
				$hids[size($hids)]=$NIG;
			}
		}
	}
	$hids = stringArrayRemove($vis,$hids);
	//print $hids;
	//select -r $hids;
	
	if (`objExists "SceneView_Hide"`)
		delete "SceneView_Hide";
	string $displayLayer = `createDisplayLayer -name "SceneView_Hide" -number 1 -empty`;
	for ($h in $hids)
	{
		float $adj = catchQuiet(`editDisplayLayerMembers -noRecurse $displayLayer {$h}`);
		if ($adj)
		{
			print $h;
			print "\n";
		}
	}
	setAttr ($displayLayer+".visibility") 0;
}

global proc string slSceneViewGetNonInstanceGroup(string $obj)
{
	string $nonIG;
	string $allParents[] = `listRelatives -f -ap $obj`;
	if (size($allParents) > 1)
	{
		string $parent[] = `listRelatives -f -p $obj`;
		$nonIG=slSceneViewGetNonInstanceGroup($parent[0]);
	}
	else 
	{
		$nonIG=$obj;
	}
	return $nonIG;
}


global proc slSceneViewUnloadNonSelectedRef()
{
	string $filename = `file -q -sn -shn`;
	
	
	string $sel[] = `ls -sl -l`;
	string $selRfn[]={};
	for ($s in $sel )
	{
		if (`referenceQuery -inr $s`)
		{
			string $rfn = `referenceQuery -rfn $s`;
			$selRfn[size($selRfn)] = $rfn;
		}
	}
	$selRfn = stringArrayRemoveDuplicates($selRfn);

	string $allRfnFiles[] = `file -q -r`;
	for ($rf in $allRfnFiles)
	{
		string $rfn = `referenceQuery -rfn $rf`;
		if (!stringArrayCount($rfn,$selRfn))
		{
			if (match("camera",$rf)=="")
			{
				file -ur $rfn; 
			}
		}
	}

}