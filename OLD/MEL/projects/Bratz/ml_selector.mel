//////////////////////////////////////enter program///////////////////////////////
global proc ml_selector()
{
	string $ml_isEmpty[]=`ls "*:*:*_loback*" "*:*_loback*" "*_loback*"`;
	if($ml_isEmpty[0] == "")
	warning "please run it after load a character";
	else
	ml_selectUI;
}
//////////////////////////////////////////////////////////////////////////////////
///////////////////////////////program UI ////////////////////////////////////////
global proc ml_selectUI()
{
	global int $ml_lcharNum = -1;//count how many characters in the scene
	global string $ml_lChar[];//character's name with namespace
	global string $ml_sChar[];//character's name without namespace,it will display in the list menu
	global string $ml_master;
	global string $ml_head;
	global string $ml_neckA;
	global string $ml_neckB;
	global string $ml_handl;
	global string $ml_wristl;
	global string $ml_elbowl;
	global string $ml_arml;
	global string $ml_shoulderl;
	global string $ml_shoulderr;
	global string $ml_armr;
	global string $ml_elbowr;
	global string $ml_wristr;
	global string $ml_handr;
	global string $ml_chest;
	global string $ml_waist;
	global string $ml_hip;
	global string $ml_footl;
	global string $ml_footr;
	global string $ml_ikl;
	global string $ml_ikr;
	global string $ml_eye;
	global string $ml_har1;
	global string $ml_har2;
	global string $ml_har3;
	global string $ml_hbr1;
	global string $ml_hbr2;
	global string $ml_hbr3;
	global string $ml_hcr1;
	global string $ml_hcr2;
	global string $ml_hcr3;
	global string $ml_hdr1;
	global string $ml_hdr2;
	global string $ml_hdr3;
	global string $ml_her1;
	global string $ml_her2;
	global string $ml_her3;
	global string $ml_hal1;
	global string $ml_hal2;
	global string $ml_hal3;
	global string $ml_hbl1;
	global string $ml_hbl2;
	global string $ml_hbl3;
	global string $ml_hcl1;
	global string $ml_hcl2;
	global string $ml_hcl3;
	global string $ml_hdl1;
	global string $ml_hdl2;
	global string $ml_hdl3;
	global string $ml_hel1;
	global string $ml_hel2;
	global string $ml_hel3;
	string $ml_locationBG = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\select.bmp";//path of UI's background image
	if (`window -exists ml_selwin`)
		deleteUI ml_selwin;
	window -title "Bratz Select 07.03.19"  -widthHeight 350 465 ml_selwin;
	formLayout ml_windowframe;
	frameLayout -label "" -labelAlign "bottom" -borderStyle "etchedOut" -width 340 -height 440 ml_frameL;
	formLayout   -backgroundColor 0.047 0.227 0.364 -width 20 -height 20 ml_selbutn;
	button -w 60 -h 20 -l "刷新" -ann "刷新角色列表" -c ml_selectUI ml_bSelUI;
	ml_listchar;
	button -w 60 -h 20 -l "选择" -ann "使列表中被选角色为场景中当前选择的角色" -c "ml_GoChar" ml_Gobut;
	button -w 60 -h 20 -l "置顶" -ann "将列表当前选择的角色移到列表的最顶端" -c "ml_totop" ml_Tobut;
////////////////////////////////////////////////////////////////////////////////
	columnLayout -backgroundColor 0.047 0.227 0.364 -rowSpacing 5 ml_btnGrp;
 		text -label "      "  -backgroundColor 0.047 0.227 0.364  -align "right";
 		text -label "      "  -backgroundColor 0.047 0.227 0.364  -align "right";
 	button -w 60 -h 20 -l "所有控制" -ann "选择角色的所有控制" -command "ml_al"  ml_butall;
	button -w 60 -h 20 -l "低模" -ann "切换为低模" -command "ml_low"  ml_butlow;
	button -w 60 -h 20 -l "高模" -ann "切换为高模" -command "ml_high"  ml_buthig;
	button -w 60 -h 20 -l "隐藏其他" -ann "隐藏除当前角色外的其他角色" -command "ml_hide"  ml_buthide;
	button -w 60 -h 20 -l "所有角色" -ann "所有角色同时切换为高模或低模" -command "ml_allChar"  ml_butallchar;
	button -w 60 -h 20 -l "编辑层" -ann "所有层的详细编辑" -command "ml_layerEdit"  ml_butLyEd;
	button -w 60 -h 20 -l "摄像机视图" -ann "切换到摄像机视图" -command "ml_switchCam"  ml_butcam;
 		text -label "      "  -backgroundColor 0.047 0.227 0.364  -align "right";
 		text -label "      "  -backgroundColor 0.047 0.227 0.364  -align "right";
	button  -w 60 -h 20 -l "选择集A" -ann "右键将当前选择设置为选择集A" ml_sela;
	 			popupMenu;
 			menuItem -label "Add Select" -c ml_addseta;
	button  -w 60 -h 20 -l "选择集B" -ann "右键将当前选择设置为选择集B" ml_selb;
	 			popupMenu;
 			menuItem -label "Add Select" -c ml_addsetb;
 		setParent ..;
//////////////////////////////////////////////////////////////////////////////////
	$ml_wristl = $ml_lChar[0]+ "_wristCon_l";
	$ml_wristr = $ml_lChar[0]+ "_wristCon_r";
	$ml_ikl = $ml_lChar[0]+ "_world_wristCon_l";
	$ml_ikr = $ml_lChar[0]+ "_world_wristCon_r";
	string $ml_cur = $ml_wristr+".solverEnable";
	int $ml_isifk = `getAttr -time 100 $ml_cur`;
	if ($ml_isifk==0)
 	{
 		button -w 18 -h 18 -l "f" -command "bus($ml_wristr)"  ml_butwrr;
 					popupMenu;
 					menuItem -label "fk" -c ml_fkr;
					menuItem -label "ik" -c ml_ikr;
	}
 	else if ($ml_isifk >0 )
 	{
 		button -w 18 -h 18 -l "i" -command "bus($ml_ikr)"  ml_butwrr;
					popupMenu;
 					menuItem -label "fk" -c ml_fkr;
					menuItem -label "ik" -c ml_ikr;
	}
	
	 	$ml_cur = $ml_wristl+".solverEnable";
	$ml_isifk = `getAttr -time 100 $ml_cur`;
	if ($ml_isifk==0)
 	{
 		button -w 18 -h 18 -l "f" -command "bus($ml_wristl)"  ml_butwrl;
 					popupMenu;
 					menuItem -label "fk" -c ml_fkl;
					menuItem -label "ik" -c ml_ikl;
	}
 	else if ($ml_isifk >0 )
 	{
 		button -w 18 -h 18 -l "i" -command "bus($ml_ikl)"  ml_butwrl;
					popupMenu;
 					menuItem -label "fk" -c ml_fkl;
					menuItem -label "ik" -c ml_ikl;
	}
	ml_chang;

 	button -w 30 -h 15 -l eye -command "bus($ml_eye)"  ml_bEye;
					popupMenu;
 					menuItem -label "Blink" -c slBrEyesBlink ;
 	button -w 30 -h 20 -l " " -command "bus($ml_head)"  ml_b1;
 					popupMenu;
 					menuItem -label "DoExpression" -c ml_InEx;
 					menuItem -label "FinishExpression" -c ml_FinishEx;
 					menuItem -label "SelectMouth" -c ml_selMouth;
 	button -w 17 -h 17 -l " " -command "bus($ml_neckB)"  ml_b2;
 	button -w 17 -h 17 -l " " -command "bus($ml_neckA)"  ml_b3;
 	button -w 20 -h 20 -l " " -command "ml_handr"  ml_b4;

 	button -w 16 -h 16 -l " " -command "bus($ml_elbowr)"  ml_b6;
 	button -w 16 -h 16 -l " " -command "bus($ml_armr)"  ml_b7;
 	button -w 14 -h 14 -l " " -command "bus($ml_shoulderr)"  ml_b8;
 	button -w 14 -h 14 -l " " -command "bus($ml_shoulderl)"  ml_b9;
 	button -w 16 -h 16 -l " " -command "bus($ml_arml)"  ml_b10;
 	button -w 16 -h 16 -l " " -command "bus($ml_elbowl)"  ml_b11;

 	button -w 20 -h 20 -l " " -command "ml_handl"  ml_b13;
 	button -w 32 -h 20 -l " " -command "bus($ml_chest)"  ml_b14;
 	button -w 30 -h 18 -l " " -command "bus($ml_waist)"  ml_b15;
 	button -w 20 -h 20 -l " " -command "bus($ml_hip)"  ml_b16;
 	button -w 30 -h 20 -l " " -command "bus($ml_footr)"  ml_b17;
 	button -w 30 -h 20 -l " " -command "bus($ml_footl)"  ml_b18;
 	button -w 20 -h 20 -l M -command "bus($ml_master)"  ml_b22;

	button -w 12 -h 12 -l " " -command "bus($ml_har1)"  ml_b26;//hand
	button -w 12 -h 12 -l " " -command "bus($ml_har2)"  ml_b27;
	button -w 12 -h 12 -l " " -command "bus($ml_har3)"  ml_b28;
	button -w 12 -h 12 -l " " -command "ml_fig1r"  ml_b29;
	button -w 12 -h 12 -l " " -command "ml_fig2r"  ml_b30;
	button -w 12 -h 12 -l " " -command "ml_fig3r"  ml_b31;
	button -w 12 -h 12 -l " " -command "ml_fig4r"  ml_b32;
	button -w 12 -h 12 -l " " -command "bus($ml_hal1)"  ml_b33;
	button -w 12 -h 12 -l " " -command "bus($ml_hal2)"  ml_b34;
	button -w 12 -h 12 -l " " -command "bus($ml_hal3)"  ml_b35;
	button -w 12 -h 12 -l " " -command "ml_fig1l"  ml_b36;
	button -w 12 -h 12 -l " " -command "ml_fig2l"  ml_b37;
	button -w 12 -h 12 -l " " -command "ml_fig3l"  ml_b38;
	button -w 12 -h 12 -l " " -command "ml_fig4l"  ml_b39;
	image -w 250 -h 375 -i $ml_locationBG ml_BGPicture;
	setParent ..;
   	formLayout -edit
 		-attachForm ml_bSelUI "top"  13  //refresh
  		-attachForm ml_bSelUI "left"  16
 		-attachForm ml_mymenu "top"  13  //to
  		-attachForm ml_mymenu "left"  80
 		-attachForm ml_Gobut "top"  35  //go
  		-attachForm ml_Gobut "left"  16
 		-attachForm ml_Tobut "top"  57  //to
  		-attachForm ml_Tobut "left"  16
  		-attachForm ml_btnGrp "top" 80
  		-attachForm ml_btnGrp "left" 16
 		-attachForm ml_b1 "top"  76  //head
  		-attachForm ml_b1 "left"  192
  		-attachForm ml_b2 "top" 97
  		-attachForm ml_b2 "left"  199
  		-attachForm ml_b3 "top" 114       //neck
  		-attachForm ml_b3 "left"  199
  		-attachForm ml_b4 "top" 215     //hand
  		-attachForm ml_b4 "left"  125
  		-attachForm ml_butwrr "top" 185     //wrist
  		-attachForm ml_butwrr "left"  125
  		-attachForm ml_b6 "top" 152     //elbow
  		-attachForm ml_b6 "left"  123
  		-attachForm ml_b7 "top" 125      //arm
  		-attachForm ml_b7 "left"  157
  		-attachForm ml_b8 "top" 135      //shoulder
  		-attachForm ml_b8 "left"  192
  		-attachForm ml_b9 "top" 135      //shoulder
  		-attachForm ml_b9 "left"  208
  		-attachForm ml_b10 "top" 125    //arm
  		-attachForm ml_b10 "left"  245
  		-attachForm ml_b11 "top" 152    //elbow
  		-attachForm ml_b11 "left"  278
  		-attachForm ml_butwrl "top" 185      //wrist
  		-attachForm ml_butwrl "left"  275
  		-attachForm ml_b13 "top" 215      //hand
  		-attachForm ml_b13 "left"  275
  		-attachForm ml_b14 "top" 156     //chest
  		-attachForm ml_b14 "left"  191
  		-attachForm ml_b15 "top" 198     //waist
  		-attachForm ml_b15 "left"  192
  		-attachForm ml_b16 "top" 219     //hip
  		-attachForm ml_b16 "left"  197
  		-attachForm ml_b17 "top" 386     //foot
  		-attachForm ml_b17 "left"  155
  		-attachForm ml_b18 "top" 386     //foot
  		-attachForm ml_b18 "left"  229
  		-attachForm ml_bEye "top" 60     //eye
  		-attachForm ml_bEye "left"  192
  		-attachForm ml_b22 "top" 396     //master
  		-attachForm ml_b22 "left"  197
  		-attachForm ml_b26 "top" 195 //hand
  		-attachForm ml_b26 "left"  111
  		-attachForm ml_b27 "top" 208
  		-attachForm ml_b27 "left"  98
  		-attachForm ml_b28 "top" 221
  		-attachForm ml_b28 "left" 86
  		-attachForm ml_b29 "top" 266
  		-attachForm ml_b29 "left" 95
  		-attachForm ml_b30 "top" 277
  		-attachForm ml_b30 "left"  122
  		-attachForm ml_b31 "top" 272
  		-attachForm ml_b31 "left"  143
  		-attachForm ml_b32 "top" 256
  		-attachForm ml_b32 "left" 155
  		-attachForm ml_b33 "top" 194
  		-attachForm ml_b33 "left" 296
  		-attachForm ml_b34 "top" 208
  		-attachForm ml_b34 "left" 309
  		-attachForm ml_b35 "top" 222
  		-attachForm ml_b35 "left" 319
  		-attachForm ml_b36 "top"  266
  		-attachForm ml_b36 "left"  313
  		-attachForm ml_b37 "top"  277 
  		-attachForm ml_b37 "left"  286
  		-attachForm ml_b38 "top"  272 
  		-attachForm ml_b38 "left"  264
  		-attachForm ml_b39 "top" 256
  		-attachForm ml_b39 "left" 251
  		-attachForm ml_BGPicture "top" 50    //
  		-attachForm ml_BGPicture "left" 83
  		ml_selbutn;
	setParent ..;
	frameLayout -label "" -labelAlign "bottom" -borderStyle "etchedOut" -visible 0 -width 360 -height 440 ml_frameR;
	////////////something on the left panel
	reference_to_zyLayerTaxi;
	setParent ..;
	formLayout -e 
	  	-attachForm ml_frameL "top" 0
  		-attachForm ml_frameL "left" 0
	  	-attachForm ml_frameR "top" 0
  		-attachForm ml_frameR "left" 340
		ml_windowframe;

	scriptJob -parent ml_selwin -event "DagObjectCreated" "ml_relistchar";
	showWindow ml_selwin;
	ml_backmodelpanel;
}
/////////////////////////////////////////// refresh the character list again ////////////////////////////////////////////
global proc ml_relistchar()
{
	string $ml_newObjList[] = `ls -sl`; 
	string $ml_newObj = $ml_newObjList[0];
	$ml_newObj = `toupper $ml_newObj`;
	if (`gmatch $ml_newObj "*RN*ROUP"`)
	{
		deleteUI -ctl ml_mymenu;
		ml_listchar;
   		formLayout -edit
 			-attachForm ml_mymenu "top"  13  //to
  			-attachForm ml_mymenu "left"  75
			ml_selbutn;
	}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
global proc ml_listchar ()
{

	global int $ml_lcharNum;
	$ml_lcharNum = -1;
	global string $ml_lChar[];
	global string $ml_sChar[];
	string $ml_gmlobj[] = `ls -type joint "*:*:*_lobackA""*:*_lobackA" "*_lobackA"`;
	for ($ml_eachobj in $ml_gmlobj)
	{
	$ml_lcharNum++;
	string $ml_tempchar1[];
	$ml_lChar[$ml_lcharNum] = `substitute "_lobackA" $ml_gmlobj[$ml_lcharNum] ""`;
	string $ml_tempchar2[];
	tokenize $ml_lChar[$ml_lcharNum] ":" $ml_tempchar2;
	int $ml_NumStar;
	$ml_NumStar = size($ml_tempchar2);
	$ml_NumStar = $ml_NumStar-1;
	$ml_sChar[$ml_lcharNum] = $ml_tempchar2[$ml_NumStar]; 
	}
	ml_listUI;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
global proc ml_listUI()
{
	global int $ml_lcharNum;
	global string $ml_lChar[];
	global string $ml_sChar[];
	optionMenu  -parent ml_selbutn -l "" -cc "ml_chang" ml_mymenu;
		for ($ml_i=0; $ml_i <= $ml_lcharNum; $ml_i++)
		{
			menuItem -label $ml_sChar[$ml_i];
		}
	}
	
	global proc bus(string $ml_naam)
	{
		string $ml_tg ="-r ";
		int $ml_modifier=`getModifiers`;
		if (($ml_modifier %  2)==0)
		select -cl;
		select -tgl $ml_naam;
	ml_backmodelpanel;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////select all contrls of a character ////////////////////////////////////
global proc ml_al()
{
	global string $ml_master;
	global string $ml_head;
	global string $ml_neckA;
	global string $ml_neckB;
	global string $ml_handl;
	global string $ml_wristl;
	global string $ml_elbowl;
	global string $ml_arml;
	global string $ml_shoulderl;
	global string $ml_shoulderr;
	global string $ml_armr;
	global string $ml_elbowr;
	global string $ml_wristr;
	global string $ml_handr;
	global string $ml_chest;
	global string $ml_waist;
	global string $ml_hip;
	global string $ml_footl;
	global string $ml_footr;
	global string $ml_ikl;
	global string $ml_ikr;
	global string $ml_eye;
	global string $ml_har1;
	global string $ml_har2;
	global string $ml_har3;
	global string $ml_hbr1;
	global string $ml_hbr2;
	global string $ml_hbr3;
	global string $ml_hcr1;
	global string $ml_hcr2;
	global string $ml_hcr3;
	global string $ml_hdr1;
	global string $ml_hdr2;
	global string $ml_hdr3;
	global string $ml_her1;
	global string $ml_her2;
	global string $ml_her3;
	global string $ml_hal1;
	global string $ml_hal2;
	global string $ml_hal3;
	global string $ml_hbl1;
	global string $ml_hbl2;
	global string $ml_hbl3;
	global string $ml_hcl1;
	global string $ml_hcl2;
	global string $ml_hcl3;
	global string $ml_hdl1;
	global string $ml_hdl2;
	global string $ml_hdl3;
	global string $ml_hel1;
	global string $ml_hel2;
	global string $ml_hel3;
	select -cl;
	select $ml_master $ml_chest $ml_head $ml_waist $ml_hip $ml_footl $ml_footr $ml_neckA $ml_neckB $ml_head $ml_eye;
	select -tgl $ml_shoulderl $ml_arml $ml_elbowl $ml_har1 $ml_har2 $ml_har3 $ml_hbr1 $ml_hbr2;
	select -tgl $ml_hbr3 $ml_hcr1 $ml_hcr2 $ml_hcr3 $ml_hdr1 $ml_hdr2 $ml_hdr3 $ml_her1;
	select -tgl $ml_her2 $ml_her3 $ml_wristl $ml_shoulderr $ml_armr $ml_elbowr  $ml_hal1 $ml_hal2;
	select -tgl $ml_hal3 $ml_hbl1 $ml_hbl2 $ml_hbl3 $ml_hcl1 $ml_hcl2 $ml_hcl3 $ml_hdl1;
	select -tgl $ml_hdl2 $ml_hdl3 $ml_hel1 $ml_hel2 $ml_hel3 $ml_wristr $ml_ikl $ml_ikr;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right hand's four fingers///////////////////////////////////////
global proc ml_handr()
{
	global string $ml_hbr1;
	global string $ml_hbr2;
	global string $ml_hbr3;
	global string $ml_hcr1;
	global string $ml_hcr2;
	global string $ml_hcr3;
	global string $ml_hdr1;
	global string $ml_hdr2;
	global string $ml_hdr3;
	global string $ml_her1;
	global string $ml_her2;
	global string $ml_her3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hbr1 $ml_hbr2 $ml_hbr3 $ml_hcr1 $ml_hcr2 $ml_hcr3 $ml_hdr1 $ml_hdr2 $ml_hdr3 $ml_her1 $ml_her2 $ml_her3;
	ml_backmodelpanel;	
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////select left hand's four fingers////////////////////////////////////
global proc ml_handl()
{
	global string $ml_hbl1;
	global string $ml_hbl2;
	global string $ml_hbl3;
	global string $ml_hcl1;
	global string $ml_hcl2;
	global string $ml_hcl3;
	global string $ml_hdl1;
	global string $ml_hdl2;
	global string $ml_hdl3;
	global string $ml_hel1;
	global string $ml_hel2;
	global string $ml_hel3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hbl1 $ml_hbl2 $ml_hbl3 $ml_hcl1 $ml_hcl2 $ml_hcl3 $ml_hdl1 $ml_hdl2 $ml_hdl3 $ml_hel1 $ml_hel2 $ml_hel3;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right finger1////////////////////////////////////////////
global proc ml_fig1r()
{
	global string $ml_hbr1;
	global string $ml_hbr2;
	global string $ml_hbr3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hbr1 $ml_hbr2 $ml_hbr3;
	ml_backmodelpanel;	
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right finger2////////////////////////////////////////////
global proc ml_fig2r()
{
	global string $ml_hcr1;
	global string $ml_hcr2;
	global string $ml_hcr3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hcr1 $ml_hcr2 $ml_hcr3;
	ml_backmodelpanel;	
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right finger3////////////////////////////////////////////
global proc ml_fig3r()
{
	global string $ml_hdr1;
	global string $ml_hdr2;
	global string $ml_hdr3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hdr1 $ml_hdr2 $ml_hdr3;
	ml_backmodelpanel;	
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right finger4////////////////////////////////////////////
global proc ml_fig4r()
{
	global string $ml_her1;
	global string $ml_her2;
	global string $ml_her3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_her1 $ml_her2 $ml_her3;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left finger1////////////////////////////////////////////
global proc ml_fig1l()
{
	global string $ml_hbl1;
	global string $ml_hbl2;
	global string $ml_hbl3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hbl1 $ml_hbl2 $ml_hbl3;
	ml_backmodelpanel;	
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left finger2////////////////////////////////////////////
global proc ml_fig2l()
{
	global string $ml_hcl1;
	global string $ml_hcl2;
	global string $ml_hcl3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hcl1 $ml_hcl2 $ml_hcl3;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left finger3////////////////////////////////////////////
global proc ml_fig3l()
{
	global string $ml_hdl1;
	global string $ml_hdl2;
	global string $ml_hdl3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hdl1 $ml_hdl2 $ml_hdl3;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left finger4////////////////////////////////////////////
global proc ml_fig4l()
{
	global string $ml_hel1;
	global string $ml_hel2;
	global string $ml_hel3;
	string $ml_tg ="-r ";
	int $ml_modifier=`getModifiers`;
	if (($ml_modifier %  2)==0)
	select -cl;
	select -tgl $ml_hel1 $ml_hel2 $ml_hel3;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right ik////////////////////////////////////////////
global proc ml_ikr()
{
	global string $ml_wristr;
	global string $ml_ikr;
	cutKey -cl -at "solverEnable" $ml_wristr;
	setKeyframe -v 1 -at solverEnable -time -31 $ml_wristr;
 	button -e -command "bus($ml_ikr)"  ml_butwrr;
	select $ml_ikr;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left ik////////////////////////////////////////////
global proc ml_ikl()
{
	global string $ml_wristl;
	global string $ml_ikl;
	cutKey -cl -at "solverEnable" $ml_wristl;
	setKeyframe -v 1 -at solverEnable -time -31 $ml_wristl;
 	button -e -command "bus($ml_ikl)"  ml_butwrl;
	select $ml_ikl;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select right rk////////////////////////////////////////////
global proc ml_fkr()
{
	global string $ml_wristr;
	global string $ml_ikr;
	cutKey -cl -at "solverEnable" $ml_wristr;
	setKeyframe -v 0 -at solverEnable -time -31 $ml_wristr;
 	button -e -command "bus($ml_wristr)"  ml_butwrr;
	select $ml_wristr;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select left fk////////////////////////////////////////////
global proc ml_fkl()
{
	global string $ml_wristl;
	global string $ml_ikl;
	cutKey -cl -at "solverEnable" $ml_wristl;
	setKeyframe -v 0 -at solverEnable -time -31 $ml_wristl;
 	button -e -command "bus($ml_wristl)"  ml_butwrl;
	select $ml_wristl;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////when chang the selected character in the list////////////////////////////////////
global proc ml_chang()
{
	global int $ml_cindex;  
	$ml_cindex = `optionMenu -q -select ml_mymenu`;  
	global int $ml_selNow;
	$ml_selNow = $ml_cindex -1;
	global string $ml_lChar[];
	global string $ml_master;
	global string $ml_head;
	global string $ml_neckA;
	global string $ml_neckB;
	global string $ml_handl;
	global string $ml_wristl;
	global string $ml_elbowl;
	global string $ml_arml;
	global string $ml_shoulderl;
	global string $ml_shoulderr;
	global string $ml_armr;
	global string $ml_elbowr;
	global string $ml_wristr;
	global string $ml_handr;
	global string $ml_chest;
	global string $ml_waist;
	global string $ml_hip;
	global string $ml_footl;
	global string $ml_footr;
	global string $ml_ikl;
	global string $ml_ikr;
	global string $ml_eye;
	global string $ml_har1;
	global string $ml_har2;
	global string $ml_har3;
	global string $ml_hbr1;
	global string $ml_hbr2;
	global string $ml_hbr3;
	global string $ml_hcr1;
	global string $ml_hcr2;
	global string $ml_hcr3;
	global string $ml_hdr1;
	global string $ml_hdr2;
	global string $ml_hdr3;
	global string $ml_her1;
	global string $ml_her2;
	global string $ml_her3;
	global string $ml_hal1;
	global string $ml_hal2;
	global string $ml_hal3;
	global string $ml_hbl1;
	global string $ml_hbl2;
	global string $ml_hbl3;
	global string $ml_hcl1;
	global string $ml_hcl2;
	global string $ml_hcl3;
	global string $ml_hdl1;
	global string $ml_hdl2;
	global string $ml_hdl3;
	global string $ml_hel1;
	global string $ml_hel2;
	global string $ml_hel3;
	 $ml_master = $ml_lChar[$ml_selNow]+ "_MASTER";
	 $ml_head = $ml_lChar[$ml_selNow]+ "_head";
	 $ml_neckA = $ml_lChar[$ml_selNow]+ "_neckA";
	 $ml_neckB = $ml_lChar[$ml_selNow]+ "_neckB";
	 $ml_wristr = $ml_lChar[$ml_selNow]+ "_wristCon_r";
	 $ml_elbowr = $ml_lChar[$ml_selNow]+ "_elbow_r";
	 $ml_armr = $ml_lChar[$ml_selNow]+ "_arm_r";
	 $ml_shoulderr = $ml_lChar[$ml_selNow]+ "_shoulder_r";
	 $ml_shoulderl = $ml_lChar[$ml_selNow]+ "_shoulder_l";
	 $ml_arml = $ml_lChar[$ml_selNow]+ "_arm_l";
	 $ml_elbowl = $ml_lChar[$ml_selNow]+ "_elbow_l";
	 $ml_wristl = $ml_lChar[$ml_selNow]+ "_wristCon_l";
	 $ml_chest = $ml_lChar[$ml_selNow]+ "_Chest";
	 $ml_waist = $ml_lChar[$ml_selNow]+ "_Upper_Body";
	 $ml_hip = $ml_lChar[$ml_selNow]+ "_Pelvis";
	 $ml_footl = $ml_lChar[$ml_selNow]+ "_footCon_l";
	 $ml_footr = $ml_lChar[$ml_selNow]+ "_footCon_r";
	 $ml_ikl = $ml_lChar[$ml_selNow]+ "_world_wristCon_l";
	 $ml_ikr = $ml_lChar[$ml_selNow]+ "_world_wristCon_r";
	 $ml_eye = $ml_lChar[$ml_selNow]+ "_eyeCTRL";
	 $ml_har1 = $ml_lChar[$ml_selNow]+"_thumbA_r";
	 $ml_har2 = $ml_lChar[$ml_selNow]+"_thumbB_r";
	 $ml_har3 = $ml_lChar[$ml_selNow]+"_thumbC_r";
	 $ml_hbr1 = $ml_lChar[$ml_selNow]+"_finger1A_r"; 
	 $ml_hbr2 = $ml_lChar[$ml_selNow]+"_finger1B_r"; 
	 $ml_hbr3 = $ml_lChar[$ml_selNow]+"_finger1C_r"; 
	 $ml_hcr1 = $ml_lChar[$ml_selNow]+"_finger2A_r";
	 $ml_hcr2 = $ml_lChar[$ml_selNow]+"_finger2B_r";
	 $ml_hcr3 = $ml_lChar[$ml_selNow]+"_finger2C_r";
	 $ml_hdr1 = $ml_lChar[$ml_selNow]+"_finger3A_r";
	 $ml_hdr2 = $ml_lChar[$ml_selNow]+"_finger3B_r";
	 $ml_hdr3 = $ml_lChar[$ml_selNow]+"_finger3C_r";
	 $ml_her1 = $ml_lChar[$ml_selNow]+"_finger4A_r";
	 $ml_her2 = $ml_lChar[$ml_selNow]+"_finger4B_r";
	 $ml_her3 = $ml_lChar[$ml_selNow]+"_finger4C_r";
	 $ml_hal1 = $ml_lChar[$ml_selNow]+"_thumbA_l";
	 $ml_hal2 = $ml_lChar[$ml_selNow]+"_thumbB_l";
	 $ml_hal3 = $ml_lChar[$ml_selNow]+"_thumbC_l";
	 $ml_hbl1 = $ml_lChar[$ml_selNow]+"_finger1A_l"; 
	 $ml_hbl2 = $ml_lChar[$ml_selNow]+"_finger1B_l"; 
	 $ml_hbl3 = $ml_lChar[$ml_selNow]+"_finger1C_l"; 
	 $ml_hcl1 = $ml_lChar[$ml_selNow]+"_finger2A_l";
	 $ml_hcl2 = $ml_lChar[$ml_selNow]+"_finger2B_l";
	 $ml_hcl3 = $ml_lChar[$ml_selNow]+"_finger2C_l";
	 $ml_hdl1 = $ml_lChar[$ml_selNow]+"_finger3A_l";
	 $ml_hdl2 = $ml_lChar[$ml_selNow]+"_finger3B_l";
	 $ml_hdl3 = $ml_lChar[$ml_selNow]+"_finger3C_l";
	 $ml_hel1 = $ml_lChar[$ml_selNow]+"_finger4A_l";
	 $ml_hel2 = $ml_lChar[$ml_selNow]+"_finger4B_l";
	 $ml_hel3 = $ml_lChar[$ml_selNow]+"_finger4C_l";
	 string $ml_cur = $ml_wristr+".solverEnable";
	int $ml_isifk = `getAttr -time 100 $ml_cur`;
	if ($ml_isifk==0)
 	{
 		button -e -w 18 -h 18 -l "f" -command "bus($ml_wristr)"  ml_butwrr;
	}
 	else if ($ml_isifk >0 )
 	{
 		button -e -w 18 -h 18 -l "i" -command "bus($ml_ikr)"  ml_butwrr;
	}
 	$ml_cur = $ml_wristl+".solverEnable";
	$ml_isifk = `getAttr -time 100 $ml_cur`;
	if ($ml_isifk==0)
 	{
 		button -e -w 18 -h 18 -l "f" -command "bus($ml_wristl)"  ml_butwrl;
	}
 	else if ($ml_isifk >0 )
 	{
 		button -e -w 18 -h 18 -l "i" -command "bus($ml_ikl)"  ml_butwrl;
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////switch to low model ////////////////////////////////////////////
global proc ml_low()
{
global string $ml_lChar[];
global int $ml_selNow;
string $ml_onhilayer;
string $ml_onlolayer;
string $ml_onsklayer;
string $ml_charAllParts[]=`ls -type transform ($ml_lChar[$ml_selNow]+"*")`;
int $ml_layNum=0;
string $ml_charLay[];
for ($ml_eachobj in $ml_charAllParts)
{
	string $ml_lay[];
	$ml_lay =`listConnections -type displayLayer $ml_eachobj`;
	if (size($ml_lay[0])!=0)
	{
		$ml_i=0;
		if($ml_layNum!=0)
		{
			for (;$ml_i<$ml_layNum;)
			{
				if($ml_lay[0]==$ml_charLay[$ml_i])
				break;
				else
				$ml_i=$ml_i+1;
			}
			if ($ml_i==$ml_layNum)
			{
				$ml_charLay[$ml_layNum]=$ml_lay[0];
				$ml_layNum=$ml_layNum+1;
			}
		}
		else 
		{	
			$ml_charLay[0]=$ml_lay[0];
			$ml_layNum=$ml_layNum+1;
		}
	}

}
for ($ml_eachlay in $ml_charLay)
{
string $ml_tolow =`tolower $ml_eachlay`;
string $ml_temphi = "_..*inn*(ing)*[1-9]*$";
string $ml_templo = "_..*inn*[a-z]*[xy]+[1-9]*$";
string $ml_tempsk = "_..*[a-z]*[let]+[a-z]*[let]+[a-z]*[1-9]*$";
if (size(`match $ml_temphi $ml_tolow`))
{
$ml_onhilayer = $ml_eachlay;
setAttr ($ml_onhilayer+".visibility") 0;
}
if (size(`match $ml_templo $ml_tolow`))
{
$ml_onlolayer = $ml_eachlay;
setAttr ($ml_onlolayer+".visibility") 1;
}
if (size(`match $ml_tempsk $ml_tolow`))
{
$ml_onsklayer = $ml_eachlay;
setAttr ($ml_onsklayer+".visibility") 1;
}
}
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////switch to hight model ////////////////////////////////////////////
global proc ml_high()
{
	global string $ml_lChar[];
	global int $ml_selNow;
	string $ml_onhilayer;
	string $ml_onlolayer;
	string $ml_onsklayer;
	string $ml_charAllParts[]=`ls -type transform ($ml_lChar[$ml_selNow]+"*")`;
	int $ml_layNum=0;
	string $ml_charLay[];
	for ($ml_eachobj in $ml_charAllParts)
	{
		string $ml_lay[];
		$ml_lay =`listConnections -type displayLayer $ml_eachobj`;
		if (size($ml_lay[0])!=0)
		{
			$ml_i=0;
			if($ml_layNum!=0)
			{
				for (;$ml_i<$ml_layNum;)
				{
					if($ml_lay[0]==$ml_charLay[$ml_i])
					break;
					else
					$ml_i=$ml_i+1;
				}
				if ($ml_i==$ml_layNum)
				{
					$ml_charLay[$ml_layNum]=$ml_lay[0];
					$ml_layNum=$ml_layNum+1;
				}
			}
			else 
			{	
				$ml_charLay[0]=$ml_lay[0];
				$ml_layNum=$ml_layNum+1;
			}
		}
	
	}
	for ($ml_eachlay in $ml_charLay)
	{
		string $ml_tolow =`tolower $ml_eachlay`;
		string $ml_temphi = "_..*inn*(ing)*[1-9]*$";
		string $ml_templo = "_..*inn*[a-z]*[xy]+[1-9]*$";
		string $ml_tempsk = "_..*[a-z]*[let]+[a-z]*[let]+[a-z]*[1-9]*$";
		if (size(`match $ml_temphi $ml_tolow`))
		{
			$ml_onhilayer = $ml_eachlay;
			setAttr ($ml_onhilayer+".visibility") 1;
		}
		if (size(`match $ml_templo $ml_tolow`))
		{
			$ml_onlolayer = $ml_eachlay;
			setAttr ($ml_onlolayer+".visibility") 0;
		}
		if (size(`match $ml_tempsk $ml_tolow`))
		{
			$ml_onsklayer = $ml_eachlay;
			setAttr ($ml_onsklayer+".visibility") 1;
		}
	}
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////hide other character but selecting now ////////////////////////////////////////////
global proc ml_hide()
{
global string $ml_lChar[];
global int $ml_lcharNum;
for($ml_n=0;$ml_n<=$ml_lcharNum;$ml_n++)
{
string $ml_onhilayer;
string $ml_onlolayer;
string $ml_onsklayer;
string $ml_charAllParts[]=`ls -type transform ($ml_lChar[$ml_n]+"*")`;
int $ml_layNum=0;
string $ml_charLay[];
for ($ml_eachobj in $ml_charAllParts)
{
	string $ml_lay[];
	$ml_lay =`listConnections -type displayLayer $ml_eachobj`;
	if (size($ml_lay[0])!=0)
	{
		$ml_i=0;
		if($ml_layNum!=0)
		{
			for (;$ml_i<$ml_layNum;)
			{
				if($ml_lay[0]==$ml_charLay[$ml_i])
				break;
				else
				$ml_i=$ml_i+1;
			}
			if ($ml_i==$ml_layNum)
			{
				$ml_charLay[$ml_layNum]=$ml_lay[0];
				$ml_layNum=$ml_layNum+1;
			}
		}
		else 
		{	
			$ml_charLay[0]=$ml_lay[0];
			$ml_layNum=$ml_layNum+1;
		}
	}

}
for ($ml_eachlay in $ml_charLay)
{
string $ml_tolow =`tolower $ml_eachlay`;
string $ml_temphi = "_..*inn*(ing)*[1-9]*$";
string $ml_templo = "_..*inn*[a-z]*[xy]+[1-9]*$";
string $ml_tempsk = "_..*[a-z]*[let]+[a-z]*[let]+[a-z]*[1-9]*$";
if (size(`match $ml_temphi $ml_tolow`))
{
$ml_onhilayer = $ml_eachlay;
setAttr ($ml_onhilayer+".visibility") 0;
}
if (size(`match $ml_templo $ml_tolow`))
{
$ml_onlolayer = $ml_eachlay;
setAttr ($ml_onlolayer+".visibility") 0;
}
if (size(`match $ml_tempsk $ml_tolow`))
{
$ml_onsklayer = $ml_eachlay;
setAttr ($ml_onsklayer+".visibility") 0;
}
}
}
ml_low;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////select the character seleted in scene ////////////////////////////////////////////
global proc ml_GoChar()
{
	global string $ml_lChar[];
	global int $ml_selNow;
	global int $ml_cindex;
	string $ml_sl[]=`ls -sl`;
	string $ml_buffer1[],$ml_buffer2[];
	string $ml_char;
	tokenize $ml_sl[0] ":" $ml_buffer1;
	
	if (`size $ml_buffer1`==2)
	{
		tokenize $ml_buffer1[1] "_" $ml_buffer2;
		$ml_char = $ml_buffer1[0] + ":" + $ml_buffer2[0];
	}
	else if (`size $ml_buffer1`==1)
	{
		tokenize $ml_buffer1[0] "_" $ml_buffer2;
		$ml_char = $ml_buffer2[0];
	}
		
	int $ml_j = 0;
	for ($ml_eachChar in $ml_lChar)
	{
	if ($ml_eachChar== $ml_char)
	$ml_selNow = $ml_j;
	$ml_j++; 
	}
	$ml_cindex = $ml_selNow +1;
	optionMenu -e -select $ml_cindex  ml_mymenu;
	ml_chang;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////put the character to the top of list////////////////////////////////////////////
global proc ml_totop()
{
global int $ml_selNow;
global string $ml_lChar[];
global string $ml_sChar[];
string $ml_temp1;
string $ml_temp2;
$ml_temp1 = $ml_lChar[$ml_selNow];
$ml_temp2 = $ml_sChar[$ml_selNow];
for ($ml_j=$ml_selNow;$ml_j>0;)
{
$ml_lChar[$ml_j] = $ml_lChar[($ml_j-1)];
$ml_sChar[$ml_j] = $ml_sChar[($ml_j-1)];
$ml_j=$ml_j-1;
}
$ml_lChar[0]=$ml_temp1;
$ml_sChar[0]=$ml_temp2;
deleteUI -ctl ml_mymenu;
ml_listUI;
   	formLayout -edit
		-attachForm ml_mymenu "top"  13  //to
		-attachForm ml_mymenu "left"  75
		ml_selbutn;
optionMenu -e -select 1  ml_mymenu;
ml_chang;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////prepare for edit expression in a dummy camera ///////////////////////////
global proc ml_InEx()
	{
	global int $ml_selNow;
	global string $ml_lChar[];
	createDisplayLayer -name "NoRenderExpression" -number 1 -empty;
if(`objExists expCube`) 
{delete expCube;}
polyCube -n expCube;
editDisplayLayerMembers NoRenderExpression expCube;
parent expCube ($ml_lChar[$ml_selNow]+"_head");
setAttr "expCube.translateX" 0;
setAttr "expCube.translateY" 0;
setAttr "expCube.translateZ" 10;
setAttr "expCube.rotateX" 0;
setAttr "expCube.rotateY" 0;
setAttr "expCube.rotateZ" 0;
setAttr -lock true "expCube.rx";
setAttr -lock true "expCube.ry";
setAttr -lock true "expCube.rz";
string $ml_focwin =`getPanel -withFocus`; 
lookThroughModelPanelClipped expCubeShape $ml_focwin 0.001 1000;
setAttr "cameraShape1.focalLength" 35;
ml_low;
isolateSelect -state 1 `paneLayout -q -pane1 viewPanes`;
select ($ml_lChar[$ml_selNow]+"_MASTER");
pickWalk -d up;
isolateSelect -addSelected `paneLayout -q -pane1 viewPanes`;
setAttr NoRenderExpression.visibility 0;
select expCube;
ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////finish expression edit ////////////////////////////////////////////
global proc ml_FinishEx()
{
	string $ml_focwin;
	select "expCub*";
	doDelete;
	delete NoRenderExpression;
	$ml_focwin =`getPanel -withFocus`; 
	isolateSelect -state 0 $ml_focwin;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////select mouth contrl ////////////////////////////////////////////
global proc ml_selMouth()
{
	global int $ml_selNow;
	global string $ml_lChar[];
	select -cl;
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_CtrlX_Lips")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_Lip_Twist_Up_Down")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_U")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_M")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_FV")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_OOO")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_Jaw_Rot")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_R_Smile_Sad")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_L_Smile_Sad")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_Lip_In_Kiss")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_T_L")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_L_sneer")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_EEE")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_R_sneer")`);
	catch(`select -tgl ($ml_lChar[$ml_selNow]+"_Puff_O_Smile")`);
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////all character's layer switch ////////////////////////////////////////////
global proc ml_allChar()
{
global int $ml_switch;
global string $ml_lChar[];
global int $ml_lcharNum;
for($ml_n=0;$ml_n<=$ml_lcharNum;$ml_n++)
{
string $ml_onhilayer;
string $ml_onlolayer;
string $ml_onsklayer;
string $ml_charAllParts[]=`ls -type transform ($ml_lChar[$ml_n]+"*")`;
int $ml_layNum=0;
string $ml_charLay[];
for ($ml_eachobj in $ml_charAllParts)
{
	string $ml_lay[];
	$ml_lay =`listConnections -type displayLayer $ml_eachobj`;
	if (size($ml_lay[0])!=0)
	{
		$ml_i=0;
		if($ml_layNum!=0)
		{
			for (;$ml_i<$ml_layNum;)
			{
				if($ml_lay[0]==$ml_charLay[$ml_i])
				break;
				else
				$ml_i=$ml_i+1;
			}
			if ($ml_i==$ml_layNum)
			{
				$ml_charLay[$ml_layNum]=$ml_lay[0];
				$ml_layNum=$ml_layNum+1;
			}
		}
		else 
		{	
			$ml_charLay[0]=$ml_lay[0];
			$ml_layNum=$ml_layNum+1;
		}
	}

}
for ($ml_eachlay in $ml_charLay)
{
string $ml_tolow =`tolower $ml_eachlay`;
string $ml_temphi = "_..*inn*(ing)*[1-9]*$";
string $ml_templo = "_..*inn*[a-z]*[xy]+[1-9]*$";
string $ml_tempsk = "_..*[a-z]*[let]+[a-z]*[let]+[a-z]*[1-9]*$";
if (size(`match $ml_temphi $ml_tolow`))
{
$ml_onhilayer = $ml_eachlay;
setAttr ($ml_onhilayer+".visibility") (!$ml_switch);
}
if (size(`match $ml_templo $ml_tolow`))
{
$ml_onlolayer = $ml_eachlay;
setAttr ($ml_onlolayer+".visibility") $ml_switch;
}
if (size(`match $ml_tempsk $ml_tolow`))
{
$ml_onsklayer = $ml_eachlay;
setAttr ($ml_onsklayer+".visibility") 1;
}
}
}
$ml_switch =!$ml_switch;
	ml_backmodelpanel;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////look through the cam ////////////////////////////////////////////
global proc ml_switchCam()
{
string $ml_modelPanel_ld = `getPanel -withFocus`;  //read panel name
string $ml_camera_ld = `modelEditor -query -camera $ml_modelPanel_ld`;  //read camera name
string $ml_came_ld[];  //create $ml_
$ml_came_ld = `ls -ca "cam*" "CAM*" ( $ml_camera_ld + "*" )`;  //read edit camera name list
lookThroughModelPanel $ml_came_ld[0] $ml_modelPanel_ld;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////add a select set ////////////////////////////////////////////
global proc ml_addseta()
{
global string $ml_selseta[];
$ml_selseta =`ls -sl`;
string $ml_bufa ="select -r "+ stringArrayToString($ml_selseta, " ");
button -e -c $ml_bufa ml_sela;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////add a select set ////////////////////////////////////////////
global proc ml_addsetb()
{
global string $ml_selsetb[];
$ml_selsetb =`ls -sl`;
string $ml_bufb ="select -r "+ stringArrayToString($ml_selsetb, " ");
button -e -c $ml_bufb  ml_selb;
	ml_backmodelpanel;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////set focus panel back to model panel////////////////////////////////////////////
global proc ml_backmodelpanel()
{
	string $ml_focwin =`getPanel -withFocus`; 
	setFocus $ml_focwin;
}
//////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////edit layer button////////////////////////////////////////////
global proc ml_layerEdit()
{
int $vi =`frameLayout -q -visible ml_frameR`;
if ($vi ==0)
{
frameLayout -e -visible 1 ml_frameR;
window -e -width 710 ml_selwin;
}
if ($vi ==1)
{
frameLayout -e -visible 0 ml_frameR;
window -e -width 350 ml_selwin;
ml_backmodelpanel;
}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////附加程序 a/////////////////////////////////////////////////////////////////////////////
string $lc_all_layers_name[],$lc_tmp_layer_name;
string $lc_split_name[],$lc_charactor_layer_name[],$lc_other_layer_name[];
int $lc_count_i,$lc_count_j,$lc_count_k,$lc_tmp_i,$lc_nums_of_layer,$lc_nums_of_char_layer,$lc_nums_of_other_layer;
int $lc_old_name_segs,$lc_new_name_segs,$lc_flag_find_same,$lc_flag_find,$lc_flag_test;
string $lc_tmp_old_seg_char[],$lc_tmp_new_seg_char[];
string $lc_tmptest,$lc_testtmp,
	$lc_other_radio_path[],
	$lc_char_radio_path[],
	$lc_char_hair_checkbox_path[];
string  $lc_allow_error_control[],
	$lc_allow_error_detail[],
	$lc_allow_error_rough[],
	$lc_allow_error_hairproxy[];	
int 	$lc_all_hair_state;
global proc reference_to_zyLayerTaxi()
{
	global string $lc_all_layers_name[],$lc_tmp_layer_name,$lc_all_layers_name_re[];
	global string $lc_split_name[],$lc_charactor_layer_name[],$lc_other_layer_name[];
	global int $lc_count_i=0,$lc_count_j=0,$lc_count_k=0,$lc_tmp_i=0,$lc_nums_of_layer=0,$lc_nums_of_char_layer=0,$lc_nums_of_other_layer=0;
	global int $lc_old_name_segs=0,$lc_new_name_segs=0,$lc_flag_find_same=0,$lc_flag_find=0,$lc_flag_test=0;
	global string $lc_tmp_old_seg_char[],$lc_tmp_new_seg_char[],$lc_tmp_re_seg_char[];
	global string $lc_tmptest,$lc_testtmp;
	global string $lc_other_radio_path[],$lc_char_radio_path[],$lc_char_hair_checkbox_path[];
	global string  	$lc_allow_error_control[],$lc_allow_error_detail[],$lc_allow_error_rough[],$lc_allow_error_hairproxy[];	
	int $lc_share_i,$lc_share_j;
	int $lc_state_of_char[],$lc_state_of_other[],$lc_state_of_hair[];  
	string $lc_charactor_layer_name_sh[],$lc_other_layer_name_sh[];
	string $buffer[];
// modified by wanshoulong ,07/17/2006
//-----------------------------------------------------------------------------------
	$lc_allow_error_control={"skeleton","Skeleton","SKELETON"};
	$lc_allow_error_detail={"Skin","SKIN","skinning"};
	$lc_allow_error_rough={"skinProxy","skinproxy","SKINPROXY"};
	$lc_allow_error_hairproxy={"hairproxy","hairProxy","Hairproxy"};
//----------------------------------------------------------------------------------
	
	if(size($lc_char_hair_checkbox_path)!=0)
		clear  $lc_char_hair_checkbox_path;
	if(size($lc_tmp_old_seg_char)!=0)
		clear  $lc_tmp_old_seg_char;
	if(size($lc_tmp_new_seg_char)!=0)
		clear  $lc_tmp_new_seg_char;	
	if(size($lc_tmp_re_seg_char)!=0)
		clear  $lc_tmp_re_seg_char;	
	if(size($lc_split_name)!=0)
		clear  $lc_split_name;		
	if(size($lc_all_layers_name)!=0)
		clear  $lc_all_layers_name;
	if(size($lc_all_layers_name_re)!=0)
		clear  $lc_all_layers_name_re;
	$lc_all_layers_name=`listConnections layerManager`;
	if (`objExists ("*:layerManager")`)
	{
		string $lc_re_layers_name[]=`listConnections ("*:layerManager")`;
		for ($i=1;$i<`size $lc_re_layers_name` ;$i++ )
		{
			$lc_all_layers_name_re[$i-1]=$lc_re_layers_name[$i];
		}
		appendStringArray ($lc_all_layers_name , $lc_all_layers_name_re , (`size $lc_all_layers_name_re`));
	}
	if(size($lc_other_radio_path)!=0)
		clear  $lc_other_radio_path;
	if(size($lc_char_radio_path)!=0)
		clear $lc_char_radio_path;
	if(size($lc_charactor_layer_name)!=0)
		clear $lc_charactor_layer_name;
	if(size($lc_other_layer_name)!=0)
		clear $lc_other_layer_name;
	$lc_nums_of_char_layer=0;
	$lc_nums_of_other_layer=0;
	$lc_nums_of_layer=size($lc_all_layers_name);
	for($lc_count_j=0;$lc_count_j<($lc_nums_of_layer);$lc_count_j++)       
	{
		$lc_flag_find=0;
		int $si=`tokenize $lc_all_layers_name[$lc_count_j] ":" $lc_tmp_re_seg_char`;
		$lc_new_name_segs=`tokenize $lc_tmp_re_seg_char[$si-1] "_" $lc_tmp_new_seg_char`;

		if ($lc_tmp_new_seg_char[$lc_new_name_segs-1]=="skin")
		{
			error ($lc_tmp_new_seg_char[0]+" have a wrong display name  ---- skin");
		}
		if($lc_new_name_segs==1)
		{
			$lc_other_layer_name[$lc_nums_of_other_layer]=$lc_all_layers_name[$lc_count_j];
			$lc_nums_of_other_layer++;
			continue;
		}
		if($lc_nums_of_char_layer==0)
		{
			for($lc_tmptest in $lc_allow_error_control)
			{
				if(endsWith($lc_all_layers_name[$lc_count_j],$lc_tmptest)) 
				{
					$lc_count_k=size($lc_all_layers_name[$lc_count_j])-size($lc_tmptest)-1;
					$lc_nums_of_char_layer=1;
					$lc_charactor_layer_name[0]=startString($lc_all_layers_name[$lc_count_j],$lc_count_k);
					$lc_flag_find=1;
					break;
				}
			}		
		}	
		for($lc_count_i=0;$lc_count_i<$lc_nums_of_char_layer;$lc_count_i++)     
		{
			$lc_old_name_segs=`tokenize $lc_charactor_layer_name[$lc_count_i] "_" $lc_tmp_old_seg_char`;
			if(`match $lc_charactor_layer_name[$lc_count_i] $lc_all_layers_name[$lc_count_j]`==$lc_charactor_layer_name[$lc_count_i])  
			{
				$lc_flag_find=1;	
				break;
			}
		}
		if($lc_flag_find==0)
		{
			if ($si==2)
				$lc_tmptest=$lc_tmp_re_seg_char[0]+":"+$lc_tmp_new_seg_char[0];
			else
				$lc_tmptest=$lc_tmp_new_seg_char[0];

			if($lc_new_name_segs>2)
			for($lc_count_i=1;$lc_count_i<($lc_new_name_segs>4 ? 4 : ($lc_new_name_segs-1));$lc_count_i++)
				$lc_tmptest+="_"+$lc_tmp_new_seg_char[($lc_count_i)];
			$lc_flag_test=0;
			for($lc_testtmp in $lc_allow_error_control)
			{
				if(`objExists ($lc_tmptest+"_"+$lc_testtmp)`)
				{
					$lc_charactor_layer_name[$lc_nums_of_char_layer]=$lc_tmptest;
					$lc_nums_of_char_layer++;
					$lc_flag_test=1;
					break;
				}
			}
			if($lc_flag_test==0)
			{
				if($lc_nums_of_other_layer==0)
				{
					$lc_nums_of_other_layer++;
					$lc_other_layer_name[$lc_nums_of_other_layer]=$lc_tmptest;
				}
				else
				{
					for($lc_count_i=0;$lc_count_i<$lc_nums_of_other_layer;$lc_count_i++)
					{
						$lc_flag_test=0;
						if(`match $lc_other_layer_name[$lc_count_i] $lc_tmptest`==$lc_other_layer_name[$lc_count_i]) 
						{
							$lc_flag_test=1;
							break;
						}
					}
					
					if($lc_flag_test==0)
					{
						$lc_other_layer_name[$lc_nums_of_other_layer]=$lc_tmptest;
						$lc_nums_of_other_layer++;
						continue;
					}
				}
			}
		}

	}
	for ($lc_share_i=0;$lc_share_i<$lc_nums_of_layer;$lc_share_i++)
	{
		for($lc_share_j=0;$lc_share_j<$lc_nums_of_other_layer;$lc_share_j++)
			if(`match $lc_other_layer_name[$lc_share_j] $lc_all_layers_name[$lc_share_i]`==$lc_other_layer_name[$lc_share_j])
				if(`getAttr ($lc_all_layers_name[$lc_share_i]+".visibility")`==1)
					$lc_state_of_other[$lc_share_j]=2;
				else 
					$lc_state_of_other[$lc_share_j]=1;
	}	
	for($lc_share_i=0;$lc_share_i<$lc_nums_of_char_layer;$lc_share_i++)
	{
		$lc_state_of_char[$lc_share_i]=1;
		$lc_state_of_hair[$lc_share_i]=-1;
		for($lc_tmptest in $lc_allow_error_detail)
			if(`objExists ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest)`)
			{
				if(`getAttr ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest+".visibility")`)
					$lc_state_of_char[$lc_share_i]=2;
				break;
			}
		for($lc_tmptest in $lc_allow_error_hairproxy)
			if(`objExists ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest)`)
			{
				if(`getAttr ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest+".visibility")`)
					$lc_state_of_hair[$lc_share_i]=1;
				else 
					$lc_state_of_hair[$lc_share_i]=0;
				$lc_flag_test=1;	
				break;
			}
		
		if($lc_state_of_char[$lc_share_i]==1)		
			for($lc_tmptest in $lc_allow_error_rough)
				if(`objExists ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest)`)
				{
					if(`getAttr ($lc_charactor_layer_name[$lc_share_i]+"_"+$lc_tmptest+".visibility")`)
						$lc_state_of_char[$lc_share_i]=3;
					$lc_flag_find=1;
					break;
				}
	}

	for ($i=0;$i<`size $lc_other_layer_name`;$i++)
	{
		int $si=`tokenize $lc_other_layer_name[$i] ":" $buffer`;
		$lc_other_layer_name_sh[$i]=$buffer[$si-1];
	}
	
	for ($i=0;$i<`size $lc_charactor_layer_name`;$i++)
	{
		int $si=`tokenize $lc_charactor_layer_name[$i] ":" $buffer`;
		$lc_charactor_layer_name_sh[$i]=$buffer[$si-1];
	}
string $lc_control_win_name="easy_layer_control";

	columnLayout -adjustableColumn true;
				
		text   -backgroundColor .8 .8 .9
		
			-align "left"
		
			-font  "smallBoldLabelFont"   
			
			-label "          层命名               隐藏  |  显示/高精  |  低精模型 | 头发";
	
		frameLayout -label "" -labelAlign "top" 
					-height ($lc_nums_of_other_layer*21+10)
 					-collapsable true
 					-borderStyle "etchedOut";
			columnLayout -adjustableColumn true
				-rowSpacing 5;				
				for($lc_share_i=1;$lc_share_i<$lc_nums_of_other_layer;$lc_share_i++)
			 		$lc_other_radio_path[$lc_share_i]=`radioButtonGrp -numberOfRadioButtons 2
						-width 100
						-columnWidth3 140  60 60
						-select $lc_state_of_other[$lc_share_i]
						-onCommand1 ("change_other_layer_state($lc_other_layer_name["+$lc_share_i+"]"+",1)")
						-onCommand2 ("change_other_layer_state($lc_other_layer_name["+$lc_share_i+"]"+",2)")
 						-label $lc_other_layer_name_sh[$lc_share_i] 
						-labelArray2  "" ""`;
			setParent ..;
		setParent ..;
		frameLayout -label "" -labelAlign "top"
					-height ($lc_nums_of_char_layer*18+30)
					-collapsable true
 					-borderStyle "etchedOut";
 			rowColumnLayout
 				-numberOfColumns 2
 				-columnWidth 1 320 
	 			-columnWidth 2 50 
 				;
				for($lc_share_i=0;$lc_share_i<$lc_nums_of_char_layer;$lc_share_i++)
					{				
					$lc_char_radio_path[$lc_share_i]=`radioButtonGrp -numberOfRadioButtons 3
						-select $lc_state_of_char[$lc_share_i]
						-columnWidth4 140  60 60 60
						-onCommand1 ("change_char_layer_state($lc_charactor_layer_name["+$lc_share_i+"],1)")
 						-onCommand2 ("change_char_layer_state($lc_charactor_layer_name["+$lc_share_i+"],2)")
 						-onCommand3 ("change_char_layer_state($lc_charactor_layer_name["+$lc_share_i+"],3)")
 						-label $lc_charactor_layer_name_sh[$lc_share_i] -labelArray3 "" "" ""`;
					$lc_char_hair_checkbox_path[$lc_share_i]=`checkBox -label "" 
						-enable (($lc_state_of_hair[$lc_share_i]>-1) ? 1 :0)
						-value $lc_state_of_hair[$lc_share_i]
						-onCommand ("change_char_hair_state($lc_charactor_layer_name["+$lc_share_i+"],1)")
						-offCommand ("change_char_hair_state($lc_charactor_layer_name["+$lc_share_i+"],0)")
						`;
					}	
			setParent ..;
		setParent ..;
		frameLayout -label "整体控制" -labelAlign "top"
			-marginHeight 2
			-borderStyle "etchedOut";
			rowColumnLayout -numberOfColumns 4 
				-height 80	
				-columnWidth 1 90 
	 			-columnWidth 2 90
 				-columnWidth 3 90
 				-columnWidth 4 90;
 			;
				button  -label   "隐藏角色"   -command ("change_char_all_unvisible()") ; 
 				button  -label   "显示高精角色"      -command ("change_char_all_detail()");
 				button  -label   "显示低精角色"      -command ("change_char_all_rough()");
 				button  -label   "显示隐藏头发"      -command ("change_char_all_hair()");
				button  -label   "隐藏非角色"   -command ("change_other_all_unvisible()");
				button  -label   "显示非角色"     -command ("change_other_all_visible()");
			setParent ..;	
		setParent ..;
}
global proc change_char_all_unvisible()
	{
	global string $lc_charactor_layer_name[],$lc_all_layers_name[];
	global string $lc_char_radio_path[];
	global int $lc_nums_of_char_layer;
	string $lc_temp_a,$lc_temp_b;
	int $lc_iii;
	for($lc_temp_a  in  $lc_charactor_layer_name)
		for($lc_temp_b in $lc_all_layers_name)
			if(`match $lc_temp_a $lc_temp_b`==$lc_temp_a)
				setAttr ($lc_temp_b+".visibility") 0;
	for($lc_iii=0;$lc_iii<$lc_nums_of_char_layer;$lc_iii++)
		{
		radioButtonGrp  -edit -select 1 $lc_char_radio_path[$lc_iii];
		}  
	}
global proc change_char_all_detail()
	{
	global string $lc_charactor_layer_name[],$lc_all_layers_name[];
	global string $lc_char_radio_path[];
	global int $lc_nums_of_char_layer;
	global string  	$lc_allow_error_control[],
			$lc_allow_error_detail[],
			$lc_allow_error_rough[],
			$lc_allow_error_hairproxy[];
	string $lc_temp_a,$lc_temp_b;
	int $lc_iii;
	for($lc_temp_a  in  $lc_charactor_layer_name)
		{
		for($lc_temp_b in $lc_allow_error_control)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 1;
		for($lc_temp_b in $lc_allow_error_detail)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 1;
		for($lc_temp_b in $lc_allow_error_rough)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 0;
		
		}
	for($lc_iii=0;$lc_iii<$lc_nums_of_char_layer;$lc_iii++)
		{
		radioButtonGrp  -edit -select 2 $lc_char_radio_path[$lc_iii];
		}  
	}
global proc change_char_all_rough()
	{
	global string $lc_charactor_layer_name[],$lc_all_layers_name[];
	global string $lc_char_radio_path[];
	global int $lc_nums_of_char_layer;
	global string  	$lc_allow_error_control[],
			$lc_allow_error_detail[],
			$lc_allow_error_rough[],
			$lc_allow_error_hairproxy[];
	string $lc_temp_a,$lc_temp_b;
	int $lc_iii;
	
	
	for($lc_temp_a  in  $lc_charactor_layer_name)
		{
		for($lc_temp_b in $lc_allow_error_control)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 1;
		for($lc_temp_b in $lc_allow_error_detail)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 0;
		for($lc_temp_b in $lc_allow_error_rough)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`==1)
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") 1;
		}
	for($lc_iii=0;$lc_iii<$lc_nums_of_char_layer;$lc_iii++)
		{
		radioButtonGrp  -edit -select 3 $lc_char_radio_path[$lc_iii];
		}  
	}
global proc change_other_all_unvisible()
	{
	global string $lc_other_layer_name[],$lc_all_layers_name[];
	global string $lc_other_radio_path[];
	global int $lc_nums_of_other_layer;
	string $lc_temp_a,$lc_temp_b;
	int $lc_iii;
	
	
	for($lc_temp_a  in  $lc_other_layer_name)
		for($lc_temp_b in $lc_all_layers_name)
			if((`match $lc_temp_a $lc_temp_b`==$lc_temp_a)&&($lc_temp_a!="defaultLayer"))
				setAttr ($lc_temp_b+".visibility") 0;
	for($lc_iii=1;$lc_iii<$lc_nums_of_other_layer;$lc_iii++)
		{
		radioButtonGrp  -edit -select 1 $lc_other_radio_path[$lc_iii];
		}  
	}

global proc change_other_all_visible()
	{
	global string $lc_other_layer_name[],$lc_all_layers_name[];
	global string $lc_other_radio_path[];
	global int $lc_nums_of_other_layer;
	string $lc_temp_a,$lc_temp_b;
	int $lc_iii;
	
	
	for($lc_temp_a  in  $lc_other_layer_name)
		for($lc_temp_b in $lc_all_layers_name)
			if((`match $lc_temp_a $lc_temp_b`==$lc_temp_a)&&($lc_temp_a!="defaultLayer"))
				setAttr ($lc_temp_b+".visibility") 1;
	for($lc_iii=1;$lc_iii<$lc_nums_of_other_layer;$lc_iii++)
		{
		radioButtonGrp  -edit -select 2 $lc_other_radio_path[$lc_iii];
		}  
	}
global proc change_char_layer_state(string $lc_control_name,int $lc_layer_command) 
	{
	string $lc_tmp_string;
	int $lc_iii;
	int $lc_real_layer_num=0;
	string $lc_real_layer_name[4];
	global string  $lc_allow_error_control[],
		$lc_allow_error_detail[],
		$lc_allow_error_rough[],
		$lc_allow_error_hairproxy[];
	for($lc_tmp_string in $lc_allow_error_control)
		{				
		if(`objExists ($lc_control_name+"_"+$lc_tmp_string)`)
			{
			$lc_real_layer_name[0]=$lc_control_name+"_"+$lc_tmp_string;
		
			$lc_real_layer_num++;
							
			break;
			}
		}			
	for($lc_tmp_string in $lc_allow_error_detail)			
		if(`objExists ($lc_control_name+"_"+$lc_tmp_string)`)
			{
			$lc_real_layer_name[1]=$lc_control_name+"_"+$lc_tmp_string;
			$lc_real_layer_num++;			
			break;
			}
	for($lc_tmp_string in $lc_allow_error_rough)		
		if(`objExists ($lc_control_name+"_"+$lc_tmp_string)`)
			{
			$lc_real_layer_name[2]=$lc_control_name+"_"+$lc_tmp_string;	
			$lc_real_layer_num++;			
			break;
			}		
	switch ($lc_layer_command)
		{
		case 1 :
			{
			eval("setAttr "+$lc_real_layer_name[0]+".visibility 0");
			eval("setAttr "+$lc_real_layer_name[1]+".visibility 0");
			eval("setAttr "+$lc_real_layer_name[2]+".visibility 0");
			if($lc_real_layer_num==4)
				eval("setAttr "+$lc_real_layer_name[3]+".visibility 0");
			break;
			}
		case 2 :		
			{
			eval("setAttr "+$lc_real_layer_name[0]+".visibility 1");
			eval("setAttr "+$lc_real_layer_name[1]+".visibility 1");
			eval("setAttr "+$lc_real_layer_name[2]+".visibility 0");
			if($lc_real_layer_num==4)
				eval("setAttr "+$lc_real_layer_name[3]+".visibility 0");
			break;
			}
		case 3 :		
			{
			eval("setAttr "+$lc_real_layer_name[0]+".visibility 1");
			eval("setAttr "+$lc_real_layer_name[1]+".visibility 0");
			eval("setAttr "+$lc_real_layer_name[2]+".visibility 1");
			if($lc_real_layer_num==4)
				eval("setAttr "+$lc_real_layer_name[3]+".visibility 1");
			break;
			}
		}
	}
global proc change_other_layer_state(string $lc_control_name,int $lc_layer_command)
	{
	global string $lc_all_layers_name[];
	global string  $lc_allow_error_control[],
		$lc_allow_error_detail[],
		$lc_allow_error_rough[],
		$lc_allow_error_hairproxy[];
	string $lc_testtmp ;
	for($lc_testtmp in $lc_all_layers_name)
		if(`match $lc_control_name $lc_testtmp`==$lc_control_name)
			if($lc_layer_command==1)
				eval("setAttr "+$lc_testtmp+".visibility 0");
			else 
				eval("setAttr "+$lc_testtmp+".visibility 1");
	}	
global proc change_char_hair_state(string $lc_control_name,int $lc_layer_command)
	{
	global string $lc_char_hair_checkbox_path[];
	global string $lc_charactor_layer_name[];
	global string  $lc_allow_error_control[],
		$lc_allow_error_hairproxy[];
	int $lc_iii;
	global int $lc_nums_of_char_layer;
	string $lc_testtmp,$lc_test_string;
	for($lc_test_string in $lc_allow_error_hairproxy)
		if(`objExists ($lc_control_name+"_"+$lc_test_string)`==1)
			setAttr ($lc_control_name+"_"+$lc_test_string+".visibility") $lc_layer_command;
	}	
global proc change_char_all_hair()
	{	
	global string $lc_charactor_layer_name[],
			$lc_allow_error_hairproxy[],
			$lc_char_hair_checkbox_path[];
	string $lc_temp_a,$lc_temp_b;
	global int $lc_nums_of_char_layer;
	global int $lc_all_hair_state;
	int $lc_iii;
	for($lc_temp_a  in  $lc_charactor_layer_name)
		{
		for($lc_temp_b in $lc_allow_error_hairproxy)
			if(`objExists ($lc_temp_a+"_"+$lc_temp_b)`)
				{
				setAttr ($lc_temp_a+"_"+$lc_temp_b+".visibility") (!$lc_all_hair_state);
				break;
				}
		}
	$lc_all_hair_state=!$lc_all_hair_state;
	for($lc_iii=0;$lc_iii<$lc_nums_of_char_layer;$lc_iii++)
		{
		checkBox  -edit -value $lc_all_hair_state $lc_char_hair_checkbox_path[$lc_iii];
		} 
	}
////////////////////////////////////////////////////////////////////////////////////////////////////