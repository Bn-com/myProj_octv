//Auto set keyframes for character lip sync according to a data .txt file .
//For Bratz project.
//Update 11-11-2006.

proc string[] ALLGetFilename()
{
	string $fileName = `file -q -sceneName`;
	string $buffer[];
	int $num = `tokenize $fileName "\/" $buffer`;
	int $num2 = `tokenize $buffer[$num-1] "_" $buffer`;
	int $sFrame = `playbackOptions -q -min`;
	int $eFrame = `playbackOptions -q -max`;
	int $tFrame = $eFrame - $sFrame + 1;
	string $char[] = {$buffer[1],$buffer[2],$sFrame,$eFrame,$tFrame};
	return $char;
}

proc string[] ALLGetCharName()
{
	string $charName[] = {};
	string $sets[] = `ls -type objectSet "*_facial_set" "*:*_facial_set" "*:*:*_facial_set"`;
	string $buffer1[],$buffer2[];
	for ($item in $sets )
	{
		/*
		tokenize $item ":" $buffer1;
		if (`size $buffer1`==2)
		{
			tokenize $buffer1[1] "_" $buffer2;
			$charName[size($charName)] = $buffer1[0] + ":" + $buffer2[0];
		}
		if (`size $buffer1`==1)
		{
			tokenize $buffer1[0] "_" $buffer2;
			$charName[size($charName)] = $buffer2[0];
		}
		*/
		$charName[size($charName)] = `substring $item 1 (size($item) - 11)`;
	}	
	return $charName;
}

global proc slBrAutoloadlips()
{
	string $sceneShot[] = ALLGetFilename();
	string $sceneNum = $sceneShot[0];
	string  $shotNum = $sceneShot[1];
	int $startFrame = $sceneShot[2];
	int $endFrame = $sceneShot[3];
	string $lipFilePath = "\\\\File-cluster\\GDC\\Projects\\BRATZ\\BRATZ_Scratch\\Animation\\"+$sceneNum+"集工作文件夹\\sync";
	string $sceneChars[] = ALLGetCharName();

	if(`window -exists w_ta_ALL_win`)
		deleteUI w_ta_ALL_win;
	window -title "Auto Load Character Lips" -mb true  -s true -resizeToFitChildren true w_ta_ALL_win;
		
		menu -label "Help";
			menuItem -label "Help on AutoLoadlips..." -command "zjHelpCallback slBrAutoloadlips";

		string $form = `formLayout`;
				
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;
							
				string $sceneFrLayout = `frameLayout -label "Scenes Informations" -labelAlign "top" -cll false -borderStyle "etchedIn"`;
					string $sceneFoLayout = `formLayout`;
						textFieldGrp -label "Episode" -text $sceneNum -cw2 100 40   _Value_ALL_Shot_Input;
						textFieldGrp -label "Scene" -text $shotNum -cw2 50 40 _Value_All_Scene_Input;
						intFieldGrp -numberOfFields 2 -label "startFrame" -extraLabel "endFrame" -value1 $startFrame -value2  $endFrame -cw4 80  40 40 100 _Value_ALL_Start_Input;
						setParent ..;
					setParent ..;
						formLayout -edit
							-attachForm  _Value_ALL_Shot_Input         			"top" 5
							-attachForm  _Value_ALL_Shot_Input				"left" 5	
							-attachForm  _Value_ALL_Shot_Input				"bottom" 5				
							-attachForm  _Value_ALL_Start_Input         			"top" 5
							-attachForm  _Value_ALL_Start_Input				"right" 5
							-attachForm _Value_All_Scene_Input				"top" 5
							-attachControl _Value_All_Scene_Input			"left" 5 _Value_ALL_Shot_Input 
						$sceneFoLayout;

				string $charFrLayout = `frameLayout -label "Charactor Informations" -labelAlign "top" -cll false -borderStyle "etchedIn"`;
					string $charFoLayout = `formLayout`;
						textScrollList  -numberOfRows 6 -allowMultiSelection true   _List_ALL_Char_Input;
						textScrollList -e -removeAll _List_ALL_Char_Input;
						for($i=0;$i<`size $sceneChars`;$i++)
							textScrollList -e -append ($sceneChars[$i]) _List_ALL_Char_Input;
						setParent ..;
					setParent ..;
						formLayout -edit
							-attachForm	_List_ALL_Char_Input			"top"		10
							-attachForm	_List_ALL_Char_Input			"left"		10
							-attachForm	_List_ALL_Char_Input			"right"		10
							-attachForm	_List_ALL_Char_Input			"bottom"    10
						$charFoLayout;
				setParent ..;

			string $form1 = `formLayout`;
				floatSliderGrp -field true -l "amplitude"  -columnWidth 1 110 -columnWidth 2 60 -min 0 -max 1 -step 0.01 -v 0.8 _amplitude;
				intSliderGrp -field true -l "Offset"  -columnWidth 1 110 -columnWidth 2 60 -min -100 -max 100  -v 0 _offset;
				radioButtonGrp -numberOfRadioButtons 2 -label "Load LipSync To" -labelArray2 "selected" "all" -sl 2 _Value_ALL_Object_Input;
				textFieldButtonGrp -label "sync file path" -text $lipFilePath -buttonLabel "Browse" -cw3 90 450 100 -buttonCommand "findFilePath" _syncListPath;
				string $loadButton = `button -l "Load" -w 80 -command "ta_LoadLipSyncButton"`;
				string $cleanButton = `button -l "Clean sync" -w 80 -command "deleteSyncKeys"`;
				string $loadSound = `button -l "Sound" -w 80 -command "loadSoundTrack"`;
				string $abortButton = `button -l "Edit txt file" -w 80 -command "editSyncTxt"`;
				formLayout -edit
					-attachForm $loadButton                                                 "bottom" 10
					-attachForm  $loadButton 						"left" 10
					-attachPosition $loadButton						"right" 0  25
					
					-attachForm $cleanButton                                                "bottom" 10
					-attachControl  $cleanButton 						"left" 5 $loadButton
					-attachPosition $cleanButton						"right" 0  50
					
					-attachForm $loadSound                                                  "bottom" 10
					-attachControl  $loadSound 						"left" 5 $cleanButton
					-attachPosition $loadSound						"right" 0  75
					
					-attachForm $abortButton                                                "bottom" 10
					-attachControl  $abortButton 						"left" 5 $loadSound
					-attachPosition $abortButton						"right" 0  100
					
					-attachForm _syncListPath						"left" 50 
					-attachControl _syncListPath						"bottom" 10 $loadButton
					-attachControl  _Value_ALL_Object_Input					"bottom" 10 _syncListPath
					-attachForm  _Value_ALL_Object_Input					"left" 100 
					
					-attachControl  _offset							"bottom" 10 _Value_ALL_Object_Input
					-attachForm  _offset							"left" 75

					-attachControl  _amplitude						"bottom" 10 _offset
					-attachForm  _amplitude							"left" 75
				$form1;

			
			formLayout -edit
				-attachForm $columnLayout                                                 "top" 5
				-attachForm  $columnLayout 						"left" 10
				-attachForm $columnLayout						"right" 10
				-attachControl $columnLayout                                                "bottom" 5 $form1

				-attachForm  $form1 						"left" 10
				-attachForm $form1						"right" 10
				-attachForm $form1                                                "bottom" 10
			$form;
		window -e -w 550 -h 400 w_ta_ALL_win;
	showWindow w_ta_ALL_win;

	source "slBrPhonemeCons17.mel";
	source "slBrPhonemeCons19.mel";
}

global proc loadSyncFile(string $filename,string $fileType)
{
	textFieldButtonGrp -e -text $filename _syncListPath;
}


global proc string findFilePath()
{
	string $filePath = `fileBrowserDialog -mode 4  -fileCommand "loadSyncFile"  -actionName "select_folder" -operationMode "Reference"`;
	return $filePath;
}

global proc int judgeCharCon(string $char)
{
	string $charFacialSet[]=`ls -type objectSet ($char+"_facial_set")`;
	string $cons[]=`sets -q -nodesOnly $charFacialSet[0]`;
	int $judge1=`size $cons`;
	int $judge2;
	if (`objExists ($char+"_a")` ) $judge2++;
	if (`objExists ($char+"_b")` ) $judge2++;
	if (`objExists ($char+"_c")` ) $judge2++;
	if (`objExists ($char+"_d")` ) $judge2++;
	if (`objExists ($char+"_e")` ) $judge2++;
	if (`objExists ($char+"_f")` ) $judge2++;
	if (`objExists ($char+"_g")` ) $judge2++;
	if (`objExists ($char+"_h")` ) $judge2++;
	if (`objExists ($char+"_i")` ) $judge2++;
	
	if ($judge2 == 9)  $judge = $judge2;
	else $judge = $judge1;
	
	return $judge;		
}


global proc string loadLipsync(string $char)
{
	string $getSyncFolder = `textFieldButtonGrp -q -text _syncListPath`;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	int $getStartFrame = `intFieldGrp -q -value1 _Value_ALL_Start_Input`;
	string $charSyncFile =$getSyncFolder + "/" + $getEpisodeNum+"_"+$getSceneNum +  ".txt";
	int $offsetFrame=`intSliderGrp -q -v _offset`;
	string $buffer1[],$buffer2[];
	int $key=0;
	string $warning;
	string $charKey;
	int $startFrameOffer;
	int $pageOffer=0;
	int $frontFrame=0;
	int $judge=judgeCharCon($char);
	if(`file -q -ex $charSyncFile`)
	{
		$fileId = `fopen $charSyncFile "r"`;
		string $nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;
//		$nextLine = `fgetline $fileId`;
		$startFrameOffer = (int)$nextLine;
		int $lineNum = 1;
		int $frameNum = 1;
		string $dataNum = 0;
		while(size($nextLine)>0)
		{
			tokenize $nextLine "[]" $buffer1;
			if (`size($buffer1)`>1)
			{
				$charKey=`tolower $buffer1[0]`;
				$nextLine = `fgetline $fileId`;
			}
			if (`gmatch $char ("*"+$charKey+"*")`)
			{
				$key=1;
				tokenize $nextLine " " $buffer1;
				if ((int)$buffer1[0]<$frontFrame)	$pageOffer++;
				$frameNum=(int)$buffer1[0]+$getStartFrame+$offsetFrame-$startFrameOffer+$pageOffer*80;
				$frontFrame = $buffer1[0];
				tokenize $buffer1[1] "\n" $buffer2;
				$dataNum  = $buffer2[0];
				if ($judge==19)
				{
					if ($dataNum=="A") br_LoadLipMBP_19($char , $frameNum);
					if ($dataNum=="B") br_LoadLipA_half_19($char , $frameNum);
					if ($dataNum=="C") br_LoadLipEI_19($char , $frameNum);
					if ($dataNum=="D") br_LoadLipA_19($char , $frameNum);
					if ($dataNum=="E") br_LoadLipO_19($char , $frameNum);
					if ($dataNum=="F") br_LoadLipU_19($char , $frameNum);
					if ($dataNum=="G") br_LoadLipFV_19($char , $frameNum);
					if ($dataNum=="H") br_LoadLipCONS_19($char , $frameNum);
					if ($dataNum=="I") br_LoadLipCONS_19($char , $frameNum);
				}
				else if ($judge==17)
				{
					if ($dataNum=="A") br_LoadLipMBP_17($char , $frameNum);
					if ($dataNum=="B") br_LoadLipA_half_17($char , $frameNum);
					if ($dataNum=="C") br_LoadLipEI_17($char , $frameNum);
					if ($dataNum=="D") br_LoadLipA_17($char , $frameNum);
					if ($dataNum=="E") br_LoadLipO_17($char , $frameNum);
					if ($dataNum=="F") br_LoadLipU_17($char , $frameNum);
					if ($dataNum=="G") br_LoadLipFV_17($char , $frameNum);
					if ($dataNum=="H") br_LoadLipCONS_17($char , $frameNum);
					if ($dataNum=="I") br_LoadLipCONS_17($char , $frameNum);
				}
				else 
				{
					if ($dataNum != "") slPhonemeSetNew($char,$dataNum,$frameNum);
				}
							}
			$nextLine = `fgetline $fileId`;
		}	
		fclose $fileId;
		if ($judge==19)
		{
			string $charCons[]=setCon_19($char);
			for ($i=0;$i<19;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCons[$i]+".tx")` ;
				keyTangent -e -ott clamped $charCurve ;
				string $charCurve[]=`keyframe -q -name ($charCons[$i]+".ty")` ;
				keyTangent -e -ott clamped $charCurve ;
			}
		}
		else if ($judge==17)
		{
			string $charCons[]=setCon_17($char);
			for ($i=0;$i<17;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCons[$i]+".tx")` ;
				keyTangent -e -ott clamped $charCurve ;
				string $charCurve[]=`keyframe -q -name ($charCons[$i]+".ty")` ;
				keyTangent -e -ott clamped $charCurve ;
			}
		}
		else 
		{
			string $phonemeConNew[] = {($char+"_a"),($char+"_b"),($char+"_c"),($char+"_d"),($char+"_e"),($char+"_f"),($char+"_g"),($char+"_h"),($char+"_i")};
			for ($temp in $phonemeConNew )
			{
				string $charCurve[] = `keyframe -q -name ($temp + ".ty")`;
				keyTangent -e -ott clamped $charCurve;
			}
		}
		
		
		if ($key==1)
			print ("Successfully load lip file to:"+$char+"\n");
		else
			print ("No lip file match the character:"+$char+"\n");
	}
	else	print ("No lip file match the scene:"+$getEpisodeNum + "_" +$getSceneNum+"\n");
	return $warning;
}

global proc ta_LoadLipSyncButton()
{
	int $num =`radioButtonGrp -q -sl _Value_ALL_Object_Input`;
	string $getChar[] = {};
	if($num == 1)
		$getChar = `textScrollList -q -si _List_ALL_Char_Input`;
	else
		$getChar = `textScrollList -q -ai _List_ALL_Char_Input`;


	for($char in $getChar)
	{	
		loadLipsync($char);
	}
}



global proc editSyncTxt()
{
	string $getSyncFolder = `textFieldButtonGrp -q -text _syncListPath`;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	string $charSyncFile = $getSyncFolder + "/" + $getEpisodeNum+"_"+$getSceneNum +  ".txt";
	system ("load" +$charSyncFile);
}

global proc deleteSyncKeys()
{
	int $num =`radioButtonGrp -q -sl _Value_ALL_Object_Input`;
	string $getChar[] = {};
	if($num == 1)
		$getChar = `textScrollList -q -si _List_ALL_Char_Input`;
	else
		$getChar = `textScrollList -q -ai _List_ALL_Char_Input`;

	for ($char in $getChar)
	{
		int $judge=judgeCharCon($char);
		if ($judge==19)
		{
			string $charCon[]=setCon_19($char);
			for ($i=4;$i<10;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".tx")` ;
				delete $charCurve;
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".ty")` ;
				delete $charCurve;
				setKeyframe -v 0 -t -31 ($charCon[$i]+".tx") ($charCon[$i]+".ty");
			}
			for ($i=10;$i<19;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".ty")` ;
				delete $charCurve;
				setKeyframe -v 0 -t -31 ($charCon[$i]+".ty");
			}
		}
		else if ($judge==17)
		{
			string $charCon[]=setCon_17($char);
			for ($i=4;$i<8;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".tx")` ;
				delete $charCurve;
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".ty")` ;
				delete $charCurve;
				setKeyframe -v 0 -t -31 ($charCon[$i]+".tx") ($charCon[$i]+".ty");
			}
			for ($i=8;$i<17;$i++ )
			{
				string $charCurve[]=`keyframe -q -name ($charCon[$i]+".ty")` ;
				delete $charCurve;
				setKeyframe -v 0 -t -31 ($charCon[$i]+".ty");
			}
		}
		else
		{
			string $phonemeConNew[] = {($char+"_a"),($char+"_b"),($char+"_c"),($char+"_d"),($char+"_e"),($char+"_f"),($char+"_g"),($char+"_h"),($char+"_i")};
			for ($temp in $phonemeConNew )
			{
				string $charCurve[] = `keyframe -q -name ($temp+".ty")`;
				delete $charCurve;
				setKeyframe -t -31 -v 0 ($temp + ".ty");
			}
		}
	}

}

global proc loadSoundTrack()
{
	string $audioTrack[] = `ls -type audio`;
	if(`size $audioTrack` != 0)
		delete $audioTrack;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	int $getStartFrame = `intFieldGrp -q -value1 _Value_ALL_Start_Input`;
	string $soundFolder = "//File-cluster/GDC/Projects/BRATZ/Post_Production/Editing/output/"+$getEpisodeNum+"/Wave/";
	string $soundFile = $soundFolder +$getEpisodeNum+"_"+$getSceneNum+"*.wav";
	string $catchAudioFiles[] = `getFileList -filespec $soundFile`;
	string $buffer[];
	if(`size $catchAudioFiles` != 0)
	{
		$soundFile = $soundFolder + $catchAudioFiles[0];
		if (`size $catchAudioFiles` >1)
		{
			for ($temp in $catchAudioFiles )
			{
				tokenize $temp "_" $buffer;
				if (`size $buffer`==3)
					$soundFile = $soundFolder +$temp;
			}
		}
		timeControl -e -ds true -s `sound -o $getStartFrame -file $soundFile` timeControl1;		
	}
	else
		print ("Sorry,not wav file found.\n");

}


global proc slPhonemeSetNew(string $char , string $dataNum , int $frameNum)
{
	string $phonemeConNew[] = {($char+"_a"),($char+"_b"),($char+"_c"),($char+"_d"),($char+"_e"),($char+"_f"),($char+"_g"),($char+"_h"),($char+"_i"),($char+"_T_L")};
	float $amplitude = `floatSliderGrp -q -value _amplitude`;
	
	for ($temp in $phonemeConNew )
	{
		setKeyframe -t $frameNum -v 0 $temp;
	}
	if ($dataNum != "R")
		setKeyframe -t $frameNum -v $amplitude	($char+"_"+tolower($dataNum));
	if ($dataNum == "I")
	{
		setKeyframe -t $frameNum -v ($amplitude*0.011) ($char+"_T_L");
	}
}