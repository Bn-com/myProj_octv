
global proc hjCachedisplay()
{
		
		$sc = `selectionConnection -lst`;
		string $sce[] = `ls -long -type "diskCache"`;
		
		for ($node1 in $sce) 
		{ 
		selectionConnection -e -select $node1 $sc;
		} 
	    print $sce;
		if ( `window -exists HjcacheUI` ) deleteUI HjcacheUI;
		$win=`window     -title "Display Cache" -wh 208 550 -maximizeButton 0 -sizeable 1 HjcacheUI`;
		$frame=`frameLayout -labelVisible false`;
		string $panel = `outlinerPanel`;
		string $outliner = `outlinerPanel -query -outlinerEditor $panel`;
		outlinerEditor -e -dag 0 -mlc $sc -selectionConnection "modelList" $outliner;
		showWindow $win;
}


global proc hjFolliclecurve()
{
	string $hjcurve[]=`ls -long -sl`;
	string $hjcurvesel;
	for ($hjcurvesel in $hjcurve)
	{
		string $buf[];
		tokenize $hjcurvesel ":" $buf;
		int $hjsize=`size $buf`-1;
		
		
	    if (`gmatch $buf[$hjsize] "*curve*"`!=0)
		{
		string $hjhairname[]=`listRelatives -fullPath -parent $hjcurvesel`;	
		setAttr ($hjhairname[0]+".scaleX") 0;
		setAttr ($hjhairname[0]+".scaleY") 0;
		setAttr ($hjhairname[0]+".scaleZ") 0;
		string $hjhairnames[]=`listRelatives -fullPath -shapes $hjhairname[0]`;	
		print $hjhairnames;
		setAttr ($hjhairnames[0]+".parameterU") 0;
		setAttr ($hjhairnames[0]+".parameterV") 0;
		setAttr ($hjhairnames[0]+".simulationMethod") 0;
		setAttr ($hjhairnames[0]+".collide") 0;
		setAttr ($hjhairnames[0]+".stiffness") 0;
        setAttr ($hjhairnames[0]+".clumpWidthMult") 0;
		setAttr ($hjhairnames[0]+".densityMult") 0;
		setAttr ($hjhairnames[0]+".curlMult") 0;
		setAttr ($hjhairnames[0]+".sampleDensity") 0;
		setAttr ($hjhairnames[0]+".degree") 1;
		//print $hjhairnames;
		}
	}
}



global proc hjFolliclehide()
{
	
	string $hjfollicleshape[]	=`ls  -leaf -dag -long  -sl -type "follicle"`;
	string $hjfollicle		[]	=`ls  -sl -long `;
	string $hjseta;
	string $hjsetb;
	

	for ($hjseta in $hjfollicleshape)
	{
		setAttr ($hjseta+".parameterU") 0;
		setAttr ($hjseta+".parameterV") 0;
		setAttr ($hjseta+".simulationMethod") 0;
		setAttr ($hjseta+".collide") 0;
		setAttr ($hjseta+".stiffness") 0;
        setAttr ($hjseta+".clumpWidthMult") 0;
		setAttr ($hjseta+".densityMult") 0;
		setAttr ($hjseta+".curlMult") 0;
		setAttr ($hjseta+".sampleDensity") 0;
		setAttr ($hjseta+".degree") 1;
		
	}
	for ($hjsetb in $hjfollicle)
	{
		setAttr ($hjsetb+".scaleX") 0;
		setAttr ($hjsetb+".scaleY") 0;
		setAttr ($hjsetb+".scaleZ") 0;
	
	}
	
	
}



global proc zxIHChangeNoteCB(string $annot1, string $annot2, string $annot3)
{
	int $selected = `radioButtonGrp -q -select zxIHRadioButtonGrp`;

	if ($selected == 1 && `checkBox -q -v zxIHCheckBox1`)
	{
		text -e -label $annot1 zxIHText1;
	}
	else
	if ($selected == 2 && `checkBox -q -v zxIHCheckBox1`)
	{
		text -e -label $annot2 zxIHText1;
	}
	if (`checkBox -q -v zxIHCheckBox2`)
	{
		text -e -label $annot3 zxIHText1;
	}
}


global proc zxIHChangeNoteCB1(string $annot1, string $annot2)
{

	if (`checkBox -q -v zxIHCheckBox4`)
	{
		text -e -label $annot1 zxIHText2;
	}
	else if (`checkBox -q -v zxIHCheckBox5`)
	{
		text -e -label $annot2 zxIHText2;
	}
/*
	if (`checkBox -q -v zxIHCheckBox6`)
	{
		text -e -label $annot2 zxIHText2;
	}
*/
}


global proc zxClearHair()
{

	string $hairGrp[] = `ls "*:*HAIR"  "*:earRing"  "*:*HAIRSYSTEM"  "*:hairColide_GRP"  "*:earRing_dyn"`;

	select $hairGrp;

	doDelete;

	OptimizeScene;

	print " NOTE : 已 清 除 导 入 后 没 有 Link 上 的 头 发 及 耳 环 ";	


}


global proc zxImportRefHairUI()
{
	string $path = substituteAllString(`getenv "DEV_PATH"`, "/", "\\") + "\\Maya\\icons\\Bratz\\";
	if(`window -exists zximportRefHair`)
		deleteUI zximportRefHair;

//	windowPref -remove zximportRefHair;
	window -menuBar true -title "Bratz Import Hair" -resizeToFitChildren 1 -width 260 -height 360 zximportRefHair;
		menu -label "Edit";
			menuItem -label "Reset Setings" ;//-command "zxImportHairReset"
		menu -label "Help";
			menuItem -label "Help on Import Hair..." -command "zjHelpCallback zxImportHair";//
			menuItem -label "Help on Reference Hair..." -command "zjHelpCallback zxReferenceHair";//

		string $annotations[3] = {
								 "NOTE 1:  选择 (一个) 角色的MASTER，导入该角色对应的头发、耳环.",
								 "NOTE 2:  选择 (多个) 角色的MASTER，导入该角色对应的头发、耳环.",
								 "NOTE 3:  向 角 色 导 入 指 定 的 头 发 和 耳 环."
								 };

		string $annotations1[2] = {
								 "NOTE 4:  参 考 头 发 文 件 对 应 的 texture 文 件.",
								 "NOTE 5:  参 考 指 定 的 texture 文 件 ."
								 };
		columnLayout -adjustableColumn true;



//-----------Import frameLayout------------------


    			frameLayout -label "Import Hair" -labelAlign "top" -cll true
    				-borderStyle "etchedIn";
			
			image -w 300 -h 59 -image($path+"/bratz_import.jpg") bratzTitleImage;
			
			setParent..;
			string $formLayout = `formLayout`;	

					rowLayout  -numberOfColumns 2 -adjustableColumn 2 -columnWidth 1 200 -columnAttach 1 "left" 8 zxIHrowLayout1;

						checkBox -label " 导 入 对 应 头 发 及 耳 环:"   
							 -align "left" 
							 -v 1 
							 -onc ("checkBox -e -v 0 zxIHCheckBox2 ; checkBox -e -v 0 zxIHCheckBox3 ;radioButtonGrp -e -en 1 zxIHRadioButtonGrp; symbolButton -e -en 0 zxsymbolButton1; symbolButton -e -en 0 zxsymbolButton2;" + (" zxIHChangeNoteCB \"" + $annotations[0] + "\" \"" + $annotations[1] + "\" \"" + $annotations[2] + "\"")	)
							 zxIHCheckBox1;

						radioButtonGrp -numberOfRadioButtons 2 -label1 " 单 个 角 色 " -label2 " 多 个 角 色" -select 1 -en 1 -changeCommand ("zxIHChangeNoteCB \"" + $annotations[0] + "\" \"" + $annotations[1] + "\" \"" + $annotations[2] + "\"") zxIHRadioButtonGrp;

						setParent..;


					separator zxIHSeparator1;

					rowLayout -numberOfColumns 3 -adjustableColumn 2 -columnWidth 1 200 -columnAttach 1 "left" 8 zxIHrowLayout2;

						checkBox -label " 导 入 指 定 头 发 : "   
							 -align "left" 
							 -v 0 
							 -onc ("checkBox -e -v 0 zxIHCheckBox1 ; radioButtonGrp -e -en 0 zxIHRadioButtonGrp;  symbolButton -e -en 1 zxsymbolButton1; symbolButton -e -en 1 zxsymbolButton2;" + (" zxIHChangeNoteCB \"" + $annotations[0] + "\" \"" + $annotations[1] + "\" \"" + $annotations[2] + "\"")	)						
							 zxIHCheckBox2;

		//					text -label " 头 发 路 径 " zxIHtext1;

						textField -editable false zxIHtextField1;

						symbolButton -en 0 -image "navButtonBrowse.xpm" zxsymbolButton1;

						setParent..;
					
					rowLayout -numberOfColumns 3 -adjustableColumn 2 -columnWidth 1 200 -columnAttach 1 "left" 8 zxIHrowLayout3;

						checkBox -label " 导 入 指 定 耳 环 : "   
							 -align "left" 
							 -v 0 
							 -onc ("checkBox -e -v 0 zxIHCheckBox1 ; radioButtonGrp -e -en 0 zxIHRadioButtonGrp; symbolButton -e -en 1 zxsymbolButton1; symbolButton -e -en 1 zxsymbolButton2;" + (" zxIHChangeNoteCB \"" + $annotations[0] + "\" \"" + $annotations[1] + "\" \"" + $annotations[2] + "\"")	)						
							 zxIHCheckBox3;

		//					text -label " 耳 环 路 径 " zxIHtext2;

						textField -editable false zxIHtextField2;

						symbolButton -en 0 -image "navButtonBrowse.xpm" zxsymbolButton2;

						setParent..;

					separator zxIHSeparator2;

					 columnLayout zxIHcolumnLayout1;

						text -label "NOTE 1: 选择(一个)角色的MASTER，导入该角色对应的头发、耳环." zxIHText1;

					setParent..;




					string $formLayout1 = `formLayout`;

						string $button1 = `button -label "Import" -command "zxIHCtrl;\ndeleteUI zximportRefHair;"`;
						string $button2 = `button -label "Apply" -command "zxIHCtrl"`;
						string $button3 = `button -label "Close" -command "deleteUI zximportRefHair"`;

					setParent..;


						formLayout -edit

							-attachForm	$button1	"top"		5
							-attachForm	$button1	"left"		0
							-attachForm	$button1	"bottom"	5
							-attachPosition	$button1	"right"		0	33

							-attachControl	$button2	"left"		0	$button1
							-attachForm	$button2	"bottom"	5
							-attachPosition	$button2	"right"		0	66

							-attachControl	$button3	"left"		0	$button2
							-attachForm	$button3	"bottom"	5
							-attachForm	$button3	"right"		0
						$formLayout1;

					setParent..;




				formLayout -edit
					-attachForm	zxIHrowLayout1	"top"		10
					-attachForm	zxIHrowLayout1	"left"		0
					-attachForm	zxIHrowLayout1	"right"		0



					-attachControl	zxIHSeparator1	"top"		5      zxIHrowLayout1
					-attachForm	zxIHSeparator1	"left"		0
					-attachForm	zxIHSeparator1	"right"		0



					-attachControl	zxIHrowLayout2	"top"		5      zxIHSeparator1
					-attachForm	zxIHrowLayout2	"left"		0
					-attachForm	zxIHrowLayout2	"right"		0


					-attachControl	zxIHrowLayout3	"top"		5      zxIHrowLayout2
					-attachForm	zxIHrowLayout3	"left"		0
					-attachForm	zxIHrowLayout3	"right"		0


					-attachControl	zxIHSeparator2	"top"		5      zxIHrowLayout3
					-attachForm	zxIHSeparator2	"left"		0
					-attachForm	zxIHSeparator2	"right"		0


					-attachControl	zxIHcolumnLayout1 "top"		30	zxIHSeparator2
					-attachForm	zxIHcolumnLayout1 "left"	5
					-attachForm	zxIHcolumnLayout1 "right"	0

					-attachControl	$formLayout1	"top"		20      zxIHcolumnLayout1
					-attachForm	$formLayout1	"left"		0
					-attachForm	$formLayout1	"right"		0
/*
					-attachControl	zxIHframeLayout1 "top"		5	$formLayout1
					-attachForm	zxIHframeLayout1 "left"		0
					-attachForm	zxIHframeLayout1 "right"	0
*/

				$formLayout;

			setParent..;

//------------------Import Hair Button frameLayout------------



			frameLayout -label "Buttons" -labelAlign "top"  -borderStyle "etchedIn" -collapsable 1 -collapse 1 zxIHframeLayout1;
				columnLayout  -adj 1 ;
					string $button4 = `button -label "导入旧的GLOBAL头发" -h 35 -command "source zxHairImportGlobal.mel ; zxHairImportGlobal"`;
					string $button5 = `button -label "导入没有set,但有T－pose的角色头发" -h 35 -command "zxHairImportTpose"`;
					string $button6 = `button -label "导入参考角色命名 \"：\" 变 \"_\" 的头发" -h 35 -command "source zxHairImportUnderline.mel ; zxHairImportUnderline"`;
					string $button7 = `button -label "清除导入后没有Link的头发物体" -h 35 -command "zxClearHair"`;

				setParent..;
			setParent..;

//-----------Reference frameLayout------------------


    			frameLayout -label "Reference Hair" -labelAlign "top" -cll true
    				-borderStyle "etchedIn";

			string $formLayout = `formLayout`;			

					rowLayout  -numberOfColumns 2 -adjustableColumn 2 -columnWidth 1 200 -columnAttach 1 "left" 8 zxIHrowLayout1;

						checkBox -label " 参 考 角 色   texture   文 件 "   
							 -align "left" 
							 -v 1 
							 -onc ("checkBox -e -v 0 zxIHCheckBox5 ;  symbolButton -e -en 0 zxsymbolButton3;" + (" zxIHChangeNoteCB1 \"" + $annotations1[0] + "\" \"" + $annotations1[1] + "\"")	)
							 zxIHCheckBox4;

//						radioButtonGrp -numberOfRadioButtons 2 -label1 " 单 个 角 色 " -label2 " 多 个 角 色" -select 1 -en 1 -changeCommand (" zxIHChangeNoteCB1 \"" + $annotations1[0] + "\" \"" + $annotations1[1] + "\"") zxIHRadioButtonGrp;

						setParent..;


					rowLayout -numberOfColumns 3 -adjustableColumn 2 -columnWidth 1 200 -columnAttach 1 "left" 8 zxIHrowLayout2;

						checkBox -label " 参 考 指 定   texture   文 件  "   
							 -align "left" 
							 -v 0 
							 -onc ("checkBox -e -v 0 zxIHCheckBox4 ; symbolButton -e -en 1 zxsymbolButton3;" + (" zxIHChangeNoteCB1 \"" + $annotations1[0] + "\" \"" + $annotations1[1] + "\"")	)						
							 zxIHCheckBox5;

		//					text -label " 头 发 路 径 " zxIHtext1;

						textField -editable false zxIHtextField3;

						symbolButton -en 0 -image "navButtonBrowse.xpm" zxsymbolButton3;

						setParent..;


					separator zxIHSeparator1;

					columnLayout zxIHcolumnLayout1;

						text -label "NOTE 4: 参 考 头 发 文 件 对 应 的 texture 文 件 ." zxIHText2;

					setParent..;




					string $formLayout1 = `formLayout`;

						string $button1 = `button -label "Reference" -command " zxRIHCtrl ;\ndeleteUI zximportRefHair;"`;
						string $button2 = `button -label "Apply" -command " zxRIHCtrl"`;
						string $button3 = `button -label "Close" -command "deleteUI zximportRefHair"`;

					setParent..;


						formLayout -edit

							-attachForm	$button1	"top"		5
							-attachForm	$button1	"left"		0
							-attachForm	$button1	"bottom"	5
							-attachPosition	$button1	"right"		0	33

							-attachControl	$button2	"left"		0	$button1
							-attachForm	$button2	"bottom"	5
							-attachPosition	$button2	"right"		0	66

							-attachControl	$button3	"left"		0	$button2
							-attachForm	$button3	"bottom"	5
							-attachForm	$button3	"right"		0
						$formLayout1;

					setParent..;




				formLayout -edit
					-attachForm	zxIHrowLayout1	"top"		10
					-attachForm	zxIHrowLayout1	"left"		0
					-attachForm	zxIHrowLayout1	"right"		0

					-attachControl	zxIHrowLayout2	"top"		5     zxIHrowLayout1
					-attachForm	zxIHrowLayout2	"left"		0
					-attachForm	zxIHrowLayout2	"right"		0


					-attachControl	zxIHSeparator1	"top"		5      zxIHrowLayout2
					-attachForm	zxIHSeparator1	"left"		0
					-attachForm	zxIHSeparator1	"right"		0

/*

					-attachControl	zxIHrowLayout2	"top"		5      zxIHSeparator1
					-attachForm	zxIHrowLayout2	"left"		0
					-attachForm	zxIHrowLayout2	"right"		0


					-attachControl	zxIHrowLayout3	"top"		5      zxIHrowLayout2
					-attachForm	zxIHrowLayout3	"left"		0
					-attachForm	zxIHrowLayout3	"right"		0


					-attachControl	zxIHSeparator2	"top"		5      zxIHrowLayout3
					-attachForm	zxIHSeparator2	"left"		0
					-attachForm	zxIHSeparator2	"right"		0
*/

					-attachControl	zxIHcolumnLayout1 "top"		30	zxIHSeparator1
					-attachForm	zxIHcolumnLayout1 "left"	5
					-attachForm	zxIHcolumnLayout1 "right"	0

					-attachControl	$formLayout1	"top"		20      zxIHcolumnLayout1
					-attachForm	$formLayout1	"left"		0
					-attachForm	$formLayout1	"right"		0
/*
					-attachControl	zxIHframeLayout1 "top"		5	$formLayout1
					-attachForm	zxIHframeLayout1 "left"		0
					-attachForm	zxIHframeLayout1 "right"	0
*/

				$formLayout;

			setParent..;



//------------------Reference Hair Button frameLayout------------



			frameLayout -label "Buttons" -labelAlign "top"  -borderStyle "etchedIn" -collapsable 1 -collapse 1 zxIHframeLayout2;
				columnLayout  -adj 1 ;
					string $button4 = `button -label "导入参考头发( 先选择角色MASTER，可多选 ) " -h 35 -command "source zxImportRefHair.mel ; zxImportRefHair"`;
					string $button5 = `button -label "隐藏头发显示及关闭解算 ( 先选择角色MASTER，可多选 ) " -h 35 -command "source zxHideHair.mel ; zxHideHair"`;
					string $button6 = `button -label "打开头发显示及开启解算 ( 先选择角色MASTER，可多选 ) " -h 35 -command "source zxShowHair.mel ; zxShowHair"`;
					button -label "断开Current Time" -h 35 -command "zwConnectHairCurrentTime false";
					button -label "连接Current Time" -h 35 -command "zwConnectHairCurrentTime true";
                    button -label "创建约束        " -h 35 -command "hjHairRefFile";
                    button -label "毛发隐藏     " -h 35 -command "hjFolliclehide;hjFolliclecurve";
                    button -label "角色光滑    " -h 35 -command "hjSmoothbody";
                    button -label "复制参考头发    " -h 35 -command "hjPfxhide";
		    button -label "显示所有缓存节点    " -h 35 -command "hjCachedisplay";
		    button -label "xy_HairTool" -h 35 -c "source xy_hairtool.mel;xy_hairtool";
	symbolButton -edit -command zxgetHair_fileBrowser zxsymbolButton1;

	symbolButton -edit -command zxgetEaring_fileBrowse zxsymbolButton2;

	symbolButton -edit -command zxrefHair_fileBrowser zxsymbolButton3;

//	symbolButton -edit -command zxrefEaring_fileBrowse zxsymbolButton4;

	showWindow zximportRefHair;

}


//-----------get import file path && fill path textField----------------------

global proc int zxsetHair_textField(string $filename, string $fileType)
{
	textField -e -text $filename zxIHtextField1;

	return true;
}
global proc zxgetHair_fileBrowser()
{
	fileBrowserDialog -mode 0  -fileCommand zxsetHair_textField -fileType "mayaBinary" -actionName "Browse" -operationMode "Import";
}


global proc int zxsetEarring_textField(string $filename, string $fileType)
{
	textField -e -text $filename zxIHtextField2;

	return true;
}


global proc zxgetEaring_fileBrowse()
{
	fileBrowserDialog -mode 0  -fileCommand zxsetEarring_textField -fileType "mayaBinary" -actionName "Browse" -operationMode "Import";
}



//-----------get reference file path && fill path textField----------------------


global proc int zxrefHair_textField(string $filename, string $fileType)
{
	textField -e -text $filename zxIHtextField3;

	return true;
}
global proc zxrefHair_fileBrowser()
{
	fileBrowserDialog -mode 0  -fileCommand zxrefHair_textField -fileType "mayaBinary" -actionName "Browse" -operationMode "Reference";
}


global proc int zxrefEarring_textField(string $filename, string $fileType)
{
	textField -e -text $filename zxIHtextField4;

	return true;
}


global proc zxrefEaring_fileBrowse()
{
	fileBrowserDialog -mode 0  -fileCommand zxrefEarring_textField -fileType "mayaBinary" -actionName "Browse" -operationMode "Import";
}




//-----------import hair && earring  control procedure-------------------

global proc zxIHCtrl()
{



	if ((`radioButtonGrp -q -select zxIHRadioButtonGrp`==1 )&&(`checkBox -q -v zxIHCheckBox1`==1 ))

	hbHairImport;


	else if ((`radioButtonGrp -q -select zxIHRadioButtonGrp`==2 )&&(`checkBox -q -v zxIHCheckBox1`==1 ))
	{
		string $selObjs[] = `ls -l -sl`;

		for($selObj in $selObjs)
		{
			select $selObj;

			hbHairImport;
		}
	}

	else if(`checkBox -q -v zxIHCheckBox2`==1 )
	zxHairImport;


	else if(`checkBox -q -v zxIHCheckBox3`==1 )
	zxEarringImport;

	else 
	{
		confirmDialog -title "Warning"
			      -message " 没 有 勾 选 checkBox 方 框 ！ "
			      -button "OK";

		warning " 请 把 checkBox 方 框 勾 选 上 ！ ";			
	}

}

//-----------reference hair && earring control procedure-------------------


global proc zxRIHCtrl()
{



	if (`checkBox -q -v zxIHCheckBox4`)
	{
	source zxHairRefTexture.mel ; zxHairRefTexture;
	}
	else if(`checkBox -q -v zxIHCheckBox5`)
	{
	source zxHairRefTexture.mel ; zxHairRefTexture;
	}
	else 
	{
		confirmDialog -title "Warning"
			      -message "  没 有 勾 选 checkBox 方 框 ！ "
			      -button "OK";

		warning " 请 把 checkBox 方 框 勾 选 上 ！ ";			
	}



}
