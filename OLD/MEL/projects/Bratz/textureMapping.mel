global proc textureMapping(string $folder){	// --- 	// proc: czTextureMapping	// To get the VFS info from the file whose path is specified	// by $folder(file) and write it into a txt file named txMapping,	// which is put in the directory of maya default project.	// ---	// initialize all variables for later use	int $i,$j,$k,$fileID;	string $folder,$file;	string $allPoly[],$temp[],$polyVertex[],$polyFace[],$polyTran[],$polyShape[];	// 1st step: get the poly list	$allPoly = `ls -type "mesh"`;		// 2nd step: get its VFS of each item in list	for ($each in $allPoly)	{		int $vCount[] = `polyEvaluate -v $each`;		int $fCount[] = `polyEvaluate -f $each`;		// rename cmd requires object name including no hierarchy relatinship		$k = `tokenize $each "|" $temp`;		string $buffer[] = `listRelatives -p $each`;		$polyVertex[$i] = $vCount[0];		$polyFace[$i] = $fCount[0];		$polyTran[$i] = $buffer[0];		$polyShape[$i] = $temp[$k-1];		$i++;	}	// 3rd step:	// get rid of those with the same number of 	// vertexes and faces	for ($i=0;$i<size($polyVertex);$i++)	{		for ($j=$i+1;$j<size($polyFace);$j++)		{			if ($polyVertex[$i]==$polyVertex[$j])			{				if ($polyFace[$i]==$polyFace[$j])				{					$polyTran[$j] = $polyShape[$j] = $polyVertex[$j] = $polyFace[$j] = "";				}			}		}	}	// 4th step: create a new file(sceneName+txMapping.txt)	// if V==NULL(or F), skip 	// else write it to the file(VFS)	$folder = `internalVar -userAppDir` + "projects/default/scenes/";	$file = $folder + "txMapping.txt";	print ("\n"+$file);	$fileID = `fopen $file w`;	if (!$fileID)	{		error("Fail to open " + $file);	}	for ($i=0;$i<size($polyVertex);$i++)	{		if ($polyVertex[$i]!="")		{			fprint $fileID ($polyVertex[$i] + " " + $polyFace[$i] + " " +$polyTran[$i] + " " + $polyShape[$i] +"\n");		}	}	// 5th step: we got what we want, so close the open file	fclose $fileID;}