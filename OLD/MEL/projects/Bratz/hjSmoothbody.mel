proc hjCBdeleteConnection( string $destName )
//
// If the specified name is the destination of a connection,
// then delete that connection.
//
{
	if ( `connectionInfo -isDestination $destName` ){
		string $destination = `connectionInfo -getExactDestination $destName`;

		// When deleting a src connection from a character, you must remove
		// the item from the character set or the character will no longer
		// work consistently: bug 127212
		//
		string $srcConn[] = `listConnections -s 1 -d 0 -type character $destination`;
		if (size($srcConn)) {
			string $warnMsg = ("Removed \'"+$destination+"\' from character \'"+$srcConn[0]+"\'.");
			warning($warnMsg);
			character -e -rm $srcConn[0] $destination;
		}
		
		// delete -icn doesn't work if destination attr is readOnly 
		// so use disconnectAttr in this case
		//
		string $sArr[1] = `ls -ro $destination`;
		if (size($sArr)) {
			string $src = `connectionInfo -sourceFromDestination $destination`;
			disconnectAttr $src $destination;
		} else {
			delete -icn $destination;
		}
	}
}


proc  string[] hjmasterlook()
{
	string $hjmaster[]	=`ls "*group"`;
	string $hjgroup;
	string $hjmastgroup[];
	int    $hjsizema=`size $hjmaster`;
	for ($j=0;$j<$hjsizema;$j++ )
	{
		string $hjhairname[]=`listRelatives -fullPath -children $hjmaster[$j]`;	
		int    $hjsize=`size $hjhairname`;
		for ($i=0;$i<$hjsize;$i++)
		{
		if(`gmatch $hjhairname[$i] "*MASTER"`==1)
		{
		string $hjmasall=$hjmasall+$hjhairname[$i]+".";
		$hjmasall+=$hjmasall;
		string $jayenametrf[];
		string $jayenametrtest=`tokenize $hjmasall "." $jayenametrf`;
		return $jayenametrf;
		}
		}
		}
	return $hjmaster;
}


proc hjSmset(string $hjnames[])
{
		string $hjname[]=$hjnames;
		string $hjhairname[]=`listRelatives -fullPath -children $hjname`;
		string $hjbody;
		
		for ($hjbody in $hjhairname)
		{
		if(`gmatch $hjbody "*Body"`==1&&`attributeExists "Smooth" $hjbody`==1)
		{
		//int $hjkey=`keyframe -query -keyframeCount ($hjbody+".Smooth")`;
		
		hjCBdeleteConnection ($hjbody+".Smooth");
		setAttr ($hjbody+".Smooth") 0;	
		
		}
		}
	
	
}
proc string[] hjmasterlookout()
{
	string $hjmaster[]	=`ls "*MASTER" "*:*MASTER" "*:*:*MASTER"`;
	if (`size $hjmaster`!=0)
	{
		return $hjmaster;
		
	}
	return $hjmaster;
}
global proc hjSmoothbody()
{
	
	hjSmset `hjmasterlook`;
	hjSmset `hjmasterlookout`;
	
	
}