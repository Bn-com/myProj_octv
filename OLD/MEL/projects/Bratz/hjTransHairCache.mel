// transfer hair cache from specified file and specified char to current char
// 2007.03.28 hanjiang 


global proc string[] hjReadCacheFileLoc(string $scene,int $mode){
	
// $mode 0 all
// $mode 1 sel
		
	//	$scene="E:/bratz_hair/scenes/207_015/cube.mb";	
	//	$cachePath=`workspace -q -rd`+`workspace -q -fre diskCache`+"/";
	
	//	$scene="E:/bratz_hair/scenes/207_015/br_207_015_boygirlsashacloe_ch_002.mb";
	
			//match "^.*[/\\]" "d:/xxx/scenes/cube.mb"
				
			string $startDir=`match "^.*[/\\]" $scene`;
			string $sn=`match "[^/\\]*$" $scene`;
			
			
			string $cacheDataDir="";
			
			
				
			// now $startDir="d:/xxx/scenes/"
			string $dirs[];
			
			int $dirsNo=`tokenize $startDir "/\\" $dirs`;
		
			for($i=1;$i<=$dirsNo-1;$i++){
				
				if($dirs[$i]!="scenes") continue;
				else{
					for($j=0;$j<=$i-1;$j++){
						$cacheDataDir+=$dirs[$j]+"/";
					}
					break;
				}
			
			}
			
		$cachePath=$cacheDataDir+"data/";
		
		$cmd="getFileList -folder \""+$cachePath+"\" -filespec \""+($sn+"*.mchp\"");
		
		
		string $cacheFiles[]=`eval($cmd)`;
		
		//size($cacheFiles); these r all of the cache files
		
		string $cacheLocation[];
		

		
		$selectedTSL="hjSelCharForRenderScrollCTL";
		string $shit[];
		
		if($mode==1){
		
				string $items[]=`textScrollList -q  -selectItem $selectedTSL`;
				
				clear $shit;
				
				for($tmp in $cacheFiles){
					
					for($tmp2 in $items){
						if(`gmatch $tmp ("*"+$tmp2+"*")`)
						{
						
							$shit[size($shit)]=$tmp;
							continue;
						}
						
					
					}
			
				}
/*			
			string $tmpCacheLocation[];
			
			for($tmp in $cacheFiles){
				if(size($tmp))
					$tmpCacheLocation[size($tmpCacheLocation)]=$tmp;
						
			}	
*/				
			clear $cacheLocation;
			$cacheLocation=$shit;
			
		}
	
		clear $shit;
		
		for($tmp in $cacheLocation){
		
			$shit[size($shit)]=$cachePath+$tmp;
		}
		
/*	size $shit
	int $i=0;
	
	for( $cacheLoc in $cacheLocation){
		
		if(!`filetest -r $cacheLoc`){
		
			$cacheLocation[$i]="";
		
		}
	
	
		$i++;
	
	}
*/	
	
//	print"==========xxx===========\n";	
//	print $cacheLocation;

//	print"\n========xxx=============\n";
	
//	$cacheLocation[0]="d:/xxx/data/cube.mb_hairSystemShape1.mchp";
//	hjWriteCacheNameToTmp($cacheLocation);
	
	return $shit;

//	string $shit=`system "mayabatch.exe -batch -file \"e:/temp/cube.mb\" -command \"ls -type transform\";"`


}



			
				
global proc hjTransHairCacheonOpen(string $filename,string $type) {
   print($filename+"\n");
//   print($type+"\n");
   
   // $filename="E:/bratz_hair/scenes/207_015/br_207_015_boygirlsashacloe_ch_002.mb";
   // $mode=1;
   
   
   string $newScene=`file -q -sn -shn`;
   
   $newScene=`match "^[^.]*" $newScene`;
	
   
   int $mode=$type;
   
	string $cacheLocs[]=hjReadCacheFileLoc($filename,$mode);
	
//	size($cacheLocs);
	

   //string $files[]=stringToStringArray($filesTmp," ");
	   
   //string $path=`match "^.*[/\\]" $cacheLocs[0]`;
   // the $path maybe not the same
   string $path;
   
   string $fileName=`file -q -sn`;
   string $tokenedPath[];
   
   int $pathNo=`tokenize $fileName "\\/" $tokenedPath`;
   
   int $i,$j;
   
   for($i=0;$i<=$pathNo-1;$i++){
   		if($tokenedPath[$i]=="scenes")
		{
			$j=$i;
			break;
		}
   }
   
	$path=$tokenedPath[0]+"/";
	for($i=1;$i<=$j-1;$i++){
   		
		$path+=$tokenedPath[$i]+"/";
  
   }
   
   $path+="data/";
   
  /* 
   print "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n";
   print $path;
   print "\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n";
   error "shit";
   */
   
   
   
   string $cacheName=`match "[^/\\]*$" $cacheLocs[0]`;
   
   string $oldScene=`match "^[0-9a-zA-Z_]*[^\.]" $cacheName`;
   
   int $oldSceneNo=size($oldScene);
    
 /*  
   print "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n";
   print ("$oldSceneNo "+$oldSceneNo+"\n");
   print ("$oldScene "+$oldScene+"\n");
   print ("$cacheLocs :\n ");
   print $cacheLocs;
   print "\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n";
   
*/   
   //$file=$cacheLocs[0];
 //  file -save;
//	print "saving...";
	 
   hjHairMakeCacheNode();
	 
   for($file in $cacheLocs){
	   
	   if(size($file)<7) continue;
	   
	   // $file="d:/xxx/data/cube.mb_hairSystemShape1.mchp ";
	   
	   $cacheName=`match "[^/\\]*$" $file`;
	   
	   //string $newSceneBase=`substring $newScene 1 (size($newScene)-3)`;
	   
	   string $target=`substitute $oldScene $cacheName $newScene`;
	   
	   //print ("substring "+("\""+$cacheName+"\"")+" "+($oldSceneNo+1)+" "+ size($cacheName));
   		
	  // string $shit=`substring ("\""+$cacheName+"\"") ($oldSceneNo+2) (size($cacheName))`;
	   
   		string $newFile=$path+$target;   //+$shit;			
   		
		//print "~~~~~~~~~~~~~~~~~~~\n";
   		//print ("substitute "+$oldScene+" "+ $cacheName+" "+ $newScene);
		//print "\n";
   
   

		print (" sysFile -copy \"" +$newFile +"\" \""+$file+"\";\n");
		
		evalDeferred(" sysFile -copy \"" +$newFile +"\" \""+$file+"\"");
 /*  
   string $reopen=`confirmDialog -title "Reopen scene?" -message "Are you sure?"
 		-button "Yes" -button "No" -defaultButton "Yes"
 		-cancelButton "No" -dismissString "No"`;
   if($reopen=="Yes"){
	   string $shit= `file -q -sn`;
	   	//file -f -new;
  		//file -f -options "v=0"  -typ "mayaBinary" -o $shit;
		//addRecentFile($shit, "mayaBinary");
		
   	}
	 else
		 
		*/
		
   
   
   }
   
    warning(size($cacheLocs)+" caches copied,Don't save file or your hair cache will be lost...");
   
  // return true;
}

		
		
		
global proc hjTransHairCache(int $mode){
	// $mode 0 all cache
	// $mode 1 selected cache
	
	global string $simHairSys[];
	clear $simHairSys;
	
	string $confirm=`confirmDialog 
		-title "Extremely Dangerous" 
		-message "将会覆盖当前文件，使用前请另存\n\n               Are you sure?"
 		-button "Yes" -button "No" -defaultButton "Yes"
 		-cancelButton "No" -dismissString "No"`;
	
 
	if($confirm=="No") {
		warning "另存了再用,此工具很危险...";
		return;
	}
	
/*	
	string $masters[]=`ls -l "*_MASTER" "*:*_MASTER" "*:*:*_MASTER" "*_master" "*:*_master" "*:*:*_master"`;

	select -r $masters;
	
	source zxShowHair.mel ; zxShowHair;
	
*/
//this will copy all hairSystem cache
//	
	
	string $allhairsys[];
	clear $allhairsys;
	string $selectedTSL="hjSelCharForRenderScrollCTL";
	switch($mode){
		case 0:
			$allhairsys = `ls -l -type hairSystem`;
			break;
		case 1:
			
			int $indexs[]=`textScrollList -q  -selectIndexedItem $selectedTSL`;
			
			string $hairSystemGrpString=hjSelReplacePerform($indexs,$selectedTSL,1);
			
			string $hairSystemGrpStringArray[]=stringToStringArray($hairSystemGrpString," ");
			
			// size $hairSystemGrpStringArray
			
			// now $sel stores hairSYSTEM nodes
			for($hair in $hairSystemGrpStringArray){

				// $hair= "br_dvdcloem001013_r_ms_c000:dvdcloem001013_HAIRSYSTEM";
				
				string $cmd="listRelatives -ad -f -type \"hairSystem\" "+$hair;
				
				//print ($cmd+"\n");
				
				
				//string $hairSys[]=`listRelatives -ad -f -type "hairSystem" $hair`;
				
				string $hairSys[]=eval($cmd);
				
				for($aHairSys in $hairSys)	{
					
						$allhairsys[size($allhairsys)]=$aHairSys;
				
				
				
				}	
			
			}
		
			break;
	
	}
	
	
	
	
	
	int $i=0;
	
	for ($each in $allhairsys)
	{   
		if(`objectType $each`!="hairSystem"){
			
			$allhairsys[$i]=" ";
			$i++;
			continue;
		}
		
		
		int $simmethod = `getAttr ($each+".sim")`;
		
		if($simmethod == 3||$simmethod == 2){
			$i++;
			continue;
			
		}
		else
			$allhairsys[$i]=" ";
	
	
		$i++;
	
	}
	
	// size($allhairsys);
	
	$allhairsys=stringArrayRemoveDuplicates($allhairsys);
	
/*	
	for($tmp in $allhairsys)
		if(size($tmp)>1)
	
	 		select -add $tmp;
*/


//	$allhairsys=`ls -sl -l`;
	
	$allhairsys=stringArrayRemove({" "},$allhairsys);
	
	$simHairSys=$allhairsys;
	
/*	
	print "\n==========================\n";
	for($ddd in $allhairsys)
		print($ddd+"\n");
	print "\n==========================\n";	
	warning (size($allhairsys));
	
*/	
	// now $allhairsys stores the hairSystem we need to deal with
	
		// This procedure is called when the 'Open' button of the dialog is clicked.
		// The procedure recieves the name of the file and it's extension

		
		// The final parameter indicates the type of file dialog. 0=Open File Dialog
		// The 1st parameter is a function to call when OK is pressed.
		// The 2nd parameter is the text to appear on the OK button.
		// The 3rd parameter is the type of file, eg "mb", "ma" etc.
	if($mode==0)
		fileBrowser( "hjTransHairCacheonOpen", "Transfer", "0", 0 );
	else
		fileBrowser( "hjTransHairCacheonOpen", "Transfer", "1", 0 );
	//hjReadCacheFileLoc
	
	
	
	
}


//		fileBrowser( "onOpen", "Transfer", "", 0 );


global proc hjHairMakeCacheNode()
{


	
	global string $simHairSys[];
	
	DisplayWireframe;
	
	select -r $simHairSys;
	
	
/*	
	size($simHairSys);
	string $test[]=`ls -sl`;
	print "\n==========================\n";
	for($ddd in $test)
		print($ddd+"\n");
	print "\n==========================\n";	
	error (size($test));
	size `ls -sl`;
	
*/	
	

	playbackOptions -minTime 0  -ast 0;
	currentTime 0 ;

	DeleteHairCache;
	

	doHairDiskCache 1 { "3", 1, 0, 1, 1 };
	
//	playButtonStepForward;
	
	file -save;
	
	clear $simHairSys;

}