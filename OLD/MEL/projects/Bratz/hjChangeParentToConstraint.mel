proc hjUpdateScrollList(string $textScrollList)
{
	// $textScrollList="hjTextScrollList";
/*
	 
	string $object[]=`textScrollList -q -allItems $textScrollList`;

	hjUpdateScrollList("hjTextScrollList");

*/	
//	print "updating((((((((((((((((((((((((((";
	
	string $docTag=`textScrollList -q -docTag $textScrollList`;
	
	string $docTagArray[]=stringToStringArray($docTag," ");

/*	
	// $objects string stores all items
	
	string $objects="";
	
	for($tmp in $object){
		
		$objects+=$tmp+" ";
		
	}
	
	
*/	
	string $newDocTag[];
	
	for($doc in $docTagArray){
		
			
			
			if(`objExists $doc`)
			
			
				$newDocTag[size($newDocTag)]=$doc;
		
		
		
		
		
	}
	
	string $newString=stringArrayToString($newDocTag," ");
	
	textScrollList -e -docTag $newString $textScrollList;
	
}


global proc string[] hjChangeParentToConstraint(int $mode){
	//$mode 0 perform normal 
	//      1 just return suspicious objects
	string $shit;
	
	if($mode==0){
	
		$shit=`currentTime -q`;
	
		currentTime -31;
	}
	
	
	string $props[]=`ls -l "*_MASTER" "*:*_MASTER" "*:*:*_MASTER" "*_master" "*:*_master" "*:*:*_master" "*_GEO" "*:*_GEO" "*:*:*_GEO" "*_geo" "*:*_geo" "*:*:*_geo"`;
	
	string $moved[],$parent[],$possibleProps[];
	
	string $prop;
	
	

	string $wristCons[]=`ls -l -type transform "*:*:*wristCon_?" "*:*wristCon_?" "*wristCon_?"`;
	
	for($wristCon in $wristCons){
	
		string $childs[]=`listRelatives -c -f`;
		
		
			for($child in $childs){
			
				if(!`referenceQuery -isNodeReferenced $child`)
			
					$possibleProps[size($possibleProps)]=$child;
			
			
			}
	
	
	
	
	
	}

	$props=`stringArrayCatenate $props $possibleProps`;
	
	clear $possibleProps;
	
	string $heads[]=`ls -l -type joint "*:*:*_head" "*:*_head" "*_head" "*:*:*_headTip" "*:*_headTip" "*_headTip"`;
	
	
	
	for($head in $heads){
	
		string $childs[]=`listRelatives -c -f $head`;
		
		
			for($child in $childs){
			
				if(!`referenceQuery -isNodeReferenced $child`){
				//	print ($child+"\n");
					$possibleProps[size($possibleProps)]=$child;
				}
					
			}
	
	
	
	
	
	}
	
	
 

	$props=`stringArrayCatenate $props $possibleProps`;
	
	
	
	$props=stringArrayRemoveDuplicates($props);
	
//	size($props);
/*	
	 print "\n======================\n";
	
	for($tmp in $props)
		print($tmp+"\n");
	 print "\n======================\n";

*/	
	
	

	for($prop in $props){
			
			if(`referenceQuery -isNodeReferenced $prop`) continue;
		
			//string $props[] = `ls -sl -l`;
			//$prop=$props[0];
			
			$parent=`listRelatives -p -f $prop`;
			
		//	listRelatives -p -f `ls -sl -l`;
		//	$shit="|br_dvdkayceem007001_r_ms_c000RNgroup|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_MASTER|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_lobackA|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_lobackB|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_chestA|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_chestB|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_shoulder_r|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_arm_r|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_elbow_r|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_wristCon_group_r|br_dvdkayceem007001_r_ms_c000:br_dvdkayceem007001_h_tx_c000:dvdkayceem007001_wristCon_r";
		//	referenceQuery -isNodeReferenced $shit;
			
		//	print (size($parent));
			
			if(!`size($parent)`) continue;
			
		
		
			
		//string $parent[];
		//$parent[0] ="|group2";
						
			
			if(`referenceQuery -isNodeReferenced $parent[0]`){
				
//				print ("\n===================================\n");
				
//				print ("parent  "+$prop+" to "+$parent[0]+"\n");
				
//				print ("\n===================================\n");
				
				$moved[size($moved)]=$prop;

				
			}
	
	
	}
	
	//	size($moved);
	 
	if($mode==0){

	
		string $textscrollList=hjTextScrollListWnd();
		
		hjTextScrollListInit($moved,$textscrollList);
		
	}
	
	
	return $moved;
	
	
	// the following is the actually move func
				

	
	
	
	
	
	

}

global proc hjChangeParentToConstraintPerform(string $textScrollList,int $mode)
{
	// 0 all
	// 1 selected objects only
	
	
	string $objs[];
	
	if($mode==1){
		$objs=hjTextScrollListCmd("hjTextScrollList",1);
		
		int $selIndex[]=`textScrollList -q -sii $textScrollList`;
		sort $selIndex;
		int $i=size($selIndex)-1;
		
		for($j=$i;$j>=0;$j--){
		
			textScrollList -e -rii $selIndex[$j] $textScrollList;
			
		}
		//string $remainIndex[]=`textScrollList -q -si $textScrollList`;
		
		
	}
	else{
		string $tmp=`textScrollList -q -docTag $textScrollList`;
		$objs=stringToStringArray($tmp," ");
		textScrollList -e -ra $textScrollList;
		textScrollList -e -docTag "" $textScrollList;
	}

	string $parent[];
/*	
	print "\n===========================";
	print ("\nobjs to be fucked...\n");
	print $objs;
*/	
	int $time=`currentTime -q`;
	currentTime -31;
	
	for($obj in $objs){
				
			//	$obj="dvdp038002balloonsbunchstring_MASTER";
		
				$parent=`listRelatives -f -p $obj`;
		
				float $pos[]=`xform -q -ws -rp $parent[0]`;
				
				
				string $locator[]=`spaceLocator -p $pos[0] $pos[1] $pos[2]`;
				
//				parent $locator[0] $parent[0];
				
				
				
//				CenterPivot;
//				makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;
				
				string $shortName=`match "[^|:]*$" $parent[0]`;
				
				string $groupName=$shortName+"_prop_group";
				
				$groupName=`group -n $groupName $obj`;
				
				parent $groupName $locator[0];
				
		//	    parent $obj $locator[0];		
				
		//		Plocator=`parent -w $locator[0]` ;
				
				
				
				string $locName=$shortName+"_prop_Loc";
				
				string $loc=`rename $locator[0] $locName`;
				
				
			
				parentConstraint -mo -weight 1 $parent[0] $loc;
				
		}
		
	if($mode==1)
		hjUpdateScrollList("hjTextScrollList");
	
	
	currentTime $time;
		
		
		
	
	if ( size($objs))
	{
	


	print "\n-------------------------------\n";
	
	for ($tmp in $objs){
		
		print($tmp+"\n");
	
	
	}
	

	print "--------------summary-----------------\n";
	print (size($objs)+" props changed to parent constraint...\n");
	
	}

	else
	print ("No props changed to parent constraint...");
	
	
	
}



global proc hjTextScrollListInit(string $objects[],string $textScrollList)
{
	textScrollList -e -docTag "" $textScrollList;
	
	for($object in $objects){
		
		string $noPath=`match "[^|]*$" $object`;
		textScrollList -e -a $noPath $textScrollList;
		textScrollList -e -docTag (`textScrollList -q -docTag $textScrollList`+" "+$object) $textScrollList;
		
	
	
	
	}


}

global proc string[] hjTextScrollListCmd(string $textScrollList,int $mode)
{
	// 0 select
	// 1 return selected only
	
	int $selIndex[]=`textScrollList -q -selectIndexedItem $textScrollList`;
	
	select -clear;
	
	string $docTag=`textScrollList -q -docTag $textScrollList`;
	
	string $objs[]=stringToStringArray($docTag," ");
	
	if($mode==0){
	
		for($tmp in $selIndex){
			
			select -add $objs[$tmp-1];
		
		
		}
		return {"1"};
	}
	else{
		
		string $return[];
		
		for($tmp in $selIndex){
			
			$return[size($return)]=$objs[$tmp-1];
		
		
		}

		return $return;
	
	}
	
	
}

global proc string hjTextScrollListWnd()
{
	if(`window -q -exists hjTextScrollListWnd`) deleteUI hjTextScrollListWnd;
	
	string $window = `window -title "improperly parented props"
 		-iconName "Short Name"
 		-widthHeight 200 180 hjTextScrollListWnd`;
	
	string $form=`formLayout`;
	string $textScrollList=`textScrollList -numberOfRows 16 
							-allowMultiSelection true 
							-sc "hjTextScrollListCmd(\"hjTextScrollList\",0)"
							hjTextScrollList`;
	string $button1=`button -l "Selected" -c "hjChangeParentToConstraintPerform(\"hjTextScrollList\",1)"`;
	string $button2=`button -l "All" -c "hjChangeParentToConstraintPerform(\"hjTextScrollList\",0)"`;
	
	string $button3=`button -l "Import Top Reference(Ignore Props)" -c "zwImportTopReference(0)"`;
	
	string $separator=`separator -w 300 -style "in"`;
		
	formLayout -e 
		-attachForm $textScrollList "top" 2
		-attachForm $textScrollList "left" 2
		-attachForm $textScrollList "right" 2
		-attachForm $textScrollList "bottom" 30
		
		-attachForm $separator "left" 2
		-attachForm $separator "right" 2
		-attachControl $separator "top" 2 $textScrollList
		
		-attachControl $button1 "top" 2 $separator
		
		-attachControl $button2 "left" 2 $button1
		-attachControl $button2 "top" 2 $separator
		//-attachForm $button2 "right" 2 
		-attachControl $button2 "right" 2 $button3
		
		
		-attachControl $button3 "top" 2 $separator
		-attachForm $button3 "right" 2 
		
		
		$form;
	

	//window -q -wh  hjTextScrollListWnd;
	window -e -wh 375 275 hjTextScrollListWnd;
	showWindow;
	return $textScrollList;
}

//hjTextScrollListWnd;

