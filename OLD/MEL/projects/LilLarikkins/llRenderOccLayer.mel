//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2010-1-7
//
//	Update/Change: WansHoulOng
//	Last Updated: 2010-1-7
//	Description:
//				
//////////////////////////////////////////////////////////

global proc llRenderOccLayer()
{

	string $Array[] = `listConnections "renderLayerManager.renderLayerId"`;
	for($item in $Array)
	{
		if((`gmatch $item "*:*defaultRenderLayer*"`)||(`gmatch $item "*defaultRenderLayer*"`))
		setAttr ($item + ".renderable") 0;
	}	
	//string $objShape[] = `ls -type mesh -type nurbsSurface`;
	string $objShape[] = `ls -sl`;
	string $renderLayer = `createRenderLayer -name "Occlusion" -makeCurrent -noRecurse $objShape`;
	
	
	editRenderLayerGlobals -currentRenderLayer $renderLayer;
	editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
	
	//editRenderLayerAdjustment "defaultResolution.width";
	//setAttr "defaultResolution.width" 1280;
	//editRenderLayerAdjustment "defaultResolution.height";
	//setAttr "defaultResolution.height" 720;
	
	
	// AO shader
	// AO shader
	string $aoTex = `shadingNode -asTexture mib_amb_occlusion -name "aoTexture"`;
	setAttr ($aoTex + ".samples" ) 64;
	setAttr ($aoTex + ".spread" ) 0.8;
	setAttr ($aoTex + ".max_distance" ) 2.5;
	setAttr ($aoTex + ".output_mode" ) 0;
	setAttr ($aoTex + ".falloff" ) 1;
	setAttr ($aoTex + ".id_inclexcl" ) 0;
	string $aoShader = `shadingNode -asShader surfaceShader -name "aoShader"`;
	string $aoShaderSG = `sets -renderable true -noSurfaceShader true -empty -name ($aoShader+"SG")`;
	connectAttr -force ($aoTex + ".outValue") ($aoShader + ".outColor");
	connectAttr -force ($aoShader + ".outColor") ($aoShaderSG + ".surfaceShader");
	//ÃÌº” Ù–‘øÿ÷∆max_distance
	//addAttr -ln "max_distance"  -at double  $aoShader;
	//setAttr -e-keyable true ($aoShader+".max_distance");
	//setAttr ($aoShader+".max_distance") 100;
	//connectAttr -f ($aoShader+".max_distance") ($aoTex + ".max_distance");	

	//Adjust camera's background color to white
	//string $cams[] = `listCameras -p`;
	//for($cam in $cams)
	//{
	//	if(`getAttr ($cam+".renderable")`==1)
	//	{
	//		editRenderLayerAdjustment ($cam+".backgroundColor");
	//		setAttr ($cam+".backgroundColor") -type double3 1 1 1;
	//	}
	//}	
	
	//select $objShape;
	//hyperShade -assign $aoShader;
	//source slRenderAllTools.mel;
	//slRenderAllToolsHookShaderOverride($renderLayer,$aoShader );

	sets -e -fe $aoShaderSG $objShape;
	select -cl;
}