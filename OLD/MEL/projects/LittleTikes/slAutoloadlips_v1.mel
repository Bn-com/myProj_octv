/// Copyright (C) 2000-2007 IDMT. All rights reserved.
///
/// Author: ÕÚ Ÿ¡˙
///
/// Creation Date: 2007/04/20
///
/// Description: 
///

proc string[] slALLGetFilename()
{
	string $fileName = `file -q -sceneName`;
	string $buffer[];
	int $num = `tokenize $fileName "\/" $buffer`;
	int $num2 = `tokenize $buffer[$num-1] "_" $buffer`;
	int $sFrame = `playbackOptions -q -min`;
	int $eFrame = `playbackOptions -q -max`;
	int $tFrame = $eFrame - $sFrame + 1;
	string $char[] = {$buffer[1],$buffer[2],$sFrame,$eFrame,$tFrame};
	return $char;
}

proc string[] slALLGetCharName()
{
	string $charName[] = {};
	string $sets[] = `ls -type objectSet "*_facial_set" "*:*_facial_set" "*:*:*_facial_set"`;
	string $buffer1[],$buffer2[];
	for ($item in $sets )
	{
		$charName[size($charName)] = `substring $item 1 (size($item) - 11)`;
	}	
	return $charName;
}

global proc slAutoloadlips_v1()
{
	string $sceneShot[] = slALLGetFilename();
	string $sceneNum = $sceneShot[0];
	string  $shotNum = $sceneShot[1];
	int $startFrame = $sceneShot[2];
	int $endFrame = $sceneShot[3];
	string $lipFilePath = "\\\\File-cluster\\GDC\\Projects\\LittleTikes\\LittleTikes_Scratch\\sync";
	string $sceneChars[] = slALLGetCharName();

	if(`window -exists w_sync_win`)
		deleteUI w_sync_win;
	window -title "Auto Load Character Lips v1.0" -mb true  -s true -resizeToFitChildren true w_sync_win;
		
		menu -label "Help";
			menuItem -label "Help on AutoLoadlips..." -command "zjHelpCallback slBrAutoloadlips";

		string $form = `formLayout`;
				
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;
							
				string $sceneFrLayout = `frameLayout -label "Scenes Informations" -labelAlign "top" -cll false -borderStyle "etchedIn"`;
					string $sceneFoLayout = `formLayout`;
						textFieldGrp -label "Episode" -text $sceneNum -cw2 100 40   _Value_ALL_Shot_Input;
						textFieldGrp -label "Scene" -text $shotNum -cw2 50 40 _Value_All_Scene_Input;
						intFieldGrp -numberOfFields 2 -label "startFrame" -extraLabel "endFrame" -value1 $startFrame -value2  $endFrame -cw4 80  40 40 100 _Value_ALL_Start_Input;
						setParent ..;
					setParent ..;
						formLayout -edit
							-attachForm  _Value_ALL_Shot_Input         			"top" 5
							-attachForm  _Value_ALL_Shot_Input				"left" 5	
							-attachForm  _Value_ALL_Shot_Input				"bottom" 5				
							-attachForm  _Value_ALL_Start_Input         			"top" 5
							-attachForm  _Value_ALL_Start_Input				"right" 5
							-attachForm _Value_All_Scene_Input				"top" 5
							-attachControl _Value_All_Scene_Input			"left" 5 _Value_ALL_Shot_Input 
						$sceneFoLayout;

				string $charFrLayout = `frameLayout -label "Charactor Informations" -labelAlign "top" -cll false -borderStyle "etchedIn"`;
					string $charFoLayout = `formLayout`;
						textScrollList  -numberOfRows 6 -allowMultiSelection true   _List_ALL_Char_Input;
						textScrollList -e -removeAll _List_ALL_Char_Input;
						for($i=0;$i<`size $sceneChars`;$i++)
							textScrollList -e -append ($sceneChars[$i]) _List_ALL_Char_Input;
						setParent ..;
					setParent ..;
						formLayout -edit
							-attachForm	_List_ALL_Char_Input			"top"		10
							-attachForm	_List_ALL_Char_Input			"left"		10
							-attachForm	_List_ALL_Char_Input			"right"		10
							-attachForm	_List_ALL_Char_Input			"bottom"    10
						$charFoLayout;
				setParent ..;

			string $form1 = `formLayout`;
				floatSliderGrp -field true -l "amplitude"  -columnWidth 1 110 -columnWidth 2 60 -min 0 -max 1 -step 0.01 -v 0.8 _amplitude;
				intSliderGrp -field true -l "Offset"  -columnWidth 1 110 -columnWidth 2 60 -min -100 -max 100  -v 0 _offset;
				radioButtonGrp -numberOfRadioButtons 2 -label "Load LipSync To" -labelArray2 "selected" "all" -sl 2 _Value_ALL_Object_Input;
				textFieldButtonGrp -label "sync file path" -text $lipFilePath -buttonLabel "Browse" -cw3 90 350 100 -buttonCommand "slFindFilePath" _syncListPath;
				string $loadButton = `button -l "Load" -w 80 -command "slLoadLipSyncButton"`;
				string $cleanButton = `button -l "Clean sync" -w 80 -command "slDeleteSyncKeys"`;
				string $loadSound = `button -l "Sound" -w 80 -command "slLoadSoundTrack"`;
				string $abortButton = `button -l "Edit txt file" -w 80 -command "slEditSyncTxt"`;
				formLayout -edit
					-attachForm	$loadButton                                                 "bottom" 10
					-attachForm	$loadButton 						"left" 10
					-attachPosition $loadButton						"right" 0  25
					
					-attachForm	$cleanButton                                                "bottom" 10
					-attachControl  $cleanButton 						"left" 5 $loadButton
					-attachPosition $cleanButton						"right" 0  50
					
					-attachForm	$loadSound                                                  "bottom" 10
					-attachControl  $loadSound 						"left" 5 $cleanButton
					-attachPosition $loadSound						"right" 0  75
					
					-attachForm	$abortButton                                                "bottom" 10
					-attachControl  $abortButton 						"left" 5 $loadSound
					-attachPosition $abortButton						"right" 0  100
					
					-attachForm	_syncListPath						"left" 50 
					-attachControl	_syncListPath						"bottom" 10 $loadButton

					-attachControl  _Value_ALL_Object_Input					"bottom" 10 _syncListPath
					-attachForm	_Value_ALL_Object_Input					"left" 100 
					
					-attachControl  _offset							"bottom" 10 _Value_ALL_Object_Input
					-attachForm	_offset							"left" 75

					-attachControl  _amplitude						"bottom" 10 _offset
					-attachForm	_amplitude							"left" 75
				$form1;

			
			formLayout -edit
				-attachForm $columnLayout                                                 "top" 5
				-attachForm  $columnLayout 						"left" 10
				-attachForm $columnLayout						"right" 10
				-attachControl $columnLayout                                                "bottom" 5 $form1

				-attachForm  $form1 						"left" 10
				-attachForm $form1						"right" 10
				-attachForm $form1                                                "bottom" 10
			$form;
		window -e -w 650 -h 400 w_sync_win;
	showWindow w_sync_win;

}

global proc slLoadSyncFile(string $filename,string $fileType)
{
	textFieldButtonGrp -e -text $filename _syncListPath;
}


global proc string slFindFilePath()
{
	string $filePath = `fileBrowserDialog -mode 4  -fileCommand "slLoadSyncFile"  -actionName "select_folder" -operationMode "Reference"`;
	return $filePath;
}


global proc string slLoadLipsync(string $char)
{
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	int $getStartFrame = `intFieldGrp -q -value1 _Value_ALL_Start_Input`;
	int $offsetFrame=`intSliderGrp -q -v _offset`;
	
	string $getSyncFolder = `textFieldButtonGrp -q -text _syncListPath`;
	string $charSyncFile =$getSyncFolder + "/" + $getEpisodeNum+"_"+$getSceneNum +  ".txt";

	string $buffer1[],$buffer2[];
	int $key=0;
	string $warning;
	string $charKey;
	int $startFrameOffer;
	int $startpage;
	int $curpage;

	if(`file -q -ex $charSyncFile`)
	{
		$fileId = `fopen $charSyncFile "r"`;
		string $nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;
		tokenize $nextLine " " $buffer1;
		$startFrameOffer = (int)$buffer1[1];
		$startpage = (int)`substring $buffer1[0] 2 (size($buffer1[0]))`;
		int $lineNum = 1;
		int $frameNum = 1;
		string $dataNum = 0;
		while(size($nextLine)>0)
		{
			tokenize $nextLine "[]" $buffer1;
			if (`size($buffer1)`>1)
			{
				$charKey=`tolower $buffer1[0]`;
				$nextLine = `fgetline $fileId`;
			}
			if (`gmatch $char ("*"+$charKey+"*")`)
			{
				$key = 1;
				if (startsWith($nextLine,"P") || startsWith($nextLine,"p"))
				{
					$curpage = (int)`substring $nextLine 2 (size($nextLine))`; 
					print $nextLine;
					print $curpage;
					print "\n";
				}
				else 
				{
					tokenize $nextLine " " $buffer1;
					$frameNum=(int)$buffer1[0]+$getStartFrame+$offsetFrame-$startFrameOffer+($curpage-$startpage)*80;
					tokenize $buffer1[1] "\n" $buffer2;
					$dataNum  = $buffer2[0];
					if ($dataNum != "")	slPhonemeSet($char,$dataNum,$frameNum);
				}
			}
				
			$nextLine = `fgetline $fileId`;
		}	
		fclose $fileId;
/*		
		string $phonemeConNew[] = {($char+"_M"),($char+"_eetC"),($char+"_I"),($char+"_Eo"),($char+"_OOO"),($char+"_U"),($char+"_FV"),($char+"_L"),($char+"_ch")};
		for ($temp in $phonemeConNew )
		{
			string $charCurve[] = `keyframe -q -name ($temp + ".ty")`;
			keyTangent -e -ott clamped $charCurve;
		}
*/
		
		if ($key==1)
			print ("Successfully load lip file to:"+$char+"\n");
		else
			print ("No lip file match the character:"+$char+"\n");
	}
	else	print ("No lip file match the scene:"+$getEpisodeNum + "_" +$getSceneNum+"\n");
	return $warning;
}

global proc slLoadLipSyncButton()
{
	int $num =`radioButtonGrp -q -sl _Value_ALL_Object_Input`;
	string $getChar[] = {};
	if($num == 1)
		$getChar = `textScrollList -q -si _List_ALL_Char_Input`;
	else
		$getChar = `textScrollList -q -ai _List_ALL_Char_Input`;


	for($char in $getChar)
	{	
		slLoadLipsync($char);
	}
}



global proc slEditSyncTxt()
{
	string $getSyncFolder = `textFieldButtonGrp -q -text _syncListPath`;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	string $charSyncFile = $getSyncFolder + "/" + $getEpisodeNum+"_"+$getSceneNum +  ".txt";
	system ("load" +$charSyncFile);
}

global proc slDeleteSyncKeys()
{
	int $num =`radioButtonGrp -q -sl _Value_ALL_Object_Input`;
	string $getChar[] = {};
	if($num == 1)
		$getChar = `textScrollList -q -si _List_ALL_Char_Input`;
	else
		$getChar = `textScrollList -q -ai _List_ALL_Char_Input`;

	for ($char in $getChar)
	{
		string $phonemeConNew[] = {($char+"_M"),($char+"_eetC"),($char+"_I"),($char+"_Eo"),($char+"_OOO"),($char+"_U"),($char+"_FV"),($char+"_L"),($char+"_ch")};
		for ($temp in $phonemeConNew )
		{
			string $charCurve[] = `keyframe -q -name ($temp+".ty")`;
			delete $charCurve;
			setKeyframe -t -31 -v 0 ($temp + ".ty");
		}
	}

}

global proc slLoadSoundTrack()
{
	string $audioTrack[] = `ls -type audio`;
	if(`size $audioTrack` != 0)
		delete $audioTrack;
	string $getEpisodeNum = `textFieldGrp -q -text _Value_ALL_Shot_Input`;
	string $getSceneNum = `textFieldGrp -q -text _Value_All_Scene_Input`;
	int $getStartFrame = `intFieldGrp -q -value1 _Value_ALL_Start_Input`;
	string $soundFolder = "//File-cluster/GDC/Projects/LittleTikes/Post_Production/LT_"+$getEpisodeNum+"/sound/";
	string $soundFile = $soundFolder +"LT_"+$getEpisodeNum+"_"+$getSceneNum+"*.wav";
	string $catchAudioFiles[] = `getFileList -filespec $soundFile`;
	string $buffer[];
	if(`size $catchAudioFiles` != 0)
	{
		$soundFile = $soundFolder + $catchAudioFiles[0];
		if (`size $catchAudioFiles` >1)
		{
			for ($temp in $catchAudioFiles )
			{
				tokenize $temp "_" $buffer;
				if (`size $buffer`==3)
					$soundFile = $soundFolder +$temp;
			}
		}
		timeControl -e -ds true -s `sound -o $getStartFrame -file $soundFile` timeControl1;		
	}
	else
		print ("Sorry,not wav file found.\n");

}


global proc slPhonemeSet(string $char , string $dataNum , int $frameNum)
{
	string $phonemeConNew[] = {($char+"_M"),($char+"_eetC"),($char+"_I"),($char+"_Eo"),($char+"_OOO"),($char+"_U"),($char+"_FV"),($char+"_L"),($char+"_ch")};
	float $amplitude = `floatSliderGrp -q -value _amplitude`;
	
	for ($temp in $phonemeConNew )
	{
		setKeyframe -t $frameNum -v 0 $temp;
		if ($dataNum == "A")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[0];
		if ($dataNum == "B")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[1];
		if ($dataNum == "C")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[2];
		if ($dataNum == "D")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[3];
		if ($dataNum == "E")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[4];
		if ($dataNum == "F")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[5];
		if ($dataNum == "G")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[6];
		if ($dataNum == "H")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[7];
		if ($dataNum == "I")	setKeyframe -t $frameNum -v ($amplitude*0.4)	$phonemeConNew[8];

	}
}