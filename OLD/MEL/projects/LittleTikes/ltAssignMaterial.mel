/// Copyright (C) 2000-2007 IDMT. All rights reserved.
///
/// Author: 万寿龙
///
/// Creation Date: 2007/02/26
///
/// Description: ben&izzy项目渲染环节自动分层工具之子程序
///		主要功能：给选中物体赋予matte,color,ao等材质
///


global proc ltAssignMaterial()
{
	if(`window -exists lt_assignMaterial`)
		deleteUI lt_assignMaterial;
	window -title "assign material for ltRenderLayer" -mb true  -s false -resizeToFitChildren true lt_assignMaterial;
		
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;
				string $materialFoLayout = `formLayout`;
					string $matteButton = `button -l "Matte"  -h 40 -command ("ltAssigntoSelect(\"matte\")")`;
					string $colorRButton = `button -l "ColorR"  -bgc 1 0 0 -h 40 -command "ltAssigntoSelect(\"colorR\")"`;
					string $colorGButton = `button -l "ColorG"  -bgc 0 1 0 -h 40 -command "ltAssigntoSelect(\"colorG\")"`;
					string $colorBButton = `button -l "ColorB"  -bgc 0 0 1 -h 40 -command "ltAssigntoSelect(\"colorB\")"`;
					string $colorAButton = `button -l "ColorA"  -bgc 1 1 1 -h 40 -command "ltAssigntoSelect(\"colorA\")"`;
					string $aoButton = `button -l "AO"  -h 40 -command "ltAssigntoSelect(\"ao\")"`;
					string $depthButton = `button -l "Depth" -bgc 0.5 0.5 0.5 -h 40 -command "ltAssigntoSelect(\"depth\")"`;
					setParent ..;
				formLayout -edit
					-attachForm	$matteButton		"top"		10
					-attachForm	$matteButton		"left"		10
					-attachForm	$matteButton		"right"		10
					
					-attachControl	$colorRButton		"top"		10	$matteButton
					-attachForm	$colorRButton		"left"		10
					-attachPosition	$colorRButton		"right"		0	25
									
					-attachControl	$colorGButton		"top"		10	$matteButton
					-attachControl	$colorGButton		"left"		10	$colorRButton
					-attachPosition	$colorGButton		"right"		0	50

					-attachControl	$colorBButton		"top"		10	$matteButton
					-attachControl	$colorBButton		"left"		10	$colorGButton
					-attachPosition	$colorBButton		"right"		0	75

					-attachControl	$colorAButton		"top"		10	$matteButton
					-attachControl	$colorAButton		"left"		10	$colorBButton
					-attachPosition	$colorAButton		"right"		0	96

					-attachControl	$aoButton		"top"		10	$colorAButton
					-attachForm	$aoButton		"left"		10
					-attachForm	$aoButton		"right"		10
					
					-attachControl	$depthButton		"top"		10	$aoButton
					-attachForm	$depthButton		"left"		10
					-attachForm	$depthButton		"right"		10
					-attachForm	$depthButton		"bottom"	10

				$materialFoLayout;
			setParent ..;
				
	showWindow lt_assignMaterial;

	ltCreateMaterialNode();	
}


global proc ltAssigntoSelect(string $adj)
{
	string $obj[] = `ls -sl`;
	if (`objExists $obj[0]`)
	{
		switch ($adj)
		{
			case "matte" :
				hyperShade -assign ltmatte_lambert;	
				break;
			case "colorR" :
				hyperShade -assign ltColorR_surfaceShader;
				break;
			case "colorG" :
				hyperShade -assign ltColorG_surfaceShader;
				break;
			case "colorB" :
				hyperShade -assign ltColorB_surfaceShader;
				break;
			case "colorA" :
				hyperShade -assign ltColorA_surfaceShader;
				break;
			case "ao" :
				hyperShade -assign ltAO_surfaceShader;
				select -r ltAO_mib_amb_occlusion;
				break;
			case "depth" :
				hyperShade -assign ltDepth_surfaceShader;
				select -r ltDepth_surfaceShader;
				break;
		}
	}
	
	switch ($adj)
	{
		case "ao" :
			select -r ltAO_mib_amb_occlusion;
			break;
		case "depth" :
			select -r ltDepth_surfaceShader;
			break;
	}
}

global proc ltCreateMaterialNode()
{
	//Create Matte
	if (!`objExists ltmatte_lambert`)
		shadingNode -asShader lambert -name ltmatte_lambert;
	setAttr "ltmatte_lambert.color" -type double3 0 0 0 ;
	setAttr ltmatte_lambert.matteOpacityMode 0;

	
	//Create Surface ColorRGB
	if (!`objExists ltColorR_surfaceShader`)
		shadingNode -asShader surfaceShader -name ltColorR_surfaceShader;
	setAttr "ltColorR_surfaceShader.outColor" -type double3 1 0 0 ;
	setAttr "ltColorR_surfaceShader.outMatteOpacity" -type double3 0 0 0 ;
	
	if (!`objExists ltColorG_surfaceShader`)
		shadingNode -asShader surfaceShader -name ltColorG_surfaceShader;
	setAttr "ltColorG_surfaceShader.outColor" -type double3 0 1 0 ;
	setAttr "ltColorG_surfaceShader.outMatteOpacity" -type double3 0 0 0 ;
	
	if (!`objExists ltColorB_surfaceShader`)
		shadingNode -asShader surfaceShader -name ltColorB_surfaceShader;
	setAttr "ltColorB_surfaceShader.outColor" -type double3 0 0 1 ;
	setAttr "ltColorB_surfaceShader.outMatteOpacity" -type double3 0 0 0 ;

	if (!`objExists ltColorA_surfaceShader`)
		shadingNode -asShader surfaceShader -name ltColorA_surfaceShader;
	setAttr "ltColorA_surfaceShader.outColor" -type double3 0 0 0 ;
	setAttr "ltColorA_surfaceShader.outMatteOpacity" -type double3 1 1 1 ;

	//Create shadow 
	if (!`objExists ltShadow_useBackground`)
		shadingNode -asShader useBackground -name ltShadow_useBackground;
	setAttr "ltShadow_useBackground.reflectivity" 0;
	setAttr "ltShadow_useBackground.reflectionLimit" 0;
	setAttr "ltShadow_useBackground.shadowMask" 1;

	//Create depth
	if (!`objExists ltDepth_surfaceShader`)
	{
		file -import -type "mayaBinary" (`getenv "DEV_PATH"` + "/Maya/shaders/MOEBIUS_SHADER_DEPTH.mb");
		rename DepthShader "ltDepth_surfaceShader";
	}

	
	
	//Create mentalRay node for ao
	if (!`pluginInfo -query -loaded "Mayatomr.mll"`)
		loadPlugin "Mayatomr.mll";
	if (!(`objExists ltAO_mib_amb_occlusion` && `objExists ltAO_surfaceShader`))
	{
		shadingNode -asShader surfaceShader -name ltAO_surfaceShader;
		mrCreateCustomNode -asTexture "" mib_amb_occlusion;rename ltAO_mib_amb_occlusion;
		setAttr "ltAO_mib_amb_occlusion.samples" 128;
		setAttr "ltAO_mib_amb_occlusion.dark" -type double3 0.2 0.2 0.2;
		setAttr "ltAO_mib_amb_occlusion.max_distance" 15;
		setAttr "ltAO_mib_amb_occlusion.spread" 0.8;
		connectAttr -force ltAO_mib_amb_occlusion.outValue ltAO_surfaceShader.outColor;
	}
	
}