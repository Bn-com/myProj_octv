//==============================================PDD_createThumbnilWindow.mel=======================
/*
this proc is to create a small window building up a series of thumbnails and button base on :
$path to dir to list file 
$file filter rule 
$command when click a button 

*/
//PDD_createThumbnailWindowLoader ("TEST LOADER","GMH2/presets/","*.png","",1);
global  proc int PDD_createUserPathThumbnailWindow(string $title,string $path, string $fileFormat,string $command,int $debugFlag)
{
    
    
    string $paths[] = `fileDialog2  -fm 3 -okc "set"`;
    
    string $path = $paths[0];
     if (`filetest -e $path`==0)
     {
     $path = PDD_getValidScriptPath($path);  
     }
     if (`filetest -e $path`==0)
     {
         warning ("Path: <<"+$path+">> is not a valid path, please input a valid path\n");
         return 0;
     }
     
     
     string $itemLists[] = `getFileList -folder ($path+"/") -fs ("*."+$fileFormat)`;


    //Window
    string $window = "thumbNail";
    int $width = 400;
    int $height = 650;
    
    if (`window -exists $window`) deleteUI $window;
    window -title $title -widthHeight $width $height -s true $window;

    
   
 // create scroll layout    
 string $scrollLayout = `scrollLayout
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16 "scrollLayout"`;
frameLayout -label $title -borderStyle "in" "frameLayout";
   


string $nameHolderText = $title+"SelectContext";
text -l "selected HairStyle"  -vis 0 $nameHolderText;

//text "Load Preset GMH Style\n ";

        //create grid layout
        gridLayout -numberOfColumns 4 -cellWidthHeight 200 200 "gridLayout";
           
        
        
            for ( $eachItem in $itemLists)
            {
               
                rowColumnLayout -numberOfRows 2 -ro 1 "top" 5 -ro 2 "top" 5;
                
                string $itemNames[];
                tokenize($eachItem,".",$itemNames);
                string $thumbnailPath = ($path+"/"+$itemNames[0]+"_thumbnail.png");
                image -image $thumbnailPath;
                
                string $command2 =" text -e -l \""+$path+"/"+$eachItem+"\"\""+$nameHolderText+"\";"+ $command;
                button -l $eachItem -c $command2;
            
             setParent "gridLayout";
            }
 
 
        

             setParent "frameLayout";
             

   
//textFieldButtonGrp -label "path" -text "path" -buttonLabel "Path" -bc $cc "PDDThumbnailLoaderTextFiel";
button -l "Apply" "applyButton";

showWindow $window;
return 0;
}
    
 global proc string PDD_getSelectedContextThumbnailWindow(string $title,int $debugFlag)
 {
     string $result =  `text -q -l ($title+"SelectContext")`;
     return $result;
 }
    
    
    
    
    
       