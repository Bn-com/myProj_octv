//////////////////////////////////////////////////////////////	Script Name: lvExportWithHairCache//	Author: WanShouLong//	Created: 9/18/2008////	Update/Change: WanShouLong//	Last Updated: 7/08/2009 yejun//	Description://			自动寻找hairsystem节点对应的cache，并更新为最新的//				//////////////////////////////////////////////////////////global proc lvExportWithHairCachenet(){	string $filename = `file -q -sn -shn`;	$filename = `substring $filename 1 (size($filename)-3)`;			string $buff[];	tokenize $filename "_" $buff;	string $proj = GetProjnameByScenename($buff[0]);	string $episode = $buff[1];	string $scene = $buff[2];	string $cachedata = "//file-cluster/GDC/Projects/"+$proj+"/Project/data/episode_"+$episode+"/scene_"+$scene+"/hair/";	string $data = `workspace -q -fn` + "/data/";	//print $cachedata;	//print ("\n"+$data);		string $hairsystems[] = `ls -type hairSystem`;	for ($hs in $hairsystems)	{		string $diskcache[] = `listConnections -type diskCache $hs`;		if (size($diskcache))		{			string $buff[];			tokenize $hs ":" $buff;			string $namesub = $hs;			for ($i=0;$i<(size($buff)-1);$i++)			{				$namesub = `substitute ":" $namesub "_"`;			}						string $cachefile[] = `getFileList -fs ($cachedata+"*cacheModify*"+$namesub+".mchp")`;			if (size($cachefile) == 0)				$cachefile = `getFileList -fs ($cachedata+"*cache*"+$namesub+".mchp")`;			if (size($cachefile) == 0)				$cachefile = `getFileList -fs ($cachedata+"*_ch_*"+$namesub+".mchp")`;						print ($namesub+"......."+$cachefile[0]+"\n");			if (size($cachefile))			{				string $copycache = $data + $filename + ".mb_" + $namesub + ".mchp";				//print ("====="+$cachefile[0]+"------"+$copycache);				if (!`filetest -r $copycache`)				{					sysFile -copy $copycache ($cachedata+$cachefile[0]);				}				setAttr -type "string" ($diskcache[0]+".cacheName") $copycache;			}		}	}}global proc lvExportWithHairCacheLocal(){	string $filename = `file -q -sn -shn`;	$filename = `substring $filename 1 (size($filename)-3)`;			string $buff[];	tokenize $filename "_" $buff;	string $proj = GetProjnameByScenename($buff[0]);	string $episode = $buff[1];	string $scene = $buff[2];	//string $cachedata = "//file-cluster/GDC/Projects/"+$proj+"/Project/data/episode_"+$episode+"/scene_"+$scene+"/hair/";	string $data = `workspace -q -fn` + "/data/";	//print $cachedata;	//print ("\n"+$data);		string $hairsystems[] = `ls -type hairSystem`;	for ($hs in $hairsystems)	{		string $diskcache[] = `listConnections -type diskCache $hs`;		if (size($diskcache))		{			string $buff[];			tokenize $hs ":" $buff;			string $namesub = $hs;			for ($i=0;$i<(size($buff)-1);$i++)			{				$namesub = `substitute ":" $namesub "_"`;			}						string $cachefile[] = `getFileList -fs ($data+"*cacheModify*"+$namesub+".mchp")`;			if (size($cachefile) == 0)				$cachefile = `getFileList -fs ($data+"*cache*"+$namesub+".mchp")`;						//print ($namesub+"......."+$cachefile[0]+"\n");			if (size($cachefile))			{				string $copycache = $data + $filename + ".mb_" + $namesub + ".mchp";				//print ("====="+$cachefile[0]+"------"+$copycache);				if (!`filetest -r $copycache`)				{					sysFile -ren $copycache ($data+$cachefile[0]);				}				setAttr -type "string" ($diskcache[0]+".cacheName") $copycache;			}		}	}}global proc lvExportWithHairCacheUI(){	if (`window -ex slExportWithHairCacheWin`)		deleteUI slExportWithHairCacheWin;	window -title "Hair Cache 连接          WHO" -s true slExportWithHairCacheWin;		columnLayout ;			separator -style "none" -height 5;			button -l "网络" -ann "拷贝网络cache到本地data目录，并改名连接" -w 160 -h 30  -c "lvExportWithHairCachenet" ;			separator -style "none" -height 5;			button -l "本地" -ann "搜索本地data目录是否存在cache，并改名连接" -w 160 -h 30  -c "lvExportWithHairCacheLocal";		setParent ..;	showWindow slExportWithHairCacheWin;}global proc lvExportWithHairCache(){	lvExportWithHairCacheUI;	 }