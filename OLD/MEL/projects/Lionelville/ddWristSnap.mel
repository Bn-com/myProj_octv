//////////////////////////////////////////////////////////
//
//	Script Name: ddWristSnap
//	Verision: 0.01 beta
//	Author: Julii FreeMAN, SZ-CN
//	Date Created: January 22 2007
//	Changed Projcet Date:
//	Last Updated: January 22 2007
//	Update/Change this file at: Julii FreeMAN
//	Note: IK FK Switch IK FK ×´Ì¬ÇÐ»»		
//////////////////////////////////////////////////////////
global proc ddWristSnap()
{
	//GET WRIST CON
	$tmp = `ls -sl`;
	string $sel = $tmp[0];
	string $name_parts[];
	string $nameSpace[];
	string $char;
	string $side;
	int $tok;
        string $IKFKswitchAttr="_arm_ikfkSwitch_con.ikfk_switch";
        string $elbow="elbow_";
        string $arm="arm_";
        string $hand="wrist_";
        string $pole="armPoleVecterCon_";
	$tok = tokenize($sel, ":", $nameSpace);
	if ( $tok == 2)
	{
		tokenize($nameSpace[1], "_", $name_parts);
                $side = $name_parts[1];
		$char = ($nameSpace[0] + ":");
	}
	else
	{
		tokenize($sel, "_", $name_parts);
		$char ="";
		$side = $name_parts[1];
	};
	print ($char + "\n" + $side + "\n") ;
	//GET CURRENT FRAME
	if(`gmatch $sel "*FK*"`)
	{
         print "to ik now";
        string $IKFKswitchAttribute=$char+$side+$IKFKswitchAttr;
        string $FKctrl=$sel;
        string $IKctrl=`substituteAllString $FKctrl "FK" "IK"`;
        string $armFK=$char+$arm+$side;
        string $elbowFK=$char+$elbow+$side;
        string $polectrl=$char+$pole+$side;
        string $ikRotatesA[]=`spaceLocator`;
        string $ikRotatesB[]=`spaceLocator`;
        string $ikRotatesC[]=`spaceLocator`;
        string $pconA[]=`parentConstraint -weight 1 $armFK $ikRotatesA[0]`;
        string $pconB[]=`parentConstraint -weight 1 $elbowFK $ikRotatesB[0]`;
        string $pconC[]=`parentConstraint -weight 1 $FKctrl $ikRotatesC[0]`;
        delete $pconA $pconB $pconC;
        setAttr $IKFKswitchAttribute 1;
        string $tempIKs[]=`duplicate -rr $IKctrl`;
        string $pconC[]=`parentConstraint -weight 1 $ikRotatesC[0] $tempIKs[0]`;
        float $IKpositions[]=`getAttr ($tempIKs[0]+".translate")`;
        float $IKrotates[]=`getAttr ($tempIKs[0]+".rotate")`;
        setAttr ($IKctrl+".tx") $IKpositions[0];
        setAttr ($IKctrl+".ty") $IKpositions[1];
        setAttr ($IKctrl+".tz") $IKpositions[2];
        setAttr ($IKctrl+".rx") $IKrotates[0];
        setAttr ($IKctrl+".ry") $IKrotates[1];
        setAttr ($IKctrl+".rz") $IKrotates[2];
        string $tempPoleCtrls[]=`duplicate -rr $polectrl`;
        string $ocons[]=`orientConstraint -offset 0 0 0 -weight 1 $ikRotatesA[0] $tempPoleCtrls[0]`;
        float $poleRotate[]=`getAttr ($tempPoleCtrls[0]+".rotate")`;
        setAttr ($polectrl+".rx") $poleRotate[0];
        setAttr ($polectrl+".ry") $poleRotate[1];
        setAttr ($polectrl+".rz") $poleRotate[2];
        delete $ikRotatesA $ikRotatesB $ikRotatesC $tempIKs $pconC $tempPoleCtrls;
        print "FKTOIK";
	};
	if (`gmatch $sel "*IK*"`)
	{
        print "to fk now";
        string $IKFKswitchAttribute=$char+$side+$IKFKswitchAttr;
        string $IKctrl=$sel;
        string $FKctrl=`substituteAllString $IKctrl "IK" "FK"`;
        string $handJoint=$char+$hand+$side;
        string $armFK=$char+$arm+$side;
        string $elbowFK=$char+$elbow+$side;
        float $elbowRotate[]=`getAttr ($elbowFK+".rotate")`;
       float $armRotate[]=`getAttr ($armFK+".rotate")`;
        float $FKrotates[]=`getAttr ($handJoint+".rotate")`;
        setAttr $IKFKswitchAttribute 0;
        setAttr ($FKctrl+".rx") $FKrotates[0];
        setAttr ($FKctrl+".ry") $FKrotates[1];
        setAttr ($FKctrl+".rz") $FKrotates[2];
        setAttr ($elbowFK+".rz") $elbowRotate[2];
        setAttr ($armFK+".rx") $armRotate[0];
        setAttr ($armFK+".ry") $armRotate[1];
        setAttr ($armFK+".rz") $armRotate[2];
        print "IKTOFK";
	};
};