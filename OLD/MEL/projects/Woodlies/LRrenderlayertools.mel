





global proc windowUI() 
 {
    if (`window -exists CreateLayer`)
		deleteUI CreateLayer;
	window -title "CreateLayer" -resizeToFitChildren true 
	       -widthHeight 700 100
	       -s 1
	       -menuBar true
	       CreateLayer;
	       		menu -label "Help";
			menuItem -label "Help on Render Tools..." -command "";
	       columnLayout 
		             -w 500
			     -h 500;
	         frameLayout   -label "请选择需要创建的层"
	                       -bs "etchedIn"
			       -w 150
			       -h 550
			       -la "center";
		     columnLayout  -rs  10 
		                   -cw  10;


				text -label "------针对线框选择景别------------------------------";
                               
				   gridLayout -numberOfColumns 4 ;
                                   radioCollection   jb;
				   radioButton -label  "远" -sl -en 1 jb1 ;
				   radioButton -label  "中" -en 1     jb2;
				   radioButton -label  "近" -en 1     jb3;
				   radioButton -label  "特" -en 1     jb4;
				    setParent..;


                              text -label "----------------------------------------";

			       	checkBoxGrp -l1 "INline" 
			      		    -onc "radioUI3"
					    -ofc "radioUI3"
				            -v1 0 INlineUI;	
		               radioCollection;
			       radioButton -label  "所有角色一层" -sl -en 0 ALLinl;
			       radioButton -label  "每个角色单独一层" -en 0 Sinl;

			       	checkBoxGrp -l1 "OUTline" 
			      		    -onc "radioUI4"
					    -ofc "radioUI4"
				            -v1 0 OUTlineUI;	
		               radioCollection;
			       radioButton -label  "所有角色一层" -sl -en 0 ALLout;
			       radioButton -label  "每个角色单独一层" -en 0 Sout;




				text -label "----------------------------------------";
		              checkBoxGrp -l1 "CharColor" 
			      		  -onc "radioUI2"
					  -ofc "radioUI2"
				          -v1 0 charcolorUI;	
		               radioCollection;
			       radioButton -label  "所有角色一层" -sl -en 0 ALLchar;
			       radioButton -label  "每个角色单独一层" -en 0 Schar;
			       text -label "----------------------------------------";


			       	checkBoxGrp -l1 "AutoRGBA" 
			      		 //   -onc "radioUI"
					  //  -ofc "radioUI"
				            -v1 0 RGBAUI;	
                               text -label "----------------------------------------";
		                   checkBoxGrp -l1 "BGcolor"
		                   -v1 0 BGcolorUI;

				text -label "----------------------------------------";

					  checkBoxGrp -l1 "PropColor" 
			      		//  -onc "radioUI"
					 // -ofc "radioUI"
				          -v1 0 propcolorUI;

				text -label "----------------------------------------";
		    setParent..;
		    setParent..;
		
	            frameLayout   -label "请选择分层模式"
	                          -bs "etchedIn"
			          -w 150
			          -h 80
			          -la "center" two;
				columnLayout  -rs  10 
		                              -cw  10;

		          radioCollection;
			  radioButton -label "自动模式" -sl  
			       //       -ofc  radioUI 
				 //     -onc  radioUI 
				      Auto;
			  radioButton -label "选择模式" 
			       //       -ofc  radioUI 
				//      -onc  radioUI 
				      Select;
                    setParent..;
		    setParent..;
		     rowColumnLayout -numberOfRows 1;
		    button -label "创建层" -c createALL;
		    button -label "删除所有层" -c LRdelAllLayer;

		
	showWindow CreateLayer;

 }
/*
global proc  radioUI ()
 {
    $typeSel=` radioButton -q -sl  Auto`;
  //  $n = `checkBoxGrp -q -v1 charcolorUI`;
    if ($typeSel==0)
     {radioButton -e -en 0 ALLchar;
      radioButton -e -en 0 Schar;
      radioButton -e -en 0 ALLinl;
      radioButton -e -en 0 Sinl;
      radioButton -e -en 0 ALLout;
      radioButton -e -en 0 Sout;
     }


 }
*/
global proc  radioUI2 ()

 {
  $n = `checkBoxGrp -q -v1 charcolorUI`;
  if ($n ==0)
  {radioButton -e -en 0 ALLchar;
   radioButton -e -en 0 Schar;   
  }
  else 
   {
   radioButton -e -en 1 ALLchar;
   radioButton -e -en 1 Schar; 
   }
     
 }
global proc  radioUI3 ()

 {
  $n = `checkBoxGrp -q -v1 INlineUI`;
  if ($n ==0)
  {radioButton -e -en 0 ALLinl;
   radioButton -e -en 0 Sinl;   
  }
  else 
   {
   radioButton -e -en 1 ALLinl;
   radioButton -e -en 1 Sinl; 
   }
     
 }

global proc  radioUI4 ()

 {
  $n = `checkBoxGrp -q -v1 OUTlineUI`;
  if ($n ==0)
  {radioButton -e -en 0 ALLout;
   radioButton -e -en 0 Sout;   
  }
  else 
   {
   radioButton -e -en 1 ALLout;
   radioButton -e -en 1 Sout; 
   }
     
 }

global proc string selecttype ()

{

 string $ss;
 $ss=` radioCollection -q -sl  jb`;
 string $type;
 	switch ($ss)
	{
		case "jb1" :
			$type= "远景";
			break;
		case "jb2" :
			$type= "中景";
			break;
		case "jb3" :
			$type= "近景";
			break;
		case "jb4" :
			$type= "特写";
			break;
	
	}
  return $type;
}


global proc createALL()
{
  string $selectobj [] = `ls -sl`;
// print ($selectobj[0] +"\n");
 int $bc = `checkBoxGrp -q -v1 BGcolorUI`;
 int $cc = `checkBoxGrp -q -v1 charcolorUI`;
 int $pc = `checkBoxGrp -q -v1 propcolorUI`;
 int $RGB= `checkBoxGrp -q -v1 RGBAUI`;
 int $IL= `checkBoxGrp -q -v1 INlineUI`;
 int $OL= `checkBoxGrp -q -v1 OUTlineUI`;


 int $typeSel=` radioButton -q -sl  Auto`;
 int $typeSel2=` radioButton -q -sl ALLchar`;
 int $typeSel3=` radioButton -q -sl ALLinl`;
 int $typeSel4=` radioButton -q -sl ALLout`;

///////////BGcolor///////////////
  if ($bc ==1)
  {

    if ($typeSel ==1)
    {
     LRAutoselect("set");
      $setname = LRGetnamespace("set");
     woRenderColorLayerNew($setname[0]);
     select -cl;
    }
      else 
      {
       select $selectobj;
       $selectname=woRenderGetCharPre();

       print $selectname;
      woRenderColorLayerNew( $selectname);
      }
  }

//////////////////////////////////



///////////INline///////////////
string $setname [];

if ( $IL==1)
{


  source "woRenderLineLayerNew.mel";
  string $d;
  $D=selecttype ();
 
 if ($typeSel==1&&$typeSel3==0)
 {

       $new1 =  LRGetnamespace("char");
       $setname =  LRGetnamespace("prop");
       appendStringArray($setname, $new1, `size $new1`);
        
        for ($i=0;$i<(`size $setname`) ;$i++ )
        {
         select -cl;
       	 string $name = $setname[$i]+":*";
	 string $name2 = "*:"+$setname[$i]+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	 woRenderLineLayerNEW ("inLine",$D,$setname[$i]);
     //    clear $selectobj;  
        }


 }
  
       else if ($typeSel==1&&$typeSel3==1)
      {
       select -cl;
       LRAutoselect("char");
       $sel = `ls -sl`;
        select -cl;
	LRAutoselect("prop");
        select -add $sel;
  
       woRenderLineLayerNEW ("inLine",$D,"wo_c000000ALL");
       select -cl;
    //       clear $selectobj;  

      }
        else
       {
       select -cl;
       select $selectobj;
       string $selectname5=woRenderGetCharPre();
       woRenderLineLayerNEW ("inLine",$D,$selectname5);
   //      clear $selectobj;  
       }

}


///////////outline///////////////
string $setname2 [];

if ( $OL==1)
{
   source "woRenderLineLayerNew.mel";
  string $d2;
  $D2=selecttype ();
 
 if ($typeSel==1&&$typeSel4==0)
 {

       $new2 =  LRGetnamespace("char");
       $setname2 =  LRGetnamespace("prop");
       appendStringArray($setname2, $new2, `size $new2`);

        
        for ($i=0;$i<(`size $setname2`) ;$i++ )
        {
         select -cl;
       	 string $name = $setname2[$i]+":*";
	 string $name2 = "*:"+$setname2[$i]+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	 woRenderLineLayerNEW ("outLine",$D2,$setname[$i]);
       //  clear $selectobj;  
        }


 }
  
       else if ($typeSel==1&&$typeSel4==1)
      {
       select -cl;
       LRAutoselect("char");
       $sel = `ls -sl`;
        select -cl;
	LRAutoselect("prop");
        select -add $sel;
  
       woRenderLineLayerNEW ("outLine",$D2,"wo_c000000ALL");
       select -cl;
     //      clear $selectobj;  

      }
        else
       {
       select -cl;
       select $selectobj;
       string  $selectname6=woRenderGetCharPre();
       woRenderLineLayerNEW ("outLine",$D2,$selectname6);
     //    clear $selectobj;  
       }

}





///////////Charcolor///////////////
    if ($cc ==1)
  {

     if ( $typeSel==1&&$typeSel2==0)
     {
       $new1 =  LRGetnamespace("char");
       $setname =  LRGetnamespace("prop");
       appendStringArray($setname, $new1, `size $new1`);
        
        for ($i=0;$i<(`size $setname`) ;$i++ )
        {
         select -cl;
       	 string $name = $setname[$i]+":*";
	 string $name2 = "*:"+$setname[$i]+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	 woRenderColorLayerNew($setname[$i]);
     //    clear $selectobj;  
        }

     }
      else if ($typeSel==1&&$typeSel2==1)
      {
       select -cl;
       LRAutoselect("char");
       $sel = `ls -sl`;
        select -cl;
	LRAutoselect("prop");
        select -add $sel;
  
       $layername="wo_c000000ALL";
       woRenderColorLayerNew($layername);
       select -cl;
      //     clear $selectobj;  

      }
        else
       {
       select -cl;
       select $selectobj;
       $selectname2=woRenderGetCharPre();
       woRenderColorLayerNew($selectname2);
     //    clear $selectobj;  
       }
  }
/////////////////Propcolor///////////////////

 if ($pc==1)
 {
    if ($typeSel == 1)
    {
       select -cl;
       LRAutoselect("prop");
       $layername="wo_p000000ALL";
       woRenderColorLayerNew($layername);
       select -cl;
        //   clear $selectobj; 
    }
      else 
      {
       select $selectobj;
       $selectname=woRenderGetCharPre();

       print $selectname;
      woRenderColorLayerNew( $selectname);
      }

 }
///////////////////////RGBA//////////////////////
source "lrAutoRGBA.mel";
//string $propobj [];
//string $charobj [];
 if ($RGB==1)
 {
    if ($typeSel == 1)
    {

       AUTOrgba();

    }
      else 
      {
       select -cl;
       select  $selectobj;
        AUTOrgba2();
      }

 }

 //////////////////////////////////////////////////
 print "创建完成";

  clear $selectobj;
}

