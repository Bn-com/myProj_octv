
/// Copyright (C) 2000-2010 IDMT. All rights reserved.
///
/// Author: 李锐（重庆）
///
/// Creation Date: 2010/12/26
///
/// Description: 自动选择参考的 场景（set）道具（prop）或角色（char）并返回namespace
global proc string[] LRAutoselect(string $type) 

{ string $name[];
  if ($type == "set")
  {
   $name =set() ;
  }
  else if ($type == "char")
  {
    $name =char() ;
  }
  else if ($type == "prop")
  {
    $name =prop();
  }
  return  $name ;
}

global proc string[] set() 
{
  select -cl;
  string $refname[]= `file -q -r -shn`;
  string $refpath[]=`file -q -r`;
  int $n = size($refname);
  string $charlist[];

  for ($i=0;$i<$n;$i++)
  {	string $buf[];
        string $buf2[];
	tokenize $refname[$i] "_" $buf;
        $aa = `substring $buf[1] 1 1`;
        if($aa == "s" )
	{



         string $namespacetemp [];

	 $namespace = `file -q -namespace $refpath[$i]`;
         $namespacetemp [0] = $namespace;
        appendStringArray($charlist, $namespacetemp, 1);
	 $name = $namespace+":*";
	 $name2 = "*:"+$namespace+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	}
	
	
  }
    	 $sel = `ls -sl`;
         $num =`size $sel`;
	  if ($num == 0)
	   {warning "文件中没有参考角色";
	   }
         return $charlist;

	  clear $charlist;
 }

 global proc string[] prop() 
{
  select -cl;
  string $refname[]= `file -q -r -shn`;
  string $refpath[]=`file -q -r`;
  int $n = size($refname);
  string $charlist[];

  for ($i=0;$i<$n;$i++)
  {	string $buf[];
        string $buf2[];
	tokenize $refname[$i] "_" $buf;
        $aa = `substring $buf[1] 1 1`;
        if($aa == "p" )
	{



         string $namespacetemp [];

	 $namespace = `file -q -namespace $refpath[$i]`;
         $namespacetemp [0] = $namespace;
        appendStringArray($charlist, $namespacetemp, 1);
	 $name = $namespace+":*";
	 $name2 = "*:"+$namespace+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	}
	
	
  }
    	 $sel = `ls -sl`;
         $num =`size $sel`;
	  if ($num == 0)
	   {warning "文件中没有参考道具";
	   }
         return $charlist;

	  clear $charlist;
}


global proc string[] char() 
{
  select -cl;
  string $refname[]= `file -q -r -shn`;
  string $refpath[]=`file -q -r`;
  int $n = size($refname);
  string $charlist[];

  for ($i=0;$i<$n;$i++)
  {	string $buf[];
        string $buf2[];
	tokenize $refname[$i] "_" $buf;
        $aa = `substring $buf[1] 1 1`;
        if($aa == "c" )
	{



         string $namespacetemp [];

	 $namespace = `file -q -namespace $refpath[$i]`;
         $namespacetemp [0] = $namespace;
        appendStringArray($charlist, $namespacetemp, 1);
	 $name = $namespace+":*";
	 $name2 = "*:"+$namespace+":*";
	 //print ($name +"\n");
	 select -add `ls -type mesh $name`;
         select -add `ls -type nurbsSurface $name`;
	 select -add `ls -type mesh $name2`;
	 select -add `ls -type nurbsSurface $name2`;
	}
	
	
  }
    	 $sel = `ls -sl`;
         $num =`size $sel`;
	  if ($num == 0)
	   {warning "文件中没有参考角色";
	   }
         return $charlist;

	  clear $charlist;
}


