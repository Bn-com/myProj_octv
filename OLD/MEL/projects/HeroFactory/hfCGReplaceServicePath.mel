//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc hfCGReplaceServicePath(string $service)
{
	//ÌùÍ¼Â·¾¶
	string $files[] =  `ls -type file`;
	for ($f in $files)
	{
		string $old = `getAttr ($f+".fileTextureName")`;
		string $attr = "FileNetPath";
		if (objExists($f+"."+$attr))
		{
			$old = `getAttr ($f+"."+$attr)`;
			setAttr -type "string" ($f+".fileTextureName") $old;
		}
		$old = substituteAllString($old,"\\","/");
		if ($service == "L")
		{
			string $match = match("^//[fF][iI][lL][eE]-[cC][lL][uU][sS][tT][eE][rR]/[gG][dD][cC]/",$old);
			if ($match=="")
			{
				$match=match("^[zZ]:/",$old);
			}

			if ($match != "")
			{
				string $new = substituteAllString($old,$match,"L:/");
				if (!`filetest -r $new`)
				{
					sysFile -copy $new $old;
				}
				setAttr -type "string" ($f+".fileTextureName") $new;
			}
		}
		if ($service == "Z")
		{
			string $match = match("^[lL]:/",$old);
			if ($match=="")
			{
				$match=match("^[zZ]:/",$old);
			}

			if ($match != "")
			{
				string $new = substituteAllString($old,$match,"//file-cluster/gdc/");
				if (!`filetest -r $new`)
				{
					string $buff[] = stringToStringArray($new,"/");
					string $folder = substituteAllString($new,$buff[size($buff)-1],"");
					sysFile -md $folder;
					sysFile -copy $new $old;
				}
				setAttr -type "string" ($f+".fileTextureName") $new;
			}
		}
	}
}