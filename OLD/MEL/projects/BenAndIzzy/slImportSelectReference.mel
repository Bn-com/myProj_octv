global proc slImportSelectReference()
{
	string $allReference[] = `ls -type "reference"`;
	string $parentReference[],$childReference[];
	for ($reference in $allReference)
	{
		//string $connections[] = `listConnections $reference`;
		if (!catchQuiet(`referenceQuery -topReference -referenceNode $reference`))
		{	
			string $parent = `referenceQuery -topReference -referenceNode $reference`;
			if ($reference != $parent)
			{
				$parentReference[size($parentReference)] = $parent;
				$childReference[size($childReference)] = $reference;
			}
		}
	}

	global string $gReferenceEditorPanel;
	
	string $selRefNode[] = `sceneEditor -q -selectReference -onlyParents $gReferenceEditorPanel`;
	string $selFileReal[] = `sceneEditor -q -selectItem -onlyParents $gReferenceEditorPanel`;
							 
	int $numNodes = size($selRefNode);
	int $numFiles = size($selFileReal);
	
	if ( $numNodes >= $numFiles ) 
	{
		int $i = 0;
		for ( $i = 0; $i < $numNodes; $i++ ) 
		{
			if ( size($selRefNode[$i]) > 0 ) 
			{
				if (stringArrayCount($selRefNode[$i],$parentReference))
				{
					//hjChangeParentToConstraint(0);
					for ($j=0;$j<size($parentReference) ;$j++ )
					{
						if ($selRefNode[$i] == $parentReference[$j])
						{
							file -importReference -referenceNode $parentReference[$j];
							file -importReference -referenceNode $childReference[$j];
						}
					}
				}
				else
					file -importReference -referenceNode $selRefNode[$i];
			}
		}
	} 
}