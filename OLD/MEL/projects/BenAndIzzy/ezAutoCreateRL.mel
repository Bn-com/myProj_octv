/// Copyright (C) 2000-2007 IDMT. All rights reserved.
///
/// Author: 万寿龙
///
/// Creation Date: 2007/02/26
///
/// Description: ben&izzy项目渲染环节自动分层工具（包含子程序ezBackgroundRenderLayer.mel，ezCharacterRenderLayer.mel等）
///

global proc ezAutoCreateRL()
{
	
	source "ezCharacterRenderLayer.mel";
	source "ezBackgroundRenderLayer.mel";
	source "ezCharEyesLights.mel";
	ezCreateMaterialNode();	
	miCreateDefaultNodes();
	miCreateOtherOptionsNodesForURG();


	string $vis[] = ezRGLock();
	if(`window -exists ez_createRL_win`)
		deleteUI ez_createRL_win;
	window -title "Auto Create RenderLayers" -mb true  -s true -resizeToFitChildren true ez_createRL_win;
		
		menu -label "Help";
			menuItem -label "Help on AutoCreateRL..." -command "zjHelpCallback ezAutoCreateRL";
		
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;
				string $charFrLayout = `frameLayout -label "Character render layer" -labelAlign "top" -cll false  -borderStyle "etchedIn"`;
					string $charFoLayout = `formLayout`;
						string $createRL = `button -l "创建角色相关渲染层"  -h 30 -command "ez_createCharRL"`;
						string $charButton = `button -l "选择角色加入渲染层" -h 30 -command "ez_addCharRL"`;
						string $propButton = `button -l "选择相关道具加入渲染层" -h 30 -command "ez_addPropRL"`;
						string $matteButton = `button -l "选择matte物体加入渲染层"  -h 30 -command "ez_addMatteRL"`;
						string $eyesButton = `button -l "选择眼球创建高光渲染层"  -h 30 -command "ezCharEyesLights"`;
						setParent ..;
					formLayout -edit
						-attachForm	$createRL		"top"		10
						-attachForm	$createRL		"left"		20
						-attachForm	$createRL		"right"		20
						
						-attachControl	$charButton		"top"		10	$createRL
						-attachForm	$charButton		"left"		20
						-attachForm	$charButton		"right"		20
										
						-attachControl	$propButton		"top"		10	$charButton
						-attachForm	$propButton		"left"		20
						-attachForm	$propButton		"right"		20
						
						-attachControl	$matteButton		"top"		10	$propButton
						-attachForm	$matteButton		"left"		20
						-attachForm	$matteButton		"right"		20
						
						-attachControl	$eyesButton		"top"		10	$matteButton
						-attachForm	$eyesButton		"left"		20
						-attachForm	$eyesButton		"right"		20
						-attachForm	$eyesButton		"bottom"	10
					$charFoLayout;
				setParent ..;
				
				string $bgFrLayout = `frameLayout -label "Background&Shadow render layer" -labelAlign "top" -cll false  -borderStyle "etchedIn"`;
					string $bgFoLayout = `formLayout`;
						string $bgButton = `button -l "选择场景及相关道具创建渲染层(BG)"  -h 30 -command "ez_createBGRL"`;
						string $shadowButton = `button -l "选择地面及灯光创建渲染层(Shadow)"  -h 30 -command "ez_createShadowRL"`;
						string $depthButton = `button -l "选择物体创建Depth渲染层"  -h 30 -command "ez_createDepthRL"`;
						string $blurButton = `button -l "选择物体创建Blur渲染层"  -h 30 -command "ez_createBlurRL"`;
						setParent ..;
					formLayout -edit
						-attachForm	$bgButton		"top"		10
						-attachForm	$bgButton		"left"		20
						-attachForm	$bgButton		"right"		20

						-attachControl	$shadowButton		"top"		10	$bgButton
						-attachForm	$shadowButton		"left"		20
						-attachForm	$shadowButton		"right"		20
						
						-attachControl	$depthButton		"top"		10	$shadowButton
						-attachForm	$depthButton		"left"		20
						-attachForm	$depthButton		"right"		20

						-attachControl	$blurButton		"top"		10	$depthButton
						-attachForm	$blurButton		"left"		20
						-attachForm	$blurButton		"right"		20
						-attachForm	$blurButton		"bottom"	10

					$bgFoLayout;
				setParent ..;	
				
				string $materialFrLayout = `frameLayout -label "" -labelAlign "top" -cll false  -borderStyle "etchedIn"`;
					string $materialFoLayout = `formLayout`;
						string $materialButton = `button -l "Material 工具"  -h 30 -command "ezAssignMaterial"`;
						
						string $mayaLayer = `button -l "自定义mayasoftware渲染层"  -h 30 -command "ezMayaSoftwareRG"`;
						string $mayaLayerLock = `button -l $vis[0]  -h 30 _mayaBut`;
						button -e -command ("ezUpdateLock(\"maya\")") $mayaLayerLock; 




						
						string $mentalLayer = `button -l "自定义mentalray渲染层"  -h 30 -command "ezMentalRayRG(\"\")"`;
						string $mentalLayerLcok = `button  -l $vis[1]  -h 30 _mentalBut`;
						button -e -command ("ezUpdateLock(\"mental\")") $mentalLayerLcok; 
						setParent ..;
					formLayout -edit
						-attachForm	$materialButton		"top"		10
						-attachForm	$materialButton		"left"		20
						-attachForm	$materialButton		"right"		20

						-attachControl	$mayaLayer		"top"		10	$materialButton
						-attachForm	$mayaLayer		"left"		20
						-attachPosition	$mayaLayer		"right"		0	70
						
						-attachControl	$mentalLayer		"top"		10	$mayaLayer
						-attachForm	$mentalLayer		"left"		20
						-attachPosition	$mentalLayer		"right"		0	70
						-attachForm	$mentalLayer		"bottom"	10
						
						-attachControl	$mayaLayerLock		"top"		10	$materialButton
						-attachControl	$mayaLayerLock		"left"		10	$mayaLayer
						-attachPosition	$mayaLayerLock		"right"		0	93


						-attachControl	$mentalLayerLcok	"top"		10	$mayaLayer
						-attachControl	$mentalLayerLcok	"left"		10	$mentalLayer
						-attachPosition	$mentalLayerLcok	"right"		0	93
						-attachForm	$mentalLayerLcok	"bottom"	10
					$materialFoLayout;
				setParent ..;		
		
	showWindow ez_createRL_win;


//-------------------------------自动显示yasmin的睫毛------------------------------------------------
	string $yasmin[] = `ls "yasmine_MASTER" "*:yasmine_MASTER" "*:*:yasmine_MASTER"`;
	if (`objExists $yasmin[0]`)
	{
		setAttr ($yasmin[0] + ".eyes_lash_vis") 1;
	}
//-------------------------------------------------------------------------------------------------

	string $balls[] = `ls -type mesh -type nurbsSurface "*:*balldetachedSurface*"  "*:*ballPupil*" "*:*dummyball*" "*:*eyePupil*" "*:*eyeball_vis*" "*:*eyeball*detachedSurface*"`;
	for ($ball in $balls)
	{
		setAttr ($ball+".visibility") 0;
	}	
	
	select -cl;
}


global proc ezMayaSoftwareRG()
{
	editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
	setAttr defaultRenderGlobals.currentRenderer -type "string" "mayaSoftware";

	editRenderLayerAdjustment "defaultRenderQuality.edgeAntiAliasing";
	setAttr "defaultRenderQuality.edgeAntiAliasing" 0;
	editRenderLayerAdjustment "defaultRenderQuality.shadingSamples";
	setAttr "defaultRenderQuality.shadingSamples" 2;
	editRenderLayerAdjustment "defaultRenderQuality.maxShadingSamples";
	setAttr "defaultRenderQuality.maxShadingSamples" 8;

	editRenderLayerAdjustment "defaultRenderQuality.useMultiPixelFilter";
	setAttr "defaultRenderQuality.useMultiPixelFilter" 1;
	editRenderLayerAdjustment "defaultRenderQuality.pixelFilterType";
	setAttr "defaultRenderQuality.pixelFilterType" 2;
	editRenderLayerAdjustment "defaultRenderQuality.pixelFilterWidthX";
	setAttr "defaultRenderQuality.pixelFilterWidthX" 2.2;
	editRenderLayerAdjustment "defaultRenderQuality.pixelFilterWidthY";
	setAttr "defaultRenderQuality.pixelFilterWidthY" 2.2;

	editRenderLayerAdjustment "defaultRenderQuality.redThreshold";
	setAttr "defaultRenderQuality.redThreshold" 0.4;
	editRenderLayerAdjustment "defaultRenderQuality.greenThreshold";
	setAttr "defaultRenderQuality.greenThreshold" 0.3;
	editRenderLayerAdjustment "defaultRenderQuality.blueThreshold";
	setAttr "defaultRenderQuality.blueThreshold" 0.6;
}


global proc ezMentalRayRG(string $ao)
{
	if (`pluginInfo -query -loaded "Mayatomr.mll"`)
	{
		editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
		setAttr defaultRenderGlobals.currentRenderer -type "string" "mentalRay" ;

		editRenderLayerAdjustment "miDefaultOptions.minSamples";
		setAttr "miDefaultOptions.minSamples" 0;			
		editRenderLayerAdjustment "miDefaultOptions.maxSamples";
		setAttr "miDefaultOptions.maxSamples" 1;
		if ($ao == "characterHair" || $ao == "character" || $ao == "eyesSpec" || $ao == "characterAO" || $ao == "backgroundAO" )
			setAttr "miDefaultOptions.maxSamples" 2;

		
		editRenderLayerAdjustment "miDefaultOptions.filter";
		editRenderLayerAdjustment "miDefaultOptions.filterWidth";
		editRenderLayerAdjustment "miDefaultOptions.filterHeight";
		setAttr "miDefaultOptions.filter" 1;

		if ($ao == "characterHair" || $ao == "character" || $ao == "eyesSpec" || $ao == "characterAO" || $ao == "backgroundAO")
			setAttr "miDefaultOptions.filter" 2;

		editRenderLayerAdjustment "miDefaultOptions.contrastR";
		setAttr "miDefaultOptions.contrastR" 0.1;
		editRenderLayerAdjustment "miDefaultOptions.contrastG";
		setAttr "miDefaultOptions.contrastG" 0.1;
		editRenderLayerAdjustment "miDefaultOptions.contrastB";
		setAttr "miDefaultOptions.contrastB" 0.1;
		editRenderLayerAdjustment "miDefaultOptions.contrastA";
		setAttr "miDefaultOptions.contrastA" 0.1;
		if ($ao == "characterHair")
		{
			setAttr "miDefaultOptions.contrastR" 0.02;
			setAttr "miDefaultOptions.contrastG" 0.02;
			setAttr "miDefaultOptions.contrastB" 0.02;
			setAttr "miDefaultOptions.contrastA" 0.02;
		}

		editRenderLayerAdjustment "miDefaultOptions.sampleLock";
		setAttr "miDefaultOptions.sampleLock" 1;

		editRenderLayerAdjustment "miDefaultOptions.rayTracing";
		setAttr "miDefaultOptions.rayTracing" 1;
		if ($ao == "characterHair")
			setAttr "miDefaultOptions.rayTracing" 0;
		
		editRenderLayerAdjustment "miDefaultOptions.maxReflectionRays";
		setAttr "miDefaultOptions.maxReflectionRays" 1;
		if ($ao == "character" || $ao == "background" || $ao == "characterAO" || $ao == "backgroundAO")
			setAttr "miDefaultOptions.maxReflectionRays" 0;
		
		editRenderLayerAdjustment "miDefaultOptions.maxRefractionRays";
		setAttr "miDefaultOptions.maxRefractionRays" 1;
		if ($ao == "background" || $ao == "characterAO" || $ao == "backgroundAO" )
			setAttr "miDefaultOptions.maxRefractionRays" 0;
		
		editRenderLayerAdjustment "miDefaultOptions.maxRayDepth";
		setAttr "miDefaultOptions.maxRayDepth" 10;
		if ($ao == "characterAO" || $ao == "backgroundAO")	
			setAttr "miDefaultOptions.maxRayDepth" 2;
		if ($ao == "character" || $ao == "eyesSpec")
			setAttr "miDefaultOptions.maxRayDepth" 1;
		if ($ao == "background")
			setAttr "miDefaultOptions.maxRayDepth" 0;

		editRenderLayerAdjustment "miDefaultOptions.maxShadowRayDepth";
		setAttr "miDefaultOptions.maxShadowRayDepth" 2;
		if ($ao == "character" ||  $ao == "background" || $ao == "eyesSpec")
			setAttr "miDefaultOptions.maxShadowRayDepth" 1;

		editRenderLayerAdjustment "mentalrayGlobals.passAlphaThrough";
		setAttr "mentalrayGlobals.passAlphaThrough" 1;

		editRenderLayerAdjustment "mentalrayGlobals.jobLimitPhysicalMemory";
		setAttr "mentalrayGlobals.jobLimitPhysicalMemory" 1500;
	}
}

global proc ezUpdateLock(string $button)
{
	string $vis[];

	if ($button == "maya")
	{
		$vis = ezRGLock();
		ezMayaSoftwareRGLock($vis[0]);
		$vis = ezRGLock();
		button -e -l $vis[0]  _mayaBut;
	}
	else 
	{
		$vis = ezRGLock();
		ezMentalRayRGLock($vis[1]);
		$vis = ezRGLock();
		button -e -l $vis[1]  _mentalBut;
	}
}

global proc string[] ezRGLock()
{
	string $vis[];
	string $mayaRGAttr[]={"edgeAntiAliasing","shadingSamples","maxShadingSamples","useMultiPixelFilter","pixelFilterType","pixelFilterWidthX","pixelFilterWidthY",
			  "redThreshold","greenThreshold","blueThreshold"};
	string $mentalRGAttr[]={"minSamples","maxSamples","filter","filterWidth","filterHeight","contrastR","contrastG","contrastB","contrastA","sampleLock","rayTracing",
				"maxReflectionRays","maxRefractionRays","maxRayDepth","maxShadowRayDepth"};
	
	for ($tem in $mayaRGAttr)
	{
		$vis[0] = "锁Lock";
		int $temp = `getAttr -l ("defaultRenderQuality."+$tem)`;
		if ($temp == 1)
		{
			$vis[0] = "解锁Unlock";
			break;
		}
	}
	for ($tem in $mentalRGAttr)
	{
		$vis[1] = "锁Lock";
		int $temp = `getAttr -l ("miDefaultOptions."+$tem)`;
		if ($temp == 1)
		{
			$vis[1] = "解锁Unlock";
			break;
		}
	}
	return $vis;
}

global proc ezMayaSoftwareRGLock(string $adj)
{
	if ($adj == "锁Lock")
		$lock = true ;
	else 
		$lock = false;

	setAttr -l $lock "defaultRenderQuality.edgeAntiAliasing";
	setAttr -l $lock "defaultRenderQuality.shadingSamples" ;
	setAttr -l $lock "defaultRenderQuality.maxShadingSamples" ;
	setAttr -l $lock "defaultRenderQuality.useMultiPixelFilter";
	setAttr -l $lock "defaultRenderQuality.pixelFilterType";
	setAttr -l $lock "defaultRenderQuality.pixelFilterWidthX" ;
	setAttr -l $lock "defaultRenderQuality.pixelFilterWidthY" ;
	setAttr -l $lock "defaultRenderQuality.redThreshold" ;
	setAttr -l $lock "defaultRenderQuality.greenThreshold" ;
	setAttr -l $lock "defaultRenderQuality.blueThreshold" ;
}

global proc ezMentalRayRGLock(string $adj)
{
	if ($adj == "锁Lock")
		$lock = true ;
	else 
		$lock = false;

	setAttr -l $lock "miDefaultOptions.minSamples" ;			
	setAttr -l $lock "miDefaultOptions.maxSamples" ;
	setAttr -l $lock "miDefaultOptions.filter" ;
	setAttr -l $lock "miDefaultOptions.filterWidth" ;
	setAttr -l $lock "miDefaultOptions.filterHeight" ;
	setAttr -l $lock "miDefaultOptions.contrastR" ;
	setAttr -l $lock "miDefaultOptions.contrastG" ;
	setAttr -l $lock "miDefaultOptions.contrastB" ;
	setAttr -l $lock "miDefaultOptions.contrastA" ;
	setAttr -l $lock "miDefaultOptions.sampleLock" ;
	setAttr -l $lock "miDefaultOptions.rayTracing" ;
	setAttr -l $lock "miDefaultOptions.maxReflectionRays" ;
	setAttr -l $lock "miDefaultOptions.maxRefractionRays" ;
	setAttr -l $lock "miDefaultOptions.maxRayDepth" ;
	setAttr -l $lock "miDefaultOptions.maxShadowRayDepth" ;
	setAttr -l $lock "mentalrayGlobals.passAlphaThrough" ;
}