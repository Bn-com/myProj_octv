global proc ezDeleteReferenceFailedEdits()
{
	global string $gReferenceEditorPanel;
	
	string $buffer[];

	string $referenceFile[] = `sceneEditor -q -si $gReferenceEditorPanel`;

	if (!`size $referenceFile`)
		error "请选择一个Reference节点！";

	print ("Delete failed edits for "+$referenceFile[0]+":\n");

	string $referenceNode = `referenceQuery -referenceNode $referenceFile[0]`;

	$buffer = ezReferenceEditsList( $referenceNode, "connectAttr");
	print "\n";
	print $buffer;

	/*
	$buffer = ezReferenceEditsList( $referenceNode, "setAttr");
	print "\n";
	print $buffer;

	$buffer = ezReferenceEditsList( $referenceNode, "disconnectAttr");
	print "\n";
	print $buffer;

	$buffer = ezReferenceEditsList( $referenceNode, "addAttr");
	print "\n";
	print $buffer;

	$buffer = ezReferenceEditsList( $referenceNode, "deleteAttr");
	print "\n";
	print $buffer;

	$buffer = ezReferenceEditsList( $referenceNode, "parent");
	print "\n";
	print $buffer;
	*/
}

global proc string[] ezReferenceEditsList(string $reference, string $edit)
{
	string $refEditsFailed[] = `referenceQuery -fld 1 -scs 0 -ec $edit -es $reference`;

	string $deleteList[];

	if (`size ($refEditsFailed)`)
	{

		$deleteList[size($deleteList)] = "----------------------------------------";
		$deleteList[size($deleteList)] = ("-------- failed_" + $edit + " --------");
		for ($refEdit in $refEditsFailed)
		{
			$deleteList[size($deleteList)] = $refEdit + ";";
			
			string $buff[];
			tokenize $refEdit "\"" $buff;
			referenceEdit -failedEdits true -successfulEdits true -editCommand $edit -removeEdits $buff[1];
		}
	}

	return $deleteList;
}