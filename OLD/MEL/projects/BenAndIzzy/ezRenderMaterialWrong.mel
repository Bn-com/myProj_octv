global proc ezRenderMaterialWrong()
{
	string $objs[] = `ls -shapes`;
	for ($obj in $objs)
	{
		string $wrongLayers[] = ezGetWrongRenderLayer($obj);
		if (size($wrongLayers)!=0)			
		{
			string $conAttrs[] = `listConnections -plugs true -type renderLayer ($obj+".instObjGroups[0]")`;
			for ($attr in $conAttrs)
			{
				for ($layer in $wrongLayers)
				{
					if (startsWith($attr,$layer))
					{
						disconnectAttr  ($obj+".instObjGroups[0]") $attr;
						print ($obj+".instObjGroups[0] ---------"+$attr+"\n");
						$wrongLayers = ezGetWrongRenderLayer($obj);
					}
				}
			}
		}

		/*string $shading[] = `listConnections -plugs true -c true -type shadingEngine $obj`;
		string $shade[] = `listConnections -type shadingEngine $obj`;
		if (size($shading) == 2)
		{
			disconnectAttr $shading[0] $shading[1];
			connectAttr -f $shading[0] ($shade[0]+".dagSetMembers[0]");
		}*/
	}
}

global proc string[] ezGetWrongRenderLayer(string $obj)
{
	string $renderLayers[] = `listConnections -type renderLayer ($obj+".instObjGroups[0]")`;
	string $removeLayers[] = stringArrayRemoveDuplicates($renderLayers);
	string $wrongLayers[];

	for ($layer in $removeLayers)
	{	
		if (stringArrayCount($layer,$renderLayers) == 2)
			$wrongLayers[size($wrongLayers)] = $layer;
	}
	return $wrongLayers;
}