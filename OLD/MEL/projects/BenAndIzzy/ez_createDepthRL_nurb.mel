/*
global proc ez_createDepthRL_nurb()
{
	source "ezAutoCreateRL.mel";
	
	string $depthRL = "depth";
	int $num=0;

	string $obj[] = `ls -sl`;
	
	if (!`objExists $obj[0]`)
		error "请选择需要创建Depth渲染层的物体！";
	
	createRenderLayer -name $depthRL -mc -number 1 -noRecurse;
	ezMayaSoftwareRG;

	select -hi;
	string $allObj[] = `ls -type mesh -type nurbsSurface -sl`;
	for ($tem in $allObj )
	{
		select -r $tem;
		if (`gmatch $tem "*treenromplane*"` )
		{
			string $c[] = `listConnections -type shadingEngine $tem`;
			if (`gmatch $c[0] "*tree*"` && !startsWith($c[0], "lambert_depth_") && !`gmatch $c[0] "*hadow*"`)
			{
				string $d[] = `listConnections ($c[0]+".surfaceShader")`;
				string $e[] = `listConnections ($d[0]+".transparency")`;
				string $f[] = `listConnections ($e[0]+".color1")`;

				if (!`objExists ("lambert_depth_"+$f[0])`)
				{
					shadingNode -asShader lambert -name ("lambert_depth_"+$f[0]);
					sets -renderable true -noSurfaceShader true -empty -name ("lambert_depth_"+$f[0]+"SG");
					connectAttr -f ("lambert_depth_"+$f[0]+".outColor") ("lambert_depth_"+$f[0]+"SG.surfaceShader");
					
					connectAttr -force ezDepth_surfaceShader.outColor ("lambert_depth_"+$f[0]+".color");
					connectAttr -force ($f[0]+".outTransparency") ("lambert_depth_"+$f[0]+".transparency");
				}
				string $tree[] = `listConnections -type nurbsSurface $c[0]`;
				select -cl;select $tree;
				hyperShade -assign ("lambert_depth_"+$f[0]);
			}
		}
		else 
		{
			hyperShade -assign ezDepth_surfaceShader;
			editRenderLayerAdjustment "ezDepth_surfaceShader.depth";
			setAttr "ezDepth_surfaceShader.depth" 2000;
			editRenderLayerAdjustment "ezDepth_surfaceShader.near";
		}
	}
	setAttr "defaultRenderLayer.renderable" 0;
	select -cl;
}
*/

global proc ez_createDepthRL_nurb()
{

	source "ezAutoCreateRL.mel";

	string $depthRL = "depth";
	string $obj[] = `ls -sl`;

	source "slLightDepth.mel";slDepthLight;slDepthMataril;

	string $light[]= `ls -long  "zlighting"`;
	
	string $existsLayer[] = `ls -type renderLayer $depthRL`;
	if (!`objExists $existsLayer[0]`)
	{
		createRenderLayer -name $depthRL -e -mc -number 1 -noRecurse;
		ezMayaSoftwareRG;
	}
	layerEditorLayerButtonSelect 0 $depthRL;
	updateHighlightSelectIcon;
	editRenderLayerMembers $depthRL $obj $light[0];
}