/// Copyright (C) 2000-2007 IDMT. All rights reserved.
///
/// Author: 万寿龙
///
/// Creation Date: 2007/02/26
///
/// Description: ben&izzy项目渲染环节自动分层工具之子程序
///		主要功能：给选中物体赋予matte,color,ao等材质
///


global proc ezAssignMaterial()
{
	if(`window -exists ez_assignMaterial`)
		deleteUI ez_assignMaterial;
	window -title "assign material for ezRenderLayer" -mb true  -s false -resizeToFitChildren true ez_assignMaterial;
		
			string $columnLayout = `columnLayout -adjustableColumn true -rs 10`;
				string $materialFoLayout = `formLayout`;
					string $matteButton = `button -l "Matte"  -h 40 -command ("ezAssigntoSelect(\"matte\")")`;
					string $shadowButton = `button -l "Shadow"  -h 40 -command ("ezAssigntoSelect(\"shadow\")")`;
					string $colorRButton = `button -l "ColorR"  -bgc 1 0 0 -h 40 -command "ezAssigntoSelect(\"colorR\")"`;
					string $colorGButton = `button -l "ColorG"  -bgc 0 1 0 -h 40 -command "ezAssigntoSelect(\"colorG\")"`;
					string $colorBButton = `button -l "ColorB"  -bgc 0 0 1 -h 40 -command "ezAssigntoSelect(\"colorB\")"`;
					string $colorAButton = `button -l "ColorA"  -bgc 1 1 1 -h 40 -command "ezAssigntoSelect(\"colorA\")"`;
					string $aoButton = `button -l "AO"  -h 40 -command "ezAssigntoSelect(\"ao\")"`;
					string $depthButton = `button -l "Depth" -bgc 0.5 0.5 0.5 -h 40 -command "ezAssigntoSelect(\"depth\")"`;
					string $ben = `button -l "ben"  -h 40 -command "ezSelMouth(\"ben\")"`;
					string $izzy = `button -l "izzy"  -h 40 -command "ezSelMouth(\"izzy\")"`;
					string $yasmine = `button -l "yasmine"  -h 40 -command "ezSelMouth(\"yasmine\")"`;
					setParent ..;
				formLayout -edit
					-attachForm	$matteButton		"top"		10
					-attachForm	$matteButton		"left"		10
					-attachForm	$matteButton		"right"		10

					-attachControl	$shadowButton		"top"		10	$matteButton
					-attachForm	$shadowButton		"left"		10
					-attachForm	$shadowButton		"right"		10
					
					-attachControl	$colorRButton		"top"		10	$shadowButton
					-attachForm	$colorRButton		"left"		10
					-attachPosition	$colorRButton		"right"		0	25
									
					-attachControl	$colorGButton		"top"		10	$shadowButton
					-attachControl	$colorGButton		"left"		10	$colorRButton
					-attachPosition	$colorGButton		"right"		0	50

					-attachControl	$colorBButton		"top"		10	$shadowButton
					-attachControl	$colorBButton		"left"		10	$colorGButton
					-attachPosition	$colorBButton		"right"		0	75

					-attachControl	$colorAButton		"top"		10	$shadowButton
					-attachControl	$colorAButton		"left"		10	$colorBButton
					-attachPosition	$colorAButton		"right"		0	96

					-attachControl	$ben			"top"		10	$colorRButton
					-attachForm	$ben			"left"		10	
					-attachPosition	$ben			"right"		0	33

					-attachControl	$izzy			"top"		10	$colorRButton
					-attachControl	$izzy			"left"		10	$ben
					-attachPosition	$izzy			"right"		0	66
					
					-attachControl	$yasmine		"top"		10	$colorRButton
					-attachControl	$yasmine		"left"		10	$izzy
					-attachPosition	$yasmine		"right"		0	99

					-attachControl	$aoButton		"top"		10	$ben
					-attachForm	$aoButton		"left"		10
					-attachForm	$aoButton		"right"		10
					
					-attachControl	$depthButton		"top"		10	$aoButton
					-attachForm	$depthButton		"left"		10
					-attachForm	$depthButton		"right"		10
					-attachForm	$depthButton		"bottom"	10


				$materialFoLayout;
			setParent ..;
				
	showWindow ez_assignMaterial;

	ezCreateMaterialNode();	
}


global proc ezAssigntoSelect(string $adj)
{
	string $obj[] = `ls -sl`;
	if (`objExists $obj[0]`)
	{
		switch ($adj)
		{
			case "matte" :
				hyperShade -assign ezmatte_lambert;	
				break;
			case "shadow" :
				hyperShade -assign ezShadow_useBackground;
				break;
			case "colorR" :
				hyperShade -assign ezColorR_surfaceShader;
				break;
			case "colorG" :
				hyperShade -assign ezColorG_surfaceShader;
				break;
			case "colorB" :
				hyperShade -assign ezColorB_surfaceShader;
				break;
			case "colorA" :
				hyperShade -assign ezColorA_surfaceShader;
				break;
			case "ao" :
				hyperShade -assign ezAO_surfaceShader;
				select -r ezAO_mib_amb_occlusion;
				break;
			case "depth" :
				hyperShade -assign ezDepth_surfaceShader;
				select -r ezDepth_surfaceShader;
				break;
		}
	}
	
	switch ($adj)
	{
		case "ao" :
			select -r ezAO_mib_amb_occlusion;
			break;
		case "depth" :
			select -r ezDepth_surfaceShader;
			break;
	}
}

global proc ezSelMouth(string $char)
{
	switch ($char)
	{
		case "ben" :
			string $mouth[]={"[910:999]","[1029:1033]","[1070:1079]","[1102:1106]","[3892:4161]","[4247:4261]","[4370:4399]","[4464:4478]"};
			string $head[] = `ls "*:ben_*_head"`;
			select -cl;
			if (`objExists $head[0]`)
			{
				for ($tem in $mouth)
				{
					select -add ($head[0] + ".f" + $tem);
				}
			}
			break;
		case "izzy" :
			string $mouth[]={"[113:157]","[518:522]","[527:531]","[660:704]","[1065:1069]","[1074:1078]","[1430:1564]","[2640:2654]","[2667:2681]",
					"[3063:3197]","[4273:4287]","[4300:4314]"};
			string $head[] = `ls "*:izzy_*_head"`;
			select -cl;
			if (`objExists $head[0]`)
			{
				for ($tem in $mouth)
				{
					select -add ($head[0] + ".f" + $tem);
				}
			}
			break;	
		case "yasmine" :
			string $mouth[]={"[509:588]","[601:608]","[1137:1216]","[1229:1236]","[5929:6168]","[6205:6228]","[7810:8049]","[8086:8109]"};
			string $head[] = `ls "*:yasmine*_body"`;
			select -cl;
			if (`objExists $head[0]`)
			{
				for ($tem in $mouth)
				{
					select -add ($head[0] + ".f" + $tem);
				}
			}
			break;	
	}
}