global proc ezAnimCopyCurve_test()
{
	string $master[] = `ls -sl`;

	if (size($master)!=2)
		error "«Î—°‘Òmaster£°";

	string $buff[];
	string $preCopy,$prePaste;
	
	int $num = `tokenize $master[0] ":" $buff`;
	if ($num == 1)
		$preCopy = "";
	else if ($num == 2)
		$preCopy = ($buff[0]+":");

	int $num = `tokenize $master[1] ":" $buff`;
	if ($num == 1)
		$prePaste = "";
	else if ($num == 2)
		$prePaste = ($buff[0]+":");

	
	string $source[] = `listRelatives -ad -ni -f -type nurbsCurve -type joint  $master[0]`;
	//string $copySet = `substring $master[0] 1 (size($master[0])-6)` + "set";
	//string $copyFset = `substring $master[0] 1 (size($master[0])-6)` + "facial_set";
	//string $source[] = `sets -query $copySet $copyFset`;

	for ($shape in $source)
	{
		string $obj[];
		if (nodeType($shape) != "joint")
			$obj = `listRelatives -f -p $shape`;
		else 
			$obj[0] = $shape;
		string $attrs[] = `listAttr -keyable  $obj[0]`;
		if (size($attrs) != 0)
		{
			string $buff[];
			tokenize $obj[0] "|" $buff;
			string $dest = `substitute $preCopy $buff[size($buff)-1] $prePaste`;
			if (`objExists $dest`)
			{
				//print ($obj[0]+"\n");
				//print ($dest+"\n");
				//string $attrs[] = `listAttr -keyable  $obj[0]`;
				for ($attr in $attrs)
				{
					string $cons[];
					if (`objExists ($dest+"."+$attr)`)
					{
						$cons = `listConnections ($dest+"."+$attr)`;
						if (!`objExists $cons[0]`)
						{
							print ($obj[0]+"\n");
							//float $value = `getAttr ($obj[0]+"."+$attr)`;
							setAttr ($dest+"."+$attr) `getAttr ($obj[0]+"."+$attr)`;
						}
					}
					
				}
				if (`copyKey $obj[0]`)
				{
					pasteKey -o "replaceCompletely" $dest;
				}
			}
		}
	}

}