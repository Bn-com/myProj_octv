
global proc hyperDelete(string $panel,string $command)
{	
     if ($command == "deleteShadingGroupsAndMaterials")
	{
		string $cmd;
		string $items[];
		string $item;

		$cmd = "delete ";
		$cmdl="lockNode -lock off ";
		$items = `lsThroughFilter DefaultShadingGroupsAndMaterialsFilter`;

		if (size($items) > 0)
		{
			for ($item in $items)
			{
				$cmd = ($cmd + " " + $item);
				$cmdl=($cmdl + " " + $item);
			}
			eval $cmdl;
			eval $cmd;
		}
	}
	else if ($command == "deleteTextures")
	{
		string $cmd;
		string $items[];
		string $item;

		$cmd = "delete ";
		$cmdl="lockNode -lock off ";		
		$items = `lsThroughFilter DefaultTexturesFilter`;

		if (size($items) > 0)
		{
			for ($item in $items)
			{
				$cmd = ($cmd + " " + $item);
				$cmdl=($cmdl + " " + $item);				
			}
            eval $cmdl;
			eval $cmd;
		}
	}
	else if ($command == "deleteLights")
	{
		string $cmd;
		string $items[];
		string $item;

		$cmd = "delete ";
		$cmdl="lockNode -lock off ";		
		$items = `lsThroughFilter DefaultAllLightsFilter`;

		if (size($items) > 0)
		{
			for ($item in $items)
			{
				$cmd = ($cmd + " " + $item);
				$cmdl=($cmdl + " " + $item);					
			}
            eval $cmdl;			
			eval $cmd;
		}
	}
	else if ($command == "deleteUtilities")
	{
		string $cmd;
		string $items[];
		string $item;

		$cmd = "delete ";
		$cmdl="lockNode -lock off ";			
		$items = `lsThroughFilter DefaultRenderUtilitiesFilter`;

		if (size($items) > 0)
		{
			for ($item in $items)
			{
				$cmd = ($cmd + " " + $item);
				$cmdl=($cmdl + " " + $item);				
			}
            eval $cmdl;					
			eval $cmd;
		}
	}
}

global proc HbDeleteMaterials()
{
    hyperDelete("hyperShadePanel1", "deleteShadingGroupsAndMaterials");
    hyperDelete("hyperShadePanel1", "deleteTextures");

    
    
    SelectAll;
    sets -e  -forceElement initialShadingGroup;
}


