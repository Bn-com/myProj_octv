global proc SetReferenceGlobal()
{
		if (`window -q -ex refer`) deleteUI refer;
	window
		-title "SetDisplayType" 
		 -sizeable 0
		-rtf 1
		refer;
	columnLayout -columnOffset left 10;
	button -w 270 -h 30 -l "set display type to reference" -align center -c setReference;
	button -w 270 -h 30 -l "set display type to normal" -align center -c cancelReference;
	button -w 270 -h 30 -l "delete all display layers" -align center -c delLayer;
	button -w 270 -h 30 -l "assign lambert shader" -align center -c assignLambert;
	button -w 270 -h 30 -l "ToggleEditUVMode" -align center -c editUV;
	setParent..;
	showWindow refer;
}
global proc setReference()
{
string $disLayer[] = `ls -type displayLayer`;
	for($one in $disLayer)
	{
	if(!`gmatch $one "*defaultLayer*"`)
		{
			if(`nodeType $one`=="displayLayer")
			setAttr ($one+".displayType") 2;
		}
	}		

	

	/*for($p=0;$p<size($disLayer);$p++)
	{
		if(`attributeExists "drawInfo" $disLayer[$p]`)
		{
		string $result[] = `listConnections -d 1 ($disLayer[$p]+".drawInfo")`;
		for ($one in $result)
		{
			if(`attributeExists "drawOverride" $one`)
			{
			if(`isConnected ($disLayer[$p]+".drawInfo") ($one+".drawOverride")`)
			disconnectAttr ($disLayer[$p]+".drawInfo") ($one+".drawOverride");
		}
		}
		}
	}*/
	
	string $models[] = `ls -l -type mesh -type nurbsSurface`;
	//select -r $models;
	//pickWalk -d up;
	//string $pTrans[] = `ls -sl`;
	//select -cl;
	for ($i=0;$i<size($models);$i++)
	{
		
		if(`attributeExists  "overrideEnabled" $models[$i]`)
		{
			setAttr ($models[$i]+".overrideEnabled") 1;
		}
	
		//if(`attributeExists  "overrideEnabled" $pTrans[$i]`)
		//{
		//	setAttr ($pTrans[$i]+".overrideEnabled") 1;	
		//}
		if(`attributeExists  "overrideDisplayType" $models[$i]`)
		{
			setAttr ($models[$i]+".overrideDisplayType") 2;
		}
		//if(`attributeExists  "overrideDisplayType" $pTrans[$i]`)
		//{
		//	setAttr ($pTrans[$i]+".overrideDisplayType") 2;
		//}
	}
}

global proc cancelReference()
{
	string $disLayer[] = `ls -type displayLayer`;
	for($one in $disLayer)
	{
	if(!`gmatch $one "*defaultLayer*"`)
		{
			if(`nodeType $one`=="displayLayer")
			setAttr ($one+".displayType") 0;
		}
	}		



	string $models[] = `ls -l -type mesh -type nurbsSurface`;

	for ($i=0;$i<size($models);$i++)
	{
		string $connects[]=`listConnections -s 1 -d 0 -p 1 ($models[$i]+".drawOverride")`;
		if(size($connects)>0)
		{
			disconnectAttr  $connects[0] ($models[$i]+".drawOverride");
			if(`attributeExists  "overrideEnabled" $models[$i]`)
			{
				setAttr ($models[$i]+".overrideEnabled") 1;		
			}
		}
		else
		{
			if(`attributeExists  "overrideEnabled" $models[$i]`)
			{
				setAttr ($models[$i]+".overrideEnabled") 1;		
			}
		}

		if(`attributeExists  "overrideDisplayType" $models[$i]`)
		{
			setAttr ($models[$i]+".overrideDisplayType") 0;
		}
		string $parent[]=`listRelatives -p -f $models[$i]`;
		$connects=`listConnections -s 1 -d 0 -p 1 ($parent[0]+".drawOverride")`;
		if(size($connects)>0)
		{}
		else
		{
			if(`attributeExists  "overrideEnabled" $parent[0]`)
			{
				catch(`setAttr ($parent[0]+".overrideEnabled") 1`);		
			}
			if(`attributeExists  "overrideDisplayType" $parent[0]`)
			{
				catch(`setAttr ($parent[0]+".overrideDisplayType") 0`);
			}
		}
		
	}
}//  print $i

global proc delLayer()
{
	string $nukelayer[]=`ls -type displayLayer`;
	for($one in $nukelayer)
	{
		if($one!="defaultLayer")
		delete $one;
	}
}
global proc assignLambert()
{
	hyperShade -assign lambert1;
}
global proc editUV()
{
	string $alltr[]=`ls -tr`;
	select -cl;
	for($one in $alltr)
	{
		if(`gmatch $one "*Boots_r_eyeGrp"`)
		select -add $one;
		if(`gmatch $one "*Boots_l_eyeGrp"`)
		select -add $one;
	}
	nurbsToggleEditUVMode;
	select -cl;
}