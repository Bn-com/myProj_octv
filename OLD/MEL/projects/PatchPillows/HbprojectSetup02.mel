global proc HbCopyTx02()
{
    string $filenam[]=`file -q -l `;
    int $i;
    for($i=1;$i<size($filenam);$i++)
    {
          string $buffer2[];
          $numTokens = `tokenize $filenam[$i] "." $buffer2`;
          if($buffer2[$numTokens-1]=="iff")
              {
	        string $buffer[];
	        $numTokens = `tokenize $filenam[$i] "/" $buffer`;
                    // print($buffer[0]);

		string $TheWorkPath=`workspace -q -fn`;
		string $locationstation=$TheWorkPath+"/sourceimages/"+$buffer[8];
		sysFile -md ($TheWorkPath+"/sourceimages");
		int $eexx=`file -q -ex $locationstation`;
		if($eexx==0)
			{
				 sysFile -copy $locationstation $filenam[$i];
				 print("拷贝成功:::"+$locationstation+"\n");
			}
		print("贴图已经存在:::"+$locationstation+"\n");
               }

    }
       string $allfile[] = `ls -type file`;
               for ($hs in $allfile)
                  {
                        
                         string $name=$hs+".fileTextureName";
                       print ($name+"\n");
                        string $oldad=`getAttr $name`;
                       print ($oldad+"==\n");
                        string $buffer[];
                        $numTokens = `tokenize $oldad "/" $buffer`;
			string $locationstation2="sourceimages/"+$buffer[8];
                        

                  setAttr -type "string" $name $locationstation2;
                       //AEassignTextureCB  $name $locationstation2 "image";
                    print("路径指定成功:::"+$locationstation2+"\n");  

                   };
}



global proc int sp_setLocalWorkspaceCallback (string $path, string $type)
//
//	Description:
//		Open the selected workspace and make it the new local workspace.
//
{
	int $result;
	string $workspace = `workspace -q -fn`;

	string $typeList[] = `file -q -typ $path`;
	if (size($typeList) > 0 && $typeList[0] == "directory") {
		workspace -o $path;

		// If the browser is up then we must reset it.
		//

		if (`window -ex projectViewerWindow`) {
			pv_resetWorkspace;	// Force the layout to be redone.
		}

		np_resetBrowserPrefs;

		$result = true;
	} else {
		string $msg = (uiRes("m_setProject.kInvalidPath"));
		$msg = `format -s $path $msg`;
		string $ok = (uiRes("m_setProject.kOk")); 
		confirmDialog -message $msg 
			-button $ok -defaultButton $ok -parent projectViewerWindow;
		$result = false;
	}

	// They picked a new one:
	if ( true == $result && $path != $workspace )
	{
		addRecentProject( $path );
		// We also want to update the edit box if they're editing the 'current'
		// (the new one should now be the 'current')
		if ( `window -ex newProjectWindow` ) 
		{
			string $title = `window -q -t newProjectWindow`;
			// If the use is editing the project, then we want to 
			// refresh the Edit window ("2" is edit mode for projectSetup)
			// If they were setting up a new one we close the newProjectWindow
			if ( $title == "Edit Project" )
				projectSetup( 2 );
			else
				deleteUI newProjectWindow;
			// We remove the window if they were setting a new one
		}
	}


	return $result;
}

global proc setProject ( string $newProject )
//
//	Description:
//		Set the current workspace to the one selected by the user.
//
{	
	// No name given - browse for it
	if ( size( $newProject ) == 0 )
	{
		// Set the directory to the users project area.
		//
		string $wsDir = dirname( `workspace -q -fn` );

		if (`file -q -ex $wsDir`) {
			workspace -dir $wsDir;
		}

		fileBrowser "sp_setLocalWorkspaceCallback" (uiRes("m_setProject.kSetProject")) "" 4;		
	}
	// Try to set it directly from the name given
	else
	{
		sp_setLocalWorkspaceCallback $newProject "directory";
	}
}




global proc HbprojectSetup02()
{
	string $GetTheFileName=`file -q -sn -shn`;
	string $ProjName[];
	$numTokens = `tokenize $GetTheFileName "." $ProjName`;
	print  $ProjName[1];
	string $ThePath="D:/ClearUpProject/";
	print ($ThePath+"/"+$ProjName[0]+"/scenes");
	sysFile -md ($ThePath+$ProjName[0]+"/scenes");
	sysFile -md ($ThePath+$ProjName[0]+"/sourceimages");
	sysFile -md ($ThePath+$ProjName[0]+"/images");
	sysFile -copy ($ThePath+"/"+$ProjName[0]+"/workspace.mel" )  "Z:/Resource/Support/Maya/projects/PatchPillows/import/New_TEST/workspace.mel";
	sp_setLocalWorkspaceCallback ($ThePath+"/"+$ProjName[0]) "directory";
	file -rename ($GetTheFileName+".mb"); file -save -type "mayaBinary";
	HbCopyTx02;
	file -save;
	print "Project flie is ok~";

}
HbprojectSetup02;
