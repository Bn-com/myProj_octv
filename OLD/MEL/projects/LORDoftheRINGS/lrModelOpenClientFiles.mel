//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 10/21/2011
//
//	Update/Change: WansHoulOng
//	Last Updated: 10/21/2011
//	Description:
//				
//////////////////////////////////////////////////////////

global proc lrModelOpenClientFiles()
{
	string $basicFilter = "Maya Files (*.ma *.mb)";
	string $result[] = `fileDialog2 -fileFilter $basicFilter -dialogStyle 2 -fm 1`;

	string $newFile;
	if (size($result) != 0)
	{
		$newFile = lrModelRepairReference($result[0]);
		file -f -options "v=0"  -o $newFile;
	}	
}


global proc string lrModelRepairReference(string $file)
{
	string $dir = "D:/LORDoftheRINGS";
	sysFile -md $dir;

	string $buff[] = stringToStringArray($file,"\\/");
	string $newFile = $dir+"/"+$buff[size($buff)-1];
	string $oldPath = substituteAllString($file,$buff[size($buff)-1],"");
	$oldPath = substituteAllString($oldPath,"/blocking","/asset");
	$oldPath = "Z:/Projects/LORDoftheRINGS/Reference/FTP Download/Asset/";
	//sysFile -copy $newFile $file;
	$fileId = `fopen $newFile w`;	
	fprint $fileId "" ;
	fclose $fileId;

	$fileId = `fopen $newFile w`;	
	$fileIdOld=`fopen $file r`;
	string $nextLine = `fgetline $fileIdOld`;
	while(size($nextLine)>0)
	{
		string $new;
		if (`gmatch $nextLine "*Z:/Client/258_lwb_lotr/Workfiles/Assets/proxy/release/*"`)
		{
			$new = `substituteAllString $nextLine "Z:/Client/258_lwb_lotr/Workfiles/Assets/proxy/release/" $oldPath`;
			
			string $repMatch = `match "/[v_V]00[0-9]/" $new`;
			if (size($repMatch))
			{
				string $tempCon = $new;//`substituteAllString $new $repMatch ("/maya"+$repMatch)`;
				clear $buff;
				$buff=stringToStringArray($tempCon,"\"");
				for ($bf in $buff)
				{
					if (match($oldPath,$bf)!="")
					{
						if (!`filetest -r $bf`)
						{
							//print ($bf+"\n");
							string $rightFile = lrModelRepairReferenceGetRightFile($bf);
							$tempCon=substituteAllString($tempCon,$bf,$rightFile);
							//print ("--------"+$rightFile+"\n");
							break;
						}
					}
				}
				$new = $tempCon;
				/*string $buff1[]=stringToStringArray($new,"\"");
				string $reffile = $buff1[size($buff1)-2];
				clear $buff1;
				$buff1=stringToStringArray($reffile,"\\/");
				string $ma = $buff1[size($buff1)-1];
				string $newma=$ma;
				string $path = `substituteAllString $reffile $ma ""`;
				string $allma[] = `getFileList -fld $path`;
				if (!stringArrayCount($ma,$allma))
				{
					$newma = $allma[0];
					$new = `substituteAllString $new $reffile ($path+$newma)`;
				}*/

				fprint $fileId $new;
			}
			
		}
		else
			fprint $fileId $nextLine;

		
		
		$nextLine = `fgetline $fileIdOld`;
	}
	fclose $fileIdOld;
	fclose $fileId;


	return $newFile;
}

global proc string lrModelRepairReferenceGetRightFile(string $file)
{
	string $buff[] = stringToStringArray($file,"/");
	string $filename = $buff[size($buff)-1];
	string $path = substituteAllString($file,($buff[size($buff)-2]+"/"+$buff[size($buff)-1]),"");
	/*if (!`filetest -r $path`)
	{
		$path = `substituteAllString $path "/maya/" "/"`;
	}*/
	string $newFile="";

	string $fileList1[] = `getFileList -fld $path`;
	for($list1 in $fileList1)
	{
		clear $buff;
		$buff=stringToStringArray($filename,"_");
		string $pre = substituteAllString($filename,("_"+$buff[size($buff)-1]),"");
		if(match($pre,$list1)!="")
		{
			$newFile = $path+$list1;
			break;
		}
		else 
		{
			string $fileList2[]=`getFileList -fld ($path+$list1+"/")`;    
			for($list2 in $fileList2)
			{
				if(match($pre,$list2)!="")
				{
					$newFile=$path+$list1+"/"+$list2;
					break;
				}
			}
		}
	}
	if (size($newFile))
		return $newFile;
	else 
		return $file;
}