global proc nj2015_IdpassTr_Assign( string $shader)
{
	global string $shader;
	string $done[];
	clear $done;
    string $Selectobj[]=`ls -sl -l`;
    string $SelectobjMesh[] = `listRelatives  -allDescendents -fullPath -type"mesh" $Selectobj`;
    string $Selectobj[] =  `listRelatives -fullPath -p -type "transform" $SelectobjMesh `; 
	//…Ë÷√≤Œ ˝
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
	zzjSetMentalrayQuality("ninjago2015");
	for ($i=0; $i<size($Selectobj); $i++)
	{
		string $NodeShape[] = `listRelatives  -fullPath -shapes $Selectobj[$i]`;
		if (size($NodeShape) == 0)
		{
			continue;
		}
		string $ShadingEngine[] = `listConnections -t "shadingEngine" $NodeShape[0]`;
		if (size($ShadingEngine) == 0)
		{
			continue;
		}
		string $Shader[] = `listConnections ($ShadingEngine[0]+".surfaceShader")`;
		string $Str =$Shader[0]+".transparency";
		if (!`objExists $Str`)
		{
			select $Selectobj[$i];
			nj2015_Idpass_Assign($shader);
			continue;
		}
		string $cons[]=`listConnections -plugs true -connections true -destination false $Str`;
		if (size($cons)==0)
		{
			select $Selectobj[$i];
			nj2015_Idpass_Assign($shader);
		}
		else
		{
			string $trN=`match "[^.]+$" $cons[0]`;
			string $tro=`match "[^_]+" $cons[1]`;
			string $tr=`match "[^.]+" $tro`;
			string $newshader=$tr+"_nj2015"+$shader;
			string $SG=$tr+"_nj2015"+$shader+"SG";
			if(!`objExists $SG`)
			{
			   sets -renderable true -noSurfaceShader true -empty -name $SG;
			}
			
			if(!`objExists $newshader`)
			{
				shadingNode -asShader lambert -name $newshader;
				connectAttr -f $cons[1] ($newshader+"."+$trN) ;
				connectAttr -f ($newshader+".outColor") ($SG+".surfaceShader");
			        
			        
			}
			switch ($shader)
				{
					case "colorB" :
						setAttr ($newshader+".color") -type double3 0 0 1 ;
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break;
					case "colorR" :
						setAttr ($newshader+".color") -type double3 1 0 0 ;
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break; 
					case "colorG" :
						setAttr ($newshader+".color") -type double3 0 1 0 ;
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break;
					case "matte" :
						setAttr ($newshader+".color") -type double3 0 0 0 ;
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break;
					case "lambert" :
						setAttr ($newshader+".color") -type double3 0.5 0.5 0.5 ;
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break;
					case "Fresnel" :
						
						string $FreRamp="nj2015_FresnelRamp";
						string $FreRatio="nj2015_FresmelRatio";
						if(!`exists "nj2015_FresnelRamp"`)
						{
						    shadingNode -asTexture ramp -name "nj2015_FresnelRamp";
						    setAttr ($FreRamp+".colorEntryList[0].color") -type double3 1 1 1 ;
						    setAttr ($FreRamp+".colorEntryList[2].color") -type double3 0 0 0 ;
						    setAttr ($FreRamp+".colorEntryList[2].position") 1;
						    setAttr ($FreRamp+".colorEntryList[0].position") 0;
						}
						if(!`exists "nj2015_FresmelRatio"`)
						{
						    shadingNode -asUtility samplerInfo -name $FreRatio;
						}
						string $con[]=`listConnections -connections true  ($FreRatio+".facingRatio")`;
						if (`size($con)`==0)
						{
						    connectAttr -f ($FreRatio+".facingRatio") ($FreRamp+".uvCoord.uCoord");
						    connectAttr -f ($FreRatio+".facingRatio") ($FreRamp+".uvCoord.vCoord");
						}
						string $shadercon[]=`listConnections -connections true  ($newshader+".color")`;
						if(`size($shadercon)`==0)
						{
							connectAttr -f ($FreRamp+".outColor") ($newshader+".color");
						}
						setAttr ($newshader+".ambientColor") -type double3 1 1 1;
						setAttr ($newshader+".diffuse") 0;
						setAttr ($newshader+".matteOpacity") 0;
						break;
				 }
					
			select $Selectobj[$i];
			catch(`sets -e -forceElement $SG`);
			
			
		}
	}
	select -cl;
}
	

global proc nj2015_Idpass_Assign(string $shader)
{
    string $selectOBJ[]=`ls -sl -l`;
    string $SelectobjMesh[] = `listRelatives -allDescendents -fullPath -type"mesh" $selectOBJ`;
    string $Selectobj[] = `listRelatives -fullPath -parent -type "transform" $SelectobjMesh `; 
	global string $shader;
	string $newshader="nj2015_"+$shader;

	if (!`objExists $newshader`)
	{
		switch ($shader)
		{
			case "colorB" :
				shadingNode -asShader lambert -name nj2015_colorB;
				setAttr "nj2015_colorB.color" -type double3 0 0 1 ;
				setAttr "nj2015_colorB.ambientColor" -type double3 1 1 1 ;
				setAttr "nj2015_colorB.diffuse" 0;
				setAttr "nj2015_colorB.matteOpacity" 0;
				break;
			case "colorR" :
				shadingNode -asShader lambert -name nj2015_colorR;
				setAttr "nj2015_colorR.color" -type double3 1 0 0 ;
				setAttr "nj2015_colorR.ambientColor" -type double3 1 1 1 ;
				setAttr "nj2015_colorR.diffuse" 0;
				setAttr "nj2015_colorR.matteOpacity" 0;
				break;
			case "colorG" :
				shadingNode -asShader lambert -name nj2015_colorG;
				setAttr "nj2015_colorG.color" -type double3 0 1 0 ;
				setAttr "nj2015_colorG.ambientColor" -type double3 1 1 1 ;
				setAttr "nj2015_colorG.diffuse" 0;
				setAttr "nj2015_colorG.matteOpacity" 0;
				break;
			case "matte" :
				shadingNode -asShader lambert -name nj2015_matte;
				setAttr "nj2015_matte.color" -type double3 0 0 0 ;
				setAttr "nj2015_matte.ambientColor" -type double3 1 1 1 ;
				setAttr "nj2015_matte.diffuse" 0;
				setAttr "nj2015_matte.matteOpacity" 0;
				break;
			case "lambert" :
				shadingNode -asShader lambert -name nj2015_lambert;
				setAttr "nj2015_lambert.color" -type double3 0.5 0.5 0.5 ;
				sets -renderable true -noSurfaceShader true -empty -name nj2015_lambertSG;
				connectAttr -f Hhlambert.outColor HhlambertSG.surfaceShader;
				break;
			case "Fresnel" :
				shadingNode -asShader lambert -name nj2015_Fresnel;
				string $FreRamp="nj2015_FresnelRamp";
				string $FreRatio="nj2015_FresmelRatio";
				if(!`exists $FreRamp`)
				{
				    shadingNode -asTexture ramp -name $FreRamp;
				    setAttr ($FreRamp+".colorEntryList[0].color") -type double3 1 1 1 ;
				    setAttr ($FreRamp+".colorEntryList[2].color") -type double3 0 0 0 ;
				    setAttr ($FreRamp+".colorEntryList[2].position") 1;
				    setAttr ($FreRamp+".colorEntryList[0].position") 0;
				}
				if(!`exists $FreRatio`)
				{
				    shadingNode -asUtility samplerInfo -name $FreRatio;
				}
				string $con[]=`listConnections -connections true  ($FreRatio+".facingRatio")`;
				if(size($con)==0)
				{
				    connectAttr -f ($FreRatio+".facingRatio") ($FreRamp+".uvCoord.uCoord");
				    connectAttr -f ($FreRatio+".facingRatio") ($FreRamp+".uvCoord.vCoord");
				}
				string $shadercon[]=`listConnections -connections true  "nj2015_Fresnel.color"`;
				if(`size($shadercon)`==0)
				{
					connectAttr -f ($FreRamp+".outColor") "nj2015_Fresnel.color";
				}
				setAttr  "nj2015_Fresnel.ambientColor" -type double3 1 1 1;
				setAttr "nj2015_Fresnel.diffuse" 0;
				setAttr "nj2015_Fresnel.matteOpacity" 0;
				break;



		}
	}

	if (`objExists $Selectobj[0]`)
	{
		select -r $Selectobj;
		switch ($shader)
		{
			case "colorB" :
				hyperShade -assign nj2015_colorB;
				break;
			case "colorR" :
				hyperShade -assign nj2015_colorR;
				break;
			case "colorG" :
				hyperShade -assign nj2015_colorG;
				break;
			case "colorA" :
				hyperShade -assign nj2015_colorA;
				break;
			case "matte" :
				hyperShade -assign nj2015_matte;
				break;
			case "lambert" :
				hyperShade -assign nj2015_lambert;
				break;

			case "Fresnel" :
				hyperShade -assign nj2015_Fresnel;
				break;

		}
	}

}