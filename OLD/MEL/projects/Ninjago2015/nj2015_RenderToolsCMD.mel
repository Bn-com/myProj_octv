global proc nj2015_RenderTools()
{
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago2015/nj2015_FixBeforeRendering.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/njEnvMaterialChange.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjIdPassInfo.mel";
	source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago/nj_Rnd_ChangeCarsColor.mel";

	python("execfile('//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago2015/nj_2015_RenderLayTool.py')");
/*
    if (!`pluginInfo -query -loaded "Mayatomr.mll"`)
    loadPlugin "Mayatomr.mll"; 
*/
    if (`pluginInfo -q -loaded "Mayatomr"`==0)
    {
        loadPlugin -quiet "Mayatomr";
        pluginInfo -edit -autoload 1 "Mayatomr";
    }
    miCreateDefaultNodes;
	python("import sys");
	python("sys.path.append(\"//File-cluster/GDC/Resource/Support/Maya/Python/IDMT/TTMS\")");
	python("import pymel.core as pm");
	
	python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_Yoda");
	python("reload(sk_renderLayer_Yoda)");

	if (`window -exists Ninjago2015RenderTools`) deleteUI Ninjago2015RenderTools;
	string $window=`loadUI -uiFile "//file-cluster/gdc/Resource/Support/Maya/projects/Ninjago2015/nj2015_RenderToolsUI.ui"`;
	windowPref  -topLeftCorner 100 80 $window;
	showWindow $window;
}
 
global proc nj2015_RenderTools_Create_Layer_UI()
{
    // Get the dialog's formLayout.
    string $form = `setParent -q`;

    formLayout -e -width 20 $form;

	string $t = `text -l "层名"`;
    textField -w 30 "nj2015_RenderTools_Create_Layer_name";
    setFocus "nj2015_RenderTools_Create_Layer_name";
    string $b1 = `button -l "建层"    -c "nj2015_RenderTools_Create_Layer_Button();layoutDialog -dismiss \"Abort\""`;

	formLayout -edit
		-attachForm            $t   "top"    5
		-attachForm            $t   "left"   5
		-attachNone            $t   "bottom"
		-attachForm            $t   "right"  5   	
		
		-attachControl         "nj2015_RenderTools_Create_Layer_name"   "top"    5 $t
		-attachForm            "nj2015_RenderTools_Create_Layer_name"   "left"   5
		-attachNone            "nj2015_RenderTools_Create_Layer_name"   "bottom"
		-attachForm            "nj2015_RenderTools_Create_Layer_name"   "right"  5
		
		-attachControl         $b1  "top"    5 "nj2015_RenderTools_Create_Layer_name"
		-attachForm            $b1  "left"   25
		-attachNone            $b1  "bottom"
		-attachForm            $b1  "right"  25 

    $form;
    
}
global proc nj2015_RenderTools_Create_Layer_Button()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name=` textField -q -tx "nj2015_RenderTools_Create_Layer_name"`;
	
}

global proc nj2015_MrSet()
{
    if (`pluginInfo -q -loaded "Mayatomr"`==0)
    {
        loadPlugin -quiet "Mayatomr";
        pluginInfo -edit -autoload 1 "Mayatomr";
    }
    setAttr "defaultRenderGlobals.imageFormat" 16;
    setMayaSoftwareFrameExt(3, 0);
    setAttr defaultResolution.lockDeviceAspectRatio 0;
    setAttr "defaultResolution.width" 1280;
    setAttr "defaultResolution.height" 720;
    setAttr "defaultResolution.pixelAspect" 1;
    setAttr "defaultResolution.deviceAspectRatio" 1.777;

    setAttr -type "string" defaultRenderGlobals.currentRenderer "mentalRay";
    setAttr "miDefaultOptions.miRenderUsing" 2;
    setAttr "miDefaultOptions.maxSamples" 2;
    setAttr "miDefaultOptions.minSamples" 0;
            
    setAttr miDefaultOptions.contrastR 0.1;
    setAttr miDefaultOptions.contrastG 0.1;
    setAttr miDefaultOptions.contrastB 0.1;
    setAttr miDefaultOptions.contrastA 0.1;

    setAttr "miDefaultOptions.filter" 2;
    setAttr "miDefaultOptions.jitter" 1;

}

global proc nj2015_RenderTools_Color()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj2015_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_CO";
	createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name;
	source "//file-cluster/GDC/Resource/Support/Maya//projects/Ninjago2015/nj2015_setMentalrayQuality.mel";
	nj_MentalrayQuality("02");
    miCreateDefaultNodes;
    renderLayerEditorRenderable RenderLayerTab "defaultRenderLayer" "0";
	
}

global proc nj2015_RenderTools_RGB()
{
	global string $nj_RenderTools_Create_Layer_Name;
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj2015_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_RGB";
	createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name;
	source "//file-cluster/GDC/Resource/Support/Maya//projects/Ninjago2015/nj2015_setMentalrayQuality.mel";
	nj_MentalrayQuality("02");
    renderLayerEditorRenderable RenderLayerTab "defaultRenderLayer" "0";	
}


global proc nj2015_RenderTools_AO(string $type)
{
    miLoadMayatomr();
    miCreateDefaultNodes;
    global string $nj_RenderTools_Create_Layer_Name;
    string $selectOBJ[]=`ls -sl -l`;
    string $selectMesh[] = `listRelatives -allDescendents -fullPath -type"mesh" $selectOBJ`;
    string $selectOBJ[] =  `listRelatives -fullPath -p -type "transform" $selectMesh `; 
	$nj_RenderTools_Create_Layer_Name="";
	layoutDialog -ui "nj2015_RenderTools_Create_Layer_UI" -t "创建渲染层";
	
	if ($nj_RenderTools_Create_Layer_Name=="")	return;
	
	$nj_RenderTools_Create_Layer_Name+="_AO";
	select $selectOBJ;
	string $newLayer =`createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name`;

	string $nj2015_AOshader = ($nj_RenderTools_Create_Layer_Name+"_AOshader");
	string $nj2015_AOshaderSG = ($nj_RenderTools_Create_Layer_Name+"_AOshaderSG");
	string $nj2015_occlusion = ($nj_RenderTools_Create_Layer_Name+"_occlusion");
    if(`objExists $nj2015_AOshader`==0)    
        {
        shadingNode -asShader surfaceShader -name $nj2015_AOshader;
        mrCreateCustomNode -asTexture "" mib_amb_occlusion;rename $nj2015_occlusion;
        connectAttr -force ($nj2015_occlusion+".outValue") ($nj2015_AOshader+".outColor");
        sets -renderable true -noSurfaceShader true -empty -name $nj2015_AOshaderSG;
        connectAttr -f ($nj2015_AOshader+".outColor") ($nj2015_AOshaderSG+".surfaceShader");
        }
	select $selectOBJ;
        hyperShade -assign $nj2015_AOshader;

	if ($type == "chr")
	    {
	    setAttr ($nj2015_occlusion+".samples") 136;
	    setAttr ($nj2015_occlusion+".spread") 0.8;
	    setAttr ($nj2015_occlusion+".max_distance") 2;             
	    }
	else if ($type == "bg")
	    {
	    setAttr ($nj2015_occlusion+".samples") 136;
	    setAttr ($nj2015_occlusion+".spread") 0.8;
	    setAttr ($nj2015_occlusion+".max_distance") 10;
	    }
	else if ($type == "tjbg")
	    {
	    setAttr ($nj2015_occlusion+".samples") 64;
	    setAttr ($nj2015_occlusion+".spread") 0.8;
	    setAttr ($nj2015_occlusion+".max_distance") 50;
	    }
	nj2015_RenderTools_HideObjects($selectOBJ);
}


global proc nj2015_RenderTools_Normal()
{
    miLoadMayatomr();
    miCreateDefaultNodes;
    global string $nj_RenderTools_Create_Layer_Name;
    string $selectOBJ[]=`ls -sl -l`;
    string $selectMesh[] = `listRelatives -allDescendents -fullPath -type"mesh" $selectOBJ`; 
    string $selectOBJ[] =  `listRelatives -fullPath -p -type "transform" $selectMesh `;      
    $nj_RenderTools_Create_Layer_Name="";
    layoutDialog -ui "nj2015_RenderTools_Create_Layer_UI" -t "创建渲染层";
    
    if ($nj_RenderTools_Create_Layer_Name=="")  return;
    
    $nj_RenderTools_Create_Layer_Name+="_NM";
    string $newLayer =`createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name $selectOBJ`;
    //renderLayerBuiltinPreset normal $newLayer;
    if(`objExists nj2015_Normalshader`==1)
    {
    delete nj2015_Normalshader;
    delete nj2015_Normalocclusion;
    delete nj2015_NormalshaderSG;
    }
    if(`objExists nj2015_Normalshader`==0)    
    {
        shadingNode -asShader lambert -name nj2015_Normalshader;
	setAttr "nj2015_Normalshader.ambientColor" -type double3 0 0 0 ;
        mrCreateCustomNode -asTexture "" mib_amb_occlusion;rename nj2015_Normalocclusion;
        setAttr "nj2015_Normalocclusion.output_mode" 3;
        setAttr "nj2015_Normalocclusion.spread" 0.8;
	setAttr "nj2015_Normalocclusion.max_distance" 0; 
//        connectAttr -force "nj2015_Normalocclusion.outValue" "nj2015_Normalshader.color";
        sets -renderable true -noSurfaceShader true -empty -name nj2015_NormalshaderSG;
	connectAttr -force "nj2015_Normalocclusion.outValue" "nj2015_NormalshaderSG.miMaterialShader";
        connectAttr -f nj2015_Normalshader.outColor nj2015_NormalshaderSG.surfaceShader;
    }
    select $selectOBJ;
    hyperShade -assign nj2015_Normalshader;
    nj2015_MrSet();
    
	nj2015_RenderTools_HideObjects($selectOBJ);

//	source zzjSetMentalrayQuality.mel;
//	zzjSetMentalrayQuality("ninjago");
    renderLayerEditorRenderable RenderLayerTab "defaultRenderLayer" "0";
    source "//file-cluster/GDC/Resource/Support/Maya//projects/Ninjago2015/nj2015_setMentalrayQuality.mel";
	nj_MentalrayQuality("02");
	setAttr "nj2015_Normalocclusion.samples" 136;
	
}

global proc nj2015_RenderTools_Fresnel()
{
        miCreateDefaultNodes;
    global string $nj_RenderTools_Create_Layer_Name;
    string $selectOBJ[]=`ls -sl -l`;
//    string $selectMesh[] = `listRelatives -allDescendents -type"mesh" $selectOBJ`;  
    $nj_RenderTools_Create_Layer_Name="";
    layoutDialog -ui "nj2015_RenderTools_Create_Layer_UI" -t "创建渲染层";
    
    if ($nj_RenderTools_Create_Layer_Name=="")  return;
    
    $nj_RenderTools_Create_Layer_Name+="_FN";
    string $newLayer =`createRenderLayer -makeCurrent -name $nj_RenderTools_Create_Layer_Name $selectOBJ`;
    select -cl;
    select $selectOBJ;

    source "//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago2015/nj2015_IdpassTr_Assign.mel";
    nj2015_IdpassTr_Assign("Fresnel");
    /*
    source "//file-cluster/GDC/Resource/Support/Maya/scripts/zzjSetMentalrayQuality.mel";
    zzjSetMentalrayQuality("ninjago2015");
    */
    source "//file-cluster/GDC/Resource/Support/Maya//projects/Ninjago2015/nj2015_setMentalrayQuality.mel";
	nj_MentalrayQuality("02");
    renderLayerEditorRenderable RenderLayerTab "defaultRenderLayer" "0";
    //nj2015_MrSet();
}

global proc nj2015_RenderTools_UnlockNodes()
{
	source "//file-cluster/GDC/Resource/Support/Maya/scripts/cyBakeClothMain.mel";

	string $allNodes[]=`ls -type mesh -type nurbsSurface -type transform -type nParticle -type fluidShape`;
	
	for ($a in $allNodes)
	{
		if (`attributeExists "overrideEnabled" $a`)
		{
			string $connect= `connectionInfo -sfd ($a + ".overrideEnabled")`;
			myCBdeleteConnection ($a + ".overrideEnabled");
			setAttr ($a + ".overrideEnabled") 0;				
		}
		lockNode -lock off $a;
	}
}


global proc nj2015_RenderTools_HideObjects(string $obj[])
{
	
	string $hideGroups[]={};
	int $i =0;
	for ($p in $obj)
	{
		if (`gmatch  $p "*brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*DEFORMERS*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*drape*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*Brow*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;
		if (`gmatch  $p "*RIG*"`)		$hideGroups[$i++]=$p;

	}
	
	for ($hg in $hideGroups)
	{
		evalDeferred ("setAttr -lock 0  "+$hg + ".visibility");
		evalDeferred ("setAttr -k 1  "+$hg + ".visibility");
		CBdeleteConnection  ($hg +".v");	
		setAttr  ($hg +".v") 0;		
	}

	
}

global proc nj2015_RenderTools_CreateRimLight()
{
    string $rimLight = "//file-cluster/gdc/Resource/Support/Maya/projects/Ninjago/fill_light.mb";

    string $rl[] = `ls "light_V" "*:light_V" "*:*:light_V"`;
    
//    判断是否存在可渲染摄像机
        string $camera[] = `ls -cameras`;
        string $cams[]={};
        clear $cams;
        int $i = 0;
        for ($c in $camera)
        {
        	if (!`camera -q -sc $c`)
        	{
        		$cams[$i++]=$c;
        	}
        }
        string $renderCam[]={};
        clear $renderCam;
        int $j = 0;
        for ($c in $cams)
        {
        	if (`getAttr ($c+".renderable")`)
        	{
        		$renderCam[$j++]=$c;
        	}
        }
    
    
    if (`size $rl`)
    {
    	confirmDialog -m "场景中已经存在边缘灯光，请先删除！" -b "OK";
    	return;
    }
    if (!`size $renderCam`)
    {
        confirmDialog -m "场景中没用可渲染摄像机，请检查！" -b "OK";
        return;
    }

	file -import $rimLight;
	string $rl[] = `ls "light_V" "*:light_V" "*:*:light_V"`;
	string $RenderCamera[] = `listRelatives -parent $renderCam[0] `;
    parentConstraint $RenderCamera[0] $rl[0];
    
}

global proc nj2015_OverRideSampleWin()
{
if (`window -ex nj2015_OverRideSampleWin`)
    deleteUI nj2015_OverRideSampleWin;
window -title "选择模型提高渲染精度" nj2015_OverRideSampleWin;    
        setParent ..;
        frameLayout -label "渲染采样值精度:" -labelAlign "top" -cl 0 -cc "" -borderStyle "etchedIn";
        rowColumnLayout -numberOfColumns 2 -cw 1 120 -cw 2 120;
        text "采样值乘积：最小值";
        intSliderGrp  -f 1 -min 0 -max 32 -v 4 nj2015_miMinSamples;
        text "采样值乘积：最大值";
        intSliderGrp  -f 1 -min 0 -max 32 -v 16 nj2015_miMaxSamples;        
            setParent ..;
            setParent ..;
        frameLayout -label "改变渲染采样值:" -labelAlign "top" -cl 0 -cc "" -borderStyle "etchedIn";
        columnLayout -adj 1 ;
        button -height 30 -width 90 -bgc 0.85 0.65 0.55 -label "改变所选模型采样值" -c nj2015_OverRideSample;

showWindow nj2015_OverRideSampleWin;
}

global proc nj2015_OverRideSample()
{
    string $nj2015_OverRideSampleSelectObj[] = `ls -sl`;
    string $nj2015_OverRideSampleSelectObjShape[] = `listRelatives -s -ni $nj2015_OverRideSampleSelectObj`;
    for ($a in $nj2015_OverRideSampleSelectObjShape)
    {
    int $nj2015_miMinSamplesNumber =`intSliderGrp -q -v nj2015_miMinSamples`;


    int $nj2015_miMaxSamplesNumber =`intSliderGrp -q -v nj2015_miMaxSamples`;
    if ( $nj2015_miMinSamplesNumber != 0 || $nj2015_miMaxSamplesNumber != 0)
        {
            setAttr ($a+".miOverrideSamples") 1;
            setAttr ($a+".miMinSamples") $nj2015_miMinSamplesNumber;
            setAttr ($a+".miMaxSamples") $nj2015_miMaxSamplesNumber; 
        }
    if ($nj2015_miMinSamplesNumber == 0 || $nj2015_miMaxSamplesNumber == 0)
        {
        setAttr ($a+".miOverrideSamples") 0; 
        setAttr ($a+".miMinSamples") 0;
        setAttr ($a+".miMaxSamples") 2;
        }     
    }
}