global int $geometryUseGrid = 1;
global int $geometryGridSizeU = 20;
global string $geometryGridSizeUSlider;
global int $geometryGridSizeV = 20;
global string $geometryGridSizeVSlider;
global int $geometryJitterGrid = 1;
global float $geometryJitterValueAmt = 0.0;
global int $geometryAttachToSrf = 1;
global int $geometryAlignToSrf = 0;
global int $geometryDuplicate = 1;
global int $geometryGroup = 1;
global int $geometryProportional = 0;
global int $geometryIsolate = 1;
//global string $geometryAttrName[] = { ".sx", ".sy", ".sz", ".rx", ".ry", ".rz", ".tx", ".ty", ".tz" };
//global int $geometryModifyAttr[] = { 1, 1, 1, 0, 0, 0, 0, 0, 0 };
//global float $geometryModifyAttrNorm[] = { 1, 1, 1, 360, 360, 360, 1, 1, 1 };
//global int $geometryModifyAttrWrap[] = { 0, 0, 0, 1, 1, 1, 0, 0, 0 };
//global string $geometryIdentifier = "Geom";
global string $geometryAlignChkBoxGrp;



global proc HhListCallback(string $type,string $args)
{	
	string  $objlist;
	if ($args=="uiSourceList")
	{
		$objlist="sourceList";
	}
	else
	{
		$objlist="targetList";
	}
	string $objselects[]=`ls -sl`;
	if (size($objselects) != 0)
	{
		for ($obj in $objselects )
		{
			if($type=="add")
			{
				int $find = false;
				string $lists[]=`textScrollList -q -allItems $args`;
				for($list in $lists)
				{
					if($obj == $list)
					{
						$find = true;
						break;
					}
				}
				if(!$find)
				{
					textScrollList  -e -append $obj $args;
				}
			}
			if($type=="remove")
			{
				textScrollList  -e  -removeItem $obj $args;
			}
			if($type=="clear")
			{
				textScrollList  -e  -removeAll;
			}

		}
	}
	else
	{
		error "没有选择物体";
	}
	
}

global proc HhListCallbackRemove()
{	
	
	string $lists[]=`textScrollList  -q -selectItem uiSourceList`;
	if (size($lists) != 0)
	{
		for ($item in $lists)
		{

			textScrollList  -e  -removeItem $item uiSourceList;
			

		}
	}
	else
	{
		error "没有选择物体";
	}
	select $lists;
	
}
global proc HhListCallbackClear()
{	
	
	textScrollList  -e  -removeAll  uiSourceList;
}
global proc HhParametrerRecord(string $type,string $min,string $max)
{
	//string $type="RX";
	int $checkBox=`checkBox -q -v $type`;
	float $minV;
	float $maxV;
	if($checkBox==0)
	{
		if(`match "R" $type`!=""||`match "T" $type`!=""||`match "J" $type`!="")
		{
			$minV=0;
			$maxV=0;
		}
		else 
		{
			$minV=1;
			$maxV=1;
		}
	}
	else
	{
		$minV=`floatSliderGrp -q -v $min`;
		$maxV=`floatSliderGrp -q -v $max`;
	}
	print $minV;
	print $maxV;
}

global proc HhParametreSet(string $node)
{
	global int $geometryModifyAttr[];
	if($node=="RX")
	{
		$geometryModifyAttr[3]=`checkBox -q -v $node`;
	}
	if($node=="RY")
	{
		$geometryModifyAttr[4]=`checkBox -q -v $node`;
	}
	if($node=="RZ")
	{
		$geometryModifyAttr[5]=`checkBox -q -v $node`;
	}
	if($node=="SX")
	{
		$geometryModifyAttr[0]=`checkBox -q -v $node`;
	}
	if($node=="SY")
	{
		$geometryModifyAttr[1]=`checkBox -q -v $node`;
	}
	if($node=="SZ")
	{
		$geometryModifyAttr[2]=`checkBox -q -v $node`;
	}
	if($node=="TX")
	{
		$geometryModifyAttr[6]=`checkBox -q -v $node`;
	}
	if($node=="TY")
	{
		$geometryModifyAttr[7]=`checkBox -q -v $node`;
	}
	if($node=="TZ")
	{
		$geometryModifyAttr[8]=`checkBox -q -v $node`;
	}
}
global proc HhParametreJitter()
{
	global float $geometryJitterValueAmt;

	$geometryJitterValueAmt=`floatSliderGrp -q -v jitterRange`;
}


			
global proc HhBrushRecord()
{
	global string $geometryGeom[];
	string $List[]=`textScrollList -query -allItems uiSourceList`;
	clear $geometryGeom;
	for ($i=0; $i<size($List); $i++)
	{
		$geometryGeom[$i] = $List[$i];
	}
}
global proc HhSurfaceRecord()
{
	global string $SurfaceGeos[];
	string $List[]=`textScrollList -query -allItems targetList`;
	{
		if(`size($List)`==0)
		{
			error "没有加入目标帷曲面，请选择加入";
		}
		else
		{
			$SurfaceGeos=$List;
			print $SurfaceGeos;
		}
	}
}
/*
global proc HhPaintTools()
{
	global string $BrushGeos[];
	global string $SurfaceGeos[];
	select $SurfaceGeos;
	artActivateScreenSlider("upper_radius");
	ModifyUpperRadiusRelease;
	
}
*/
global proc HhPaintAct()
{
	ScriptPaintToolOptions;
	artUserPaintCtx -e -tsc "geometryPaint" `currentCtx`;
	artUserPaintToolScript 4;
	deleteUI -window geometryPaintWindow;
	HhBrushRecord;
}
global proc UVgridset(string $uv)
{
	global int $geometryUseGrid;
	global int $geometryGridSizeU;
	global int $geometryGridSizeV;
	if($uv="Ugrid")
	{
		$geometryGridSizeU=`intSliderGrp -q -v  UGrids`;
	}
	if($uv="Vgrid")
	{
		$geometryGridSizeV=`intSliderGrp -q -v  VGrids`;
	}
}

global proc HhTreePaintGUI()
{
	// See if there is fSet in current scene
	//string $hsets[] = `ls -type objectSet "*_fSet" "*:*_fSet"`;

	global int $geometryOperation;
	global int $geometryUseGrid;
	global int $geometryGridSizeU;
	global int $geometryGridSizeV;
	global string $geometryGridSizeUSlider;
	global string $geometryGridSizeVSlider;
	global string $geometryAlignChkBoxGrp;
	global int $geometryJitterGrid;
	global int $geometryAttachToSrf;
	global int $geometryAlignToSrf;
	global int $geometryDuplicate;
	global int $geometryGroup;
	global int $geometryProportional;
	global int $geometryIsolate;
	global string $geometryGeom[];
	global int $geometryModifyAttr[];
	global float $geometryJitterValueAmt;
	global string $geometryIdentifier;

	separator -style "none" -height 3 charHairHeader;
	 frameLayout -l "Brush Geometry" -collapsable true -cl 1 -width 420 charHairFL;
		//columnLayout -adjustableColumn true;
		formLayout charHairForm;
			textScrollList 	
				-numberOfRows 8
				-allowMultiSelection true
				//-width 300
				uiSourceList;

			columnLayout -adjustableColumn true charHairCL;
				HhBrushRecord();
				string $geom;
				int $numGeoms = size($geometryGeom);
				int $g;
				for ( $g = 0; $g < $numGeoms; $g++ ) {
					$geom = ($geom + " " + $geometryGeom[$g]);
				}
				//button -label "添加" -command "HhListCallback(\"add\",\"uiSourceList\")" attachButton;
				button -label "Add" -command "HhListCallback(\"add\",\"uiSourceList\")" attachButton;
				separator -style "none" -height 5;
				button -label "Remove" -command "HhListCallbackRemove" delButton;
				separator -style "none" -height 5;
				button -label "Clear" -command "HhListCallbackClear()" listDeleteButton;
				separator -style "none" -height 5;
				button -label "Paint" -bgc 1 0.3 0.2 -command "HhPaintAct()" geometryName;
		setParent ..;
		//setParent ..;
		//separator -style "none" -height 1;
		//textFieldButtonGrp -label "分层文件保存到: " -columnWidth 1 150 -buttonLabel "Browse" -buttonCommand "charHairSaveTo" -adjustableColumn 1 charHairSaveFieldBGrp;
		//separator -style "none" -height 10;
	setParent charHairFL;
	setParent ..;
	/*
	separator -style "none" -height 3  TargetSurfaceHeader;
	frameLayout -l "Target Surface(s)" -collapsable true -width 420 TargetSurfaceFL;
		//columnLayout -adjustableColumn true;
		formLayout TargetSurfaceForm;
			textScrollList 	
				-numberOfRows 6
				-allowMultiSelection true
				//-width 300
				targetList;

			columnLayout -adjustableColumn true TargetSurfaceCL;
				button -label "添加" -command "HhListCallback(\"add\",\"targetList\")" attachButton;
				separator -style "none" -height 5;
				button -label "删减" -command "HhListCallback(\"remove\",\"targetList\")" delButton;
				separator -style "none" -height 5;
				button -label "清理" -command "HhListCallback(\"remove\",\"targetList\")" listDeleteButton;
		setParent ..;
		//setParent ..;
		//separator -style "none" -height 1;
		//textFieldButtonGrp -label "分层文件保存到: " -columnWidth 1 150 -buttonLabel "Browse" -buttonCommand "charHairSaveTo" -adjustableColumn 1 charHairSaveFieldBGrp;
		//separator -style "none" -height 10;
	setParent TargetSurfaceFL;
	setParent ..;
	*/
	frameLayout   -label "Paint"    -collapsable true -cl 1 -width 420  adjustmentFLPaint  ;
			radioButtonGrp -label (uiRes("m_geometryPaint.kOperation"))  -nrb 3
				-label1 (uiRes("m_geometryPaint.kCreateModify")) 
				-on1 "$geometryOperation = 1"
				-label2 (uiRes("m_geometryPaint.kModify")) 
				-on2 "$geometryOperation = 2"
				-label3 (uiRes("m_geometryPaint.kRemove")) 
				-on3 "$geometryOperation = 3"
				-sl $geometryOperation 
				operation;
			checkBoxGrp -ncb 2 -label ""
			-label1 (uiRes("m_geometryPaint.kGrid")) 
			-v1 $geometryUseGrid
			-cc1 "$geometryUseGrid = #1; intSliderGrp -e -en $geometryUseGrid $geometryGridSizeUSlider; intSliderGrp -e -en $geometryUseGrid $geometryGridSizeVSlider"
			-label2 (uiRes("m_geometryPaint.kJitterGrid")) 
			-v2 $geometryJitterGrid
			-cc2 "$geometryJitterGrid = #1"
			useGrid;
		setParent adjustmentFLPaint;
		setParent ..;
	separator -style "single";
	separator -style "none" -height 6 ParametereHeaderPaint;
	 frameLayout   -label "Parameter adjustment"    -collapsable true -cl 1 -width 420  ParametereFLPaint   ;
		columnLayout  -adjustableColumn true -rs  10  -cw  10;
			columnLayout  -adjustableColumn true;
				rowColumnLayout	 -numberOfColumns 3  -columnAlign 1 "right" -columnAlign 2 "center" -columnAlign 3 "right";// -cw 1 100 -cw 2 350 -cw 3 500;
				//checkBoxGrp -ncb 3 -label
					string $RX=`checkBox  -w 150  -label "RotateX"  -v $geometryModifyAttr[3] -cc "HhParametreSet(\"RX\")"  RX`;
					string $RY=`checkBox  -w 150  -label "RotateY"  -v $geometryModifyAttr[4] -cc "HhParametreSet(\"RY\")" RY`; 
					string $RZ=`checkBox  -w 150  -label "RotateZ" -v $geometryModifyAttr[5] -cc "HhParametreSet(\"RZ\")" RZ`;
					//string $RY=`checkBox   -label "RotateY" RY`;  float $RYmin=`floatSliderGrp -label "min" -field true -columnWidth 1 50  -columnWidth 2 60 -columnWidth 3 70 -minValue 0 -maxValue 360 -fieldMinValue 0 -fieldMaxValue 360 -value 0 -precision 3 RYmin`; float $RYmax=`floatSliderGrp -label "max" -field true -columnWidth 1 50 -columnWidth 2 60 -columnWidth 3 70 -minValue 0 -maxValue 360 -fieldMinValue 0 -fieldMaxValue 360 -value 0 -precision 3 RYmax`;
					//string $RZ=`checkBox   -label "RotateZ" RZ` ;  float $RZmin=`floatSliderGrp -label "min" -field true -columnWidth 1 50  -columnWidth 2 60-columnWidth  3 70 -minValue 0 -maxValue 360 -fieldMinValue 0 -fieldMaxValue 360 -value 0 -precision 3 RZmin`; float $RZmax=`floatSliderGrp -label "max" -field true -columnWidth 1 50 -columnWidth 2 60 -columnWidth 3 70 -minValue 0 -maxValue 360 -fieldMinValue 0 -fieldMaxValue 360 -value 0 -precision 3 RZmax`;
					setParent ..;
				rowColumnLayout	 -numberOfColumns 3 -columnAlign 1 "right" -columnAlign 2 "right" -columnAlign 3 "right";// -cw 1 100 -cw 2 350 -cw 3 500;
					string $SX=`checkBox  -w 150 -label "ScaleX" -v $geometryModifyAttr[0] -cc "HhParametreSet(\"SX\")" SX`;  
					string $SY=`checkBox  -w 150 -label "ScaleY" -v $geometryModifyAttr[1] -cc "HhParametreSet(\"SY\")" SY`;
					string $SZ=`checkBox  -w 150 -label "ScaleZ" -v $geometryModifyAttr[2] -cc "HhParametreSet(\"SZ\")" SZ`;
					//string $SY=`checkBox   -label "ScaleY" SY`  ;  float $SYmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue 0.01 -maxValue 10000.00 -fieldMinValue 0.001 -fieldMaxValue 10000.00 -value 1 -precision 3 SYmin`; float $SYmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55 -columnWidth 2 60 -columnWidth 3 70 -minValue 0.001 -maxValue 10000.00 -fieldMinValue 0.01 -fieldMaxValue 10000.00 -value 1 -precision 3 SYmax`;
					//string $SZ=`checkBox   -label "ScaleZ" SZ`  ;  float $SZmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue 0.01 -maxValue 10000.00 -fieldMinValue 0.001 -fieldMaxValue 10000.00 -value 1 -precision 3 SZmin`; float $SZmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55 -columnWidth 2 60 -columnWidth 3 70 -minValue 0.001 -maxValue 10000.00 -fieldMinValue 0.01 -fieldMaxValue 10000.00 -value 1 -precision 3 SZmax`;
					setParent ..;
				rowColumnLayout	 -numberOfColumns 3 -columnAlign 1 "right" -columnAlign 2 "right" -columnAlign 3 "right";// -cw 1 100 -cw 2 350 -cw 3 500;
					string $TX=`checkBox -w 150  -label "TransX" -v $geometryModifyAttr[6] -cc "HhParametreSet(\"TX\")" TX`; 
					string $TY=`checkBox -w 150  -label "TransY" -v $geometryModifyAttr[7] -cc "HhParametreSet(\"TY\")" TY`;
					string $TZ=`checkBox -w 150 -label "TransZ"  -v $geometryModifyAttr[8] -cc "HhParametreSet(\"TZ\")" TZ`;
					//string $TY=`checkBox   -label "TransY" TY`  ;  float $TYmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1000 -maxValue 10000.00 -fieldMinValue -1000 -fieldMaxValue 10000.00 -value 0 -precision 3 TYmin`; float $TYmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1000 -maxValue 10000.00 -fieldMinValue -1000 -fieldMaxValue 10000.00 -value 0 -precision 3 TYmax`;
					//string $TZ=`checkBox   -label "TransZ" TZ`  ;  float $TZmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1000 -maxValue 10000.00 -fieldMinValue -1000 -fieldMaxValue 10000.00 -value 0 -precision 3 TZmin`; float $TZmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1000 -maxValue 10000.00 -fieldMinValue -1000 -fieldMaxValue 10000.00 -value 0 -precision 3 TZmax`;
					setParent ..;
				separator -style "single";
			columnLayout  -adjustableColumn true  -width 420;
				intSliderGrp -field true -label "U grid size"  -min 2 -max 100
					 -v $geometryGridSizeU -cc "UVgridset(\"Ugrid\")" -en $geometryUseGrid   UGrids; 
				intSliderGrp -field true -label "V grid size"  -min 2 -max 100
					 -v $geometryGridSizeV -cc "UVgridset(\"Vgrid\")" -en $geometryUseGrid   VGrids;
				setParent ..;
				floatSliderGrp -field true -label "Jitter value"  -min 0 -max 1 -pre 2 -v 0 -cc "HhParametreJitter()" jitterRange;
					//string $JU=`checkBox   -label "Jitter" JU`  ;  float $JUmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1 -maxValue 1 -fieldMinValue -1 -fieldMaxValue 1 -value 0 -precision 3 JUmin`; float $JUmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1 -maxValue 1 -fieldMinValue -1 -fieldMaxValue 1 -value 0 -precision 3 JUmax`;
					//string $JV=`checkBox   -label "JitterV" JV`  ;  float $JVmin=`floatSliderGrp -label "min" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1 -maxValue 1 -fieldMinValue -1 -fieldMaxValue 1 -value 0 -precision 3 JVmin`; float $JVmax=`floatSliderGrp -label "max" -field true -columnWidth 1 55  -columnWidth 2 60 -columnWidth 3 70 -minValue -1 -maxValue 1 -fieldMinValue -1 -fieldMaxValue 1 -value 0 -precision 3 JVmax`;
					setParent ..;
			setParent ParametereFLPaint;
			setParent ..;
			separator -style "single";
	
			


	separator -style "none" -height 10;

	formLayout -e
		-af uiSourceList "left" 0
		-attachPosition uiSourceList "right"  0 70
		-ac charHairCL "left" 10 uiSourceList
		-af charHairCL "top" 0
		-af charHairCL "bottom" 0
		-af charHairCL "right" 5 
		charHairForm;
	/*
	formLayout -e
		-af targetList "left" 0
		-attachPosition targetList "right"  0 70
		-ac TargetSurfaceCL "left" 10 targetList
		-af TargetSurfaceCL "top" 0
		-af TargetSurfaceCL "bottom" 0
		-af TargetSurfaceCL "right" 5
		TargetSurfaceForm;
	
	
		
	// initialize UI
	for ($each in $hsets){
		textScrollList -e 
		-append $each
		uiSourceList;
	}
	*/
	//string $tmp = `textFieldGrp -q -tx projDir` + "scenes\\iRender";
	//textFieldButtonGrp -e -text $tmp charHairSaveFieldBGrp;
}
HhTreePaintGUI();
source iRenderScriptsHub.mel;