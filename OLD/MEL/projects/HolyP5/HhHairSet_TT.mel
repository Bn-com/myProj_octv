

global proc HhHairSet_TT()
{
	source "//file-cluster/GDC/Resource/Support/Maya/projects/OTTO/ot_GeoCacheHighend.mel";
	source "Hh3DelightTools.mel";
	HhedlightShaveLoad();
	ot_GeoCache_imReference();
	hhRenderPssRemove();
	zjRemoveNamespace;
	hhColorRenderPassCreat();
	HhKeyLightCreat();
	HhMeshSet();

}
global proc HhKeyLightCreat()
{
	string $keylight="keylight";
	string $oldlights[]=`ls -lt`;
	if(`objExists $keylight`==0)
	{
		string $light=defaultDirectionalLight(1, 1,1,1, "0", 0,0,0, 0);
		string $newlight[]=`ls -lt`;
		string $lights[]=stringArrayRemove($oldlights, $newlight);
		string $lighttr[]=`listRelatives -p $lights[0]`;
		rename $lighttr[0] $keylight;
		//rename $light $keylight;
	}
	select $keylight;
	HhLightLink_3delight();
	select $keylight;
	Hh3dlightLightAttAdd("shadow");
}
global proc HhMeshSet()
{
	string $objs[]=`ls -tr`; 
	for($obj in $objs)
	{
		string $shape[]=`listRelatives -s $obj`;
		if(size($shape)!=0)
		{
			string $nodetype=`nodeType $shape[0]`;
			if(`match "mesh" $nodetype`!=""||`match "pfxHair" $nodetype`!=""||`match "nurbsSurface" $nodetype`!=""||`match "shaveHair" $nodetype`!="")
			{
				select -add $obj;
			}
		}
	}
	string $objselect[]=`ls -sl`;
	select $objselect;
	HhLightLink_3delight();
	select $objselect;
	string $objss[]=`ls -sl`;
	select -cl;
	for($o in $objss)
	{
		string $shape[]=`listRelatives -s $o`;
		string $nodetype=`nodeType $shape[0]`; 
		if(`match "mesh" $nodetype`!=""||`match "nurbsSurface" $nodetype`!="")
		{
			select -add $o ;
		}
	}
	string $mesh[]=`ls -sl`;
	//select $mesh;
	//Hh3dlightGeoAttsAdd("Geometry");
	select $mesh;
	Hh3dlightGeoAttsAdd("visibility");
	select $mesh;
	hhdelightshaderAssign("matte");
}

    


