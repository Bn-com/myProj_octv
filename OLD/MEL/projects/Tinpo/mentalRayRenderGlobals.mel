// mentalRayRenderGlobals.mel (c) 2006 ReelFX Creative Studios
// Verision 1.0
// author: Harry Michalakeas

/*
Description:
	Sets common mentalray globals for rendering
Use:
	template arg
Options:
	arg (string)	- some argument
	
Dependancies:

	Other scripts that must be in the script path

Documentation:

Examples:

Notes:
	
	
Bugs:

Original:	01/01/06
Revisions:	05/03/06	Rev 1.0
		- Setting framebuffer attributes here
				
To-do's:
		- Move to-do's to revisions as they are done
*/
// ---------------------------------------------------------------------------------------------------
// source statements
// 

// ---------------------------------------------------------------------------------------------------
// global variables
// 
// ---------------------------------------------------------------------------------------------------
// load all plug-ins required for this mel script
proc loadPlugins() 
{
	
}
// ---------------------------------------------------------------------------------------------------
global proc mentalRayRenderGlobals(string $renderType, int $finalGather, int $override, int $rapidScanline) 
{
	if(!`objExists miDefaultOptions`) return; 
	if(!`objExists mentalrayGlobals`) return;
	
	global int $gMotionVector;
	global int $gRapidScanLine;
	global float $gRapidVisibilitySamples;
	global float $gRapidShadingQuality;
	global float $gMinSamples;
	global float $gMaxSamples;
	global string $SR_outputFmt;
	
	
	// set absolute globals first...
	
	setAttr "mentalrayGlobals.passAlphaThrough" 1;			// render alpha for custom shaders
	
	// optimize shadow mat export. Causes no shadow shader to be exported to the .mi on shaders that are not transparent
	optimizeShadowMatExport();
	
	// 05/03/06 set output format here.
	if ($SR_outputFmt == "sgi")
	{
		setAttr "miDefaultFramebuffer.format" 4;  // sgi
		setAttr "miDefaultFramebuffer.datatype" 3; // RGBA 16 bit non-floating point
	}
	else
	{
		// default to openEXR
		setAttr "miDefaultFramebuffer.format" 27;  // openEXR	
		if ($gMotionVector)
			setAttr "miDefaultFramebuffer.datatype" 5; // RGBA 32 bit floating point
		else
			setAttr "miDefaultFramebuffer.datatype" 16; // RGBA 16 bit half
	}
	
	// 05/17/06
	/*
		If we are doing a motion vector pass force rapid scanline off. This is done even if protect globals is set.
	*/
	if ($gMotionVector)
	{
		$gRapidScanLine = false;
		setAttr "miDefaultOptions.scanline" 1; // Scanline on.
			
	}
	
	// if we are overriding, we are done
	if ($override)
		return;
	
	// samples 
	//setAttr "miDefaultOptions.minSamples" 1;
	//setAttr "miDefaultOptions.maxSamples" 3;

	setAttr "miDefaultOptions.minSamples" $gMinSamples;
	setAttr "miDefaultOptions.maxSamples" $gMaxSamples;
	
	setAttr "miDefaultOptions.jitter" 1;	
	
	// filter
	setAttr "miDefaultOptions.filter" 2;				// gauss
	setAttr "miDefaultOptions.filterWidth" 1;			// native filter width  (translates to 3)
	setAttr "miDefaultOptions.filterHeight" 1;			// native filter height (translates to 3) 
	
	// scanline
	if ($gRapidScanLine)
	{
		setAttr "miDefaultOptions.scanline" 3;
		//setAttr "miDefaultOptions.rapidSamplesCollect" 5;
		//setAttr "miDefaultOptions.rapidSamplesShading" 4;
		
		//setAttr "miDefaultOptions.rapidSamplesCollect" 4;
		//setAttr "miDefaultOptions.rapidSamplesShading" 1;
		
		setAttr "miDefaultOptions.rapidSamplesCollect" $gRapidVisibilitySamples;
		setAttr "miDefaultOptions.rapidSamplesShading" $gRapidShadingQuality;
	
	}
	else
	{
		setAttr "miDefaultOptions.scanline" 1;				// scanline "on" for Yankee
	}
	// contrast
	setAttr "miDefaultOptions.contrastR" 0.02;
	setAttr "miDefaultOptions.contrastG" 0.02;
	setAttr "miDefaultOptions.contrastB" 0.02;
	setAttr "miDefaultOptions.contrastA" 0.02;
	
	// ray-tracing
	//setAttr "miDefaultOptions.maxRefractionRays" 0;
	setAttr "miDefaultOptions.maxRefractionRays" 3; // changed 06/19/06
	setAttr "miDefaultOptions.maxReflectionRays" 0;
	if ($renderType == "colorSeparation")
		setAttr "miDefaultOptions.maxShadowRayDepth" 0; // set shadow rays to 0 if colorSep pass

	
	// misc
	setAttr "miDefaultOptions.autoVolume" 0;
	if ($gMotionVector)
		setAttr "mentalrayGlobals.exportTriangles" 0;
	else
		setAttr "mentalrayGlobals.exportTriangles" 1;	// must always be on, except for motion vector
	setAttr "mentalrayGlobals.exportLightLinker" 0;  // don't export light linking.
	
	// motion blur
	// leave alone - controlled by rlc.
	
	
	
	
}
