//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2008-12-5
//
//	Update/Change: WansHoulOng
//	Last Updated: 2008-12-8
//	Description:
//				替换搅拌机的材质
//////////////////////////////////////////////////////////


global proc skRenderRepalceCup()
{
	string $renderLayers[] = `listConnections "renderLayerManager.renderLayerId"`;
	if (size($renderLayers)>1)
	{
		string $confresult = `confirmDialog -title "警告!" -message "文件存在渲染层!请确认?"
			-button "继续" -button "返回" -defaultButton "返回"
			-cancelButton "返回" -dismissString "返回"`;
		if ($confresult == "返回")
			return;
	}
	
	
	string $cups[] = `ls "*c_hi_cup?a_*" "*:*c_hi_cup?a_*" "*:*:*c_hi_cup?a_*"`;
	string $namespace;
	string $filename = "//file-cluster/GDC/Projects/Strawberry/Project/scenes/props/sp000107transparentmixer/master/sk_sp000107transparentmixer_h_ms_anim.mb";
	if (`objExists $cups[0]`)
	{
		file -import -type "mayaBinary" -ra true -namespace "delete" -options "v=0"  -pr -loadReferenceDepth "all" $filename;

		string $import[] = `ls "delete*:sp000107transparentmixer_c_hi_prop"`;
		$namespace = `substring $import[0] 1 (size($import[0])-34)`;

		for ($cup in $cups)
		{
			string $buff[];
			tokenize $cup ":" $buff;
			string $newcup = $namespace + $buff[size($buff)-1];
			
			if (`objExists $newcup`)
			{
				string $shape[] = `listHistory $newcup`;
				if (`objExists $shape[0]`)
				{
					string $shade[] = `listConnections -type shadingEngine $shape[0]`;
					if (`objExists $shade[0]`)
					{
						select -r $cup;
						hyperShade -assign $shade[0] ;
						select -cl;
					}
				}
			}
		}

		delete ($namespace + "sp000107transparentmixer_c_hi_prop");
		scOpt_performOneCleanup( { "shaderOption" } );

		print "                               材质替换完成!!!";
	}
	else
		warning "                               场景中无搅拌机物体或者名字不正确!!!";


}