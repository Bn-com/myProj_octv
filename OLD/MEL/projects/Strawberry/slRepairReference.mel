//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WanShouLong
//	Created: 2008-12-9
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////


global proc slRepairReference()
{
	//print "text\n";
	
	string $referenceFiles[] = `file -q -r`;
	for ($file in $referenceFiles )
	{
		string $referenceNode = `referenceQuery -rfn $file`;
		string $unresolved = `referenceQuery -f -un $referenceNode`;
		//$unresolved = `substituteAllString $unresolved "Z:" ""`;

		string $buff[];
		int $num = `tokenize $file "{}" $buff`;
		string $old = $buff[0];
		
		$num = `tokenize $old "\/" $buff`;
		string $fileName = $buff[$num-1];
		
		string $idmtFile = `slOemRRGetFile $unresolved`;
		if ($unresolved != $idmtFile)
		{
			file -lr $referenceNode $idmtFile;
		}
	}

	string $fullName= `file -q -sn`;
	string $shortName = `file -q -sn -shn`;
	//string $path = `substring $fullName 1 (size($fullName)-size($shortName))`;
	
	string $fn = `file -q -sn -shn`;
	string $buff[]={};
	int $num = `tokenize $fn "_" $buff`;
	string $es = $buff[0]+"_"+$buff[1]+"_"+$buff[2]+"_";
	string $path = "D:/Ninjago/Episode_"+$buff[1]+"/Sequence_"+$buff[2]+"/";
	sysFile -md $path;


	string $buff[]={};
	int $num = `tokenize $shortName "_." $buff`;
	string $newName="";
	for ($i=0;$i<($num-2);$i++)
	{
		$newName += $buff[$i]+"_";
	}

	if (startsWith($buff[$num-2],"c"))
	{
		string $ed = (int)`substring $buff[$num-2] 2 4`+1001;
		$ed = `substring $ed 2 4`;
		$newName += "c"+ $ed+"."+$buff[$num-1];
	}
	else
	{
		string $ed = (int)$buff[$num-2]+1001;
		$ed = `substring $ed 2 4`;
		$newName +=  $ed+"."+$buff[$num-1];
	}
	//print $newName;

	string $cam[] = `ls -type camera ("*_"+$buff[1]+"_*")`;
	if (size($cam))
	{
		string $camtr[] = `listRelatives -f -p $cam[0]`;
		if (`match ("_"+$buff[1]+"_"+$buff[2]) $camtr[0]` == ("_"+$buff[1]+"_"+$buff[2]))
		{
			select -r $camtr[0];
			source zwCameraImportExport.mel; zwBakeCamera;
		}
	}
	select -cl;
	
	file -rename ($path+$newName);
	file -save;

	string $avi = `substring $shortName 1 (size($shortName)-size($buff[$num-1]))`+"avi";
	string $aviobj[] = `getFileList -fld $path -fs $avi`;
	if (size($aviobj))
	{
		$avi = `substring $newName 1 (size($newName)-size($buff[$num-1]))`+"avi";
		sysFile -copy ($path+$avi) ($path+$aviobj[0]);
	}
	
	string $txt = `substring $shortName 1 (size($shortName)-size($buff[$num-1]))`+"txt";
	string $txtobj[] = `getFileList -fld $path -fs $txt`;
	if (size($txtobj))
	{
		$txt = `substring $newName 1 (size($newName)-size($buff[$num-1]))`+"txt";
		sysFile -copy ($path+$txt) ($path+$txtobj[0]);
	}
	
	print ("ÐÂÎÄ¼þ------"+$path+$newName+"\n");

	string $cmd = "\""+`getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -file \""+ $path+$newName+"\" -command \"source njAnimCameraSequence.mel;njAnimCameraSequenceSplit();\"";
	//print "\n";
	//print $cmd;
	system("\""+$cmd+"\"");
}

global proc slRepairReferenceUI()
{
	if (`window -q -exists slRepairReferenceWin`)
		deleteUI -window slRepairReferenceWin;

	window -title "Batch Run" -resizeToFitChildren true -h 210 slRepairReferenceWin;
		
		columnLayout -adj true ;
			text -label "FILES:";
			textScrollList -numberOfRows 8 -allowMultiSelection true -w 400 slRepairReferenceWin_fileList;
			string $form = `formLayout `;
				string $butadd = `button -label "Add"  -command "slRepairReferenceAddFile" `;
				string $butrem = `button -label "Remove" -command "slRepairReferenceRemoveFile" `;
			setParent ..;
			formLayout -edit
			-af		$butadd		"left"	5
			-ap		$butadd		"right"	0	49
			-ac		$butrem		"left"	10	$butadd
			-af		$butrem		"right"	5
			$form;
			separator -st "doubleDash" -h 10;
			button -label "Run" -h 20 -command "slRepairReferenceRun" ;
		setParent ..;	
	showWindow slRepairReferenceWin;
}

global proc slRepairReferenceAddFile()
{
	string $buf[] = `idmtFileDialog -filter "Maya Scene (*.mb;*.ma)|*.mb;*.ma||" -m`;

	string $objFiles[] = `textScrollList -q -ai slRepairReferenceWin_fileList`;
	for ($item in $buf)
	{
		if (!stringArrayCount($item,$objFiles))
		{
			textScrollList -e -a $item slRepairReferenceWin_fileList;
		}
	}
}

global proc slRepairReferenceRemoveFile()
{
	string $selected[] = `textScrollList -q -selectItem slRepairReferenceWin_fileList`;

	for ($item in $selected)
		textScrollList -edit -removeItem $item slRepairReferenceWin_fileList;
}

global proc slRepairReferenceRun()
{
	global string $WHOOempath;
	string $WHOOempath = `internalVar -uad`+"WHO_RR/";
	if (!`filetest -r $WHOOempath`)
		sysFile -md $WHOOempath;
	
	$fileId = `fopen ($WHOOempath+"WHOOem.mel") "w"`;
	fprint $fileId "source slRepairReference.mel;slRepairReference;";
	fclose $fileId;

	string $allFiles[] = `textScrollList -q -ai slRepairReferenceWin_fileList`;
	for ($file in $allFiles)
	{
		slOemCollectMissReference $file;
		string $cmd = "\""+ `getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -proj \""+$WHOOempath+"\" -file \""+$file+"\" -script \""+$WHOOempath+"WHOOem.mel\"";
		system("\""+$cmd+"\"");
	}

	//sysFile -del ($WHOOempath+"WHOOem.mel");
}

global proc slOemCollectMissReference(string $file)
{
	global string $WHOOempath;
	
	string $cmd = "\""+`getenv "MAYA_LOCATION"` +"/bin/mayabatch\" -proj \""+$WHOOempath+"\" -file \""+$file+"\"";
	//print $cmd;
	string $result = `system("\""+$cmd+"\"")`;
	//print $result;

	string $buff[]={};
	int $num = `tokenize $result "\n" $buff`;
	string $missFiles[]={};
	for($col in $buff)
	{
		if(startsWith($col,"Warning"))
		{
			string $buff1[];
			int $num1 = `tokenize $col ":\n" $buff1`;
			for($i=0;$i<$num1;$i++)
			{
				if(`match "Reference file not found." $buff1[$i]` != "")
				{
					string $buff2[];
					int $num2 = `tokenize $col ":" $buff2`;
					$missFiles[size($missFiles)] = strip($buff2[$num2-1]);
				}
			}
		}
	}


	for ($item in $missFiles)
	{
		string $buff3[]={};
		int $num3 = `tokenize $item "\/" $buff3`;
		string $file = $buff3[$num3-1];
		
		if (!`filetest -r ($WHOOempath+$file)`)
		{
			string $copy = `slOemRRGetFile ("Z:"+$item)`;
			sysFile -copy ($WHOOempath+$file) $copy;
		}
	}
	//print "---------\n";
	//print $missFiles;
}

global proc string slOemRRGetFile(string $filename)
{
	string $idmtFile;
	int $exist=1;
	
	
	string $buff[]={};
	int $num = `tokenize $filename "{}" $buff`;
	//string $proj = `GetProjnameByScenename $buff[0]`;
	$filename = $buff[0];

	//if (startsWith($filename,"nj"))
	//{
		$idmtFile = `substituteAllString $filename "Z:/Client/Lego/Ninjago2012/" "//file-cluster/GDC/Projects/Ninjago/Reference/FTP_Download/Ninjago2012/"`;
		string $tempFile = $idmtFile;

		//ma
		$idmtFile = `substituteAllString $tempFile ".mb" ".ma"`;
		string $buff1[] = {};
		int $num1 = `tokenize $idmtFile "\/" $buff1`;
		if (!startsWith($buff1[$num1-1],"nj_"))
		{
			if (!`filetest -r $idmtFile`)
			{
				$idmtFile = `substituteAllString $idmtFile $buff1[$num1-1] ("nj_"+$buff1[$num1-1])`;
				if (!`filetest -r $idmtFile`)
				{
					$exist=0;
				}
			}
		}
		else 
		{
			if (!`filetest -r $idmtFile`)
			{
				string $rep = `substring $buff1[$num1-1] 4 (size($buff1[$num1-1]))`;
				$idmtFile = `substituteAllString $idmtFile $buff1[$num1-1] $rep`;
				if (!`filetest -r $idmtFile`)
				{
					$exist=0;
				}
			}
		}
		if ($exist==0)
		{
			$idmtFile = `substituteAllString $tempFile ".ma" ".mb"`;
			string $buff1[] = {};
			int $num1 = `tokenize $idmtFile "\/" $buff1`;
			if (!startsWith($buff1[$num1-1],"nj_"))
			{
				if (!`filetest -r $idmtFile`)
				{
					$idmtFile = `substituteAllString $idmtFile $buff1[$num1-1] ("nj_"+$buff1[$num1-1])`;
				}
			}
			else 
			{
				if (!`filetest -r $idmtFile`)
				{
					string $rep = `substring $buff1[$num1-1] 4 (size($buff1[$num1-1]))`;
					$idmtFile = `substituteAllString $idmtFile $buff1[$num1-1] $rep`;
				}
			}
		}
	//}
	/*else
	{
		if ($buff[$num-2] != "cam")
		{
			string $type = `substring $char 1 2`;
			string $folder;
			switch ($type)
			{
				case "sc" :
					$folder = "characters";
					break;
				case "ss" :
					$folder = "environments";
					break;
				case "sp" :
					$folder = "props";
					break;
			}

			string $filePath = "//file-cluster/GDC/Projects/"+$proj+"/Project/scenes/"+$folder+"/"+$char+"/master/";
			string $charList[] = `getFileList -fld $filePath -fs $filename`;
			if ( size($charList))
			{
				$idmtFile = $filePath+$filename;
			}
		}
	}*/

	return  $idmtFile;
}