//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc slModelCheckinMSNotex()
{
	string $fullName = `file -q -sn`;
	string $buff[];
	int $num = `tokenize $fullName "\/" $buff`;
	string $path = `substring $fullName 1 (size($fullName)-size($buff[$num-1]))`;
	
	string $sceneName = `file -q -sn -shn`;
	$buff={};
	$num = 0;
	$num = `tokenize $sceneName "_." $buff`;

	string $confirm;
	if ($buff[$num-2] == "tx" || $buff[$num-2] == "tex")
	{
		$confirm = `confirmDialog -title "警告" -message "请CHECKIN对应版本的Notex文件.自动或返回手动?" 
						-button "自动" -button "手动" -defaultButton "自动" -cancelButton "手动" -dismissString "手动"`;
	}
	
	if ($confirm == "自动")
	{
		string $newName;
		if ($buff[$num-2] == "tx")
		{
			$newName = `substring $sceneName 1 (size($sceneName)-5)`+"ms_notex.mb";
		}
		else if ($buff[$num-2] == "tex")
		{
			$newName = `substring $sceneName 1 (size($sceneName)-6)`+"notex.mb";
		}

		string $ws = `workspace -q -rd`;
		string $sc[] = `workspace -q -ot`;
		string $newPath;
		if (size($sc) ==1)
			$newPath = $ws+$sc[0]+"/";
		else if (size($sc) ==2)
			$newPath = $ws+$sc[1]+"/";


		file -rename ($newPath+$newName);
		slModelAssignLamber;

		//string $lights[] = `ls -lt`;
		//delete $lights;
		string $lightGroup[] = `ls "*_light"`;
		if (size($lightGroup))
		{
			delete $lightGroup;
		}

		OptimizeScene;
		file -save;

		select -cl;

		source "zwCheckin.mel";zwCheckin;
	}
	else 
		return ;


}

global proc slModelAssignLamber()
{
	string $lambert = "lambert_WHO";
	string $mat[] = `ls -mat $lambert`;
	if (!size($mat))
	{
		shadingNode -asShader lambert -n $lambert;
		sets -renderable true -noSurfaceShader true -empty -name ($lambert+"SG");
		connectAttr -f ($lambert+".outColor") ($lambert+"SG.surfaceShader");
	}
	
	string $shadings[] = `ls -type shadingEngine`;
	string $defaults[] = {"initialParticleSE","initialShadingGroup","lambert_WHOSG"};
	
	for ($sg in $shadings)
	{
		if (!stringArrayCount($sg,$defaults))
		{
			string $surface[] = `listConnections -plugs true ($sg+".surfaceShader")`;
			if (size($surface))
			{
				disconnectAttr $surface[0] ($sg+".surfaceShader");
			}
			connectAttr -f "lambert_WHO.outColor" ($sg+".surfaceShader");
		}
	}	
}

global proc slModelCheckinMSNotexSaveAs()
{
	string $sceneName = `file -q -sn -shn`;
	string $buff[]={};
	int $num = 0;
	$num = `tokenize $sceneName "_." $buff`;

	string $newName;
	if ($buff[$num-2] == "tx")
	{
		$newName = `substring $sceneName 1 (size($sceneName)-5)`+"ms_notex.mb";
	}
	else if ($buff[$num-2] == "tex")
	{
		$newName = `substring $sceneName 1 (size($sceneName)-6)`+"notex.mb";
	}

	string $ws = `workspace -q -rd`;
	string $sc[] = `workspace -q -ot`;
	string $newPath;
	if (size($sc) ==1)
		$newPath = $ws+$sc[0]+"/";
	else if (size($sc) ==2)
		$newPath = $ws+$sc[1]+"/";
	else 
		$newPath = $ws+"/";


	file -rename ($newPath+$newName);
	slModelAssignLamber;

	//string $lights[] = `ls -lt`;
	//delete $lights;
	/*string $lightGroup[] = `ls "*_light"`;
	if (size($lightGroup))
	{
		delete $lightGroup;
	}*/

	OptimizeScene;
	file -save;

	select -cl;
}
