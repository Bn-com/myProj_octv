//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2009-2-4
//
//	Update/Change: WansHoulOng
//	Last Updated: 2009-2-4
//	Description:
//				
//			头发参数列表工具，内含远中近头发精度
//////////////////////////////////////////////////////////

global proc slRenderHairSystemTools()
{
	if(`window -exists slRenderHairSystemToolsUI`)
		deleteUI slRenderHairSystemToolsUI;
	window -title "Hair List                                                                                                                                                                    WHO" -mb true  -s false  slRenderHairSystemToolsUI;
		menu -label "更新";
			menuItem -label "更新HairSystem列表" -command "slRenderHairSystemToolsCharUpdate";
		
		tabLayout -cc "slRenderHairSystemToolsTabChange" slRenderHairSystemToolsUI_tab;
			string $Shair = `frameLayout -label "" -labelAlign "top" -cl false  -cll false -cc "" -borderStyle "etchedIn"`;
				columnLayout slRenderHairSystemToolsUI_hair;	
					rowColumnLayout -nc 9 -cw 1 120 -cw 2 90 -cw 3 80 -cw 4 70 -cw 5 60 -cw 6 60 -cw 7 50 -cw 8 50 -cw 9 50;
						//标题栏
						button -vis 0;
						button -l "hairsPerClump";
						button -l "subSegments";
						button -l "hairWidth";
						button -l "Start Time";
						button -l "End Time";
						button -l "near";
						button -l "middle";
						button -l "far";
					setParent ..;
					rowColumnLayout -nc 10 -cw 1 120 -cw 2 90 -cw 3 80 -cw 4 70 -cw 5 60 -cw 6 60 -cw 7 20 -cw 8 50 -cw 9 50 -cw 10 50 slRenderHairSystemToolsUI_charhair;
						//属性栏
						text -l "hair1";
						textField ;
						textField ;
						textField ;
						textField ;
						textField ;
						button -vis 0;
						checkBox -l "";
						checkBox -l "";
						checkBox -l "";
					setParent ..;
				setParent ..;
			setParent..;
			
		tabLayout -edit
			-tabLabel	$Shair				Shair
		slRenderHairSystemToolsUI_tab;

	showWindow slRenderHairSystemToolsUI;
	slRenderHairSystemToolsCharUpdate;
}

global proc slRenderHairSystemToolsCharUpdate()
{
	string $char[] = `ls "*:Character" "*:*:Character"`;
	string $Thair[];
	for ($c in $char)
	{
		string $buff[];
		int $num = `tokenize $c ":" $buff`;
		string $pre = `substring $c 1 (size($c)-size($buff[$num-1])-1)`;
		
		string $hairSystem[] = `ls -type hairSystem ($pre+":*")`;
		if (size($hairSystem))
			$Thair[size($Thair)] = $pre;
	}

	if (!size($Thair))
	{
		slRenderHairSystemToolsTabChange;
		return ;
	}
	string $delUI[] = `tabLayout -q -ca slRenderHairSystemToolsUI_tab`;
	deleteUI $delUI;

	setParent slRenderHairSystemToolsUI_tab;
	for ($tab in $Thair)
	{
		string $hair = `frameLayout -label "" -labelAlign "top" -cl false  -cll false -cc "" -borderStyle "etchedIn"`;
			columnLayout ("slRenderHairSystemToolsUI_hair"+$tab);	
				rowColumnLayout -nc 9 -cw 1 120 -cw 2 90 -cw 3 80 -cw 4 70 -cw 5 60 -cw 6 60 -cw 7 50 -cw 8 50 -cw 9 50;
					//标题栏
					button -vis 0;
					button -l "hairsPerClump";
					button -l "subSegments";
					button -l "hairWidth";
					button -l "Start Time";
					button -l "End Time";
					button -l "near" -c ("slRenderHairSystemToolsSetNearFarAll(\"near\",\""+$tab+"\")");
					button -l "middle" -c ("slRenderHairSystemToolsSetNearFarAll(\"middle\",\""+$tab+"\")");
					button -l "far" -c ("slRenderHairSystemToolsSetNearFarAll(\"far\",\""+$tab+"\")");
				setParent ..;
				rowColumnLayout -nc 10 -cw 1 120 -cw 2 90 -cw 3 80 -cw 4 70 -cw 5 60 -cw 6 60 -cw 7 20 -cw 8 50 -cw 9 50 -cw 10 50 ("slRenderHairSystemToolsUI_"+$tab);
				string $hairSystem[] = `ls -type hairSystem ($tab+":*")`;
				for ($hs in $hairSystem)
				{
					button -l $hs -al right -ann $hs -c ("slRenderHairSystemToolsSelectHair(\""+$hs+"\")");
					float $va = slRenderHairSystemToolsGetAttr($hs,"hairsPerClump");
					textField -text $va -cc ("slRenderHairSystemToolsSetAttr(\""+$hs+"\",\"hairsPerClump\")") ($hs+"_hairsPerClump");
					float $va = slRenderHairSystemToolsGetAttr($hs,"subSegments");
					textField -text $va -cc ("slRenderHairSystemToolsSetAttr(\""+$hs+"\",\"subSegments\")") ($hs+"_subSegments");
					float $va = slRenderHairSystemToolsGetAttr($hs,"hairWidth");
					textField -text $va -cc ("slRenderHairSystemToolsSetAttr(\""+$hs+"\",\"hairWidth\")")  ($hs+"_hairWidth");
					float $va = slRenderHairSystemToolsGetAttr($hs,"startTime");
					if ($va == 3.14159)
						textField -text "NULL" -en 0;
					else
						textField -text $va -en 0;
					float $va = slRenderHairSystemToolsGetAttr($hs,"endTime");
					if ($va == 3.14159)
						textField -text "NULL" -en 0;
					else
						textField -text $va -en 0;
					button -vis 0;
					checkBox -l "" -onc ("slRenderHairSystemToolsSetNearFar(\"near\",\""+$tab+"\",\""+$hs+"\")") ($hs+"_near");
					checkBox -l "" -onc ("slRenderHairSystemToolsSetNearFar(\"middle\",\""+$tab+"\",\""+$hs+"\")") ($hs+"_middle");
					checkBox -l "" -onc ("slRenderHairSystemToolsSetNearFar(\"far\",\""+$tab+"\",\""+$hs+"\")") ($hs+"_far");
				}
				setParent ..;
			setParent ..;
		setParent ..;
		string $buff[];
		int $num = `tokenize $tab ":" $buff`;
		$num = `tokenize $buff[$num-1] "_" $buff`;
		string $name = GetCharacterNameById("sk",$buff[1]);
		$name = toupper(`substring $name 1 1`)+"hair";

		tabLayout -edit
			-tabLabel	$hair			$name
		slRenderHairSystemToolsUI_tab;
	}
	setParent ..;

	slRenderHairSystemToolsTabChange;
}

global proc slRenderHairSystemToolsHairUpdate(string $hs)
{
	string $attr[] = {"hairsPerClump","subSegments","hairWidth"};
	for ($at in $attr)
	{
		float $value = `getAttr ($hs+"."+$at)`;
		textField -e -text $value  ($hs+"_"+$at);
	}
}
global proc float slRenderHairSystemToolsGetAttr(string $hs,string $attr)
{
	float $value;
	if (`attributeExists $attr $hs`)
		$value= `getAttr ($hs+"."+$attr)`;
	
	if (`match "Time" $attr` != "" )
	{
		string $cache[] = `listConnections -type diskCache $hs`;
		if (size($cache))
			$value = `getAttr ($cache[0]+"."+$attr)`;
		else
			$value = 3.14159;
	}
	return $value;
}

global proc  slRenderHairSystemToolsSetAttr(string $hs,string $attr)
{
	float $value = `textField -q -text ($hs+"_"+$attr)`;
	
	if (`attributeExists $attr $hs`)
		setAttr ($hs+"."+$attr) $value;
	slRenderHairSystemToolsSelectHair($hs);
}

global proc  slRenderHairSystemToolsSelectHair(string $hs)
{
	string $pfxHair[] = `listConnections -type pfxHair $hs`;
	select $pfxHair;
}

global proc  slRenderHairSystemToolsSetNearFar(string $type,string $char,string $hs)
{
	source slRenderHairNearFar.mel;

	slRenderHairNearFarSetting $type $char;

	string $cbs[] = {"near","middle","far"};
	for ($cb in $cbs )
	{
		if ($cb != $type)
			checkBox -e -v 0 ($hs+"_"+$cb);
	}
	slRenderHairSystemToolsSelectHair $hs;
	
	slRenderHairSystemToolsHairUpdate $hs;
}

global proc  slRenderHairSystemToolsSetNearFarAll(string $type,string $char)
{
	string $hairSystem[] = `ls -type hairSystem ($char+":*")`;
	for ($hs in $hairSystem)
	{
		slRenderHairSystemToolsSetNearFar $type $char $hs;
		checkBox -e -v 1 ($hs+"_"+$type);
	}
	select -cl;
}

global proc  slRenderHairSystemToolsTabChange()
{
	string $current = `tabLayout -q -st slRenderHairSystemToolsUI_tab`;
	string $frChild[] = `frameLayout -q -ca $current`;
	string $clChild[] = `columnLayout -q -ca $frChild[0]`;
	string $rwChild[] = `rowColumnLayout -q -ca $clChild[1]`;

	int $hairSystems = (size($rwChild))/10;
	
	window -e -h (116+22*$hairSystems) -w 654 slRenderHairSystemToolsUI;
}