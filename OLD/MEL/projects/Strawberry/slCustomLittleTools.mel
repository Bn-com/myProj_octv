//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2009-3-9
//
//	Update/Change: WansHoulOng
//	Last Updated: 2009-3-9
//	Description:
//				常用小工具集合
//////////////////////////////////////////////////////////


global proc string[] slListConnectionWithTwoObjects(string $sour,string $dest)
{
	string $connects[]={$sour,"->",$dest};
	
	string $connectAttrs[] = `listConnections -s 0 -d 1 -c 1 -p 1 $sour`;
	for ($i=1;$i<size($connectAttrs);$i=$i+2)
	{
		if (startsWith($connectAttrs[$i],$dest))
		{
			$connects[size($connects)] = $connectAttrs[$i-1];
			$connects[size($connects)] = "->";
			$connects[size($connects)] = $connectAttrs[$i];
		}
	}
	
	string $connectAttrs[] = `listConnections -s 1 -d 0 -c 1 -p 1 $sour`;
	for ($i=1;$i<size($connectAttrs);$i=$i+2)
	{
		if (startsWith($connectAttrs[$i],$dest))
		{
			$connects[size($connects)] = $connectAttrs[$i-1];
			$connects[size($connects)] = "<-";
			$connects[size($connects)] = $connectAttrs[$i];
		}
	}
	return $connects;
}

global proc string[] slListNongroupTransforms(string $group)
{
	string $nongroup[];
	string $allChildren[] = `listRelatives -f -ad -type transform $group`;
	for ($c in $allChildren)
	{
		int $g = slJudgeGroup($c);
		if (!$g)
		{
			$nongroup[size($nongroup)] = $c;
		}
	}
	return $nongroup;
}

global proc int slJudgeGroup(string $transform)
{
	string $history[] = `listHistory $transform`;

	if (size($history)==1 && nodeType($history[0]) == "transform")
		return 1;
	else
		return 0;
}