//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 2009-2-2
//
//	Update/Change: WansHoulOng
//	Last Updated: 2009-2-2
//	Description:
//				根据渲染要求，头发精度依距离调整
//
//////////////////////////////////////////////////////////


global proc slRenderHairNearFar()
{
	if (`window -ex slRenderHairNearFarUI`)
		deleteUI slRenderHairNearFarUI;

	window -title "Hair Near/Far                                                  WHO" -s 0 slRenderHairNearFarUI;
		rowColumnLayout  -nc 3 ;
			button -l "近" -c "slRenderHairNearFarSetting(\"near\",\"\")";
			button -l "中" -c "slRenderHairNearFarSetting(\"middle\",\"\")";
			button -l "远" -c "slRenderHairNearFarSetting(\"far\",\"\")";
		setParent ..;
	showWindow slRenderHairNearFarUI;
}

global proc slRenderHairNearFarSetting(string $type,string $char)
{
	source slRenderAllTools.mel;
	
	string $sl[] = `ls -sl`;

	if (!size($sl) && $char == "")
	{
			error "请选择一个或多个角色的character!";
	}
	else if ($char != "")
	{
		$sl = {($char+":character")};
	}
	//$sl = {($char+":character")};

	for ($char in $sl)
	{
		string $buff[];
		int $num = `tokenize $char ":" $buff`;
		string $pre = `substring $char 1 (size($char)-size($buff[$num-1]))`;
		string $extraHS[] = slRenderHairNearFarExtraHS($pre);

		string $hairSystem[] = `ls -type hairSystem ($pre+"*")`;
		for ($hs in $hairSystem)
		{
			switch ($type)
			{
				/*case "near" :
					//所有头发
					setAttr ($hs+".hairsPerClump")	70;
					setAttr ($hs+".subSegments")	2;
					setAttr ($hs+".hairWidth")		0.008;
					
					//特殊头发
					setAttr ($pre+$extraHS[0]+".hairsPerClump") 100;
					if (size($extraHS) == 3)
					{
						setAttr ($pre+$extraHS[1]+".hairsPerClump") 300;
						setAttr ($pre+$extraHS[2]+".hairsPerClump") 300;
					}
					break;*/
				case "near" :
					setAttr ($hs+".hairsPerClump")	40;
					setAttr ($hs+".subSegments")	1;
					setAttr ($hs+".hairWidth")		0.015;
					
					if (`objExists($pre+$extraHS[0])`)
					{
						setAttr ($pre+$extraHS[0]+".hairsPerClump") 70;
						if (size($extraHS) == 3)
						{
							setAttr ($pre+$extraHS[1]+".hairsPerClump") 200;
							setAttr ($pre+$extraHS[2]+".hairsPerClump") 200;
						}
					}
					slRenderSettingWithMentalray("hair");
					break;
				case "middle" :
					setAttr ($hs+".hairsPerClump")	30;
					setAttr ($hs+".subSegments")	0;
					setAttr ($hs+".hairWidth")		0.025;

					if (`objExists($pre+$extraHS[0])`)
					{
						setAttr ($pre+$extraHS[0]+".hairsPerClump") 40;
						if (size($extraHS) == 3)
						{
							setAttr ($pre+$extraHS[1]+".hairsPerClump") 100;
							setAttr ($pre+$extraHS[2]+".hairsPerClump") 100;
						}
					}
					slRenderSettingWithMentalray("hair");
					break;
				case "far" :
					setAttr ($hs+".hairsPerClump")	30;
					setAttr ($hs+".subSegments")	0;
					setAttr ($hs+".hairWidth")		0.025;

					if (`objExists($pre+$extraHS[0])`)
					{
						setAttr ($pre+$extraHS[0]+".hairsPerClump") 40;
						if (size($extraHS) == 3)
						{
							setAttr ($pre+$extraHS[1]+".hairsPerClump") 100;
							setAttr ($pre+$extraHS[2]+".hairsPerClump") 100;
						}
					}
					slRenderSettingWithMayaSoftware;
					break;
			}
		}
	}
}

global proc string[]  slRenderHairNearFarExtraHS(string $pre)
{
	string $extraHS[];
	if (`match "sk_sc001" $pre` != "")
	{
		$extraHS[0] = "HS_backShape";
	}
	if (`match "sk_sc002" $pre` != "")
	{
		$extraHS[0] = "HS_head_PLUMShape";
	}
	if (`match "sk_sc003" $pre` != "")
	{
		$extraHS[0] = "HS_backShape";
	}
	if (`match "sk_sc004" $pre` != "")
	{
		$extraHS[0] = "HS_back_OrangeShape";
	}
	if (`match "sk_sc005" $pre` != "")
	{
		$extraHS[0] = "HS_back_aShape";
	}
	if (`match "sk_sc006" $pre` != "")
	{
		$extraHS[0] = "HS_behindShape";
		$extraHS[1] = "HS_leftShape";
		$extraHS[2] = "HS_rightShape";
	}

	return $extraHS;
}