global proc slRebuildMelForTFM()
{
	string $indName;
	string $local = `textFieldButtonGrp -q -text slRebuildMelForTFMWindow_ap` + "/";
	string $path = `textFieldButtonGrp -q -text slRebuildMelForTFMWindow_tfm` + "/";
	string $files[] = `getFileList -fs ($path + "*.pose")`;
	for ($file in $files)
	{
		string $data = "Charactor Facial Data ...\n";

		$fileId = `fopen ($path + $file) r`;
		string $nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;
		$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;$nextLine = `fgetline $fileId`;
		while(size($nextLine) >0)
		{
			string $buff[];		
			tokenize $nextLine " (" $buff;
			if ($buff[0] == "fmp_setPoseFloatAttr")
			{
				string $buff[];		
				tokenize $nextLine "," $buff;
				
				string $buffer[];
				string $con,$attr,$val;
				//controls
				tokenize $buff[0] "()" $buffer;
				tokenize $buffer[1] " +\"" $buffer;
				if (size($buffer) == 2)
				{
					if ($buffer[0] == "$l")
						$con = "L_"+ $buffer[1];
					else 
						$con = "R_"+ $buffer[1];
				}
				else 
					$con = $buffer[0];

				//attrs
				tokenize $buff[1] " \"" $buffer;
				$attr = $buffer[0];

				//value
				tokenize $buff[2] " *()" $buffer;
				$val = $buffer[0];
				
				$data += ($con + "." + $attr+ "   " + $val + "\n");
				//print ($con + "." + $attr+ "   " + $val + "\n");
			}
			$nextLine = `fgetline $fileId`;	
		}
		fclose $fileId;
		$data += "End...";

		string $post = `substitute ".pose" $file ""`;
		$indName += ($post + "   " + $post +"\n");
		$post += ".dat";

		$fileId = `fopen ($local + $post) w`;
		fprint $fileId $data;
		fclose $fileId;
		
	}
	
	//$fileId = `fopen ($local + "public.ind") w`;
	//fprint $fileId $indName;
	//fclose $fileId;
}

global proc slRebuildMelForTFMWin()
{
	if (`window -ex slRebuildMelForTFMWindow`)
		deleteUI slRebuildMelForTFMWindow;
	
	window slRebuildMelForTFMWindow;
		columnLayout ;
			textFieldButtonGrp -label "TFMÂ·¾¶:" -text "" -buttonLabel "select" -bc "slRebuildMelForTFMWin_getPath t" slRebuildMelForTFMWindow_tfm;
			textFieldButtonGrp -label "APÂ·¾¶:" -text "" -buttonLabel "select" -bc "slRebuildMelForTFMWin_getPath a" slRebuildMelForTFMWindow_ap;
			button -label "×ª»»" -w 100 -c "slRebuildMelForTFM";
	showWindow slRebuildMelForTFMWindow;
}

global proc string slRebuildMelForTFMWin_getPath(string $type)
{
	string $facialDefaultPath = `fileBrowserDialog -m 4 -fc ("slRebuildMelForTFMWin_setPath "+$type) -an "select_folder"`;
	return ""; 
}

global proc slRebuildMelForTFMWin_setPath(string $type,string $filePath,string $fileType)
{
	if ($type == "t")
		textFieldButtonGrp -e -text $filePath slRebuildMelForTFMWindow_tfm;
	if ($type == "a")
		textFieldButtonGrp -e -text $filePath slRebuildMelForTFMWindow_ap;
}