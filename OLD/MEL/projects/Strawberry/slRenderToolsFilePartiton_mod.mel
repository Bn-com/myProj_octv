//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc slRenderToolsFilePartiton()
{
	global string $slFilePartitionPath;
	//string $file = `file -q -sn`;
	//string $buff[];
	//int $num = `tokenize $file "\/" $buff`;
	//string $slFilePartitionPath = `substring $file 1 (size($file)-size($buff[$num-1]))`;
	//sysFile -md $slFilePartitionPath;
	
	
	if (`window -ex slRenderToolsFilePartitonWin`)
		deleteUI slRenderToolsFilePartitonWin;

	window -title "WHO" -sizeable false slRenderToolsFilePartitonWin;

		string $tab = `tabLayout `;
			string $fp = `columnLayout -rs 5 -adj true`;
				frameLayout -l "fset" -cll true slRenderToolsFilePartitonWin_fset;
					formLayout slRenderToolsFilePartitonWin_all;
						textScrollList -ams true slRenderToolsFilePartitonWin_renderlayer;
						columnLayout -rs 5 slRenderToolsFilePartitonWin_command;
							button -l "创建"		-w 80 -c "slRenderToolsFilePartitonCreat";
							button -l "改名"		-w 80 -c "slRenderToolsFilePartitonRename";
							button -l "删除"		-w 80 -c "slRenderToolsFilePartitonDelete";
							button -l "添加物体"	-w 80 -c "slRenderToolsFilePartitonAddObj";
							button -l "删除物体"	-w 80 -c "slRenderToolsFilePartitonRemoveObj";
							button -l "分割文件"	-w 80 -c "slRenderToolsFilePartitonGo";
						setParent ..;
					setParent ..;
					formLayout -edit
						-af	slRenderToolsFilePartitonWin_renderlayer	"top"		5
						-af	slRenderToolsFilePartitonWin_renderlayer	"left"		5
						-ac	slRenderToolsFilePartitonWin_renderlayer	"right"		5	slRenderToolsFilePartitonWin_command
						-af	slRenderToolsFilePartitonWin_renderlayer	"bottom"	5

						-af	slRenderToolsFilePartitonWin_command		"top"		5
						//-af	slRenderToolsFilePartitonWin_command		"left"		5
						-af	slRenderToolsFilePartitonWin_command	 	"right"		5
						-af	slRenderToolsFilePartitonWin_command		"bottom"	5
					slRenderToolsFilePartitonWin_all;
				setParent ..;
			//setParent ..;

				//fileBrowserDialog slRenderToolsFilePartitonWin_filepath;

				frameLayout -l "file list" -cll true;
					formLayout slRenderToolsFilePartitonWin_file;
						textScrollList -ams true -dcc "slRenderToolsFilePartitonRenderShowImage" slRenderToolsFilePartitonWin_filelist;
						columnLayout -rs 5 slRenderToolsFilePartitonWin_filecommand;
							textField 	-w 80 slRenderToolsFilePartitonWin_fileframe;
							button -l "Render"		-w 80 -c "slRenderToolsFilePartitonRender 100";
							button -l "Image10%"	-w 80 -c "slRenderToolsFilePartitonRender 10";
							button -l "Image20%"	-w 80 -c "slRenderToolsFilePartitonRender 20";
							button -l "Image50%"	-w 80 -c "slRenderToolsFilePartitonRender 50";
						setParent ..;
					setParent ..;
					formLayout -edit
						-af	slRenderToolsFilePartitonWin_filelist		"top"		5
						-af	slRenderToolsFilePartitonWin_filelist		"left"		5
						-ac	slRenderToolsFilePartitonWin_filelist		"right"		5	slRenderToolsFilePartitonWin_filecommand
						-af	slRenderToolsFilePartitonWin_filelist		"bottom"	5

						-af	slRenderToolsFilePartitonWin_filecommand		"top"		5
						-af	slRenderToolsFilePartitonWin_filecommand	 	"right"		5
						-af	slRenderToolsFilePartitonWin_filecommand		"bottom"	5
					slRenderToolsFilePartitonWin_file;
				setParent ..;
			setParent ..;

			string $tools = `rowColumnLayout -nc 2 -cw 1 170 -cw 2 170  -cs 2 5`;
					string $b1 = `button -l "Character" -c "slRenderAllToolsCharacterChar \"\" "`;
					string $b2 = `button -l "Background" -c "slRenderAllToolsBackgroundBG  \"\""`;
					string $b3 = `button -l "CharacterOcc" -c "slRenderAllToolsCharacterOcc  \"\""`;
					string $b4 = `button -l "BackgroundOcc" -c "slRenderAllToolsBackgroundOcc  \"\""`;
					string $b5 = `button -l "CharacterHair" -c "slRenderAllToolsCharacterHair   \"\""`;
					string $b6 = `button -l "BackgroundRGB" -c "slRenderAllToolsBackgroundRGB  \"\""`;
					string $b7 = `button -l "CharacterColor" -c "slRenderAllToolsCharacterColor  \"\""`;
					string $b8 = `button -l "BackgroundDepth" -c "slRenderAllToolsBackgroundDepth  \"\""`;
					string $b9 = `button -l "CharacterRGB" -c "slRenderAllToolsCharacterRGB  \"\""`;
					string $b10=`button -l "BackgroundShadow" -c "slRenderAllToolsBackgroundShadow  \"\""`;
					string $b11=`button -l "CharacterShadow" -c "slRenderAllToolsCharacterShadow  \"\""`;
					string $b12=`button -l "BackgroundLightfog" -c "slRenderAllToolsBackgroundLightfog \"\""`;
			setParent ..;
			/*formLayout -edit
				-af	$row	"left"		10
				-af	$row	"right"		10
				-af	$row	"top"		10
				-af	$row	"bottom"	10
			$tools;*/

		
		tabLayout -edit 
			-tl	$fp		"文件分割"	
			-tl	$tools	"单独分层"	
		$tab;
		//setParent ..;

	window -e -w 354 -h 430 slRenderToolsFilePartitonWin;
	showWindow slRenderToolsFilePartitonWin;

	//刷新渲染层
	slRenderToolsFilePartitonUpdate;

	//Render Tools
	source "slRenderAllTools.mel";
	source "slRenderCharacterControl.mel";

	//Material Tools
	source "ezRenderMainLayoutMaterial.mel";

}

global proc slRenderToolsFilePartitonUpdate()
{
	global string $slFilePartitionPath;
	string $file = `file -q -sn`;
	string $buff[];
	int $num = `tokenize $file "\/" $buff`;
	string $slFilePartitionPath = `substring $file 1 (size($file)-size($buff[$num-1]))`;
	
	// update list of "fset"
	string $fsets[] = `ls -type objectSet "*fSet"`;
	textScrollList -e -ra slRenderToolsFilePartitonWin_renderlayer;
	for ($set in $fsets)
	{
		textScrollList -e -append $set slRenderToolsFilePartitonWin_renderlayer;
	}

	//update list of "file list"
	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	string $skfiles[] = `getFileList -fs ($slFilePartitionPath+$snpre+"*.mb")`;
	if (size($skfiles))
	{
		textScrollList -e -ra slRenderToolsFilePartitonWin_filelist;
		for ($sf in $skfiles)
		{
			textScrollList -e -append $sf slRenderToolsFilePartitonWin_filelist;
		}
	}
}

global proc slRenderToolsFilePartitonCreat()
{
	global string $slFilePartitionPath;
	
	string $slFilePartitionTypeChar;
	string $slFilePartitionTypeLayer;
	string $slFilePartitionLayerName;

	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];

	string $cams[] = `ls -type camera ("*_"+$buff[1]+"_"+$buff[2]+"*") ("*:*_"+$buff[1]+"_"+$buff[2]+"*")`;
	if (size($cams)>1)
	{
		 confirmDialog  -title "警告" -message "场景中存在多个镜头摄像机，请删除多余的!" -button "确认";
		 return ;
	}
	else if (size($cams)==0)
	{
		 confirmDialog  -title "警告" -message "场景中没有对应镜头的摄像机，请修正!" -button "确认";
		 return ;
	}

 	string $result = `confirmDialog  -title "File Set"	-message "请选择类别:" -button "角色" -button "场景" -b "取消" -cancelButton "取消"`;
	 if ($result == "角色")
	 {
		 $slFilePartitionTypeChar = "slRenderAllToolsCharacter";
		
		$result = `confirmDialog  -title "File Set"	-message "请选择层属性:" -button "Char" -button "Occ" -b "Hair" -b "Shadow" -cancelButton "取消"`;
		if ($result != "取消")
		{
			$slFilePartitionTypeLayer = $result;
			$result = `promptDialog  -title "File Set" -message "请命名(层名):" -button "OK" -button "Cancel" -cancelButton "Cancel" -db "OK"`;
			if ($result == "OK") 
			{
				$slFilePartitionLayerName = `promptDialog -query -text`;
				string $kset = `sets -n ($slFilePartitionLayerName + "_fSet")`;
				sets -edit -forceElement  $kset $cams;
				textScrollList -e -append ($slFilePartitionLayerName + "_fSet") slRenderToolsFilePartitonWin_renderlayer;
				$fbString = $slFilePartitionLayerName + "_fSet";

				//creat mayabatch command type
				$fileId = `fopen ($slFilePartitionPath+$snpre+"_"+$slFilePartitionLayerName+".txt") "w"`;
				fprint $fileId ($slFilePartitionTypeChar+"***"+$slFilePartitionTypeLayer+"***");
				fclose $fileId;
			}	
		}
	 }
	 else if ($result == "场景")
	 {
		 $slFilePartitionTypeChar = "slRenderAllToolsBackground";
		
		$result = `confirmDialog  -title "File Set"	-message "请选择层属性:" -button "BG" -button "Occ" -b "Depth" -cancelButton "取消"`;
		if ($result != "取消")
		{
			$slFilePartitionTypeLayer = $result;
			$result = `promptDialog  -title "File Set" -message "请命名(层名):" -button "OK" -button "Cancel" -cancelButton "Cancel" -db "OK"`;
			if ($result == "OK") 
			{
				$slFilePartitionLayerName = `promptDialog -query -text`;
				string $kset = `sets -n ($slFilePartitionLayerName + "_fSet")`;
				sets -edit -forceElement  $kset $cams;
				textScrollList -e -append ($slFilePartitionLayerName + "_fSet") slRenderToolsFilePartitonWin_renderlayer;
				$fbString = $slFilePartitionLayerName + "_fSet";

				//creat mayabatch command type
				$fileId = `fopen ($slFilePartitionPath+$snpre+"_"+$slFilePartitionLayerName+".txt") "w"`;
				fprint $fileId ($slFilePartitionTypeChar+"***"+$slFilePartitionTypeLayer+"***");
				fclose $fileId;
			}	
		}
	 }
}

global proc slRenderToolsFilePartitonRename()
{
	global string $slFilePartitionPath;

	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	
	string $fbString;
	string $originals[] = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_renderlayer`;
	if (`size $originals`==1)
	{
		string $slFilePartitionLayerName;
		string $result = `promptDialog -title "File Set" -message "重命名为(层名):" -button "OK" -button "Cancel" -defaultButton "OK" -cancelButton "Cancel" -dismissString "Cancel"`;
	 
		if ($result == "OK") 
		{
			$slFilePartitionLayerName = `promptDialog -query -text`;
			int $kpp[] = `textScrollList -q -sii slRenderToolsFilePartitonWin_renderlayer`;
			textScrollList -e -rii $kpp[0] slRenderToolsFilePartitonWin_renderlayer;
			rename $originals[0] ($slFilePartitionLayerName + "_fSet");
			textScrollList -e -append ($slFilePartitionLayerName + "_fSet") slRenderToolsFilePartitonWin_renderlayer;
			$fbString = $slFilePartitionLayerName + "_fSet";

			string $fname = `substring $originals[0] 1 (size($originals[0])-5)`;
			sysFile -rename ($slFilePartitionPath+$snpre+"_"+$slFilePartitionLayerName+".txt") ($slFilePartitionPath+$snpre+"_"+$fname+".txt");
		}
	}
}

global proc slRenderToolsFilePartitonDelete()
{
	global string $slFilePartitionPath;
	
	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	
	string $originals[] = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_renderlayer`;
	for ($each in $originals)
	{
		sets -e -clear $each;
		select -r -ne $each;
		delete;
		textScrollList -e -ri $each slRenderToolsFilePartitonWin_renderlayer;

		string $fname = `substring $originals[0] 1 (size($originals[0])-5)`;
		sysFile -del ($slFilePartitionPath+$snpre+"_"+$fname+".txt");
	}
}

global proc slRenderToolsFilePartitonAddObj()
{
	string $originals[];
	string $temp[] = `ls -sl`;
	$originals = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_renderlayer`;
	for ($each in $originals)
	{
		sets -edit -forceElement  $each $temp;
	}

}

global proc slRenderToolsFilePartitonRemoveObj()
{
	string $originals[];
	string $temp[] = `ls -sl`;
	$originals = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_renderlayer`;
	if (size($temp))
	{
		for ($each in $originals)
		{
			sets -edit -rm  $each $temp;
		}
	}
}

global proc slRenderToolsFilePartitonGo()
{
	global string $slFilePartitionPath;
	
	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];

	string $originals[] = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_renderlayer`;
	string $gocommand;
	$fileId = `fopen "c:/wslGoCommand.bat" "w"`;
	//fprint $fileId ("source slRenderToolsFilePartiton.mel;slRenderToolsFilePartitonGoMelScript(\""+$path+"\");");
	if (size($originals)>1)
	{
		string $filenum = `confirmDialog -title "请选择..." -message "选中的fset分割为一个文件或者多个文件:" -button "一个" -button "多个" -button "取消" -cancelButton "取消"`; 
		if ($filenum == "取消")
			return ;
		else if ($filenum == "一个")
		{
			string $filename = $snpre + "_l"+size($originals)+`substring $originals[0] 1 (size($originals[0])-5)`+"_lr_c001.mb";
			select -r $originals;
			select -add -ne $originals;
			$gocommand = slRenderToolsFilePartitonGoCommand($slFilePartitionPath,$filename);
			fprint $fileId ($gocommand+"\r\n");
		}
		else if ($filenum == "多个")
		{
			for ($set in $originals)
			{
				string $filename = $snpre + "_l1"+`substring $set 1 (size($set)-5)`+"_lr_c001.mb";
				select -r $set;
				select -add -ne $set;
				$gocommand = slRenderToolsFilePartitonGoCommand($slFilePartitionPath,$filename);
				fprint $fileId ($gocommand+"\r\n");
			}
		}
	}
	else if (size($originals)==1)
	{
		string $filename = $snpre + "_l1"+`substring $originals[0] 1 (size($originals[0])-5)`+"_lr_c001.mb";
		select -r $originals;
		select -add -ne $originals;
		$gocommand = slRenderToolsFilePartitonGoCommand($slFilePartitionPath,$filename);
		fprint $fileId ($gocommand+"\r\n");
	}
	else
	{
		string $allItem[] = `textScrollList -q -ai slRenderToolsFilePartitonWin_renderlayer`;
		for ($item in $allItem)
		{
			string $filename = $snpre + "_l1"+`substring $item 1 (size($item)-5)`+"_lr_c001.mb";
			select -r $item;
			select -add -ne $item;
			$gocommand = slRenderToolsFilePartitonGoCommand($slFilePartitionPath,$filename);
			fprint $fileId ($gocommand+"\r\n");
		}
	}
	fclose $fileId;

	system("load c:/wslGoCommand.bat");
}

global proc string  slRenderToolsFilePartitonGoCommand(string $path,string $file)
{
	$fileId = `fopen ($path+"filepartition.mel") "w"`;
	fprint $fileId ("source slRenderToolsFilePartiton.mel;slRenderToolsFilePartitonGoMelScript(\""+$path+"\");");
	fclose $fileId;
	
	
	string $proj = `workspace -q -fn`;
	if (`filetest -r ($path+$file)`)
	{
		string $fileexist = `confirmDialog -title "WHO" -message ("已存在"+$file+"文件!") -button "覆盖" -button "重命名" -button "取消" -cancelButton "取消"`;
		if ($fileexist == "覆盖")
		{
			file -op "v=0" -typ "mayaBinary" -pr -es ($path + $file);
			select -cl;

			//string $cmd = `getenv maya_location`+"/bin/mayabatch   -proj \""+$path+"\" -file \""+ $file
			//			+"\" -command \"source slRenderToolsFilePartiton.mel;slRenderToolsFilePartitonGoMelScript(\\\""+$path+"\\\")\";";
			string $cmd = `getenv maya_location`+"/bin/mayabatch   -proj \""+$proj+"\" -file \""+$path+ $file
						+"\" -script \""+$path+"filepartition.mel\"";
			//print $cmd;
			//system ($cmd);
			return $cmd;
		}
		/*else if ($fileexist == "重命名")
		{
			string $newname = `promptDialog  -title "WHO" -message "重命名为:" -text "试下" -button "OK" -button "Cancel"	-cancelButton "Cancel"`;
			if ($newname == "Cancel")
				return ;
		}*/
		else if ($fileexist == "取消")
		{
			select -cl;
			return "";
		}
	}
	else 
	{
		file -op "v=0" -typ "mayaBinary" -pr -es ($path + $file);
		select -cl;
		string $cmd = `getenv maya_location`+"/bin/mayabatch   -proj \""+$proj+"\" -file \""+$path+  $file
					+"\" -script \""+$path+"filepartition.mel\"";
		//print $cmd;
		//system ($cmd);
		return $cmd;
	}

	//sysFile -del  ($slFilePartitionPath+"filepartition.mel") ;
	slRenderToolsFilePartitonUpdate;
}

global proc slRenderToolsFilePartitonGoMelScript(string $filePath)
{
	string $sceneName = `file -q -sceneName -shortName`;
	string $buff[];
	int $num = `tokenize $sceneName "_" $buff`;
	string $snpre = $buff[0]+"_"+$buff[1]+"_"+$buff[2];
	
	
	string $sets[] = `ls -type objectSet "*_fSet"`;
	for ($set in $sets)
	{
		string $rl = `substring $set 1 (size($set)-5)`;
		string $layer = `substring $set 1 (size($set)-5)`;
		string $file = $filePath+$snpre+"_"+$layer+".txt";
		
		//print ($file+"\n");
		if (`filetest -r $file`)
		{
			source "slRenderAllTools.mel";
			source "slRenderCharacterControl.mel";
			source "ezRenderMainLayoutMaterial.mel";
			
			$fileId = `fopen $file "r"`;
			string $content = `fgetline $fileId`;
			string $buff[];
			tokenize $content "*\n" $buff;
			string $typechar = $buff[0];
			string $typelayer = $buff[1];
			fclose $fileId;

			string $cmd = $typechar+$typelayer+" \""+$rl+"\"";
			select -r $set;
			//print ($cmd+"\n");
			eval $cmd;
		}
	}
	slExportWithHairCache;
	//group -a -em -n "who_test_group";
	file -save;
}

global proc slRenderToolsFilePartitonRender(int $percent)
{
	global string $slFilePartitionPath;
	string $file = `file -q -sn`;
	string $buff[];
	int $num = `tokenize $file "\/" $buff`;
	string $slFilePartitionPath = `substring $file 1 (size($file)-size($buff[$num-1]))`;
	
	
	string $selectFile[] = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_filelist`;
	string $frame =  `textField -q -text slRenderToolsFilePartitonWin_fileframe`;
	if (strip($frame) == "")
	{
		 confirmDialog -title "友情提示:" -message "请填写预渲的帧数" -button "返回"; 
		 return ;
	}
	int $resX = 1280*($percent/100.0);
	int $resY = 720*($percent/100.0);


	$fileId = `fopen "c:/wslGoCommand.bat" "w"`;
	for ($f in $selectFile)
	{
		string $file = $slFilePartitionPath+$f;
		string $image = `substring $f 1 (size($f)-3)`+"_"+$percent+"p";

		string $cmd = `getenv maya_location`+"/bin/render -renderer file -s "+$frame+" -e "+$frame+" -x "+$resX+" -y "+$resY
					+" -rd \""+$slFilePartitionPath+"\" -im \""+$image+"\" "+$file;
		fprint $fileId ($cmd+"\r\n");

		$cmd = `getenv maya_location`
			    +"/bin/mayabatch -noAutoloadPlugins -command \"source slRenderToolsFilePartiton_mod.mel;slRenderToolsFilePartitonRenderMoveImage \\\""
			    +$slFilePartitionPath+"\\\" \\\""+$image+"\\\"";
		fprint $fileId ($cmd+"\r\n");
		
	}
	//RenderViewWindow;
	fclose $fileId;

	system("load c:/wslGoCommand.bat");

}

global proc slRenderToolsFilePartitonRenderMoveImage(string $path,string $image)
{
	
	string $buff[];
	int $num = `tokenize $image "_" $buff`;
	string $pre = `substring $image 1 (size($image)-size($buff[$num-1]))`;
	string $images[] = `getFileList -fld $path -fs ($pre+"*p.*")`;
	print $images;
	for ($im in $images)
	{
		sysFile -del ($path+$im);
	}
		
	string $floders[] = `getFileList -fld $path`;
	for ($fld in $floders)
	{
		if (`filetest -d ($path+$fld)`)
		{
			string $images[] = `getFileList -fld ($path+$fld+"/") -fs ($image+"*")`;
			for ($im in $images)
			{
				sysFile -copy ($path+$im) ($path+$fld+"/"+$im);
				sysFile -del ($path+$fld+"/"+$im);

			}
			sysFile -red ($path+$fld);
		}
	}
}

global proc slRenderToolsFilePartitonRenderShowImage()
{
	global string $slFilePartitionPath;
	
	string $selectFile[] = `textScrollList -q -selectItem slRenderToolsFilePartitonWin_filelist`;
	if (size($selectFile)==1)
	{
		string $pre = `substring $selectFile[0] 1 (size($selectFile[0])-3)`+"_";
		string $images[] = `getFileList -fld $slFilePartitionPath -fs ($pre+"*p.*")`;
		print $images;
		if (size($images))
		{
			RenderViewWindow;
			renderWindowLoadImageCallback "renderView" ($slFilePartitionPath+$images[0]) "image";
			renderWindowEditor -edit -realSize renderView;
		}
	}
}