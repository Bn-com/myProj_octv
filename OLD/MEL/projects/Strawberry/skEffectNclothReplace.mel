//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WanShouLong
//	Created: 
//
//	Update/Change: WanShouLong
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc skEffectNclothReplace()
{
	string $cachefiles[] = `ls -type cacheFile`;
	for ($cf in $cachefiles)
	{
		string $true = `getAttr ($cf+".enable")`;
		if ($true)
		{
			string $cachepath = `getAttr ($cf+".cachePath")`;
			string $cachename = `getAttr ($cf+".cacheName")`;

			string $xmlfile = $cachepath+$cachename+".xml";

			string $dyncon;
			if (`filetest -f $xmlfile`)
			{
				$fileId = `fopen $xmlfile "r"`;
				$nextline = `fgetline $fileId`;
				while (size($nextline)>0)
				{
					string $buff[];
					tokenize $nextline " " $buff;
					//print $buff;
					if (startsWith($buff[0],"<extra>Constraints:"))
					{
						$dyncon = `substring $buff[1] 1 (size($buff[1])-9)`;
						//print $dyncon;
						break;
					}
					$nextline = `fgetline $fileId`;
				}
				fclose $fileId;
			}

			if (`objExists $dyncon`)
			{
				string $dynconshape[] = `listHistory -lv 1 $dyncon`;

				string $ncomponents[] = `listConnections -type nComponent $dynconshape[0]`;
				string $ncloth;
				for ($nc in $ncomponents)
				{
					string $ncshape[] = `listConnections -type nCloth $nc`;
					if (size($ncshape))
					{
						$ncloth = $ncshape[0];
					}
				}

				if (`objExists $ncloth`)
				{
					connectAttr -f ($cf+".inRange") ($ncloth+".playFromCache");
					connectAttr -f ($cf+".outCacheData[0]") ($ncloth+".positions");
				}
			}
		}
	}
}