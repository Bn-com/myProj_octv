/// Copyright (C) 2000-2008 IDMT. All rights reserved.
///
/// Author: 万寿龙
///
/// Creation Date: 2008/05/19
///
/// Description: 



//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsWin
//	PPTools面板－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsWin_pre()
{
	global string $gPPToolsFolder;
	$gPPToolsFolder = `internalVar -userPrefDir` + "PPTools/";

	global string $gPPToolsConf;
	
	string $tipsPath = "//File-cluster/gdc/Resource/Support/Maya/Import/PPTools/tips/";
	string $tipsFiles[] = `getFileList -filespec ($tipsPath+"*.bmp")`;
	int $tipsIndex = rand(size($tipsFiles));


	if (`window -exists PPToolsWindow`) 
	{
        deleteUI -window PPToolsWindow;
    }
	
    // PPTools Window
    window -title "P-P Tools 1.0.0" -in "P-P Tools"  -menuBar true -resizeToFitChildren false -sizeable true -mxb false -mnb true PPToolsWindow;
		
	// 工具栏
		menu -label "配置  ";
			menuItem -label "载入配置"	 -c "slPPToolsConfigureLoadWin";
			menuItem -label "创建新配置" -c "slPPToolsConfigureNewWin";
			menuItem -label "配置另存为" -c "slPPToolsConfigureSaveWin" -enable false	PPToolsWindow_confSave;
		menu -label "工具栏  "	-enable false PPToolsWindow_toolbar;
			menuItem -label "创建工具栏" -c "slPPToolsToolbarNewWin";
			menuItem -label "编辑工具栏" -c "slPPToolsToolbarEditWin";
			menuItem -label "删除工具栏" -c "slPPToolsToolbarDeleteWin";
		menu -label "环节  "	-enable false PPToolsWindow_tab;
			menuItem -label "创建环节栏" -c "slPPToolsTabNewWin";
			menuItem -label "编辑环节栏" -c "slPPToolsTabEditWin";
			menuItem -label "删除环节栏" -c "slPPToolsTabDeleteWin";
		menu -label "按钮  "	-enable false PPToolsWindow_shelf;
			menuItem -label "创建按钮  " -c "slPPToolsShelfNewWin";
			menuItem -label "编辑按钮  " -c "slPPToolsShelfEditWin"	-enable 1;
			menuItem -label "删除按钮  " -c "slPPToolsShelfDeleteWin" -enable 0;

		
			//text -label "test" PPToolsWindow_curConf;
			//setParent ..;

		 columnLayout -adjustableColumn true -rs 4 PPToolsWindow_mainColumn;
	
	//Tips栏
			symbolButton -image ($tipsPath+$tipsFiles[$tipsIndex]) -command ("slPPToolsTips("+$tipsIndex+")") PPToolsWindow_tips;
			setParent ..;
	
	//默认工具栏
			string $frame = `frameLayout -h 120 -label "默认工具栏" -bv false  -cll true `;
				frameLayout -e -cc ("slPPToolsCollapse(\"collapse\",\""+$frame+"\")") -ec ("slPPToolsCollapse(\"expand\",\""+$frame+"\")") $frame;
				string $tab = `tabLayout `;
					string $form = `formLayout -h 78`;
						string $mdName = slPPToolsLayoutName("shelfLayout","PPToolsShelf");
						string $shelf = `shelfLayout -cwh 60 60 -st "iconOnly" $mdName`;
						setParent ..;
					formLayout -edit
						-af		$shelf		"top"		0 
						-af		$shelf		"left"		0
						-af		$shelf		"right"		0
						-af		$shelf		"bottom"	0
					$form;
					setParent ..;
				tabLayout -edit -tv true
					-tabLabel $form "default"
				$tab;
				setParent ..;
			setParent ..;


	//输出信息栏
			//string $outputFR = `frameLayout -h 200 -label "输出信息" -labelAlign "top"  -cc "" -cll true  -borderStyle "etchedIn"`;
			//setParent ..;
		
	window -e -h 320 PPToolsWindow;
	showWindow PPToolsWindow;

	$gPPToolsConf = "//File-cluster/gdc/Resource/Support/Maya/Import/PPTools/PPTools/测试版1.2/";
	slPPToolsToolbarUpdate();
	slPPToolsTabUpdate();
	slPPToolsShelfUpdate();
	menuItem -e -enable true PPToolsWindow_confSave;

}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsConfigureLoadWin
//	读取已有的面板配置－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsConfigureLoadWin()
{
	global string $gPPToolsFolder;

	string $confNames[] = `getFileList -fld $gPPToolsFolder`;
	
	if (`window -exists slPPToolsConfigureLoadWindow`) 
        deleteUI -window slPPToolsConfigureLoadWindow;
	
	window -title "配置列表" -sizeable false -mxb false -mnb false  slPPToolsConfigureLoadWindow;
		columnLayout -adj 1 -rs 1;
            textScrollList -numberOfRows 8 -allowMultiSelection 0 -dcc "slPPToolsConfigureLoad;deleteUI slPPToolsConfigureLoadWindow" slPPToolsConfigureLoadWindow_conf ;
            button -l "确认" -c "slPPToolsConfigureLoad;deleteUI slPPToolsConfigureLoadWindow";
			button -l "取消" -c "deleteUI  slPPToolsConfigureLoadWindow";

            for ($i=0;$i<size($confNames);$i++) {
                textScrollList -e -append $confNames[$i] slPPToolsConfigureLoadWindow_conf;
            }
	window -e -w 280 -h 185 slPPToolsConfigureLoadWindow;
	showWindow slPPToolsConfigureLoadWindow;

}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsConfigureLoad
//	slPPToolsConfigureLoadWin－－－子程序
//	实现读取功能
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsConfigureLoad()
{
	global string $gPPToolsFolder;
	global string $gPPToolsConf;

	string $selItem[] = `textScrollList -q -si slPPToolsConfigureLoadWindow_conf`;
	$gPPToolsConf = $gPPToolsFolder+$selItem[0]+"/";
	//print $gPPToolsConf;
	
	slPPToolsToolbarUpdate();
	slPPToolsTabUpdate();
	slPPToolsShelfUpdate();

	menu -e -enable true PPToolsWindow_toolbar;
	menu -e -enable true PPToolsWindow_tab;
	menu -e -enable true PPToolsWindow_shelf;
	menuItem -e -enable true PPToolsWindow_confSave;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsConfigureNewWin
//	创建新的面板配置－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsConfigureNewWin()
{
	
	if (`window -exists slPPToolsConfigureNewWindow`) 
        deleteUI -window slPPToolsConfigureNewWindow;
	
	window -title "创建新配置" -sizeable false -mxb false -mnb false  slPPToolsConfigureNewWindow;
		columnLayout -adj 1 -rs 1;
			text -label "配置名称" -align "left";
			textField slPPToolsConfigureNewWindow_name;
            button -l "确认" -c "slPPToolsConfigureNew;deleteUI slPPToolsConfigureNewWindow";
			button -l "取消" -c "deleteUI  slPPToolsConfigureNewWindow";
	window -e -h 118 -w 280 slPPToolsConfigureNewWindow;
	showWindow slPPToolsConfigureNewWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsConfigureNew
//	slPPToolsConfigureNewWin－－－子程序
//	创建新的面板配置
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsConfigureNew()
{
	global string $gPPToolsFolder;
	global string $gPPToolsConf;

	string $confName = `textField -q -text slPPToolsConfigureNewWindow_name`;
	if ($confName != "")
	{
		sysFile -makeDir ($gPPToolsFolder+$confName);
		$gPPToolsConf = ($gPPToolsFolder+$confName+"/");
		sysFile -makeDir ($gPPToolsConf+"默认工具栏/");
		sysFile -makeDir ($gPPToolsConf+"默认工具栏/default/");

		$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") w`;
		fprint $fileId "**默认工具栏--120\n";
		fclose $fileId;
		$fileId = `fopen ($gPPToolsConf + "默认工具栏/tab.ind") w`;
		fprint $fileId "**default\n";
		fclose $fileId;

		slPPToolsToolbarUpdate();
		slPPToolsTabUpdate();
		slPPToolsShelfUpdate();

		menu -e -enable true PPToolsWindow_toolbar;
		menu -e -enable true PPToolsWindow_tab;
		menu -e -enable true PPToolsWindow_shelf;
		menuItem -e -enable true PPToolsWindow_confSave;
	}
}

global proc slPPToolsConfigureSaveWin()
{
	
	if (`window -exists slPPToolsConfigureSaveWindow`) 
        deleteUI -window slPPToolsConfigureSaveWindow;
	
	window -title "创建新配置" -sizeable false -mxb false -mnb false  slPPToolsConfigureSaveWindow;
		columnLayout -adj 1 -rs 1;
			text -label "配置名称" -align "left";
			textField slPPToolsConfigureSaveWindow_name;
            button -l "确认" -c "slPPToolsConfigureSave;deleteUI slPPToolsConfigureSaveWindow";
			button -l "取消" -c "deleteUI  slPPToolsConfigureSaveWindow";
	window -e -h 118 -w 280 slPPToolsConfigureSaveWindow;
	showWindow slPPToolsConfigureSaveWindow;
}

global proc slPPToolsConfigureSave()
{
	global string $gPPToolsFolder;
	global string $gPPToolsConf;

	string $confName = `textField -q -text slPPToolsConfigureSaveWindow_name`;
	if ($confName != "")
	{
		sysFile -makeDir ($gPPToolsFolder+$confName);
		slPPToolsCopyFolder($gPPToolsConf,($gPPToolsFolder+$confName+"/"));
		$gPPToolsConf = ($gPPToolsFolder+$confName+"/");
		
		menu -e -enable true PPToolsWindow_toolbar;
		menu -e -enable true PPToolsWindow_tab;
		menu -e -enable true PPToolsWindow_shelf;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarNewWin
//	创建新的frame工具栏－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarNewWin()
{
	if (`window -exists slPPToolsToolbarNewWindow`) 
        deleteUI -window slPPToolsToolbarNewWindow;
	
	window -title "创建新的工具栏" -sizeable false -mxb false -mnb false  slPPToolsToolbarNewWindow;
		columnLayout -adj 1 -rs 1;
			text -label "工具栏名称" -align "left";
			textField slPPToolsToolbarNewWindow_name;
			text -label "工具栏高度" -align "left";
			floatField -v 120 -pre 0 slPPToolsToolbarNewWindow_height;
            button -l "确认" -c "slPPToolsToolbarNew;deleteUI slPPToolsToolbarNewWindow";
			button -l "取消" -c "deleteUI  slPPToolsToolbarNewWindow";

	window -e -w 280 -h 160 slPPToolsToolbarNewWindow;
	showWindow slPPToolsToolbarNewWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarNew
//	slPPToolsToolbarNewWin－－－子程序
//	创建新的frame工具栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarNew()
{
	global string $gPPToolsConf;

	if (`textField -q -text slPPToolsToolbarNewWindow_name` == "")
		return ;
	
	string $tbName = `textField -q -text slPPToolsToolbarNewWindow_name`;
	float $tbHeight = `floatField  -q -v slPPToolsToolbarNewWindow_height`;
	
	setParent PPToolsWindow_mainColumn;

	string $frame = `frameLayout -label $tbName -h $tbHeight -bv false  -cll true`;
		frameLayout -e -cc ("slPPToolsCollapse(\"collapse\",\""+$frame+"\")") -ec ("slPPToolsCollapse(\"expand\",\""+$frame+"\")") $frame;
		string $tab = `tabLayout `;
			string $form = `formLayout -h ($tbHeight-42)`;
				string $mdName = slPPToolsLayoutName("shelfLayout","PPToolsShelf");
				string $shelf = `shelfLayout -cwh 60 60 -st "iconOnly" $mdName`;
				setParent ..;
			formLayout -edit
				-af		$shelf		"top"		0 
				-af		$shelf		"left"		0
				-af		$shelf		"right"		0
				-af		$shelf		"bottom"	0
			$form;
			setParent ..;
		tabLayout -edit -tv true
			-tabLabel $form "default"
		$tab;
		setParent ..;

	float $height = `window -q -h PPToolsWindow`;
	window -e -h ($height+$tbHeight+4) PPToolsWindow;

	sysFile -makeDir ($gPPToolsConf+$tbName+"/");
	sysFile -makeDir ($gPPToolsConf+$tbName+"/default/");

	
	slPPToolsFilePrintEnd(($gPPToolsConf + "/toolbar.ind"),("**"+$tbName+"--"+$tbHeight+"\n"));

	$fileId = `fopen ($gPPToolsConf + $tbName +"/tab.ind") w`;
	fprint $fileId "**default\n";
	fclose $fileId;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarEditWin
//	编辑已有的frame工具栏－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarEditWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	
	if (`window -exists slPPToolsToolbarEditWindow`) 
        deleteUI -window slPPToolsToolbarEditWindow;
	
	window -title "工具栏列表" -sizeable false -mxb false -mnb false slPPToolsToolbarEditWindow;
		columnLayout -adj 1 -rs 1;
            textScrollList -numberOfRows 8 -allowMultiSelection 0 slPPToolsToolbarEditWindow_toolbar;
            button -l "UP" -c "slPPToolsEditUp \"slPPToolsToolbarEditWindow_toolbar\"";
            button -l "DOWN" -c "slPPToolsEditDown \"slPPToolsToolbarEditWindow_toolbar\"";
			separator ;
			text -label "工具栏名称" -align "left";
			textField  slPPToolsToolbarNewWindow_name;
			text -label "工具栏高度" -align "left";
			floatField -v 0 -pre 0 slPPToolsToolbarNewWindow_height;
            button -l "确认" -c "slPPToolsToolbarEdit;deleteUI slPPToolsToolbarEditWindow";
			button -l "取消" -c "deleteUI  slPPToolsToolbarEditWindow";

            for ($i=0;$i<size($toolBars);$i++) 
			{
                string $tbName = `frameLayout -q -label $toolBars[$i]`;
				textScrollList  -e -append $tbName -sc "slPPToolsToolbarEditHeigh" slPPToolsToolbarEditWindow_toolbar;
            }

	window -e -w 280 -h 318 slPPToolsToolbarEditWindow;
	showWindow slPPToolsToolbarEditWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarEditHeigh
//	slPPToolsToolbarEditWin－－－子程序
//	更新面板中选中的工具栏的名字和高度属性
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarEditHeigh()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	
	string $selectItem[] = `textScrollList -q -si slPPToolsToolbarEditWindow_toolbar`;
	float $height;

	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $selectItem[0])
			{
				$height = `frameLayout -q -h $child`;
			}
		}
	}
	textField -e -text $selectItem slPPToolsToolbarNewWindow_name;
	floatField -e -v $height slPPToolsToolbarNewWindow_height;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarEdit
//	slPPToolsToolbarEditWin－－－子程序
//	编辑选中的frame工具栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarEdit()
{
	string $selectItem[] = `textScrollList -q -si slPPToolsToolbarEditWindow_toolbar`;
	
	string $tbName = `textField -q -text slPPToolsToolbarNewWindow_name`;
	float $tbHeight = `floatField -q -v slPPToolsToolbarNewWindow_height`;
	if ($tbName == "" || $tbHeight == 0)
		return ;

	global string $gPPToolsConf;
	string $content;
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		if (startsWith($nextLine,"**"))
		{
			tokenize $nextLine "**--\n" $buff;
			string $name = $buff[0];
			float $height = $buff[1];
			if ($name == $selectItem[0])
			{
				$content += "**"+$tbName+"--"+$tbHeight+"\n";
				sysFile -rename ($gPPToolsConf+$tbName) ($gPPToolsConf+$name);
			}
			else
				$content += $nextLine;
		}
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") w`;
	fprint $fileId $content;
	fclose $fileId;

	slPPToolsToolbarUpdate;
	slPPToolsTabUpdate;
	slPPToolsShelfUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarDeleteWin
//	删除已有的frame工具栏－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarDeleteWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}

	if (`window -exists slPPToolsToolbarDeleteWindow`) 
        deleteUI -window slPPToolsToolbarDeleteWindow;
	
	window -title "删除工具栏列表" -sizeable false -mxb false -mnb false slPPToolsToolbarDeleteWindow;
		columnLayout -adj 1 -rs 1;
            textScrollList -numberOfRows 8 -allowMultiSelection 0 slPPToolsToolbarDeleteWindow_name;
            button -l "确认" -c "slPPToolsToolbarDelete;deleteUI slPPToolsToolbarDeleteWindow";
			button -l "取消" -c "deleteUI  slPPToolsToolbarDeleteWindow";
            
			for ($i=0;$i<size($toolBars);$i++) 
			{
                string $tbName = `frameLayout -q -label $toolBars[$i]`;
				textScrollList  -e -append $tbName slPPToolsToolbarDeleteWindow_name;
            }

	window -e -w 280 -h 185 slPPToolsToolbarDeleteWindow;
	showWindow slPPToolsToolbarDeleteWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarDelete
//	slPPToolsToolbarDeleteWin－－－子程序
//	删除选中的frame工具栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarDelete()
{
	string $selectItem[] = `textScrollList -q -si slPPToolsToolbarDeleteWindow_name`;

	global string $gPPToolsConf;
	string $content;
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		if (startsWith($nextLine,"**"))
		{
			tokenize $nextLine "**--\n" $buff;
			string $name = $buff[0];
			if ($name != $selectItem[0])
				$content += $nextLine;
		}
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") w`;
	fprint $fileId $content;
	fclose $fileId;

	slPPToolsToolbarUpdate;
	slPPToolsTabUpdate;
	slPPToolsShelfUpdate;

	slPPToolsDeleteFolder($gPPToolsConf+$selectItem[0]+"/");
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabNewWin
//	创建新的环节栏－－－窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabNewWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsTabNewWindow`) 
        deleteUI -window slPPToolsTabNewWindow;
	
	window -title "创建新的环节" -sizeable true -mxb false -mnb false slPPToolsTabNewWindow;
		columnLayout -adj 1 -rs 1;
			text -label "所属工具栏" -align "left";
			optionMenu slPPToolsTabNewWindow_tbName;
				for ($i=0;$i<size($toolBars);$i++) 
				{
					string $tbName = `frameLayout -q -label $toolBars[$i]`;
					menuItem -label $tbName;
				}
			text -label "环节名称" -align "left";
			textField slPPToolsTabNewWindow_name;
            button -l "确认" -c "slPPToolsTabNew;deleteUI slPPToolsTabNewWindow";
			button -l "取消" -c "deleteUI  slPPToolsTabNewWindow";

	window -e -w 280 -h 160 slPPToolsTabNewWindow;
	showWindow slPPToolsTabNewWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabNew
//	slPPToolsTabNewWin －－－ 子程序
//	创建新的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabNew()
{
	string $tbName = `optionMenu -q -v slPPToolsTabNewWindow_tbName`;
	string $name = `textField -q -text slPPToolsTabNewWindow_name`;
	if ($name == "")
		return ;
	
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $parentTab[] = `frameLayout -q -ca $child`;
				float $tbHeight = `frameLayout -q -h $child`;

				setParent $parentTab[0];
				string $form = `formLayout -h ($tbHeight-42)`;
					string $mdName = slPPToolsLayoutName("shelfLayout","PPToolsShelf");
					string $shelf = `shelfLayout -cwh 60 60 -st "iconOnly" $mdName`;
					setParent ..;
				formLayout -edit
					-af		$shelf		"top"		0 
					-af		$shelf		"left"		0
					-af		$shelf		"right"		0
					-af		$shelf		"bottom"	0
				$form;
			
				tabLayout -edit -tabLabel $form $name $parentTab[0];
				tabLayout -edit -st $form $parentTab[0];
			}
		}
	}

	global string $gPPToolsConf;
	sysFile -makeDir ($gPPToolsConf+$tbName+"/"+$name);
	slPPToolsFilePrintEnd(($gPPToolsConf+$tbName+"/tab.ind"),("**"+$name+"\n"));
	
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabEditWin
//	编辑已有的环节栏 －－－ 窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabEditWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsTabEditWindow`) 
        deleteUI -window slPPToolsTabEditWindow;
	
	window -title "编辑环节" -sizeable true -mxb false -mnb false -w 250 -h 180 slPPToolsTabEditWindow;
		columnLayout -adj 1 -rs 1;
			text -label "所属工具栏" -align "left";
			optionMenu -cc "slPPToolsTabEditUpdate" slPPToolsTabEditWindow_tbName;
				for ($i=0;$i<size($toolBars);$i++) 
				{
					string $tbName = `frameLayout -q -label $toolBars[$i]`;
					menuItem -label $tbName;
				}
			text -label "环节列表" -align "left";
            textScrollList -sc "slPPToolsTabEditUpdateName" -numberOfRows 8 -allowMultiSelection 0 slPPToolsTabEditWindow_tabName;
            //button -l "UP" -c "slPPToolsEditUp \"slPPToolsTabEditWindow_tabName\"";
           // button -l "DOWN" -c "slPPToolsEditDown \"slPPToolsTabEditWindow_tabName\"";
			separator ;
			text -label "环节名称" -align "left";
			textField  slPPToolsTabEditWindow_name;
            button -l "确认" -c "slPPToolsTabEdit;deleteUI slPPToolsTabEditWindow";
			button -l "取消" -c "deleteUI  slPPToolsTabEditWindow";
	
	window -e -w 280 -h 290 slPPToolsTabEditWindow;
	showWindow slPPToolsTabEditWindow;

	slPPToolsTabEditUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabEdit
//	slPPToolsTabEditWin －－－ 子程序
//	编辑选中的环节属性
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabEdit()
{
	string $tbName = `optionMenu -q -v slPPToolsTabEditWindow_tbName`;
	string $selectItem[] = `textScrollList -q -si slPPToolsTabEditWindow_tabName`;
	string $tabName = `textField -q -text slPPToolsTabEditWindow_name`;
	if ($tabName == "")
		return ;

	global string $gPPToolsConf;
	string $content;
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		if (startsWith($nextLine,"**"))
		{
			tokenize $nextLine "**\n" $buff;
			string $name = $buff[0];
			
			tokenize $selectItem[0] "\n" $buff;
			if ($name == $buff[0])
			{
				$content += "**"+$tabName+"\n";
				sysFile -rename ($gPPToolsConf+$tbName+"/"+$tabName) ($gPPToolsConf+$tbName+"/"+$name);
			}
			else
				$content += $nextLine;
		}
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") w`;
	fprint $fileId $content;
	fclose $fileId;

	//print $content;
	slPPToolsTabUpdate();
	slPPToolsShelfUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabEditUpdate
//	slPPToolsTabEditWin －－－ 子程序
//	更新选中的frame工具下的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabEditUpdate()
{
	string $tbName = `optionMenu -q -v slPPToolsTabEditWindow_tbName`;

	string $allTab[];
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				$allTab = `tabLayout -q -tl $childTab[0]`;
			}
		}
	}

	textScrollList -e -ra slPPToolsTabEditWindow_tabName;
	for ($i=0;$i<size($allTab);$i++) 
	{
		//string $tabName = `tabLayout -q -st $allTab[$i]`;
		textScrollList  -e -append $allTab[$i] slPPToolsTabEditWindow_tabName;
	}
	slPPToolsTabEditUpdateName;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabEditUpdateName
//	slPPToolsTabEditWin －－－ 子程序
//	更新选中的环节栏的属性
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabEditUpdateName()
{
	string $selectItem[] = `textScrollList -q -si slPPToolsTabEditWindow_tabName`;
	textField -e -text $selectItem slPPToolsTabEditWindow_name;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabDeleteWin
//	删除已有的环节栏 －－－ 窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabDeleteWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsTabDeleteWindow`) 
        deleteUI -window slPPToolsTabDeleteWindow;
	
	window -title "删除环节" -sizeable true -mxb false -mnb false -w 250 -h 180 slPPToolsTabDeleteWindow;
		columnLayout -adj 1 -rs 1;
			text -label "所属工具栏" -align "left";
			optionMenu -cc "slPPToolsTabDeleteUpdate" slPPToolsTabDeleteWindow_tbName;
				for ($i=0;$i<size($toolBars);$i++) 
				{
					string $tbName = `frameLayout -q -label $toolBars[$i]`;
					menuItem -label $tbName;
				}
			text -label "环节列表" -align "left";
            textScrollList -numberOfRows 8 -allowMultiSelection 0 slPPToolsTabDeleteWindow_tabName;
            button -l "确认" -c "slPPToolsTabDelete;deleteUI slPPToolsTabDeleteWindow";
			button -l "取消" -c "deleteUI  slPPToolsTabDeleteWindow";
	
	window -e -w 280 -h 245 slPPToolsTabDeleteWindow;
	showWindow slPPToolsTabDeleteWindow;

	slPPToolsTabDeleteUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabDelete
//	slPPToolsTabDeleteWin －－－ 子程序
//	删除选中的frame工具下的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabDelete()
{
	string $tbName = `optionMenu -q -v slPPToolsTabDeleteWindow_tbName`;
	string $selectItem[] = `textScrollList -q -si slPPToolsTabDeleteWindow_tabName`;

	global string $gPPToolsConf;
	string $content;
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		if (startsWith($nextLine,"**"))
		{
			tokenize $nextLine "**\n" $buff;
			string $name = $buff[0];
			
			tokenize $selectItem[0] "\n" $buff;
			if ($name == $buff[0])
				slPPToolsDeleteFolder($gPPToolsConf+$tbName+"/"+$name+"/");
			else
				$content += $nextLine;
		}
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") w`;
	fprint $fileId $content;
	fclose $fileId;

	//print $content;
	slPPToolsTabUpdate();
	slPPToolsShelfUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabDeleteUpdate
//	slPPToolsTabDeleteWin －－－ 子程序
//	更新选中的frame工具下的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabDeleteUpdate()
{
	string $tbName = `optionMenu -q -v slPPToolsTabDeleteWindow_tbName`;

	string $allTab[];
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				$allTab = `tabLayout -q -tl $childTab[0]`;
			}
		}
	}

	textScrollList -e -ra slPPToolsTabDeleteWindow_tabName;
	for ($i=0;$i<size($allTab);$i++) 
	{
		//string $tabName = `tabLayout -q -st $allTab[$i]`;
		textScrollList  -e -append $allTab[$i] slPPToolsTabDeleteWindow_tabName;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfNewWin
//	创建新的按钮 －－－ 窗口
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfNewWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsShelfNewWindow`) 
        deleteUI -window slPPToolsShelfNewWindow;
	
    window  -resizeToFitChildren true -s true -mxb false -mnb false -title "创建按钮" slPPToolsShelfNewWindow;
		columnLayout -adjustableColumn true -rs 4 ;
			text -label "所属工具栏" -align "left";
			optionMenu -cc "slPPToolsShelfNewUpdate" slPPToolsShelfNewWindow_tbName;
				for ($i=0;$i<size($toolBars);$i++) 
				{
					string $tbName = `frameLayout -q -label $toolBars[$i]`;
					menuItem -label $tbName;
				}
			text -label "所属环节" -align "left";
			optionMenu  slPPToolsShelfNewWindow_tabName;
				menuItem -label "";

			text -label "按钮名称" -align "left";
			textField slPPToolsShelfNewWindow_name;
			text -label "按钮功能说明" -align "left";
			textField slPPToolsShelfNewWindow_anno;
			
			text -label "按钮图标" -align "left";
			string $picFO = `formLayout `;
				picture -image "commandButton.xpm"	slPPToolsShelfNewWindow_pic;
				string $picBut = `button -label "选择图标" -c "slPPToolsShelfNewPic(\"slPPToolsShelfNewWindow_pic\")"`;
			setParent ..;
			formLayout -edit 
				-af slPPToolsShelfNewWindow_pic	 "top"	1
				-af slPPToolsShelfNewWindow_pic	 "left"	1

				-af $picBut	"top"	1
				-ac $picBut "left"	1	slPPToolsShelfNewWindow_pic
			$picFO;
			
			text -label "按钮功能/程序" -align "left";
			scrollField -wordWrap true -text "//请添加需要的Mel，参照MayaShelf方法\n" -h 200 slPPToolsShelfNewWindow_input;
			button -label "确认" -c "slPPToolsShelfNew;";
			button -label "取消" -c "deleteUI slPPToolsShelfNewWindow;";
		setParent ..;
	window -e -w 400 -h 550 slPPToolsShelfNewWindow;
	showWindow slPPToolsShelfNewWindow;

	slPPToolsShelfNewUpdate;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfNewUpdate
//	slPPToolsShelfNewWin －－－ 子程序
//	更新选中的frame工具栏下的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfNewUpdate()
{
	string $tbName = `optionMenu -q -v slPPToolsShelfNewWindow_tbName`;

	string $allTab[];
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				$allTab = `tabLayout -q -tl $childTab[0]`;
			}
		}
	}

	string $buff[];
	string $children[] =`optionMenu -q -ill slPPToolsShelfNewWindow_tabName`;
	tokenize $children[0] "|" $buff;
	string $optionMenu = `substring $children[0] 1 (size($children[0])-size($buff[size($buff)-1])-1)`;

	deleteUI $children;
	
	for ($tab in $allTab)
	{
		menuItem -label $tab -p $optionMenu;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfNewPic
//	slPPToolsShelfNewWin －－－ 子程序
//	选择按钮使用的图标 －－－ 图标大小同maya默认的大小32*32
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfNewPic(string $layout)
{
	string $newPic = `xpmPicker -fn "" -parent ""`;
	if ($newPic != "")
	{
		picture -e -image $newPic $layout;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfNew
//	slPPToolsShelfNewWin －－－ 子程序
//	创建新的按钮
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfNew()
{
	string $shelfName = `textField -q -text slPPToolsShelfNewWindow_name`;
	string $shelfAnno = `textField -q -text slPPToolsShelfNewWindow_anno`;
	string $shelfPic = `picture -q -image slPPToolsShelfNewWindow_pic`;
	string $shelfCmd = `scrollField -q -text slPPToolsShelfNewWindow_input`;

	if ($shelfName == "")
		return ;


	string $tbName = `optionMenu -q -v slPPToolsShelfNewWindow_tbName`;
	int $tabInd = `optionMenu -q -sl slPPToolsShelfNewWindow_tabName`;
	string $tabName = `optionMenu -q -v slPPToolsShelfNewWindow_tabName`;
	string $buff[];
	tokenize $tabName "\n" $buff;
	$tabName = $buff[0];

	
	string $parentShelf;
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				string $childForm[] = `tabLayout -q -ca $childTab[0]`;
				string $childShelf[] = `formLayout -q -ca $childForm[$tabInd-1]`;
				$parentShelf = $childShelf[0];
			}
		}
	}
	
	//shelfButton -style "iconAndTextVertical" -fn "boldLabelFont" -l $shelfName -annotation $shelfAnno  -image1 $shelfPic -c $shelfCmd -p $parentShelf;
	shelfButton -style "iconOnly" -fn "boldLabelFont" -imageOverlayLabel $shelfName -annotation $shelfAnno  -image1 $shelfPic -c $shelfCmd -parent $parentShelf;

	global string $gPPToolsConf;
	saveShelf $parentShelf (($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre"));
	slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre.mel"));

	sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre.mel");
	string $path = `internalVar -userPrefDir`;
	sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");

}

global proc slPPToolsShelfEditWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsShelfEditWindow`) 
        deleteUI -window slPPToolsShelfEditWindow;
	
    window  -resizeToFitChildren true -s true -mxb false -mnb false -title "编辑按钮" slPPToolsShelfEditWindow;
		string $form = `formLayout `;
			
			string $tab = `tabLayout -sc "slPPToolsShelfEdit(\"command\")"`;
				
				string $fl11 = `formLayout`;
					string $text1 = `text -label "所属工具栏" -align "left"`;
					string $tbName = `optionMenu -cc "slPPToolsShelfEditUpdata(\"tab\")" slPPToolsShelfEditWindow_tbName`;
						for ($i=0;$i<size($toolBars);$i++) 
						{
							string $tbName = `frameLayout -q -label $toolBars[$i]`;
							menuItem -label $tbName;
						}
					string $tabName = `textScrollList -sc "slPPToolsShelfEditUpdata(\"shelf\")" -numberOfRows 8 -allowMultiSelection 0 slPPToolsShelfEditWindow_tabName`;
					string $fl12 = `formLayout`;
						string $up1 = `button -label "Up" -c "slPPToolsEditTabPosition(\"slPPToolsShelfEditWindow_tabName\",\"up\")"`;
						string $down1 = `button -label "Down" -c "slPPToolsEditTabPosition(\"slPPToolsShelfEditWindow_tabName\",\"down\")"`;
						string $del1 = `button -label "Delete" -c "slPPToolsEditTabDelete(\"slPPToolsShelfEditWindow_tabName\")"`;
						string $name1 = `textFieldGrp -label "环节名称" -cc "slPPToolsShelfEdit(\"tab\")" -cw 1 120 -cat 1 "right" 5 -cat 2 "both" 0 slPPToolsShelfEditWindow_name`;
					setParent ..;
					formLayout -edit
						-af	$name1		"bottom"	5	
						-af $name1		"left"		20
						
						-ac	$up1		"bottom"	5	$name1
						-ap	$up1		"left"		0	1
						-ap $up1		"right"		0	33
						-ac	$down1		"bottom"	5	$name1
						-ap	$down1		"left"		0	34
						-ap $down1		"right"		0	66
						-ac	$del1		"bottom"	5	$name1
						-ap	$del1		"left"		0	67
						-ap $del1		"right"		0	99
					$fl12;
				setParent ..;
				formLayout -edit
					-af $text1		"top"		10
					-af $text1		"left"		5
					-af	$tbName		"top"		5
					-ac	$tbName		"left"		5	$text1

					-ac	$tabName		"top"		5	$tbName
					-af	$tabName		"left"		0
					-af	$tabName		"right"		0
					-ac	$tabName		"bottom"	5	$fl12
					
					-af	$fl12		"bottom"	0	
					-af	$fl12		"left"		0
					-af $fl12		"right"		0
				$fl11;
				
				string $fl21 = `formLayout`;
					string $shelfName = `textScrollList -sc "slPPToolsShelfEditUpdata(\"command\")" -numberOfRows 8 -allowMultiSelection 0 slPPToolsShelfEditWindow_shelfName`;
					string $fl22 = `formLayout`;
						string $up2 = `button -label "Up" -c "slPPToolsEditShelfPosition(\"slPPToolsShelfEditWindow_shelfName\",\"up\")"`;
						string $down2 = `button -label "Down" -c "slPPToolsEditShelfPosition(\"slPPToolsShelfEditWindow_shelfName\",\"down\")"`;
						string $del2 = `button -label "Delete" -c "slPPToolsEditShelfDelete(\"slPPToolsShelfEditWindow_shelfName\")"`;
						string $name2 = `textFieldGrp -label "按钮名称" -cc "slPPToolsShelfEdit(\"shelf\")" -cw 1 120 -cat 1 "right" 5 -cat 2 "both" 0 slPPToolsShelfEditWindow_label`;
						string $anno2 = `textFieldGrp -label "按钮功能说明" -cc "slPPToolsShelfEdit(\"shelf\")" -cw 1 120 -cat 1 "right" 5 -cat 2 "both" 0 slPPToolsShelfEditWindow_anno`;
						string $pic2 = `picture -image "commandButton.xpm" slPPToolsShelfEditWindow_pic`;
						string $picBut2 = `button -label "选择图标" -c "slPPToolsShelfNewPic(\"slPPToolsShelfEditWindow_pic\");slPPToolsShelfEdit(\"shelf\")"`;
					setParent ..;
					formLayout -edit
						-ac	$up2		"bottom"	5	$name2
						-ap	$up2		"left"		0	1
						-ap $up2		"right"		0	33
						-ac	$down2		"bottom"	5	$name2
						-ap	$down2		"left"		0	34
						-ap $down2		"right"		0	66
						-ac	$del2		"bottom"	5	$name2
						-ap	$del2		"left"		0	67
						-ap $del2		"right"		0	99

						-ac	$name2		"bottom"	5	$anno2
						-af $name2		"left"		20
						-ac	$anno2		"bottom"	5	$pic2
						-af $anno2		"left"		20
						-af $pic2		"bottom"	5
						-af $pic2		"left"		100
						-af	$picBut2	"bottom"	5
						-ac $picBut2	"left"		10	$pic2
					$fl22;
				setParent ..;
				formLayout -edit
					-af	$shelfName		"top"		5
					-af	$shelfName		"left"		0
					-af	$shelfName		"right"		0
					-ac	$shelfName		"bottom"	5	$fl22
					
					-af	$fl22		"bottom"	0	
					-af	$fl22		"left"		0
					-af $fl22		"right"		0
				$fl21;
			//setParent ..;
			
				string $comForm = `formLayout`;
					string $text = `text -label "编辑按钮内容"`;
					string $command = `scrollField -wordWrap true -text "" slPPToolsShelfEditWindow_command`;
				setParent ..;
				formLayout -edit
					-af	$text		"top"		5
					-af	$text		"left"		5
					-ac $command	"top"		5	$text
					-af	$command	"left"		0
					-af $command	"right"		0
					-af $command	"bottom"	0
				$comForm;
			setParent ..;
			
			tabLayout -edit
				-tl	$fl11		"环节列表"
				-tl $fl21		"按钮列表"
				-tl $comForm	"按钮内容"
			$tab;
		setParent ..;

		string $save = `button -label "确认" -c "slPPToolsShelfEdit(\"all\");deleteUI slPPToolsShelfEditWindow;"`;
		string $esc = `button -label "取消" -c "deleteUI slPPToolsShelfEditWindow;"`;
		formLayout -edit
			-af $save		"bottom"	5
			-ap	$save		"left"		0	1
			-ap $save		"right"		0	49
			-af	$esc		"bottom"	5
			-ap	$esc		"left"		0	51
			-ap	$esc		"right"		0	99

			-ac	$tab		"bottom"	10	$save
			-af $tab		"top"		0
			-af	$tab		"left"		0
			-af	$tab		"right"		0
		$form;
	
	window -e -w 520 -h 360 slPPToolsShelfEditWindow;
	showWindow slPPToolsShelfEditWindow;

	slPPToolsShelfEditUpdata("tab");
}

global proc slPPToolsShelfEditUpdata(string $type)
{
	global string $gPPToolsConf;
	
	string $buff[];
	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;
	string $tabName[] = `textScrollList -q -si slPPToolsShelfEditWindow_tabName`;

	global string $gPPTEditTabLayout;
	global string $gPPTEditShelfLayout;
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolbar[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			$toolbar[size($toolbar)] = $child;
		}
	}

	if ($type == "tab")
	{
		textScrollList -e -ra  slPPToolsShelfEditWindow_tabName;
		for ($child in $mcChildren)
		{
			if ($child != "PPToolsWindow_tips")
			{
				string $frName = `frameLayout -q -label $child`;
				if ($frName == $tbName)
				{
					string $frChildren[] = `frameLayout -q -ca $child`;
					$gPPTEditTabLayout = $frChildren[0];
					string $tabLabel[] = `tabLayout -q -tl $gPPTEditTabLayout`;
					for ($label in $tabLabel)
					{
						tokenize $label "\n" $buff;
						textScrollList -e -append $buff[0] slPPToolsShelfEditWindow_tabName;
					}
				}
			}
		}
		textScrollList -e -sii 1 slPPToolsShelfEditWindow_tabName;

		slPPToolsShelfEditUpdata("shelf");
	}
	if ($type == "shelf")
	{
		string $tabLabel[] = `tabLayout -q -tl $gPPTEditTabLayout`;
		string $tabChildren[] = `tabLayout -q -ca $gPPTEditTabLayout`;
		string $shelves[];
		for ($i=0;$i<size($tabLabel);$i++)
		{
			tokenize $tabLabel[$i] "\n" $buff;
			if ($buff[0] == $tabName[0])
			{
				string $foChildren[] = `formLayout -q -ca $tabChildren[$i]`;
				$gPPTEditShelfLayout = $foChildren[0];
				string $slChildren[] = `shelfLayout -q -ca $foChildren[0]`;
				for ($slc in $slChildren)
				{
					$shelves[size($shelves)] = `shelfButton -q -iol $slc`;
				}
			}
		}

		textScrollList -e -ra  slPPToolsShelfEditWindow_shelfName;
		for ($shelf in $shelves)
		{
			textScrollList -e -append $shelf slPPToolsShelfEditWindow_shelfName;
		}
		if (size($shelves))
			textScrollList -e -sii 1 slPPToolsShelfEditWindow_shelfName;

		textFieldGrp -e -text $tabName[0] slPPToolsShelfEditWindow_name;

		int $index[] = `textScrollList -q -sii slPPToolsShelfEditWindow_tabName`;
		tabLayout -e -sti $index[0] $gPPTEditTabLayout;

		slPPToolsShelfEditUpdata("command");
	}		
	if ($type == "command")
	{
		string $shelfName[] = `textScrollList -q -si slPPToolsShelfEditWindow_shelfName`;
		string $iol,$anno,$pic,$command;
		string $slChildren[] = `shelfLayout -q -ca $gPPTEditShelfLayout`;
		for ($child in $slChildren)
		{
			string $label = `shelfButton -q -imageOverlayLabel $child`;
			if ($label == $shelfName[0])
			{
				$iol = $label;
				$anno = `shelfButton -q -annotation $child`;
				$pic = `shelfButton -q -image $child`;
				$command = `shelfButton -q -command $child`;
			}
		}
					
		textFieldGrp -e -text $iol slPPToolsShelfEditWindow_label;
		textFieldGrp -e -text $anno slPPToolsShelfEditWindow_anno;
		picture -e -image $pic slPPToolsShelfEditWindow_pic;
		scrollField -e -text $command slPPToolsShelfEditWindow_command;
	}


}

global proc slPPToolsShelfEdit(string $type)
{
	global string $gPPToolsConf;
	global string $gPPTEditTabLayout;
	global string $gPPTEditShelfLayout;
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;

	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;
	string $tabName[] = `textScrollList -q -si slPPToolsShelfEditWindow_tabName`;
	string $shelfName[] = `textScrollList -q -si slPPToolsShelfEditWindow_shelfName`;

	string $buff[];
	string $content;
	if ($type == "all")
	{
		slPPToolsShelfEdit("tab");
		slPPToolsShelfEdit("shelf");
		slPPToolsShelfEdit("command");
	}
	if ($type == "tab")
	{
		string $name = `textFieldGrp -q -text slPPToolsShelfEditWindow_name`;
		//改变面板
		int $index[] = `textScrollList -q -sii slPPToolsShelfEditWindow_tabName`;
		textScrollList -e -rii $index[0] slPPToolsShelfEditWindow_tabName;
		textScrollList -e -ap $index[0] $name slPPToolsShelfEditWindow_tabName;
		textScrollList -e -sii $index[0] slPPToolsShelfEditWindow_tabName;
		
		string $tab[] = `tabLayout -q -tl $gPPTEditTabLayout`;
		for ($i=0;$i<size($tab) ;$i++ )
		{
			tokenize $tab[$i] "\n" $buff;
			if ($buff[0] == $tabName[0])
			{
				tabLayout -e -tli ($i+1) $name $gPPTEditTabLayout;
			}
		}
		//保存到配置
		string $children[] = `getFileList -folder ($gPPToolsConf+$tbName+"/")`;
		for ($child in $children)
		{
			if ($child == $tabName[0])
			{
				sysFile -rename ($gPPToolsConf+$tbName+"/"+$name+"/") ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/");
			}
			if ($child == "tab.ind")
			{
				$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") r`;
				$nextLine = `fgetline $fileId`;
				while (size($nextLine)>0)
				{
					tokenize $nextLine "*\n" $buff;
					if ($buff[0] == $tabName[0]) 
						$content += ("**"+$name+"\n");
					else 
						$content += $nextLine;
					
					$nextLine = `fgetline $fileId`;
				}
				fclose $fileId;

				$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") w`;
				fprint $fileId $content;
				fclose $fileId;
			}
		}
	}
	if ($type == "shelf")
	{
		string $iol = `textFieldGrp -q -text slPPToolsShelfEditWindow_label`;
		string $anno = `textFieldGrp -q -text slPPToolsShelfEditWindow_anno`;
		string $pic = `picture -q -image  slPPToolsShelfEditWindow_pic`;

		//改变面板
		string $slChildren[] = `shelfLayout -q -ca $gPPTEditShelfLayout`;
		for ($sb in $slChildren)
		{
			string $sbName = `shelfButton -q -iol $sb`;
			if ($sbName == $shelfName[0])
			{
				shelfButton -e -iol $iol -ann $anno -image $pic $sb;
			}
		}
		int $index[] = `textScrollList -q -sii slPPToolsShelfEditWindow_shelfName`;
		textScrollList -e -rii $index[0] slPPToolsShelfEditWindow_shelfName;
		textScrollList -e -ap $index[0] $iol slPPToolsShelfEditWindow_shelfName;
		textScrollList -e -sii $index[0] slPPToolsShelfEditWindow_shelfName;

		//保存到配置
		saveShelf $gPPTEditShelfLayout (($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre"));
		slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel"));

		sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel");
		string $path = `internalVar -userPrefDir`;
		sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");
	}
	if ($type == "command")
	{
		int $sli[] = `textScrollList -q -sii slPPToolsShelfEditWindow_shelfName`;
		if ($sli[0])
		{
			string $slChildren[] = `shelfLayout -q -ca $gPPTEditShelfLayout`;
			string $oldCommand = `shelfButton -q -c $slChildren[$sli[0]-1]`;

			string $command = `scrollField -q -text slPPToolsShelfEditWindow_command`;

			if ($oldCommand != $command)
			{
				string $confirm = `confirmDialog -title "Confirm" -message "按钮内容已修改，确认保存？" -button "Yes" -button "No" -defaultButton "Yes" -cancelButton "No" -dismissString "No"`;
				if ($confirm == "Yes")
				{
					shelfButton -e -c $command $slChildren[$sli[0]-1];
					saveShelf $gPPTEditShelfLayout (($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre"));
					slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel"));

					sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel");
					string $path = `internalVar -userPrefDir`;
					sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");
				}
				else 
					scrollField -e -text $oldCommand slPPToolsShelfEditWindow_command;
			}
		}
	}
}

global proc slPPToolsShelfDeleteWin()
{
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $toolBars[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			$toolBars[size($toolBars)] = $child;
	}
	
	if (`window -exists slPPToolsShelfDeleteWindow`) 
        deleteUI -window slPPToolsShelfDeleteWindow;
	
    window  -resizeToFitChildren true -s true -mxb false -mnb false -title "删除按钮" slPPToolsShelfDeleteWindow;
		columnLayout -adjustableColumn true -rs 4 ;
			rowColumnLayout  -nc 3 -cw 2 10;
				text -label "所属工具栏" -align "left";
				separator -hr false ;
				text -label "所属环节" -align "left";

				optionMenu -cc "slPPToolsShelfDeleteUpdate;slPPToolsShelfDeleteUpdateShelf" slPPToolsShelfDeleteWindow_tbName;
					for ($i=0;$i<size($toolBars);$i++) 
					{
						string $tbName = `frameLayout -q -label $toolBars[$i]`;
						menuItem -label $tbName;
					}
				separator -hr false ;
				optionMenu -cc "slPPToolsShelfDeleteUpdateShelf;"  slPPToolsShelfDeleteWindow_tabName;
					menuItem -label "";
				setParent ..;

			textScrollList -numberOfRows 8 -allowMultiSelection 0 slPPToolsShelfDeleteWindow_shelfName;
			button -label "确认" -c "slPPToolsShelfDelete;deleteUI slPPToolsShelfDeleteWindow;";
			button -label "取消" -c "deleteUI slPPToolsShelfDeleteWindow;";
		//setParent ..;
	showWindow slPPToolsShelfDeleteWindow;

	slPPToolsShelfDeleteUpdate;
	slPPToolsShelfDeleteUpdateShelf;
}

global proc slPPToolsShelfDelete()
{
	string $tbName = `optionMenu -q -v slPPToolsShelfDeleteWindow_tbName`;
	string $tabName = `optionMenu -q -v slPPToolsShelfDeleteWindow_tabName`;
	string $selectItem[] = `textScrollList -q -si slPPToolsShelfDeleteWindow_shelfName`;

		
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				string $childForm[] = `tabLayout -q -ca $childTab[0]`;
				string $allTab[] = `tabLayout -q -tli $childTab[0]`;
				for ($i=0;$i<size($allTab);$i++ )
				{
					if ($allTab[$i] == $tabName)
					{
						string $shelfLayout[] = `formLayout -q -ca $childForm[$i]`;
						$shelfs = `shelfLayout -q -ca $shelfLayout[0]`;
						for ($shelf in $shelfs)
						{
							string $name = `shelfButton -q -l $shelf`;
							if ($name == $selectItem[0])
							{
								deleteUI $shelf;

								string $buff[];
								tokenize $tabName "\n" $buff;
								$tabName = $buff[0];

								global string $gPPToolsConf;
								saveShelf $shelfLayout (($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre"));
								slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre.mel"));

								sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName+"/shelf_pre.mel");
								string $path = `internalVar -userPrefDir`;
								sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");
							}
						}
					}
				}
			}
		}
	}


}

global proc slPPToolsShelfDeleteUpdate()
{
	string $tbName = `optionMenu -q -v slPPToolsShelfDeleteWindow_tbName`;

	string $allTab[];
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				$allTab = `tabLayout -q -tl $childTab[0]`;
			}
		}
	}

	string $buff[];
	string $children[] =`optionMenu -q -ill slPPToolsShelfDeleteWindow_tabName`;
	tokenize $children[0] "|" $buff;
	string $optionMenu = `substring $children[0] 1 (size($children[0])-size($buff[size($buff)-1])-1)`;

	deleteUI $children;
	
	for ($tab in $allTab)
	{
		menuItem -label $tab -p $optionMenu;
	}
}

global proc slPPToolsShelfDeleteUpdateShelf()
{
	string $tbName = `optionMenu -q -v slPPToolsShelfDeleteWindow_tbName`;
	string $tabName = `optionMenu -q -v slPPToolsShelfDeleteWindow_tabName`;

	string $shelfs[];
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $label = `frameLayout -q -label $child`;
			if ($label == $tbName)
			{
				string $childTab[] = `frameLayout -q -ca $child`;
				string $childForm[] = `tabLayout -q -ca $childTab[0]`;
				string $allTab[] = `tabLayout -q -tli $childTab[0]`;
				for ($i=0;$i<size($allTab);$i++ )
				{
					if ($allTab[$i] == $tabName)
					{
						string $shelfLayout[] = `formLayout -q -ca $childForm[$i]`;
						$shelfs = `shelfLayout -q -ca $shelfLayout[0]`;
					}
				}
			}
		}
	}

	textScrollList -e -ra slPPToolsShelfDeleteWindow_shelfName;
	for ($i=0;$i<size($shelfs);$i++) 
	{
		string $shelfName = `shelfButton -q -label $shelfs[$i]`;
		textScrollList  -e -append $shelfName slPPToolsShelfDeleteWindow_shelfName;
	}
}


global proc slPPToolsEditTabPosition(string $layout,string $type)
{
	global string $gPPToolsConf;
	global string $gPPTEditTabLayout;

	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;
	
	int $from[] = `textScrollList -q -sii $layout`;
	if ($type == "up")
		slPPToolsEditUp($layout);
	else if ($type == "down")
		slPPToolsEditDown($layout);
	int $to[] = `textScrollList -q -sii $layout`;

	tabLayout -e -mt $from[0] $to[0] $gPPTEditTabLayout ;
	tabLayout -e -sti $from[0] $gPPTEditTabLayout ;
	tabLayout -e -sti $to[0] $gPPTEditTabLayout ;

	string $tabName[] = `tabLayout -q -tl $gPPTEditTabLayout`;
	string $content;
	for ($tab in $tabName)
	{
		string $buff[];
		tokenize $tab "\n" $buff;
		$content += ("**" + $buff[0] +"\n");
	}
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") w`;
	fprint $fileId $content;
	fclose $fileId;
}

global proc slPPToolsEditShelfPosition(string $layout,string $type)
{
	global string $gPPToolsConf;
	global string $gPPTEditShelfLayout;

	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;
	string $tabName[] = `textScrollList -q -si slPPToolsShelfEditWindow_tabName`;

	int $from[] = `textScrollList -q -sii $layout`;
	if ($type == "up")
		slPPToolsEditUp($layout);
	else if ($type == "down")
		slPPToolsEditDown($layout);
	int $to[] = `textScrollList -q -sii $layout`;

	string $sbs[] = `shelfLayout -q -ca $gPPTEditShelfLayout`;
	shelfLayout -e -pos $sbs[$from[0]-1] $to[0] $gPPTEditShelfLayout;

	saveShelf $gPPTEditShelfLayout (($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre"));
	slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel"));

	sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel");
	string $path = `internalVar -userPrefDir`;
	sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");
}

global proc slPPToolsEditTabDelete(string $layout)
{
	global string $gPPToolsConf;
	global string $gPPTEditTabLayout;

	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;

	int $sli[] = `textScrollList -q -sii $layout`;
	string $sll[] = `textScrollList -q -si $layout`;
	textScrollList -e -ri $sll[0] $layout;
	string $foChildren[] = `tabLayout -q -ca $gPPTEditTabLayout`;
	deleteUI $foChildren[$sli[0]-1];
	textScrollList -e -sii 1 $layout;
	tabLayout -e -sti 1 $gPPTEditTabLayout;

	slPPToolsDeleteFolder($gPPToolsConf+$tbName+"/"+$sll[0]+"/");

	string $tabName[] = `tabLayout -q -tl $gPPTEditTabLayout`;
	string $content;
	for ($tab in $tabName)
	{
		string $buff[];
		tokenize $tab "\n" $buff;
		$content += ("**" + $buff[0] +"\n");
	}
	$fileId = `fopen ($gPPToolsConf+$tbName+"/tab.ind") w`;
	fprint $fileId $content;
	fclose $fileId;

}

global proc slPPToolsEditShelfDelete(string $layout)
{
	global string $gPPToolsConf;
	global string $gPPTEditShelfLayout;

	string $tbName = `optionMenu -q -v slPPToolsShelfEditWindow_tbName`;
	string $tabName[] = `textScrollList -q -si slPPToolsShelfEditWindow_tabName`;

	int $sli[] = `textScrollList -q -sii $layout`;
	string $sll[] = `textScrollList -q -si $layout`;
	textScrollList -e -ri $sll[0] $layout;
	textScrollList -e -sii 1 $layout;

	string $sbChildren[] = `shelfLayout -q -ca $gPPTEditShelfLayout`;
	deleteUI $sbChildren[$sli[0]-1];

	saveShelf $gPPTEditShelfLayout (($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre"));
	slPPToolsShelfCommand(($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel"));

	sysFile -delete ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/shelf_pre.mel");
	string $path = `internalVar -userPrefDir`;
	sysFile -move ($gPPToolsConf+$tbName+"/"+$tabName[0]+"/pptShlefcommand.mel") ($path+"pptShlefcommand.mel");
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsEditUp
//	共用子程序
//	多个面板中的选项向上移动功能
//	Arguments : 需要调用此程序的UI名称（UI类型为textScrollList）
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsEditUp(string $layout)
{
	string $allItems[] = `textScrollList -q -ai $layout`;
	
	int $selectedItemIndex[] = `textScrollList -q -sii $layout`;
	 
	if ($selectedItemIndex[0]>1) 
	{
		int $currentInd = $selectedItemIndex[0];
		int $upInd = $currentInd-1;
		
		string $currentItem = $allItems[$currentInd-1];
		string $upItem   = $allItems[$upInd-1];
		
		$allItems[$currentInd-1] = $upItem;
		$allItems[$upInd-1] = $currentItem;
			
		textScrollList -e -ra $layout;	
		
		for ($i=0;$i<size($allItems);$i++) {
			textScrollList -e -append $allItems[$i] $layout;
		}
		
		textScrollList -e -sii $upInd $layout;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsEditDown
//	共用子程序
//	多个面板中的选项向下移动功能
//	Arguments : 需要调用此程序的UI名称（UI类型为textScrollList）
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsEditDown(string $layout)
{
	string $allItems[] = `textScrollList -q -ai $layout`;
	
	int $selectedItemIndex[]	= `textScrollList -q -sii $layout`;
	
	if ($selectedItemIndex[0]<size($allItems)) 
	{	
		int $currentInd = $selectedItemIndex[0];
		int $DownInd = $currentInd+1;
	
		string $currentItem = $allItems[$currentInd-1];
		string $DownItem   = $allItems[$DownInd-1];
	
		$allItems[$currentInd-1] = $DownItem;
		$allItems[$DownInd-1] = $currentItem;
		
		textScrollList -e -ra $layout;	
	
		for ($i=0;$i<size($allItems);$i++) {
			textScrollList -e -append $allItems[$i] $layout;
		}
	
		textScrollList -e -sii $DownInd $layout;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsFilePrintEnd
//	共用子程序
//	在指定文件末尾添加
//	Arguments : 
//				string $file	指定的文件
//				string $content	添加的内容
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsFilePrintEnd(string $file,string $content)
{
	string $oldContent;
	
	$fileId = `fopen $file r`;
	$nextLine = `fgetline $fileId`;
	while(size($nextLine)>0)
	{
		$oldContent += $nextLine;
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;

	string $newContent = $oldContent + $content;

	$fileId = `fopen $file w`;
	fprint $fileId $newContent;
	fclose $fileId;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsToolbarUpdate
//	更新面板中的frame工具栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsToolbarUpdate()
{
	
	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
			deleteUI $child;
	}

	float $resize = 196;
	global string $gPPToolsConf;
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		if (startsWith($nextLine,"**"))
		{
			tokenize $nextLine "**--\n" $buff;
			string $tbName = $buff[0];
			float $tbHeight = $buff[1];

			$resize += ($tbHeight + 4);

			setParent PPToolsWindow_mainColumn;

			string $frame = `frameLayout -label $tbName -h $tbHeight -bv false  -cll true`;
				frameLayout -e -cc ("slPPToolsCollapse(\"collapse\",\""+$frame+"\")") -ec ("slPPToolsCollapse(\"expand\",\""+$frame+"\")") $frame;
				string $tab = `tabLayout `;
					string $form = `formLayout -h ($tbHeight-42)`;
						string $mdName = slPPToolsLayoutName("shelfLayout","PPToolsShelf");
						string $shelf = `shelfLayout -cwh 60 60 -st "iconOnly" $mdName`;
						setParent ..;
					formLayout -edit
						-af		$shelf		"top"		0 
						-af		$shelf		"left"		0
						-af		$shelf		"right"		0
						-af		$shelf		"bottom"	0
					$form;
					setParent ..;
				tabLayout -edit -tv true
					-tabLabel $form "default"
				$tab;
				setParent ..;
		}
		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;

	window -edit -h $resize PPToolsWindow;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsTabUpdate
//	更新面板中的环节栏
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsTabUpdate()
{
	global string $gPPToolsConf;
	string $folders[];
	$fileId = `fopen ($gPPToolsConf + "/toolbar.ind") r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0)
	{
		string $buff[];
		tokenize $nextLine "**--\n" $buff;
		$folders[size($folders)] = $buff[0];
		
		$nextLine = `fgetline $fileId`;
	}	
	fclose $fileId;

	for ($folder in $folders)
	{
		//default工具栏的删除判断
		int $default = 1;
		
		$fileId = `fopen ($gPPToolsConf+$folder+"/tab.ind") r`;
		$nextLine = `fgetline $fileId`;
		while (size($nextLine)>0)
		{
			string $buff[];
			tokenize $nextLine "**" $buff;
			string $name = $buff[0];

			string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
			for ($child in $mcChildren)
			{
				if ($child != "PPToolsWindow_tips")
				{
					string $label = `frameLayout -q -label $child`;
					if ($label == $folder)
					{
						float $height = `frameLayout -q -h $child`;
						
						string $childFr[] = `frameLayout -q -ca $child`;
						string $childTab[] = `tabLayout -q -ca $childFr[0]`;
						if ($default)
						{
							deleteUI $childTab;
							$default = 0;
						}

						setParent $childFr[0];
							string $form = `formLayout -h ($height-42)`;
								string $mdName = slPPToolsLayoutName("shelfLayout","PPToolsShelf");
								string $shelf = `shelfLayout -cwh 60 60 -st "iconOnly" $mdName`;
								setParent ..;
							formLayout -edit
								-af		$shelf		"top"		0 
								-af		$shelf		"left"		0
								-af		$shelf		"right"		0
								-af		$shelf		"bottom"	0
							$form;
						
						tabLayout -edit -tv true -tabLabel $form $name	$childFr[0];
					}
				}
			}

			$nextLine = `fgetline $fileId`;
		}
		fclose $fileId;
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfUpdate
//	更新面板中的按钮
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfUpdate()
{
	global string $gPPToolsConf;

	string $mcChildren[] = `columnLayout -q -ca PPToolsWindow_mainColumn`;
	string $children[],$buff[];
	for ($child in $mcChildren)
	{
		if ($child != "PPToolsWindow_tips")
		{
			string $tbName = `frameLayout -q -l $child`;
			$children = `frameLayout -q -ca $child`;

			string $tabName[] = `tabLayout -q -tl $children[0]`;
			$children = `tabLayout -q -ca $children[0]`;
			for ($i=0;$i<size($tabName) ;$i++ )
			{
				tokenize $tabName[$i] "\n" $buff;
				string $pptsc = ($gPPToolsConf+$tbName+"/"+$buff[0]+"/pptShlefcommand.mel");
				
				if (`filetest -r $pptsc`)
				{
					string $foName[] = `formLayout -q -ca $children[$i]`;
					setParent $foName[0];
					eval ("source \""+$pptsc+"\"");
				}
			}
		}
	}
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsDeleteFolder
//	共用子程序
//	删除指定的目录（包含其子目录和文件）
//	Arguments : 
//				string $folder	指定需要删除的目录
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsDeleteFolder(string $folder)
{
	string $children[] = `getFileList -folder $folder`;
	for ($child in $children)
	{
		string $files[] = `getFileList -folder ($folder+$child+"/")`;
		if (size($files[0]))
			slPPToolsDeleteFolder($folder+$child+"/");
		else
		{
			sysFile -delete ($folder+$child);
		}
		sysFile -removeEmptyDir ($folder+$child);
	}
	sysFile -removeEmptyDir $folder;
}

//////////////////////////////////////////////////////////
//	Procdures Name: slPPToolsShelfCommand
//	slPPToolsShelfNew －－－ 子程序
//	获取需要的shelf文档的内容
//	Arguments : 
//				string $prefile			初始文档
//				string $shelfLayout		父UI
//	Return : NULL
//////////////////////////////////////////////////////////
global proc slPPToolsShelfCommand(string $prefile)
{
	string $path = `internalVar -userPrefDir`;
	
	string $content;
	int $start = 0;
	
	$fileId = `fopen $prefile r`;
	$nextLine = `fgetline $fileId`;
	while (size($nextLine)>0 || $nextLine == "\n")
	{
		string $buff[];
		tokenize $nextLine " \n" $buff;
		if (startsWith($buff[0],"shelfButton"))
			$start = 1;
		if ($start)
		{
			tokenize $nextLine " \n" $buff;
			if ($buff[0] == ";")
			{
				$start = 0;
			}
			$content += $nextLine;
		}

		$nextLine = `fgetline $fileId`;
	}
	fclose $fileId;

	$fileId = `fopen ($path+"pptShlefcommand.mel") w`;
	fprint $fileId $content;
	fclose $fileId;
}

global proc string slPPToolsLayoutName(string $layout,string $name)
{
	string $mdName ;

	string $cmd =  $layout + " -ex " + $name ;
	if (`eval $cmd`)
	{
		$mdName = $name + "e";
		$mdName = slPPToolsLayoutName($layout,$mdName);
		return $mdName;
	}
	else 
	{
		$mdName = $name;
		return $mdName;
	}
}

global proc slPPToolsTips(int $old)
{
	string $tipsPath = "//File-cluster/gdc/Resource/Support/Maya/Import/PPTools/tips/";
	string $tipsFiles[] = `getFileList -filespec ($tipsPath+"*.bmp")`;
	int $tipsIndex = rand(size($tipsFiles));
	
	if ($tipsIndex == $old)
	{
		slPPToolsTips($old);
	}
	else	
		symbolButton -edit -image ($tipsPath+$tipsFiles[$tipsIndex])  PPToolsWindow_tips;
}

global proc slPPToolsCopyFolder(string $folder,string $cfolder)
{
	string $files[] = `getFileList -folder $folder`;
	if (size($files))
	{
		sysFile -makeDir $cfolder;
		for ($file in $files)
		{
			slPPToolsCopyFolder(($folder+$file+"/"),($cfolder+$file+"/"));
		}
	}
	else
	{
		string $fo = `substring $folder 1 (size($folder)-1)`;
		string $cfo = `substring $cfolder 1 (size($cfolder)-1)`;
		
		int $copy = `sysFile -copy $cfo $fo`;
		if (!$copy)
		{
			sysFile -makeDir $cfolder;
		}
	}
}


global proc slPPToolsCollapse(string $type,string $frameLayout)
{
	float $winHeight = `window -q -h PPToolsWindow`;
	
	frameLayout -e -cl false $frameLayout;
	float $height = `frameLayout -q -h $frameLayout`;
	

	if ($type == "collapse")
	{
		frameLayout -e -cl true $frameLayout;
		window -e -h ($winHeight-$height+10) PPToolsWindow;
	}
	if ($type == "expand")
	{
		frameLayout -e -cl false $frameLayout;
		window -e -h ($winHeight+$height-10) PPToolsWindow;
	}
}