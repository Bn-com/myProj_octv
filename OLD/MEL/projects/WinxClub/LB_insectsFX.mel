global proc LB_InsectsFX(){global string $rl;global string $RL;global string $rL;global string $Rl;global string $rlr;global float $RLR;global float $RlR;global float $rLr;global float $rlrl;global float $RlRl;global float $rLrL;global float $rlrlrl;global float $RlRlRl;global int $LLLRRR;global int $LLLRRRLRLR;global int $LLLRRR_LRLR;global int $LrLLLL;global int $RlRRRR;if (`window -exists insectsFX`) deleteUI insectsFX;window -title "LB_InsectsFX" -wh 320 200 insectsFX;columnLayout -adjustableColumn 1;frameLayout -label "Objects in FX" -cl false -cll true;columnLayout -adjustableColumn 1 -columnAlign "left";textFieldButtonGrp -label "MSH Emitter:" -columnWidth2 50 50 -buttonLabel "Pick" -bc pickEmitter _LLL_RRRR;textFieldButtonGrp -label "MSH Target:" -columnWidth2 50 50 -buttonLabel "Pick" -bc pickGoal _RRR_RRRR;textFieldButtonGrp -label "OBJ Deflector:" -columnWidth2 50 50 -buttonLabel "Pick" -bc pickDeflector _rL;textFieldButtonGrp -label "OBJ Istancer:" -columnWidth2 50 50 -buttonLabel "Pick" -bc pickInstancer _Rl;text -label " ";$_mode_=`radioButtonGrp -numberOfRadioButtons 3 -columnWidth 1 100 -columnWidth 2 115 -columnAttach 2 "left" 35 -select 1 -label "Mode" -onCommand _RRR_RRRR_LR -onCommand1 _RRR_RRRR_LRLR -onCommand2 _RRR_RRRR_LRLRLR -labelArray3 "SELF" "TARGET" "DEFLECTOR" "type"`;$_modeInst_=`radioButtonGrp -numberOfRadioButtons 2 -columnWidth 1 100 -columnWidth 2 115 -columnAttach 2 "left" 35 -select 1 -label "Instancer" -onCommand _LRLRLRLRLRL_ -onCommand1 _LRLRLRLRLRL_LRLR -labelArray2 "USE" "UNUSE" "mode"`;text -label " ";separator;text -label " ";text -label "Emitter Insects Attributes:" -font "boldLabelFont";text -label " ";intFieldGrp -numberOfFields 2 -label "Start/End frame" -value1 0 -value2 0 _fStart_fEnd;floatSliderGrp -label "Particles Rate" -min 1 -max 50000 -step 0.01 -field true _RLR;intSliderGrp -label "Max Particles Count" -min -1 -max 50000 -step 1 -field true _RlR;intSliderGrp -label "Particles Group" -min 1 -step 1 -field true _GRP_num;floatSliderGrp -label "Attract to Goal Surface" -min 0.01 -step 0.01 -field true _rLr;floatSliderGrp -label "Particles Surface Distance" -min 0 -max 100 -step 0.01 -field true _rlrl;text -label " ";separator;text -label " ";text -label "On Surface Movement" -font "boldLabelFont";text -label " ";$_modeGoal_=`radioButtonGrp -numberOfRadioButtons 2 -columnWidth 1 100 -columnWidth 2 115 -columnAttach 2 "left" 35 -select 2 -label "Goal Mode" -onCommand enableGOALUV -onCommand1 enableSTATIC -labelArray2 "STATIC" "GOAL UV" "type Goal"`;floatSliderGrp -label "Goal V" -min 0 -max 1 -step 0.01 -field true _goalV_;floatSliderGrp -label "Goal U" -min 0 -max 1 -step 0.01 -field true _goalU_;text -label " ";separator;text " ";text -label "Insects Behavior:" -font "boldLabelFont";text -label " ";floatSliderGrp -label "Flock Speed" -min 0.01 -step 0.01 -field true _RlRl;floatSliderGrp -label "Caos Particles" -min 0.01 -step 0.01 -field true _rLrL;floatSliderGrp -label "Amplitude Particles" -min 0.01 -step 0.01 -field true _rlrlrl;floatSliderGrp -label "Self Collide Particles" -min 0.01 -step 0.01 -field true _RlRlRl;text " ";setParent..;setParent..;rowLayout -nc 2;button -label "Create FX" -w 80 -c createFX;showWindow insectsFX;}global proc _RRR_RRRR_LRLR(){global int $LLLRRR;$LLLRRR=0;textFieldButtonGrp -e -enable 0 -enableButton 0 _RRR_RRRR ;textFieldButtonGrp -e -enable 0 -enableButton 0 _rL;}global proc _RRR_RRRR_LRLRLR(){global int $LLLRRR;$LLLRRR=1;textFieldButtonGrp -e -enable 1 -enableButton 1 _RRR_RRRR ;}global proc _RRR_RRRR_LR(){global int $LLLRRR;$LLLRRR=2;textFieldButtonGrp -e -enable 0 -enableButton 0 _RRR_RRRR;textFieldButtonGrp -e -enable 1 -enableButton 1 _rL;}global proc enableSTATIC(){global int $LLLRRR_LRLR;$LLLRRR=0;floatSliderGrp -e -enable 0 _goalV_;floatSliderGrp -e -enable 0 _goalU_;}global proc enableGOALUV(){global int $LLLRRR_LRLR;$LLLRRR=1;floatSliderGrp -e -enable 1 _goalV_;floatSliderGrp -e -enable 1 _goalU_;}global proc _LRLRLRLRLRL_(){global int $LLLRRRLRLR;$LLLRRRLRLR=0;textFieldButtonGrp -e -enable 0 -enableButton 0 _Rl;}global proc _LRLRLRLRLRL_LRLR(){global int $LLLRRRLRLR;$LLLRRRLRLR=1;textFieldButtonGrp -e -enable 1 -enableButton 1 _Rl;}global proc pickEmitter(){string $lxrlrxects_0[]=`ls-sl`;string $lxrlrx_0;string $all_0;for ($lxrlrx_0 in $lxrlrxects_0){$all_0+=$lxrlrx_0+"|";textFieldButtonGrp -e -tx $all_0 _LLL_RRRR;}}global proc pickGoal(){string $lxrlrxects_1[]=`ls-sl`;string $lxrlrx_1;string $all_1;for ($lxrlrx_1 in $lxrlrxects_1){$all_1+=$lxrlrx_1+"|";textFieldButtonGrp -e -tx $all_1 _RRR_RRRR;}}global proc pickDeflector(){string $deflectors[]=`ls -sl`;textFieldButtonGrp -e -tx $deflectors[0] _rL;}global proc pickInstancer(){string $instancer[]=`ls -sl`;textFieldButtonGrp -e -tx $instancer[0] _Rl;}global proc createFX(){global string $rl;global string $RL;global string $rL;global float $RLR;global float $RlR;global float $rLr;global float $rlrl;global float $RlRl;global float $rLrL;global float $rlrlrl;global float $RlRlRl;global int $LLLRRR; global int $LLLRRRLRLR; global int $RlRRRR;string $lxrlrx;string $lxrlrx_1;string $target;$rl=`textFieldGrp -q -tx _LLL_RRRR`;$RL=`textFieldGrp -q -tx _RRR_RRRR`;$rL=`textFieldGrp -q -tx _rL`;$RLR=`floatSliderGrp -q -v _RLR`;$RlR=`intSliderGrp -q -v _RlR`;$rLr=`floatSliderGrp -q -v _rLr`;$rlrl=`floatSliderGrp -q -v _rlrl`;$RlRl=`floatSliderGrp -q -v _RlRl`;$rLrL=`floatSliderGrp -q -v _rLrL`;$rlrlrl=`floatSliderGrp -q -v _rlrlrl`;$RlRlRl=`floatSliderGrp -q -v _RlRlRl`;$RlRRRR=`intSliderGrp -q -v _GRP_num`;$LrLLLL=`intFieldGrp -q -value1 _fStart_fEnd`;string $buffer[];$numEmitter=`tokenize $rl "|" $buffer`;string $buffer_1[];$numTarget=`tokenize $RL "|" $buffer_1`;for ($lxrlrx_1 in $buffer_1){$target=$lxrlrx_1;}if ($LLLRRR==2){addAttr -ln "MODE" -at "enum" -en "Swarm:Dissolve:" $rL;setAttr -e -keyable true ($rL+".MODE");}for ($lxrlrx in $buffer){group -empty -n ("insectsFX"+"_"+$lxrlrx);select -r $lxrlrx;emitter -type surface -name ("insectsEmitter"+"_"+$lxrlrx) -r $RLR -sro 0 -nuv 1 -cye none -cyi 1 -spd 1 -srn 0 -nsp 1 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0;particle -n ("insects"+"_"+$lxrlrx);setAttr ("insects"+"_"+$lxrlrx+"Shape"+".maxCount") $RlR;setAttr ("insects"+"_"+$lxrlrx+"Shape"+".lifespanMode") 0;connectDynamic -em ("insectsEmitter"+"_"+$lxrlrx) ("insects"+"_"+$lxrlrx);if ($LLLRRR==0 || $LLLRRR==2){goal -w 0.8 -utr 0 -g $lxrlrx ("insects"+"_"+$lxrlrx);}if ($LLLRRR==1){goal -w 0.8 -utr 0 -g $lxrlrx ("insects"+"_"+$lxrlrx);goal -w 0 -utr 0 -g $target ("insects"+"_"+$lxrlrx);}setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".translateX");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".translateY");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".translateZ");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".rotateX");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".rotateY");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".rotateZ");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".scaleX");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".scaleY");setAttr -keyable off ("insectsFX"+"_"+$lxrlrx+".scaleZ");addAttr -ln "PARTICLES_ATTR" -at "enum" -en "______________________________________:"  ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".PARTICLES_ATTR");setAttr -lock true ("insectsFX"+"_"+$lxrlrx+".PARTICLES_ATTR");addAttr -ln "fStart" -at long -dv $LrLLLL ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".fStart");addAttr -ln "attraction" -at double -min 0.001 -max 1000 -dv 1000 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".attraction");addAttr -ln "rate" -at double -min 0 -max 100000 -dv $RLR ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".rate");addAttr -ln "maxCount" -at double -min -1 -max 100000 -dv $RlR ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".maxCount");addAttr -ln "INSECTS_ATTR" -at "enum" -en "______________________________________:"  ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".INSECTS_ATTR");setAttr -lock true ("insectsFX"+"_"+$lxrlrx+".INSECTS_ATTR");addAttr -ln "distP_0" -at double -min 0 -max 1000 -dv 15 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".distP_0");addAttr -ln "distP_1" -at double -min 0 -max 1000 -dv 60 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".distP_1");addAttr -ln "distP_2" -at double -min 0 -max 1000 -dv 120 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".distP_2");addAttr -ln "confP_0" -at double -min 0 -max 10 -dv 0.5 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".confP_0");addAttr -ln "confP_1" -at double -min 0 -max 10 -dv 0.5 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".confP_1");addAttr -ln "confP_2" -at double -min 0 -max 10 -dv 0.5 ("insectsFX"+"_"+$lxrlrx);setAttr -e -keyable true ("insectsFX"+"_"+$lxrlrx+".confP_2");connectAttr -f ("insectsFX"+"_"+$lxrlrx+".rate") ("insectsEmitter"+"_"+$lxrlrx+".rate");connectAttr -f ("insectsFX"+"_"+$lxrlrx+".maxCount") ("insects"+"_"+$lxrlrx+"Shape"+".maxCount");connectAttr -f ("insectsFX"+"_"+$lxrlrx+".fStart") ("insects"+"_"+$lxrlrx+"Shape"+".stf");addAttr -ln goalU -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalU0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalV -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalV0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln parentU -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln parentU0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln parentV -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln parentV0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln "rgbPP" -dt vectorArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln "rgbPP0" -dt vectorArray ("insects"+"_"+$lxrlrx+"Shape");if ($LLLRRR==1){addAttr -ln goalWeight0PP -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalWeight0PP0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalWeight1PP -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln goalWeight1PP0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");}if ($LLLRRR==2){addAttr -ln radiusPP -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");addAttr -ln radiusPP0 -dt doubleArray ("insects"+"_"+$lxrlrx+"Shape");}string $_lll=" ";string $_rrr=" ";$_lll+=("insects"+"_"+$lxrlrx+"Shape"+".goalV=insects"+"_"+$lxrlrx+"Shape"+".parentV;");$_lll+=("insects"+"_"+$lxrlrx+"Shape"+".goalU=insects"+"_"+$lxrlrx+"Shape"+".parentU;");if ($LLLRRR==1){$_lll+=("insects"+"_"+$lxrlrx+"Shape"+".goalU=insects"+"_"+$lxrlrx+"Shape"+".goalWeight0PP=0.8;");$_lll+=("insects"+"_"+$lxrlrx+"Shape"+".goalU=insects"+"_"+$lxrlrx+"Shape"+".goalWeight1PP=0;");}dynExpression -s $_lll -c ("insects"+"_"+$lxrlrx+"Shape");$_rrr+="vector $ab;\n";$_rrr+=("vector $ba=<<"+$lxrlrx+".translateX,"+$lxrlrx+".translateY,"+$lxrlrx+".translateZ>>;\n");if ($LLLRRR==2){$_rrr+=("int $aba="+$rL+".MODE;");$_rrr+=("vector $bab=<<"+$rL+".translateX,"+$rL+".translateY,"+$rL+".translateZ>>;");$_rrr+=("vector $abab=insects"+"_"+$lxrlrx+"Shape.position;");$_rrr+=("float $dist=mag($abab-$bab);");$_rrr+=("float $baba=smoothstep(0,("+$rL+".scaleX*2),$dist);");$_rrr+=("float $ababab=linstep(15,("+$rL+".scaleX),$dist);");$_rrr+=("if ($aba==0)");$_rrr+="{\n\t";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalPP = $baba;");$_rrr+="}";$_rrr+=("if ($aba==1)");$_rrr+="{\n\t";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.radiusPP = $ababab;");$_rrr+="}";}if ($LLLRRR==1){$_rrr+=("float $bababa=insects"+"_"+$lxrlrx+"Shape.goalWeight0PP;\n");$_rrr+=("float $babababa=insects"+"_"+$lxrlrx+"Shape.goalWeight1PP;\n");$_rrr+=("insects"+"_"+$lxrlrx+"Shape.rgbPP = 1-$baba;\n");$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalPP = $baba;\n");$_rrr+=("if ($dist<=2)\n");$_rrr+="{\n\t";$_rrr+=("if ($bababa >= 0.2 && $babababa <= 0.8)\n\t");$_rrr+="{\n\t";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalWeight0PP-=0.002/$baba;\n\t");$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalWeight1PP+=0.002/$baba;\n\t");$_rrr+="}\n";$_rrr+="}\n\n";$_rrr+=("if ($dist>=2)\n");$_rrr+="{\n\t";$_rrr+=("if ($bababa <= 1 && $babababa >= 0.2)\n\t");$_rrr+="{\n\t";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalWeight0PP+=0.002/$baba;\n\t");$_rrr+=("insects"+"_"+$lxrlrx+"Shape.goalWeight1PP-=0.002/$baba;\n\t");$_rrr+="}\n";$_rrr+="}\n\n";}$_rrr+="vector $bababababa;";$_rrr+="vector $aBaB;";$_rrr+=("float $AbAb=insectsFX"+"_"+$lxrlrx+".attraction;");$_rrr+=("float $AbAbAb=insectsFX"+"_"+$lxrlrx+".confP_0;");$_rrr+=("float $BaBaBa=insectsFX"+"_"+$lxrlrx+".confP_1;");$_rrr+=("float $BaBaBaBa=insectsFX"+"_"+$lxrlrx+".confP_2;");$_rrr+=("float $AbAbAbAb=insectsFX"+"_"+$lxrlrx+".distP_0;");$_rrr+=("float $AbAbAbAbAb=insectsFX"+"_"+$lxrlrx+".distP_1;");$_rrr+=("float $BaBaBaBaBa=insectsFX"+"_"+$lxrlrx+".distP_2;");$_rrr+=("seed(insects"+"_"+$lxrlrx+"Shape.particleId);");$_rrr+=("if (insects"+"_"+$lxrlrx+"Shape.particleId%3==0)");$_rrr+="{";$_rrr+="vector $BaBaBaBaBaBa=<<1,0,0>>;";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.rgbPP=$BaBaBaBaBaBa;");$_rrr+=("$bababababa=<<$AbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$AbAbAb),$AbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$AbAbAb),$AbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$AbAbAb)>>;");$_rrr+="}";$_rrr+=("if (insects"+"_"+$lxrlrx+"Shape.particleId%3==1)");$_rrr+="{\n\t";$_rrr+="vector $BaBaBaBaBaBa=<<0,1,0>>;";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.rgbPP=$BaBaBaBaBaBa;");$_rrr+=("$bababababa=<<$AbAbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBa),$AbAbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBa),$AbAbAbAbAb*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBa)>>;");$_rrr+="}";$_rrr+=("if (insects"+"_"+$lxrlrx+"Shape.particleId%3==2)");$_rrr+="{";$_rrr+="vector $BaBaBaBaBaBa=<<0,0,0>>;";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.rgbPP=$BaBaBaBaBaBa;");$_rrr+=("$bababababa=<<$BaBaBaBaBa*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBaBa),$BaBaBaBaBa*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBaBa),$BaBaBaBaBa*noise(insects"+"_"+$lxrlrx+"Shape.particleId*rand(insects"+"_"+$lxrlrx+"Shape.particleId)+time/$BaBaBaBa)>>;");$_rrr+="}";$_rrr+=("$aBaB=($ba-insects"+"_"+$lxrlrx+"Shape.position)/$AbAb;");$_rrr+="$ab=($bababababa+$aBaB/10);";$_rrr+=("insects"+"_"+$lxrlrx+"Shape.velocity=$ab;");dynExpression -s $_rrr -rbd ("insects"+"_"+$lxrlrx+"Shape");if ($LLLRRRLRLR!=0){string $pInstancer=`particleInstancer -n ("insects"+"_"+$lxrlrx+"INSTANCER") -addObject -object "spybug_ctrl" -cycle None -cycleStep 1 -cycleStepUnits Frames -levelOfDetail Geometry -rotationUnits Degrees -rotationOrder XYZ -position worldPosition -aimDirection worldVelocity -age age ("insects"+"_"+$lxrlrx+"Shape")`;parent ("insects"+"_"+$lxrlrx+"INSTANCER") ("insectsFX"+"_"+$lxrlrx);}parent ("insectsEmitter"+"_"+$lxrlrx) ("insectsFX"+"_"+$lxrlrx);parent ("insects"+"_"+$lxrlrx) ("insectsFX"+"_"+$lxrlrx);}}