//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////


global proc vvCGOptimize()
{
	
	//string $sel[] = `ls -sl -l `;
	string $sel[] = `sets -q "vvExtraTrees_sl"`;
	if (!size($sel))
	{
		warning "没有保留的物体，请选择需要保留的物体，然后点SEL工具!";
		return ;
	}
	
	string $selGroup[]={};
	for ($item in $sel)
	{
		string $mesh=$item;
		if (objectType($item) != "mesh")
		{
			string $child[] = `listRelatives -fullPath -children $item`;
			$mesh = $child[0];
		}
		string $parents[] = `listRelatives -fullPath -allParents $mesh`;
		string $transform[]={};
		if (size($parents) >1)
		{
			string $p1[] = `listRelatives -f -p $mesh`;
			$transform = `listRelatives -f -p $p1[0]`;
		}
		else 
			$transform = `listRelatives -f -p $mesh`;
		
		$selGroup[size($selGroup)] = $transform[0];
		
	}

	string $allMesh[] = `ls -type mesh -l`;
	string $allGroup[]={};
	for ($item in $allMesh)
	{
		if (!`referenceQuery -inr $item`)
		{
			string $transform[]={};
			string $parents[] = `listRelatives -fullPath -allParents $item`;
			if (size($parents) >1)
			{
				//string $p1[] = `listRelatives -f -p $item`;
				for ($p in $parents)
				{
					$transform = `listRelatives -f -p $p`;
					$allGroup[size($allGroup)] = $transform[0];
				}
			}
			else 
			{
				$transform = `listRelatives -f -p $item`;
				$allGroup[size($allGroup)] = $transform[0];
			}
		}
		else 
		{
			string $referenceFile = `referenceQuery -f $item`;
			if (match("/locations/",$referenceFile) != "")
			{
				string $transform[]={};
				string $parents[] = `listRelatives -fullPath -allParents $item`;
				if (size($parents) >1)
				{
					//string $p1[] = `listRelatives -f -p $item`;
					for ($p in $parents)
					{
						$transform = `listRelatives -f -p $p`;
						$allGroup[size($allGroup)] = $transform[0];
					}
				}
				else 
				{
					$transform = `listRelatives -f -p $item`;
					$allGroup[size($allGroup)] = $transform[0];
				}
			}

		}
	}
	$allGroup = stringArrayRemoveDuplicates($allGroup);

	string $delGroup[] = stringArrayRemove($selGroup,$allGroup);
	
	//select -r $delGroup;
	//delete $delGroup;
	//delete "vvExtraTrees_sl";
	if (`objExists "vvExtraTrees_del"`)
		delete "vvExtraTrees_del";
	string $displayLayer = `createDisplayLayer -name "vvExtraTrees_del" -number 1 -empty`;
	editDisplayLayerMembers -noRecurse $displayLayer $delGroup;
	setAttr ($displayLayer+".visibility") 0;
}


global proc vvCGOptimizeAddSet()
{
	if (`objExists "vvExtraTrees_sl"`)
		delete "vvExtraTrees_sl";
	
	sets -name "vvExtraTrees_sl";

	string $sel[] = `ls -sl -l `;
	if (!size($sel))
	{
		warning "没有选择任务物体，请选择需要保留的物体!";
		return ;
	}
	sets -add "vvExtraTrees_sl" $sel;
}