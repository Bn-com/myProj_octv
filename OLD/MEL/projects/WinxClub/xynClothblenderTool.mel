global proc xynClothblenderTool(){if(`window -exists  nClothBlenderUI`)	deleteUI nClothBlenderUI;window 	-title "Winx nClothBlender Tool window" 	-wh 400 400	-mxb 0	nClothBlenderUI;formLayout mainform;//-----------------------------------//creat items //----------------------------------- text -label "The nClothshapes " nClothshapestext; text -label "The setupmeshes" setupmeshestext; text -label "The blenders" blenderstext; text -label "Dynamic Value" dynamicvaluetext;  textScrollList -h 300 -w 20 -allowMultiSelection 1 TSLnclothshapes; textScrollList -h 300 -w 20 -allowMultiSelection 1 TSLsetupmeshes; textScrollList -h 300 -w 20 -allowMultiSelection 1 TSLblenders; textScrollList -h 300 -w 20 -allowMultiSelection 1 TSLDYNValues; button -l "Set nCloth on" -w 100 -c setnClothOn  setnconbutton; button -l "Set nCloth off" -w 100 -c setnClothOff  setncoffbutton; text -label "+++++++++++++++++++++++++++++++++++use RMB to show submenus+++++++++++++++++++++++++++++++++++" helptext;  popupMenu -p TSLnclothshapes; menuItem -l "Refresh" -command xynClothblenderTool; menuItem -divider true; menuItem -l "Set Selected from setupmesh" -command setSelectedInitial; menuItem -l "Set All from setupmesh" -command setAllInitial; menuItem -divider true; menuItem -l "Clear Selected Initial State" -command clearSelectedInitial; menuItem -l "Clear All Initial State" -command clearAllInitial; menuItem -divider true; menuItem -l "Convert to nucleus" -command Converttonucleus; menuItem -l "Select All nucleus" -command SelectAllnucleus;  popupMenu -p TSLblenders; menuItem -l "Set Selected to Dynamic" -command setSelectedone; menuItem -l "Set Selected to Nodynamic" -command setSelectedzero; menuItem -divider true; menuItem -l "Set All to Dynamic" -command setAllone; menuItem -l "Set All to Nodynamic" -command setAllzero; //-----------------------------//layout items//-------------------------------formLayout -e	-af nClothshapestext top 2    -af nClothshapestext left 0    -ap nClothshapestext right 5 33		-af setupmeshestext top 2    -ac setupmeshestext left 5 nClothshapestext    -ap setupmeshestext right 5 66	-af blenderstext top 2    -ac blenderstext left 2 setupmeshestext    -ap blenderstext right 5 90	-af dynamicvaluetext top 2    -ac dynamicvaluetext left 2 blenderstext 		-ac TSLnclothshapes top 2 nClothshapestext	-af TSLnclothshapes left 0	-ap TSLnclothshapes right 5 33	-af TSLnclothshapes bottom 50      -ac TSLsetupmeshes top 2 nClothshapestext	-ac TSLsetupmeshes left 5 TSLnclothshapes	-ap TSLsetupmeshes  right 5 66	-af TSLsetupmeshes bottom 50     -ac TSLblenders top 2 nClothshapestext	-ac TSLblenders left 5 TSLsetupmeshes	-ap TSLblenders right 5 90	-af TSLblenders bottom 50    -ac TSLDYNValues top 2 nClothshapestext	-ac TSLDYNValues left 5 TSLblenders	-af TSLDYNValues right 5	-af TSLDYNValues bottom 50     -ac  setnconbutton top 2 TSLnclothshapes     -af setnconbutton left 5    -ac  setncoffbutton top 2 TSLnclothshapes     -ac setncoffbutton left 5 setnconbutton	-ac helptext top 2 setncoffbutton	-af helptext bottom 2	 mainform; showWindow nClothBlenderUI;populateall;SelectAllnucleus;}//++++++++++++++++++++++++++++++++++++++++++++++++//populate nClothshapes blenders setupmeshes TSLDYNValues//++++++++++++++++++++++++++++++++++++++++++++++++global proc populateall(){textScrollList -e -ra TSLnclothshapes;textScrollList -e -ra TSLsetupmeshes;textScrollList -e -ra TSLblenders;//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++string $nclothshapes[] = `ls -type nCloth`;string $nclothmeshes[];string $inputs[];string $outputs[];string $blenders[];string $dynblender;string $setupmeshes[];int $dynamicvalue[];int $i=0; for ($i=0;$i<size($nclothshapes);$i++){string $nclothmesh[] = `listConnections  -s on -d off -t mesh  $nclothshapes[$i]`;string $input[] = `pickWalk -d down $nclothmesh[0]`;string $output[] = `pickWalk -d left $input[0]`;string $outhistorys[] = `listHistory -lv 1 $output[0]`;string $outfutures[] = `listHistory -f true -lv 1 $output[0]`;for($outhistory in $outhistorys ) {  if(`objectType -isType "blendShape" $outhistory`)     {      $dynblender = $outhistory;     $dynamicvalue[$i] = 0;    } }for($outfuture in $outfutures ) {  if(`objectType -isType "blendShape" $outfuture`)     {     $dynblender = $outfuture;     $dynamicvalue[$i] = 1;    } }print $dynblender;print $dynamicvalue[$i];if($dynamicvalue[$i] == 0)  { string  $setUpMesh[] = `listConnections  -s on -d off -t mesh  $dynblender`;  $setupmeshes[$i] =$setUpMesh[0];   }else { //string  $setUpMesh[] = `listConnections  -s off -d on -t mesh  $dynblender`; string $isit = $dynblender; while (`objectType -isType "mesh" $isit`==0) {  string $which[] =`listHistory -f true  -lv 1 $isit`;  $isit = $which[1]; } $setupmeshes[$i] =$isit; }$nclothmeshes[$i] = $nclothmesh[0];$inputs[$i] = $input[0];$outputs[$i] = $output[0];$blenders[$i] = $dynblender;}//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++for ($each in $nclothshapes){  textScrollList -e -a  $each TSLnclothshapes;   textScrollList -e 		-sc "btselectreplace(\"TSLnclothshapes\",\"TSLsetupmeshes\",\"TSLblenders\")" 		-dcc "openaewindow(\"TSLnclothshapes\")"		TSLnclothshapes;}for ($each in $setupmeshes){  textScrollList -e -a  $each TSLsetupmeshes;   textScrollList -e 		-sc "btselectreplace(\"TSLsetupmeshes\",\"TSLnclothshapes\",\"TSLblenders\")" 		-dcc "openaewindow(\"TSLsetupmeshes\")"		TSLsetupmeshes;}for ($each in $blenders){  textScrollList -e -a  $each TSLblenders;   textScrollList -e 		-sc "btselectreplace(\"TSLblenders\",\"TSLsetupmeshes\",\"TSLnclothshapes\")" 		-dcc "openaewindow(\"TSLblenders\")"		TSLblenders;}for ($each in $dynamicvalue){  textScrollList -e -a  $each TSLDYNValues;   }}//++++++++++++++++++++++++++++++++++++++++++++++++++//select replace//++++++++++++++++++++++++++++++++++++++++++++++++++global proc btselectreplace(string $selectedTSL,string $otherTSL,string $anotherTSL){   	textScrollList -e -da $otherTSL;       textScrollList -e -da $anotherTSL;	string $sleitem[] =`textScrollList -q -si $selectedTSL`;	select -r $sleitem;}//+++++++++++++++++++++++++++++++++++++++++++//open AE Window//+++++++++++++++++++++++++++++++++++++++++++++global proc openaewindow(string $selectedTSL){string $selItem[] = `textScrollList -q -si $selectedTSL`;select -r $selItem[0];openAEWindow;}//++++++++++++++++++++++++++++++++++++++++++++++++++//set selected initial state//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setSelectedInitial(){ int $ids[] = `textScrollList -q -sii TSLnclothshapes`; textScrollList -e -da TSLsetupmeshes; for($id in $ids) { textScrollList -e -sii $id TSLsetupmeshes;  } string $setupmeshes[] = `textScrollList -q -si TSLsetupmeshes`; string $nclothshapes[] = `textScrollList -q -si TSLnclothshapes`; int $i =0; for($i =0; $i<size($nclothshapes);$i++) { select -r $nclothshapes[$i]; select -add $setupmeshes[$i]; SetNClothStartFromMesh; }  }//++++++++++++++++++++++++++++++++++++++++++++++++++//set all initial state//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setAllInitial(){ string $setupmeshes[] = `textScrollList -q -ai TSLsetupmeshes`; string $nclothshapes[] = `textScrollList -q -ai TSLnclothshapes`; int $i =0; for($i =0; $i<size($nclothshapes);$i++) { select -r $nclothshapes[$i]; select -add $setupmeshes[$i]; SetNClothStartFromMesh; }  }//++++++++++++++++++++++++++++++++++++++++++++++++++//clear Selected initial state//++++++++++++++++++++++++++++++++++++++++++++++++++global proc clearSelectedInitial(){ string $nclothshapes[] = `textScrollList -q -si TSLnclothshapes`; int $i =0; for($i =0; $i<size($nclothshapes);$i++) { string $nclothmesh[] = `listConnections  -s on -d off -t mesh  $nclothshapes[$i]`; select -r $nclothmesh[0]; int $vis = `getAttr ($nclothmesh[0]+".visibility")`; if ($vis == 0) {setAttr ($nclothmesh[0]+".visibility") 1;  clearNClothStartState;  setAttr ($nclothmesh[0]+".visibility") 0; } else  clearNClothStartState;  }}//++++++++++++++++++++++++++++++++++++++++++++++++++//clear All initial state//++++++++++++++++++++++++++++++++++++++++++++++++++global proc clearAllInitial(){ string $nclothshapes[] = `textScrollList -q -ai TSLnclothshapes`; int $i =0; for($i =0; $i<size($nclothshapes);$i++) { string $nclothmesh[] = `listConnections  -s on -d off -t mesh  $nclothshapes[$i]`; select -r $nclothmesh[0]; int $vis = `getAttr ($nclothmesh[0]+".visibility")`; if ($vis == 0) {setAttr ($nclothmesh[0]+".visibility") 1;  clearNClothStartState;  setAttr ($nclothmesh[0]+".visibility") 0; } else  clearNClothStartState;  }}//++++++++++++++++++++++++++++++++++++++++++++++++++//set seleced dynamic//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setSelectedone(){ string $blenders[] = `textScrollList -q -si TSLblenders`; int $ids[] = `textScrollList -q -sii TSLblenders`; int $i =0; for($i =0; $i<size($blenders);$i++) {textScrollList -e -da TSLDYNValues;  textScrollList -e -sii $ids[$i] TSLDYNValues;  string $dynValues[] = `textScrollList -q -si TSLDYNValues`;  int $dynOn;  if ($dynValues[0])  $dynOn = 1;  else   $dynOn = 0;  setAttr ($blenders[$i]+".w[0]") $dynOn; }textScrollList -e -da  TSLDYNValues;}//++++++++++++++++++++++++++++++++++++++++++++++++++//set seleced nodynamic//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setSelectedzero(){ string $blenders[] = `textScrollList -q -si TSLblenders`; int $ids[] = `textScrollList -q -sii TSLblenders`; int $i =0; for($i =0; $i<size($blenders);$i++) {  textScrollList -e -da  TSLDYNValues;  textScrollList -e -sii  $ids[$i]  TSLDYNValues;  textScrollList -q  -sii   TSLDYNValues;  string $dynValues[] = `textScrollList -q -si TSLDYNValues`;  int $dynOn;  if ($dynValues[0])  $dynOn = 0;  else   $dynOn = 1;  setAttr ($blenders[$i]+".w[0]") $dynOn; }textScrollList -e -da  TSLDYNValues;}//++++++++++++++++++++++++++++++++++++++++++++++++++//set All dynamic//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setAllone(){ string $blenders[] = `textScrollList -q -ai TSLblenders`; string $dynValues[] = `textScrollList -q -ai TSLDYNValues`;  int $i =0; for($i =0; $i<size($blenders);$i++) {  int $dynOn;  if ($dynValues[$i] =="1" )  $dynOn = 1;  else   $dynOn = 0;  setAttr ($blenders[$i]+".w[0]") $dynOn; }}//++++++++++++++++++++++++++++++++++++++++++++++++++//set All nodynamic//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setAllzero(){ string $blenders[] = `textScrollList -q -ai TSLblenders`; string $dynValues[] = `textScrollList -q -ai TSLDYNValues`; int $i =0; for($i =0; $i<size($blenders);$i++) {  int $dynOn;  if ($dynValues[$i]=="1")  $dynOn = 0;  else   $dynOn = 1;  setAttr ($blenders[$i]+".w[0]") $dynOn; }}//++++++++++++++++++++++++++++++++++++++++++++++++++//convert selection to ncleus//++++++++++++++++++++++++++++++++++++++++++++++++++global proc Converttonucleus(){  string $nclothshapes[] = `textScrollList -q -si TSLnclothshapes`; select -cl; int $i =0; for($i =0; $i<size($nclothshapes);$i++) { string $ncleus[] = `listConnections  -s on -d off  -t nucleus $nclothshapes[$i]`; select -add $ncleus[0]; }}//++++++++++++++++++++++++++++++++++++++++++++++++++//Select All nucleus//++++++++++++++++++++++++++++++++++++++++++++++++++global proc SelectAllnucleus(){  string $ncleus[] = `ls -type nucleus`;  select -r $ncleus;}//++++++++++++++++++++++++++++++++++++++++++++++++++//Set nCloth on//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setnClothOn(){string $nc[] = `ls -type nCloth`;for ($item in $nc)setAttr ($item + ".isDynamic") 1;string $nclus[] = `ls -type nucleus`;for ($item in $nclus)setAttr ($item + ".enable") 1;}//++++++++++++++++++++++++++++++++++++++++++++++++++//Set nCloth off//++++++++++++++++++++++++++++++++++++++++++++++++++global proc setnClothOff(){string $nc[] = `ls -type nCloth`;for ($item in $nc)setAttr ($item + ".isDynamic") 0;string $nclus[] = `ls -type nucleus`;for ($item in $nclus)setAttr ($item + ".enable") 0;}xynClothblenderTool;