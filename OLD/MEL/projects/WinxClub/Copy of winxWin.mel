/*----------------- winxWin -------------------------------------------------------------------------------------
winxWin
finestra di gestione personaggi
realizzato per raimbow cgi ::  hdd@2007
lorenzoangeli@yahoo.it
-------------------------------------------------------------------------------------------------------------------*/
global string $version = "0.75";
//	tipologia dei personaggi da importare "ANIM" o "RENDER"
global string $fileImportType = "ANIM";
// 	percorso di ricerca per i personaggi
global string $CharBasePath="/scenes/character/";
//	percorso per le grafiche dell'interfaccia
global string $icnsPath="/mel/animations/interface/";

//caricamento variabili per posizione e nominazione controlli tsm
tsmControls;
/*	procedura principale ---------------------------------------------------------------
winxWin legge la struttura del progetto e crea un menu di import export per ognuno.
*/
global proc winxWin(int $mode){
global string $icnsPath;
global string $CharBasePath;
global string $version;
global string $Other_TSM_Ctrls[];
global int $k;
$k=0;	
int $charsN;
$charsN=0;
global string $chars[];
//print ($chars);
clear $chars;
//suffisso di controllo per la presenza di un personaggio in scena
//string $chkSuffix=(":Upper_Body");
string $chkSuffix=(":"+$Other_TSM_Ctrls[2]);
//------------ nome della finestra -----------------------------------------
string $winName = "Winx_Panel";
//print $winName;
if (`window -exists $winName` == true ) deleteUI $winName;
window -menuBar true -widthHeight 200 150 $winName;



columnLayout -adj 1;
	$Layout_menu =`menu -label "Char Loader" -allowOptionBoxes true`;
	
	if ($mode == 1 ){
	menu -e -vis 0 $Layout_menu;	
	}
	//prende il percorso di base dal progetto
	//*********************************************************
	//modified by IDMT
	$ws = "//serverone/WINX_MOVIE_ULTIMATE";
	//$ws=`workspace -fn`;
	//*********************************************************
	
	//partenza da cui iniziare a cercare
	$path= $CharBasePath;
	//print ("current Path : "+$path+"\n");
	// crea il path composto
	$wsChar= ($ws + $path);

	// cerca ricursivamente dalla directory data
	findChar($wsChar);
	$charsN=`size $chars`;

	//separator;
	text -align "left" ("  Total Character : "+($charsN-1) + "     on Project : "+ $ws);
	/*
	menu -label "Mirrors" -allowOptionBoxes true;
	menuItem -l "Mani - Pv - Spalle" -c handMirror;
	menuItem -l "Piedi " -c legMirror;
	
	menu -label "Utils" -allowOptionBoxes true;
	menuItem -l "Frame Counter " -c fcFrameCounter;
	menuItem -l "Auto Tangent " -c autoTangent;
	menuItem -l "camere" -c camere;
	
	menu -label "About" -allowOptionBoxes true;
	menuItem -l "Winx Control Panel ";
	//menuItem -l "lotto" -c lotto;
	*/

$mc= `columnLayout -adj 1 `;
string $headerIMG=($ws+$icnsPath+"rbw_winx_header.jpg");
image -h 50 -i $headerIMG;
button -h 40 -l "switch to selected char" -c "switchTab";
separator;
rowColumnLayout  -nc 2 -cw 1 200 -cw 2 200;
button -h 30 -l "grab object" -c "LA_dropGrab 0";
button -h 30 -l "drop object" -c "LA_dropGrab 1";
setParent ..;

//-------------------------------------------------------------------------------------------------
menu -label "Poses" -allowOptionBoxes true "savePoses";
menuItem -l "save facePose" -c "savePoseW";
setParent ..;
//-------------------------------------------------------------------------------------------------

string $tabs = `tabLayout -innerMarginWidth 5 -innerMarginHeight 5 tabt`;

	for($i=1;$i<$charsN;$i++){
		if (`objExists ($chars[$i]+$chkSuffix)`==1){
		//"getSet_IkFk(\""+$chars[$i]+"\")";
		//recupero valore di ritorno di tab_ch
			string $tabB= `tab_ch $chars[$i]`;
			//edit del tab 
			tabLayout -e 
			 -tabLabel $tabB $chars[$i]
			//-sc ("getSet_IkFk(\""+$chars[$i]+"\")")
			$tabs;
			}
		}



		
	setParent ..;
		/*
		menu -label "Utils" -allowOptionBoxes true;
		menuItem -l "lotto" -c lotto;
		setParent $winName;
		*/

showWindow;
print ("Winx Control Panel by [hdd] " + $version +" : sussesfully load \n");

//____________________ CHARACTERS _________________________
//print $chars;
//____________________________________________________________


}
/*	mainCharButtons crea i pulsanti principali per la selezione 

	mainCharButtons(nome del char)


*/
global proc mainCharButtons(string $char){
columnLayout -adj 1;
separator;
button -w 400 -h 40 -l "Graph Editor" -c GraphEditor;
button -w 400 -h 40 -l "Dope Sheet" -c DopeSheetEditor;
separator;
if (`objExists ($char+":"+"SmoothFaceAnim")`==1){
radioButtonGrp -numberOfRadioButtons 2 -sl (`getAttr ($char+":SmoothFaceAnim.divisions")`+1)
-label "Head Resolution" -labelArray2 "Low" "High" 
	-cc ("setSmooth(\""+$char+"\",\"SmoothFace\")")
	($char+"SmoothFace");

/*
SmoothEye_L_
SmoothEye_R_
SmoothTongue
*/
}

if (`objExists ($char+":"+"SmoothBodyAnim")`==1){
radioButtonGrp -numberOfRadioButtons 2 -sl (`getAttr ($char+":SmoothBodyAnim.divisions")`+1)
-label "Body Resolution" -labelArray2 "Low" "High" 
	-cc ("setSmooth(\""+$char+"\",\"SmoothBody\")")
	($char+"SmoothBody");	
}

if (`objExists ($char+":"+"SmoothHandsAnim")`==1){
radioButtonGrp -numberOfRadioButtons 2 -sl (`getAttr ($char+":SmoothHandsAnim.divisions")`+1)
-label "Hand Resolution" -labelArray2 "Low" "High" 
	-cc ("setSmooth(\""+$char+"\",\"SmoothHands\")")
	($char+"SmoothHands");	
}

separator;
genericButtons($char);
separator;


//button -w 400 -h 30 -l "KEY ALL" -c ("selectAllAndKey "+$char);
setParent ..;	
	}
/*	setSmooth
	
*/
global proc setSmooth(string $char,string $ctrlName){
int $SmthVal =`radioButtonGrp -q -sl ($char+$ctrlName)`;
if ($SmthVal == 2){
setAttr ($char+":"+$ctrlName+"Anim.divisions") 1;
}
	else{
setAttr ($char+":"+$ctrlName+"Anim.divisions") 0;		
		}
	}
/*	versione semplificata del persionaggio
	
	*/
global proc simpleCharControlWin(string $char){
columnLayout -w 400;
global string $Other_TSM_Ctrls[];
//genericButtons($char);
//--------------------------------------------------------------------------------------------------
button  -h 30 -w 400 -l ("sel Char") -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[1]+"\")")  ;
button  -h 30 -w 400 -l ("sel Upper") -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[2]+"\")")  ;
button  -h 30 -w 400 -l ("Switch IK-FK selected") -c ("TSM_Switch_prc");
setParent ..;
	}	

/*	charControlWin	crea i controlli del personaggio

	charControlWin (nome del char)


*/
global proc charControlWin(string $char){
global string $icnsPath;
//		importazione nome controlli e posizione da tsmControls.mel
global string $FK_TSM_Ctrls[];
global vector $FK_TSM_Ctrls_winx_pos[];
global string $IK_TSM_Ctrls[];
global vector $IK_TSM_Ctrls_winx_pos[];	
global string $Other_TSM_Ctrls[];
global vector $Other_TSM_Ctrls_winx_pos[];	
global vector $IkFkSwitch_pos[]	;
	
//---------------------presets per posizione controlli (solo winx per ora)-------------------------
int $icn_sz=20;
string $fk_icn_name = "pickHandlesCompPartial.xpm" ;
string $ik_icn_name = "pickHandlesComp.xpm" ;
string $otr_icn_name = "pickHandlesObj.xpm" ;
string $main_icn_name = "polyCreateUVSet.xpm";
string $char_icn_name = "posRadial.xpm" ;
string $ikfk_switch="srt.xpm";
string $isolate="posVortex.xpm";

//------------------------------------------------------------------------------------------------------
	//*********************************************************
	//modified by IDMT
	$ws = "//serverone/WINX_MOVIE_ULTIMATE";
	//$ws=`workspace -fn`;
	//*********************************************************
	// path da far cambiare a seconda del personaggio
string $imgPath=($ws+$icnsPath+"bloom/bloom_standard.jpg");
string $form = `formLayout -numberOfDivisions 100 -w 400 -h 500 ($char+"_formLayout")`;
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------	
//------------------------------------------------------IK IK	IK	IK	IK	IK------------------------------------------------------------------
	//testa IK
string $ik_testa = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[0]+"\")")  ($char+"_"+$IK_TSM_Ctrls[0])`;
vector $ik_testa_pos= ($IK_TSM_Ctrls_winx_pos[0]);
	//braccioDx
string  $ik_braccio_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[1]+"\")")  ($char+"_"+$IK_TSM_Ctrls[1])`;
vector  $ik_braccio_dx_pos= ($IK_TSM_Ctrls_winx_pos[1]);
	//braccioSx
string  $ik_braccio_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[2]+"\")")  ($char+"_"+$IK_TSM_Ctrls[2])`;
vector  $ik_braccio_sx_pos= ($IK_TSM_Ctrls_winx_pos[2]);
	//braccioDx PV
string  $ik_braccio_dx_pv = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[3]+"\")")  ($char+"_"+$IK_TSM_Ctrls[3])`;
vector  $ik_braccio_dx_pv_pos= ($IK_TSM_Ctrls_winx_pos[3]);
	//braccioSx PV
string  $ik_braccio_sx_pv = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[4]+"\")")  ($char+"_"+$IK_TSM_Ctrls[4])`;
vector  $ik_braccio_sx_pv_pos= ($IK_TSM_Ctrls_winx_pos[4]);
	//torace
string $ik_torace_up =`iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[5]+"\")")  ($char+"_"+$IK_TSM_Ctrls[5])`;
vector $ik_torace_up_pos =($IK_TSM_Ctrls_winx_pos[5]);

string $ik_torace_mid =`iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[6]+"\")")  ($char+"_"+$IK_TSM_Ctrls[6])`;
vector $ik_torace_mid_pos =($IK_TSM_Ctrls_winx_pos[6]);

string $ik_torace_dwn =`iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[7]+"\")")  ($char+"_"+$IK_TSM_Ctrls[7])`;
vector $ik_torace_dwn_pos =($IK_TSM_Ctrls_winx_pos[7]);
	//gamba sx
string  $ik_gamba_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[8]+"\")")  ($char+"_"+$IK_TSM_Ctrls[8])`;
vector  $ik_gamba_sx_pos= ($IK_TSM_Ctrls_winx_pos[8]);
	//gamba dx
string  $ik_gamba_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[9]+"\")")  ($char+"_"+$IK_TSM_Ctrls[9])`;
vector  $ik_gamba_dx_pos= ($IK_TSM_Ctrls_winx_pos[9]);
	//gambaSx PV
string  $ik_gamba_sx_pv = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[10]+"\")")  ($char+"_"+$IK_TSM_Ctrls[10])`;
vector  $ik_gamba_sx_pv_pos= ($IK_TSM_Ctrls_winx_pos[10]);
	//gambaDx PV
string  $ik_gamba_dx_pv = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[11]+"\")")  ($char+"_"+$IK_TSM_Ctrls[11])`;
vector  $ik_gamba_dx_pv_pos= ($IK_TSM_Ctrls_winx_pos[11]);

	//orient manoDX
string  $ik_orientMano_Dx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[12]+"\")")  ($char+"_"+$IK_TSM_Ctrls[12])`;
vector  $ik_orientMano_Dx_pos= ($IK_TSM_Ctrls_winx_pos[12]);
	//orient manoSX
string  $ik_orientMano_Sx = `iconTextButton -w $icn_sz -h $icn_sz -i $ik_icn_name -c ("selControl(\""+$char+"\",\""+$IK_TSM_Ctrls[13]+"\")")  ($char+"_"+$IK_TSM_Ctrls[13])`;
vector  $ik_orientMano_Sx_pos= ($IK_TSM_Ctrls_winx_pos[13]);

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------	
//------------------------------------------------------FK FK	FK	FK	FK	FK------------------------------------------------------------------
	//testa FK
string $fk_testa = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[0]+"\")")  ($char+"_"+$FK_TSM_Ctrls[0])`;
vector $fk_testa_pos= ($FK_TSM_Ctrls_winx_pos[0]);
	
	//torace FK
string $fk_torace_up = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[7]+"\")")  ($char+"_"+$FK_TSM_Ctrls[7])`;
vector $fk_torace_up_pos= ($FK_TSM_Ctrls_winx_pos[7]);	
	
string $fk_torace_mid = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[8]+"\")")  ($char+"_"+$FK_TSM_Ctrls[8])`;
vector $fk_torace_mid_pos= ($FK_TSM_Ctrls_winx_pos[8]);	

string $fk_torace_dwn = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[9]+"\")")  ($char+"_"+$FK_TSM_Ctrls[9])`;
vector $fk_torace_dwn_pos= ($FK_TSM_Ctrls_winx_pos[9]);	
//				-----------array--------
string $fk__torace[]={$fk_torace_up,$fk_torace_mid ,$fk_torace_dwn};

	//braccio Dx FK
string $fk_braccio_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[3]+"\")")  ($char+"_"+$FK_TSM_Ctrls[3])`;
vector $fk_braccio_dx_pos= ($FK_TSM_Ctrls_winx_pos[3]);
	
string $fk_abraccio_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[2]+"\")")   ($char+"_"+$FK_TSM_Ctrls[2])`;
vector $fk_abraccio_dx_pos= ($FK_TSM_Ctrls_winx_pos[2]);	
	
string $fk_mano_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[1]+"\")")  ($char+"_"+$FK_TSM_Ctrls[1])`;
vector $fk_mano_dx_pos= ($FK_TSM_Ctrls_winx_pos[1]);	
//				-----------array--------
string $fk__braccio_dx[]={$fk_braccio_dx,$fk_abraccio_dx ,$fk_mano_dx};

	//braccio Sx FK
string $fk_braccio_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[6]+"\")")  ($char+"_"+$FK_TSM_Ctrls[6])`;
vector $fk_braccio_sx_pos= ($FK_TSM_Ctrls_winx_pos[6]);
	
string $fk_abraccio_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[5]+"\")")   ($char+"_"+$FK_TSM_Ctrls[5])`;
vector $fk_abraccio_sx_pos= ($FK_TSM_Ctrls_winx_pos[5]);	
	
string $fk_mano_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[4]+"\")")  ($char+"_"+$FK_TSM_Ctrls[4])`;
vector $fk_mano_sx_pos= ($FK_TSM_Ctrls_winx_pos[4]);
//				-----------array--------
string $fk__braccio_dx[]={$fk_braccio_sx,$fk_abraccio_sx ,$fk_mano_sx};
	
	//gamba Dx Fk
string $fk_gamba_up_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[10]+"\")")  ($char+"_"+$FK_TSM_Ctrls[10])`;
vector $fk_gamba_up_dx_pos= ($FK_TSM_Ctrls_winx_pos[10]);
	
string $fk_gamba_mid_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[11]+"\")")   ($char+"_"+$FK_TSM_Ctrls[11])`;
vector $fk_gamba_mid_dx_pos= ($FK_TSM_Ctrls_winx_pos[11]);	
	
string $fk_gamba_dwn_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[12]+"\")")  ($char+"_"+$FK_TSM_Ctrls[12])`;
vector $fk_gamba_dwn_dx_pos= ($FK_TSM_Ctrls_winx_pos[12]);		

string $fk_piede_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[13]+"\")")  ($char+"_"+$FK_TSM_Ctrls[13])`;
vector $fk_piede_dx_pos= ($FK_TSM_Ctrls_winx_pos[13]);	
//				-----------array--------
string $fk__braccio_dx[]={$fk_gamba_up_dx,$fk_gamba_mid_dx,$fk_gamba_dwn_dx,$fk_piede_dx};

//gamba Sx Fk
string $fk_gamba_up_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[14]+"\")")  ($char+"_"+$FK_TSM_Ctrls[14])`;
vector $fk_gamba_up_sx_pos= ($FK_TSM_Ctrls_winx_pos[14]);
	
string $fk_gamba_mid_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[15]+"\")")   ($char+"_"+$FK_TSM_Ctrls[15])`;
vector $fk_gamba_mid_sx_pos= ($FK_TSM_Ctrls_winx_pos[15]);	
	
string $fk_gamba_dwn_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[16]+"\")")  ($char+"_"+$FK_TSM_Ctrls[16])`;
vector $fk_gamba_dwn_sx_pos= ($FK_TSM_Ctrls_winx_pos[16]);			

string $fk_piede_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $fk_icn_name -c ("selControl(\""+$char+"\",\""+$FK_TSM_Ctrls[17]+"\")")  ($char+"_"+$FK_TSM_Ctrls[17])`;
vector $fk_piede_sx_pos= ($FK_TSM_Ctrls_winx_pos[17]);	
//				-----------array--------
string $fk__braccio_sx[]={$fk_gamba_up_sx,$fk_gamba_mid_sx,$fk_gamba_dwn_sx,$fk_piede_sx};


//---------------------------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------OTR OTR OTR OTR OTR OTR------------------------------------------------------------------

string $otr_collo = `iconTextButton -w $icn_sz -h $icn_sz -i $otr_icn_name -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[18]+"\")")  ($char+"_"+$Other_TSM_Ctrls[18])`;
vector $otr_collo_pos= ($Other_TSM_Ctrls_winx_pos[18]);	

string $otr_spalla_dx = `iconTextButton -w $icn_sz -h $icn_sz -i $otr_icn_name -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[3]+"\")")  ($char+"_"+$Other_TSM_Ctrls[3])`;
vector $otr_spalla_dx_pos= ($Other_TSM_Ctrls_winx_pos[3]);	

string $otr_spalla_sx = `iconTextButton -w $icn_sz -h $icn_sz -i $otr_icn_name -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[4]+"\")")  ($char+"_"+$Other_TSM_Ctrls[4])`;
vector $otr_spalla_sx_pos= ($Other_TSM_Ctrls_winx_pos[4]);	

string $mainCtrl = `iconTextButton -w 32 -h 32 -i $main_icn_name -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[2]+"\")")  ($char+"_"+$Other_TSM_Ctrls[2])`;
vector $mainCtrl_pos= ($Other_TSM_Ctrls_winx_pos[2]);	

string $charCtrl = `iconTextButton -w 32 -h 32 -i $char_icn_name -c ("selControl(\""+$char+"\",\""+$Other_TSM_Ctrls[1]+"\")")  ($char+"_"+$Other_TSM_Ctrls[1])`;
vector $charCtrl_pos= ($Other_TSM_Ctrls_winx_pos[1]);	
//---------------------------------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------IKFKSWITCH -----------------//inserire comando di switch------------------------------------------------
string $braccio_sx_switch = `iconTextButton -w 32 -h 32 -c ("switch_armSx(\""+$char+"\",1)") -i $ikfk_switch ($char+"_braccioSxSwitch")`;
vector $braccio_sx_switch_pos = ($IkFkSwitch_pos[0]);

string $braccio_dx_switch = `iconTextButton -w 32 -h 32 -c ("switch_armDx(\""+$char+"\",1)") -i  $ikfk_switch ($char+"_braccioDxSwitch")`;
vector $braccio_dx_switch_pos = ($IkFkSwitch_pos[1]);

string $testa_switch = `iconTextButton -w 32 -h 32 -c ("switch_head(\""+$char+"\",1)") -i  $ikfk_switch ($char+"_TestaSwitch")`;
vector $testa_switch_pos = ($IkFkSwitch_pos[2]);

string $gamba_dx_switch = `iconTextButton -w 32 -h 32 -c ("switch_legDx(\""+$char+"\",1)") -i $ikfk_switch ($char+"_gambaDxSwitch")`;
vector $gamba_dx_switch_pos = ($IkFkSwitch_pos[3]);

string $gamba_sx_switch = `iconTextButton -w 32 -h 32 -c ("switch_legSx(\""+$char+"\",1)")  -i $ikfk_switch ($char+"_gambaSxSwitch")`;
vector $gamba_sx_switch_pos = ($IkFkSwitch_pos[4]);

string $torace_switch = `iconTextButton -w 32 -h 32 -c ("switch_spine(\""+$char+"\",1)")  -i  $ikfk_switch ($char+"_ToraceSwitch")`;
vector $torace_switch_pos = ($IkFkSwitch_pos[5]);

//---------------------------------------------------------------------------------------------------------------------------------------------------------------
//genericButtons($char);
//---------------------------------------------------------------------------------------------------------------------------------------------------------------

$bkg_img =`image  -image $imgPath -w 400 -h 500 ($char+"_image")`;

//				FK
formLayout -e 
		//------------immagine di sfondo-------------
		-af $bkg_img "left" 0
		-af $bkg_img "top" 20
		//------------  centrale ----------------------
			//testa
		-af $fk_testa "left" ($fk_testa_pos.x)
		-af $fk_testa "top" ($fk_testa_pos.y)
			//torace 
		-af $fk_torace_up "left" ($fk_torace_up_pos.x)	
		-af $fk_torace_up "top" ($fk_torace_up_pos.y)	
		
		-af $fk_torace_mid "left" ($fk_torace_mid_pos.x)	
		-af $fk_torace_mid "top" ($fk_torace_mid_pos.y)			
		
		-af $fk_torace_dwn "left" ($fk_torace_dwn_pos.x)	
		-af $fk_torace_dwn "top" ($fk_torace_dwn_pos.y)			
		//------------lato sinistro--------
			//braccio 
		-af $fk_braccio_sx "left" ($fk_braccio_sx_pos.x)
		-af $fk_braccio_sx "top" ($fk_braccio_sx_pos.y)
			//avambraccio 
		-af $fk_abraccio_sx "left" ($fk_abraccio_sx_pos.x)
		-af $fk_abraccio_sx  "top" ($fk_abraccio_sx_pos.y)
			//mano
		-af $fk_mano_sx "left" ($fk_mano_sx_pos.x)
		-af $fk_mano_sx "top" ($fk_mano_sx_pos.y)
		
			//gamba ----------
		-af $fk_gamba_up_sx "left" ($fk_gamba_up_sx_pos.x)
		-af $fk_gamba_up_sx "top" ($fk_gamba_up_sx_pos.y)
			//polpaccio 
		-af $fk_gamba_mid_sx "left" ($fk_gamba_mid_sx_pos.x)
		-af $fk_gamba_mid_sx "top" ($fk_gamba_mid_sx_pos.y)
			//piede
		-af $fk_gamba_dwn_sx "left" ($fk_gamba_dwn_sx_pos.x)
		-af $fk_gamba_dwn_sx "top" ($fk_gamba_dwn_sx_pos.y)	
			//piede vero
		-af $fk_piede_sx "left" ($fk_piede_sx_pos.x)
		-af $fk_piede_sx "top" ($fk_piede_sx_pos.y)	
		//------------lato destro--------
			//braccio 
		-af $fk_braccio_dx "left" ($fk_braccio_dx_pos.x)
		-af $fk_braccio_dx "top" ($fk_braccio_dx_pos.y)
			//avambraccio 
		-af $fk_abraccio_dx "left" ($fk_abraccio_dx_pos.x)
		-af $fk_abraccio_dx  "top" ($fk_abraccio_dx_pos.y)
			//mano
		-af $fk_mano_dx "left" ($fk_mano_dx_pos.x)
		-af $fk_mano_dx "top" ($fk_mano_dx_pos.y)
			//gamba ----------
		-af $fk_gamba_up_dx "left" ($fk_gamba_up_dx_pos.x)
		-af $fk_gamba_up_dx "top" ($fk_gamba_up_dx_pos.y)
			//polpaccio 
		-af $fk_gamba_mid_dx "left" ($fk_gamba_mid_dx_pos.x)
		-af $fk_gamba_mid_dx "top" ($fk_gamba_mid_dx_pos.y)
			//piede
		-af $fk_gamba_dwn_dx "left" ($fk_gamba_dwn_dx_pos.x)
		-af $fk_gamba_dwn_dx "top" ($fk_gamba_dwn_dx_pos.y)	
			//piede
		-af $fk_piede_dx "left" ($fk_piede_dx_pos.x)
		-af $fk_piede_dx "top" ($fk_piede_dx_pos.y)	
    $form;


//				ik
 formLayout -e   		
			//testa
		-af $ik_testa "left" ($ik_testa_pos.x)
		-af $ik_testa "top" ($ik_testa_pos.y)
			//braccio dx
		-af $ik_braccio_dx "left" ($ik_braccio_dx_pos.x)
		-af $ik_braccio_dx "top" ($ik_braccio_dx_pos.y)	
			//braccio sx
		-af $ik_braccio_sx "left" ($ik_braccio_sx_pos.x)
		-af $ik_braccio_sx "top" ($ik_braccio_sx_pos.y)	
			//braccio dx pv
		-af $ik_braccio_dx_pv "left" ($ik_braccio_dx_pv_pos.x)
		-af $ik_braccio_dx_pv "top" ($ik_braccio_dx_pv_pos.y)	
			//braccio sx pv
		-af $ik_braccio_sx_pv "left" ($ik_braccio_sx_pv_pos.x)
		-af $ik_braccio_sx_pv "top" ($ik_braccio_sx_pv_pos.y)	
			//torace
		-af $ik_torace_up "left" ($ik_torace_up_pos.x)
		-af $ik_torace_up "top" ($ik_torace_up_pos.y)	
 
		-af $ik_torace_mid "left" ($ik_torace_mid_pos.x)
		-af $ik_torace_mid "top" ($ik_torace_mid_pos.y)

		-af $ik_torace_dwn "left" ($ik_torace_dwn_pos.x)
		-af $ik_torace_dwn "top" ($ik_torace_dwn_pos.y)	
			//gamba dx
		-af $ik_gamba_dx "left" ($ik_gamba_dx_pos.x)
		-af $ik_gamba_dx "top" ($ik_gamba_dx_pos.y)	
			//gamba sx
		-af $ik_gamba_sx "left" ($ik_gamba_sx_pos.x)
		-af $ik_gamba_sx "top" ($ik_gamba_sx_pos.y)	
			//gamba dx pv
		-af $ik_gamba_dx_pv "left" ($ik_gamba_dx_pv_pos.x)
		-af $ik_gamba_dx_pv "top" ($ik_gamba_dx_pv_pos.y)	
			//gamba sx pv
		-af $ik_gamba_sx_pv "left" ($ik_gamba_sx_pv_pos.x)
		-af $ik_gamba_sx_pv "top" ($ik_gamba_sx_pv_pos.y)		
			//orient mano Dx
		-af $ik_orientMano_Dx "left" ($ik_orientMano_Dx_pos.x)
		-af $ik_orientMano_Dx "top" ($ik_orientMano_Dx_pos.y)	
			//orient mano Sx
		-af $ik_orientMano_Sx "left" ($ik_orientMano_Sx_pos.x)
		-af $ik_orientMano_Sx "top" ($ik_orientMano_Sx_pos.y)				
		
     $form;   



//				Other
 formLayout -e   		
		-af $otr_collo "left" ($otr_collo_pos.x)
		-af $otr_collo "top" ($otr_collo_pos.y)
		
		-af $otr_spalla_dx "left" ($otr_spalla_dx_pos.x)
		-af $otr_spalla_dx "top" ($otr_spalla_dx_pos.y)
		
		-af $otr_spalla_sx "left" ($otr_spalla_sx_pos.x)
		-af $otr_spalla_sx "top" ($otr_spalla_sx_pos.y)		
		
		-af $mainCtrl "left" ($mainCtrl_pos.x)
		-af $mainCtrl "top" ($mainCtrl_pos.y)		
		
		-af $charCtrl "left" ($charCtrl_pos.x)
		-af $charCtrl "top" ($charCtrl_pos.y)	
     $form;   

//				switch
 formLayout -e   		
		-af  $braccio_sx_switch "left" ($braccio_sx_switch_pos.x)
		-af  $braccio_sx_switch "top" ($braccio_sx_switch_pos.y)
		
		-af  $braccio_dx_switch "left" ($braccio_dx_switch_pos.x)
		-af  $braccio_dx_switch "top" ($braccio_dx_switch_pos.y)
		
		-af  $testa_switch "left" ($testa_switch_pos.x)
		-af  $testa_switch "top" ($testa_switch_pos.y)
		
		-af  $gamba_dx_switch "left" ($gamba_dx_switch_pos.x)
		-af  $gamba_dx_switch"top" ($gamba_dx_switch_pos.y)		
		
		-af  $gamba_sx_switch "left" ($gamba_sx_switch_pos.x)
		-af  $gamba_sx_switch"top" ($gamba_sx_switch_pos.y)

		-af  $torace_switch "left" ($torace_switch_pos.x)
		-af  $torace_switch"top" ($torace_switch_pos.y)	
     $form;   
     
getSet_IkFk($char);

setParent ..;
	}

/*	procedura per la creazione della finestra di gestione del personaggio


*/
global proc string tab_ch(string $char){	
string $charTab = `columnLayout  -adj 1 ($char+"_Tab")`;
	
//---qui si inseriscono i "moduli" da caricare
mainCharButtons($char)	;
//radioCheckVis($char);
// l'interfaccia del personaggi
createForCharTabs($char);
//--------fine------------------------------------

	setParent ..;
return ("-label "+$charTab);
}

/*	>>>>>>>>>>>>>>>>>>>>>findChar trova i character nel path specificato<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

*/

global proc findChar(string $path){
global string $fileImportType ;
global int $k;
string $buffer[];
string $buffer2[];
global string $chars[];
global string $charPath[];
string $dir[];
//controlla nel path se sono presenti file con estenzione MA (identifica un file da usare)
string $mafile[] = `getFileList -fld $path -fs  "*.mb"`;
$numFile=`size $mafile`;
//se non ci sono file ma
	if ($numFile==0){
		//prendi la lista delle dir 
		$dir =` getFileList -fld $path`;
		$numDir = `size $dir`;
		//per ogni dir  
		for ($i=0;$i<$numDir;$i++){	
			//controlla che si tratti effettivamente di una dir
			if ((`filetest -d ($path + $dir[$i])`==1)&&($dir[$i]!="texturing")&&($dir[$i]!="setup")&&($dir[$i]!="modelling")&&($dir[$i]!="mel")){
				//-----------------------------   dbg -----------------------
				//print ("directory:    " + $dir[$i]+"\n");
				//print ("i :    " + $i+"\n");
				//-----------------------------   dbg -----------------------
				menuItem -subMenu true -label ($dir[$i]);
				//se e' una dir cerca ancora
				findChar($path +$dir[$i]+"/");
				setParent -menu ..;
				}
			else {
				//se non e' un file ma o una direcotory
				//print ("il file trovato :" + $dir[$i] + " non serve a una cippa\n");
				
				}
			}
	}
	else
	{
	//per ogni file ma trovato 
	for ($j=0;$j<$numFile;$j++){

		
	//check dei nomi dei file
	$tk=`tokenize $mafile[$j]  "_" $buffer`;
	$tk2=`tokenize $buffer[2] "." $buffer2`;
	string $achar=($buffer[0]+"_"+$buffer[1]);
	
	
	if ($buffer2[0]==$fileImportType){
		$k++;
			/*
		if ($buffer2[0]=="FINAL"){
			$myfile=$mafile[$j]; 
		}
		else{
			$myfile=$mafile[$j]; 			
		}
		*/
		
		//print ("MAFILE : " + $mafile[$j] + "\n");
		//print ("ACHAR : " + $achar + "\n");
		
		//stampa il percorso	
		
		string $loadCmd=("createRef(\""+$achar+"\",\""+($path+$mafile[$j])+"\")");
		//string $unloadCmd=("removeRef(\""+$chars[$i]+"\")");	
		string $simpleName=basename($mafile[$j],".mb");
		menuItem -l ("Load : "+  $simpleName) -c $loadCmd;
		//menuItem -l ("unLoad : "+ $mafile[$j]);
	
		//	menuItem -l ("unLoad : "+ $mafile[$j]);
		//print ("file trovato:\t"+ $mafile[$j]  + "\n");
		//print ("achar : "+ $achar + "\tnewchar :" + $chars[$k-1]+"\n");
		if (($achar != $chars[$k-1])&&($achar!="")){
		$chars[$k]=$achar;
		}
	}	
	}
	}
//print ($dir);
//print ("dentro :\t"+$path+"\n");
//print ("--------------------------\n");

}
/*	radioCheckVis controlli per la visibilita del personaggio
*
*
*/
/*
global proc radioCheckVis(string $char){
columnLayout -adj 1; 
radioButtonGrp -numberOfRadioButtons 4
		-cw4 100 100 100 100
		-labelArray4 "Hide" "Template" "HideCtrls" "highRes" ;
setParent ..;
	
	}
*/
/*	pulsanti generici 

	*/
global proc genericButtons(string $char){
global string $Other_TSM_Ctrls[]	;
int $button_size=25;
rowColumnLayout -nc 5
-columnWidth 1 80
-columnWidth 2 80
-columnWidth 3 80
-columnWidth 4 80
-columnWidth 5 80;
	// inserire controlli su presenza gruppi quando ultimati i rig
//------------------------------------------SHOW HIDE CTRLS-----------------------------------------------------------
button  -h $button_size -l ("s-h Body Ctrls") -c ("showHide_CTRLs(\""+$char+"\")") ;

button  -h $button_size -l ("s-h Face Ctrl") -c ("showHide_FACE(\""+$char+"\")");

button  -h $button_size -l ("s-h Dress Ctrl") -c ("showHide_DRESSs(\""+$char+"\")") ;

button  -h $button_size -l ("s-h Hair Ctrl") -c ("showHide_HAIRs(\""+$char+"\")") ;

button  -h $button_size -l ("s-h Other Ctrl") -c ("showHide_OTHERSs(\""+$char+"\")") ;

//------------------------------------------SEL CTRLS--------------------------------------

button  -h $button_size -l ("Sel TSM Ctrls") -c ("selectCtrlFromSet(\""+$char+"\")") ;
button  -h $button_size -l ("Sel FACE Ctrls") -c ("selectFaceCtrl(\""+$char+"\")") ;
//*********************************************************
//modified by IDMT
button  -h $button_size -l ("Key TSM Ctrls") -c ("keyCtrlFromSet(\""+$char+"\")") ;
button  -h $button_size -l ("Init TSM Ctrls") -c ("InitCtrlFromSet(\""+$char+"\")") ;

//text " ";
//text " ";
//*********************************************************
text " ";
/*
button  -h $button_size -l ("Sel Face Ctrl") -c ("showHide_FACE(\""+$char+"\")");

button  -h $button_size -l ("Sel Dress Ctrl") -c ("showHide_DRESSs(\""+$char+"\")") ;

button  -h $button_size -l ("Sel Hair Ctrl") -c ("showHide_HAIRs(\""+$char+"\")") ;

button  -h $button_size -l ("Sel Other Ctrl") -c ("showHide_OTHERSs(\""+$char+"\")") ;
*/


//------------------------------------------SHOW HIDE GEOMS-----------------------------------------------------

button  -h $button_size -l ("s-h Body ") -c ("showHide_GEOMS(\""+$char+"\",2\)");

button  -h $button_size -l ("s-h Face")  -c ("showHide_GEOMS(\""+$char+"\",1\)") ;

button  -h $button_size -l ("s-h Dress") -c ("showHide_GEOMS(\""+$char+"\",0\)") ;

button  -h $button_size -l ("s-h Hair") -c ("showHide_GEOMS(\""+$char+"\",3\)") ;

button  -h $button_size -l ("s-h Other") -c ("showHide_GEOMS(\""+$char+"\",4\)") ;

setParent ..;	
	
	}
/*	pannello per le mani
*/
global proc handPanel(string $char){
global string $Other_TSM_Ctrls[];
columnLayout -adj 1;
separator;
text "Left Hand";
//floatSliderGrp -l "general" -dc ("ocHand(\""+$char+"\",\"L\")")  ($char+"L_hand");
columnLayout -adj 1;
	
floatSliderButtonGrp -label  "Thumb" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[5])
	//-v ("getFingerVal(5,\""+$char+"\")") 
	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(5,\""+$char+"\")")
	($Other_TSM_Ctrls[5]+"_"+$char);

floatSliderButtonGrp -label "Index" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[6])
	//-v ("getFingerVal(6,\""+$char+"\")")  
	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(6,\""+$char+"\")")	
	($Other_TSM_Ctrls[6]+"_"+$char);

floatSliderButtonGrp -label "Middle" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[7])
	//-v ("getFingerVal(7,\""+$char+"\")")  
	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(7,\""+$char+"\")")	
	($Other_TSM_Ctrls[7]+"_"+$char);

floatSliderButtonGrp -label "Ring" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[8])
	//-v ("getFingerVal(8,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(8,\""+$char+"\")")
	($Other_TSM_Ctrls[8]+"_"+$char);

floatSliderButtonGrp -label "Pinky" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[9])
	//-v ("getFingerVal(9,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(9,\""+$char+"\")")    
	($Other_TSM_Ctrls[9]+"_"+$char);
setParent ..;

separator;
text "Right Hand";
//floatSliderGrp -l "general" ($char+"R_hand");
columnLayout -adj 1;
floatSliderButtonGrp -label  "Thumb" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[10])
	//-v ("getFingerVal(10,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
      -dc ("setFingerVal(10,\""+$char+"\")")  
    ($Other_TSM_Ctrls[10]+"_"+$char);

floatSliderButtonGrp -label "Index" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[11])
	//-v  ("getFingerVal(11,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(11,\""+$char+"\")")  
	($Other_TSM_Ctrls[11]+"_"+$char);

floatSliderButtonGrp -label "Middle" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[12])
	//-v ("getFingerVal(12,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(12,\""+$char+"\")")  
	($Other_TSM_Ctrls[12]+"_"+$char);

floatSliderButtonGrp -label "Ring" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[13])
	//-v ("getFingerVal(13,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(13,\""+$char+"\")")  
	($Other_TSM_Ctrls[13]+"_"+$char);

floatSliderButtonGrp -label "Pinky" -field true
	-bc ("select -r " + $char+":"+$Other_TSM_Ctrls[14])
	//-v ("getFingerVal(14,\""+$char+"\")")  
    	-max 90 
	-buttonLabel "select" 
	-dc ("setFingerVal(14,\""+$char+"\")")  
	($Other_TSM_Ctrls[14]+"_"+$char);
setParent ..;
separator;

setParent ..;	
	
	}
	
/*	settaggio valori per le dita
	
	
	*/
	
global proc setFingerVal(int $index, string $char){
	global string $Other_TSM_Ctrls[];
	float $sliderVal = `floatSliderButtonGrp -q -v ($Other_TSM_Ctrls[$index]+"_"+$char)`;  
	setAttr ($char+":"+$Other_TSM_Ctrls[$index]+"."+$Other_TSM_Ctrls[19]) ($sliderVal*-1);
	setAttr ($char+":"+$Other_TSM_Ctrls[$index]+"."+$Other_TSM_Ctrls[20]) ($sliderVal*-1);
	}

/*	prende il valore degli slider
	
	*/
global proc getFingerVal(int $index, string $char){
	global string $Other_TSM_Ctrls[];
	float $fFinger = `getAttr ($char+":"+$Other_TSM_Ctrls[$index]+"."+$Other_TSM_Ctrls[19])` ;
	float $sFinger = `getAttr ($char+":"+$Other_TSM_Ctrls[$index]+"."+$Other_TSM_Ctrls[20]) `;
	float $val= (($fFinger+$sFinger)/2);
	}
/*	>> ocHand ancora da implementare.... <<
	
	
	*/	
global proc ocHand(string $char,string $CtrlName){
	global string $Other_TSM_Ctrls[];
	int $L_id[]={6,7,8,9};
	int $R_id[]={11,12,13,14};
	int $id[];
	//CtrlName deve essere R o L
	if ($CtrlName == "L"){
	$id=$L_id;	
		}
	else{
	$id=$R_id;	
		}
	float $sliderVal = `floatSliderGrp -q -v ($char+$CtrlName+"_hand")`;  
	for ($i=0;$i<4;$i++){
		int $fingVal=`getAttr ($char+":"+$Other_TSM_Ctrls[$id[$i]]+".rz")`;
		$newVal=(($sliderVal * $fingVal) / 100) + $fingVal;
		setAttr  ($char+":"+$Other_TSM_Ctrls[$id[$i]]+".rz") $newVal;
		//print ("newVal="+$newVal+"\n");
		}
	}	
/*	createForCharTabs crea i tab per faccia corpo e altro 
*
*
*/

global proc createForCharTabs(string $char){
global string $IK_TSM_Ctrls[];
global string $RBW_Ctrls[];
//getSet_IkFk($char);
string $tabs = `tabLayout -w 400 -innerMarginWidth 5 -innerMarginHeight 5 ($char+"_fc_tab")`;
string $tsm = ` paneLayout -h 550  ("fc_char_"+$char) `;
			/*
			qui deve esserci uno switch per determinare se e' un personaggio a 4 o + gambe ! 
			e di conseguenza cambiare il charControlWin ...con charControlWin4 , charControlWin6 , charControlWin8 etc...
 			*/
			//	fullVersion
if (`objExists ($char+":"+$IK_TSM_Ctrls[1])`==1){
		charControlWin($char);
		}else{
		simpleCharControlWin($char);
		}
		//local_tab($char,"tsm");
		//global_tab($char,"tsm");
		setParent ..;
			
if (`objExists ($char+":"+$RBW_Ctrls[4])`==1){	
string $face = `paneLayout -h 550  -configuration "vertical2" ("fc_face_"+$char)`;
			faceWin($char);
			// questi sono da sostituire quasi di sicuro
			local_tab($char,"face");
			//global_tab($char,"face");
 			setParent ..;
	
	tabLayout -edit			
	-tabLabel $face "FACE" 
	$tabs;		
	
}

if (`objExists ($char+":"+$IK_TSM_Ctrls[1])`==1){	
 string $hand = `paneLayout -h 550  ("fc_hand_"+$char)`;
 			//button -h 40 -l "select hand controls";
			handPanel($char);
			//global_tab($char,"hand");	
 			setParent ..;	

	tabLayout -edit			
	-tabLabel $hand "HAND" 
	$tabs;	

}
			/*
string $dress = `paneLayout -h 550 -configuration "right3"  ("fc_dress_"+$char)`;
			button -l "select face controls";
			local_tab($char,"dress");
			global_tab($char,"dress");	
 			setParent ..;		
	
string $hair= `paneLayout -h 550 -configuration "right3"  ("fc_hair_"+$char)`;
			button -l "select face controls";
			local_tab($char,"hair");
			global_tab($char,"hair");	
 			setParent ..;		
				*/
tabLayout -edit
	
		-tabLabel $tsm "TSM" 
		//-tabLabel $face "FACE" 
		//-tabLabel $hand "HAND" 
		//-tabLabel $dress "DRESS" 	
		//-tabLabel $hair "HAIR" 	
		$tabs;	

setParent ..;
	}
/*	crea il tab per i preset locali
	
	
	

*/
global proc local_tab(string $char,string $type){
		shelfTabLayout ($char+"_tab_"+$type+"_local");
			shelfLayout -cwh 70 70 -st "iconAndTextVertical" Expressions;
			getPresets ($char,"expression");
			setParent ..;
			shelfLayout -cwh 70 70 -st "iconAndTextVertical" Phonemes;
			getPresets ($char,"phonemes");	
			setParent ..;
		setParent ..;	
	}
/*	crea il tab per i preset shared
	
	
	
*/
global proc global_tab(string $char,string $type){
		tabLayout ($char+"_tab_"+$type+"_shared");
			shelfLayout shared;
			setParent ..;
		setParent ..;	
	}	
/*	 inter faccia per la faccia	

	
	
	*/
	
global proc faceWin(string $char){
global string $RBW_Ctrls[];
$camName=($char+":"+$RBW_Ctrls[4]);
if (`objExists $camName`==1){
string $modP=`modelPanel -mbv 0 -l $camName -cam $camName`;
modelEditor -e -grid 0 -displayAppearance "smoothShaded"  -joints 0 -displayTextures on -displayLights "default" $modP ;
camera -e -displayFilmGate off -displayResolution off -overscan 1.0 $camName;	

setParent ..;
}else{
columnLayout ($char+"tmp_cm");
text "Face Camera Not Present!";
setParent ..;
}	
}
	
/*	create Reference ---------------------------------------------------------------------------------------------------------------------------------------------
*/

global proc createRef (string $char,string $path){	

string $proj = `workspace -fn`;
if (`objExists ($char+"RN")`!=1){
 file -r -type "mayaBinary" -gl -namespace $char -options "v=0;p=17" $path;	
winxWin(0);
}
else
	{
	 file -lr ($char+"RN");	
	winxWin(0);
}
}
	
/*	remove Reference
*/
global proc removeRef(string $charName){
file -ur ($charName+"RN");
charWin;
}		
	
/*	selControl seleziona un controllo

*/
global proc selControl(string $char,string $control){
	select ($char+":"+$control);
	}

/*	recoverName recupera il nome dal personaggio dalla sua sottocategoria

	*/
global proc string recoverName(string $ns){
	string $buffer[];
	tokenize $ns ":" $buffer;
	return $buffer[0];
	}	
/*	switcha sul tab del personaggio selezionato
	
*/	
global proc switchTab(){
string $selCtrl[] = `ls -sl`;
int $szSl=`size $selCtrl`;
	if ($szSl!=0){
string $charName = recoverName($selCtrl[0]);
tabLayout -e -st ($charName+"_Tab") "tabt";	
	}else{
warning "select at least a character please";		
}
		}
	
/*	se hai una giornata di merda..... gioca al lotto

*/
global proc lotto(){
print "giornata di merda ? giocati questi : \t";
for ($i=0;$i<5;$i++){
	string $data = (int(rand(1,90)));
	confirmDialog -message $data;
	}
}

/* inverte il valore in entrata 0 -1 

*/

global proc int invertVal(int $val){
int $mval;
$mval=abs($val-1);
return $mval;
};
/*	prendi fonemi


*/
global proc getPresets(string $char,string $type){
	//*********************************************************
	//modified by IDMT
	$ws = "//file-cluster/GDC/Projects/WinxClub/WinxClub_Scratch";
	//$ws=`workspace -fn`;
	//*********************************************************
string $buffer[];
int $tk = `tokenize $char "_" $buffer`;
$path=($ws + "/data/presets/"+$buffer[0]+"/"+$type+"/");	
string $files[] =`getFileList -fld $path -fs  "*.mel"`;
for ($i=0;$i<`size $files`;$i++){
	string $btName=basename($files[$i],".mel");
	//iconTextButton -image1 "sphere.xpm" -imageOverlayLabel $files[$i];
	shelfButton -annotation $btName
	-style "iconAndTextVertical"
	-image1 "commandButton.xpm" 
	-l $btName
	-fn "boldLabelFont"
	//-iol $files[$i]
	-command ("source \""+$path+$files[$i]+"\";setPresets(\""+$char+"\");");
	}
}
/*	writePresets()

*/
global proc writePresets(string $nomeFile){
string $ctrls[]=(`ls -sl`);
string $wsB[];
string $nameB[];
	
int $wstk = `tokenize $ctrls[0] ":" $wsB`;
int $nametk =`tokenize $wsB[0] "_" $nameB`;	

	//*********************************************************
	//modified by IDMT
	$ws = "//file-cluster/GDC/Projects/WinxClub/WinxClub_Scratch";
	//$ws=`workspace -fn`;
	//*********************************************************
//----------------FINIRE IL PATH CON IL NOME DEL PERSONAGGIO
$thePath=($ws + "/data/presets/"+$nameB[0]+"/expression/");
$theFile = ( $thePath+$nomeFile+".mel" );
if (`filetest -r $theFile`!=1){
sysFile -makeDir $thePath;
string $DataToWrite="";
$DataToWrite="//this file was automatically generated :: Modify at your own Risk!\n";
$DataToWrite+="global proc setPresets(string $nameSpace){\n";	
for ($i=0;$i<`size $ctrls`;$i++){
	
	//---------------------------------------------------------
	string $buffer[];
	int $tk = `tokenize $ctrls[$i] ":" $buffer`;
	//string $nameSpace=$buffer[0];
	string $ctrlName=$buffer[1];
	//print ("CTRL : "+$ctrlName+"\n");
	//---------------------------------------------------------
	string $attrs[]=`listAttr -r -k -sn $ctrls[$i]`;
		for ($k=0;$k<`size $attrs`;$k++)
		{
			if (($attrs[$k]!="v")&&($attrs[$k]!="sx")&&($attrs[$k]!="sy")&&($attrs[$k]!="sz")){
				string $cmpName= ($ctrls[$i]+"."+$attrs[$k]);
				float $val =`getAttr $cmpName`;
				string $line = ("setAttr ( $nameSpace + \":"+$ctrlName+"."+$attrs[$k]+"\")"+" "+ $val+";\n");
				$DataToWrite += $line;
			}
		}
		//print $DataToWrite;
	}
//fare il check dell'esistenza del file !!!
$DataToWrite+="};";
$fileId=`fopen $theFile`;
fprint $fileId $DataToWrite;
fclose $fileId;
}
else{
warning "the file just exits , please choose another name for the pose";
}
}
/*

*/	
global proc savePoseW(){
string $text;
string $result = `promptDialog
    -title "Save Face pose"
    -message "Enter Name:"
    -button "OK" -button "Cancel"
    -defaultButton "OK" -cancelButton "Cancel"
    -dismissString "Cancel"`;

if ($result == "OK") {
    $text = `promptDialog -query -text`;
	writePresets $text;	
}


}

//*****************************if chk=1 setta anceh al contrario****************************************************
/*	switch braccio dx

*/

global proc switch_armDx(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$RightArm_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[1])`; 

if ($RightArm_FKIK==1){
	if ($chk==1){	
	showHide_armDx_fk($char,1);
	showHide_armDx_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[1]);
	TSM_Switch_prc();
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[1]) 0;
	}
	else{
	showHide_armDx_fk($char,0);
	showHide_armDx_ik($char,1);				
		}
	}
else{
	if ($chk==1){	
	showHide_armDx_fk($char,0);
	showHide_armDx_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[6]);
	TSM_Switch_prc();		
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[1]) 1;
	}
	else{
	showHide_armDx_fk($char,1);
	showHide_armDx_ik($char,0);					
		}
	}	
	};

/*	switch braccio sx

*/

global proc switch_armSx(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$LeftArm_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[0])`; 

if ($LeftArm_FKIK==1){
	if ($chk==1){
	showHide_armSx_fk($char,1);
	showHide_armSx_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[2]);
	TSM_Switch_prc();
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[0]) 0;
		}
	else{
	showHide_armSx_fk($char,0);
	showHide_armSx_ik($char,1);				
		}
	}
else{
	if ($chk==1){
	showHide_armSx_fk($char,0);
	showHide_armSx_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[3]);
	TSM_Switch_prc();		
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[0]) 1;
		}
	else{
	showHide_armSx_fk($char,1);
	showHide_armSx_ik($char,0);					
		}
	}	
	};

/*	switch bamba sx

*/

global proc switch_legSx(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$LeftLeg_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[4])`; 

if ($LeftLeg_FKIK==1){
		if ($chk==1){	
	showHide_legSx_fk($char,1);
	showHide_legSx_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[10]);
	TSM_Switch_prc();
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[4]) 0;
		}
		else{
	showHide_legSx_fk($char,0);
	showHide_legSx_ik($char,1);						
			}
	}
else{
		if ($chk==1){
	showHide_legSx_fk($char,0);
	showHide_legSx_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[14]);
	TSM_Switch_prc();	
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[4]) 1;
		}
		else{
	showHide_legSx_fk($char,1);
	showHide_legSx_ik($char,0);							
			}
	}	
	};
	
/*	switch bamba dx

*/

global proc switch_legDx(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$RightLeg_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[3])`; 

if ($RightLeg_FKIK==1){
	if ($chk==1){	
	showHide_legDx_fk($char,1);
	showHide_legDx_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[11]);
	TSM_Switch_prc();
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[3]) 0;
	}
	else {
	showHide_legDx_fk($char,0);
	showHide_legDx_ik($char,1);			
	}
}
else{
	if ($chk==1){
	showHide_legDx_fk($char,0);
	showHide_legDx_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[10]);
	TSM_Switch_prc();	
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[3]) 1;
		}
		else{
	showHide_legDx_fk($char,1);
	showHide_legDx_ik($char,0);			
			}
	}	
	};
	
/*	switch schiena

*/

global proc switch_spine(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$Spine_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[5])`;

if ($Spine_FKIK==1){
	if ($chk==1){
	showHide_spine_fk($char,1);
	showHide_spine_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[5]);
	TSM_Switch_prc();		
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[5]) 0;
	}
	else{
	showHide_spine_fk($char,0);
	showHide_spine_ik($char,1);		
	}
	}
else{
	if ($chk==1){
	showHide_spine_fk($char,0);
	showHide_spine_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[7]);
	TSM_Switch_prc();		
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[5]) 1;
	}
	else{
	showHide_spine_fk($char,1);
	showHide_spine_ik($char,0);		
		}
	}	
	};
		
/*	switch testa

*/

global proc switch_head(string $char,int $chk){
global string $IK_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $Other_TSM_Ctrls[];
global string $IkFKSwitch[];	
$Head_FKIK=`getAttr ($char+":"+$Other_TSM_Ctrls[2]+ $IkFKSwitch[2])`; 

if ($Head_FKIK==1){
	if ($chk==1){
	showHide_head_fk($char,1);
	showHide_head_ik($char,0);
	select -r  ($char+":"+$IK_TSM_Ctrls[0]);
	TSM_Switch_prc();			
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[2]) 0;	
	}
	else{		
	showHide_head_fk($char,0);
	showHide_head_ik($char,1);		
	}
	}
else{
	if ($chk==1){
	showHide_head_fk($char,0);
	showHide_head_ik($char,1);	
	select -r  ($char+":"+$FK_TSM_Ctrls[0]);
	TSM_Switch_prc();			
	//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[2]) 1;	
	}
	else{
	showHide_head_fk($char,1);
	showHide_head_ik($char,0);		
	}
	}	
	};
/*	da integrare per lo switch ik_fk
	da mettere all'avvio e ad ogni cambio di tab
	e ad ogni switch
*/

global proc getSet_IkFk(string $char){
switch_head($char,0);
switch_spine($char,0);
switch_legDx($char,0);
switch_legSx($char,0);
switch_armSx($char,0);
switch_armDx($char,0);
};

//*******************************************************************************************
/*********************NASCONDI CONTROLLI*****************************************

				SWITCH IKFK CTRLS

*/
//
//
global proc showHide_head_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$FK_TSM_Ctrls[0]);
};

global proc showHide_armDx_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];	
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[6]);
iconTextButton -e -vis $vis ($char+"_"+$FK_TSM_Ctrls[5]);
iconTextButton -e -vis $vis ($char+"_"+$FK_TSM_Ctrls[4]);
	
//setAttr ($char+":"+$Other_TSM_Ctrls[2]+$IkFKSwitch[1]) 0;
};
		
global proc showHide_armSx_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[3]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[2]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[1]);
};
		
global proc showHide_spine_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[7]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[8]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[9]);	
};

global proc showHide_legDx_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[10]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[11]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[12]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[13]);
};

global proc showHide_legSx_fk(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $FK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[14]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[15]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[16]);
iconTextButton -e -vis $vis  ($char+"_"+$FK_TSM_Ctrls[17]);
};

//----------------IK

global proc showHide_head_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[0]);
};

global proc showHide_armSx_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[2]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[4]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[13]);
};

global proc showHide_armDx_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[1]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[3]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[12]);

};

global proc showHide_spine_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[5]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[6]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[7]);
};

global proc showHide_legSx_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[8]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[10]);
}

global proc showHide_legDx_ik(string $char ,int $vis){
global string $Other_TSM_Ctrls[];
global string $IK_TSM_Ctrls[];
global string $IkFKSwitch[];
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[9]);
iconTextButton -e -vis $vis ($char+"_"+$IK_TSM_Ctrls[11]);
}

//------------ ALL
global proc showHide_CTRLs(string $char){
global string $Other_TSM_Ctrls[];
$getVis = `getAttr ($char+":"+$Other_TSM_Ctrls[1]+".v")`;
if ($getVis ==1) 	{
setAttr ($char+":"+$Other_TSM_Ctrls[1] + ".v") 0;
}else{
setAttr ($char+":"+$Other_TSM_Ctrls[1] + ".v") 1;	
	}

};

global proc showHide_GEOMS(string $char, int $id){
global string $RBW_Ctrls[];
global string $RBW_geo_GRP[];
$getVis = `getAttr ($char+":"+$RBW_geo_GRP[$id]+".v")`;
if ($getVis ==1) 	{
setAttr ($char+":"+$RBW_geo_GRP[$id]+".v") 0;
}else{
setAttr ($char+":"+$RBW_geo_GRP[$id]+".v") 1;	
	}

};

global proc showHide_HAIRs(string $char){
global string $RBW_Ctrls[];
global string $Other_TSM_Ctrls[];
$getVis = `getAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[6])`;
if ($getVis ==1) 	{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[6]) 0;
}else{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[6]) 1;	
	}
}
global proc showHide_DRESSs(string $char){
global string $RBW_Ctrls[];
global string $Other_TSM_Ctrls[];
	
$getVis = `getAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[7])`;
if ($getVis ==1) 	{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[7]) 0;
}else{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[7]) 1;	
	}

};
global proc showHide_FACE(string $char){
global string $RBW_Ctrls[];
global string $Other_TSM_Ctrls[];
	
$getVis = `getAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5])`;
if ($getVis ==1) 	{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5]) 0;
}else{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5]) 1;	
	}

};
global proc showHide_OTHERs(string $char){
global string $RBW_Ctrls[];
global string $Other_TSM_Ctrls[];
	
$getVis = `getAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5])`;
if ($getVis ==1) 	{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5]) 0;
}else{
setAttr ($char+":"+$Other_TSM_Ctrls[2]+"."+$RBW_Ctrls[5]) 1;	
	}

};
///++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
global proc selectCtrlFromSet(string $char){
select -cl;
string $ctrl;
$ctrls=`sets -q ($char+":TSM2Controls")`;
for ($ctrl in $ctrls){
select -tgl $ctrl;
}
}
//*********************************************************
//modified by IDMT
global proc keyCtrlFromSet(string $char)
{
	select -cl;
	string $ctrl;
	$ctrls=`sets -q ($char+":TSM2Controls")`;
	for ($ctrl in $ctrls)
		select -tgl $ctrl;

	source performSetKeyframeArgList;
	performSetKeyframeArgList 1 {"0", "animationList"};
}

global proc InitCtrlFromSet(string $char)
{
	selectCtrlFromSet($char);
	string $ctrls[] = `ls -sl`;
	for ($ctrl in $ctrls)
	{
		if (!`gmatch $ctrl "*:Character"`)
		{
			string $attrs[] = `listAttr -k $ctrl`;
			for ($item in $attrs)
			{
				if ($item == "translateX" ||$item == "translateY" ||$item == "translateZ" ||$item == "rotateX" ||$item == "rotateY" ||$item == "rotateZ")
				{
					setAttr ($ctrl + "." + $item ) 0;
					//setKeyframe -attribute $item -value 0 $ctrl;
				}
			}
		}
	}
}
//*********************************************************


global proc selectFaceCtrl(string $char){
global string $RBW_FaceCtrls[];
select -cl;
for ($ctrl in $RBW_FaceCtrls) {
	string $ctrlName= ($char +":"+$ctrl);
	if (`objExists $ctrlName`){ 
		select -tgl $ctrlName;
		}
}
}

global proc TSM_Switch_prc(){
cycleCheck -e off;
int $i;
string $selNodes[] = `selectedNodes`;
string $buffer[]; int $numTokens = 0;
$numTokens = `tokenize $selNodes[0] "|" $buffer`;
string $theNode = $buffer[$numTokens-1];
string $ns = "";
$numTokens = `tokenize $theNode ":" $buffer`;$theNode = $buffer[ $numTokens-1 ];
if( $numTokens > 1 )
	{	
		for( $i = 0; $i < (size($buffer) - 1); 
			$i++ )	
		{		
			$ns += $buffer[$i];		$ns += ":";
			}
			}$numTokens = `tokenize $theNode "_" $buffer`;
			string $sysPref = $buffer[0];string $switchAttribute = $sysPref + "_FKIK";
			string $upperBody = $ns + "Upper_Body";string $userswitch = $upperBody + "." + $switchAttribute;int $currentMode = `getAttr $userswitch`;
			string $controlSet;if( $currentMode == 0 )
				{	
					$controlSet = $ns + $sysPref + "_IK_Controls";
					}else{
						$controlSet = $ns + $sysPref + "_FK_Controls";
						}select $controlSet;string $controls[] = `selectedNodes`;
						for( $i = 0; $i < size($controls); $i++ ) 
							{	string $control = $controls[$i];
								$numTokens = `tokenize $control "|" $buffer`;	$control = $buffer[$numTokens-1];
								string $switch = $control + "_SWITCH";
								if( `objExists $switch` )
									{
										string $controlAttributes[] = `listAttr -k $control`;
										string $switchAttributes[] = `listAttr -k $switch`;
										int $j;
										for( $j = 0; $j < size($controlAttributes); $j++ )
											{
												if( $controlAttributes[$j] == "Reposition" )
													{
														$j++;
														}
														string $attributeToSet = $control + "." + $controlAttributes[$j];
														int $foundAttribute = 0;
														int $k;
														for( $k = 0; $k < size($switchAttributes); $k++ )
															{
																if( $controlAttributes[$j] == $switchAttributes[$k] )
																	{
																		$foundAttribute = 1;	
																		string $attributeToGet = $switch + "." + $switchAttributes[$k];
																		float $valueOfAttribute = `getAttr $attributeToGet`;
																		setAttr $attributeToSet $valueOfAttribute;
																		}
																		}
																		if( $foundAttribute == 0 )
																			{
																				setAttr $attributeToSet 0;
																				}
																				setKeyframe $attributeToSet;
																				}
																				}
																				}
																				if( $currentMode == 0 ){	$currentMode = 1;
																					}else{	
																						$currentMode = 0;
																					}
																					setAttr $userswitch $currentMode;
																					setKeyframe $userswitch;
																					$keytime = `findKeyframe -which previous -attribute $switchAttribute -animation objects $upperBody`;
																					$now = `currentTime -query`;
																					if( $keytime == $now ){
																						setKeyframe -time 0 $userswitch;
																						$keytime = 0;
																					}
																					keyTangent -time $keytime -outTangentType step -attribute $switchAttribute -	animation objects $upperBody;cycleCheck -e on;select -clear;

																				}

/* findchar1 deprecated
trasforma una lista del sitema in un array di nomi
ricordarsi di sostituire ls con dir sotto win

global proc string[] searchChar(string $path){
$ws=`workspace -fn`;
$wsChar= ($ws + $path);
string $chars = system("ls " + $wsChar);
string $buffer[];
$numTokens = `tokenize $chars "\n" $buffer`;
return $buffer;
}
*/