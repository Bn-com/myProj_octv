global proc xygeocachetool() {	if(`window -exists xygeocachetoolUI`)		deleteUI xygeocachetoolUI;	window -title "GEOCACHE TOOL"               -width 500 -height 360  xygeocachetoolUI;    scrollLayout  -w 500;        columnLayout -adjustableColumn true -cw 160;             string $mainbutton =` button -l "Batch"`;              button -l "Add" -w 500                     -c ("addreffile(\""+$mainbutton+"\")");              button -l "Import Exisited Geomotry Cache" -w 500                     -c xyImportExGeotool;              button -l "Refresh"                     -c xygeocachetool;                    showWindow xygeocachetoolUI;}xygeocachetool;//==================================////==================================global proc addreffile(string $mainbutton){string $charactor[] = {};string $namespaces[] ={};string $selectobjs[] = `ls -sl`;for($obj in $selectobjs) {$charactor[size($charactor)]= `referenceQuery -withoutCopyNumber -filename $obj`;  string $arraych[] ={}; string $arraychclash[]={};  $arraychclash = stringToStringArray($obj, "|");string $basename = $arraychclash[size($arraychclash)-1];  $arraych = stringToStringArray($basename, ":");  int $k =0;  $objnamespace = "";  for($k=0;$k<size($arraych)-1;$k++)   {    $objnamespace = ($objnamespace+$arraych[$k]+":");    }$namespaces[size($namespaces)] =$objnamespace; }           int $chrcount = size($charactor);           string $framecontrls[]={};           string $mainbuttoncom ="";           for($i =0;$i<$chrcount;$i++)           {           $framecontrls[$i] = xygeocachelayout($charactor[$i],$namespaces[$i]);           print $framecontrls[$i];           print "\n";           $mainbuttoncom += $framecontrls[$i];           print $mainbuttoncom;           }         button -e -c $mainbuttoncom $mainbutton;}//==================================////==================================global proc string xygeocachelayout(string $chrname,string $namespace){  string $basechr = basename($chrname,".mb");   string $xychframeLayout =`frameLayout -label $basechr -labelAlign "top" -cll true -cl 1                             -borderStyle "etchedOut" -w 500`;   string $xychformLayout  =` formLayout -w 200`;//++++++++++++++++++++////++++++++++++++++++++                string $RENDERFilePathField =` textFieldGrp -label "RENDERFile path" -text  $chrname -ed false`;                string $RENDERFileSeparator =` separator -w 500`;//+++++++++++++++++++++++//meshes//+++++++++++++++++++++++                  string $meshCheckBox =` checkBox -label "meshes" -v 1`;                  string $meshTSL =`  textScrollList -numberOfRows 8                                                      -allowMultiSelection true                                                     `;                  string $meshAddButton =`  button -label "add"                                                   -c ("addMeshes(\""+$meshTSL+"\")")`;                  string $meshRemoveButton =`  button -label "remove"                                                   -c ("removeMeshes(\""+$meshTSL+"\")")`;                                    string $meshUpButton =`  button -label "¡ü"                                                   -c ("downTSL(\""+$meshTSL+"\")")`;                  string $meshDownButton =`  button -label "¡ý"                                                   -c ("upTSL(\""+$meshTSL+"\")")`;                  string $meshCachePathField =`textFieldGrp -label "geo cache path" -text "cache path" -w 100`;                  string $meshCachePathButton =`  button -label "auto"                                                                -c ("geocachepath(\""+$meshCachePathField+"\",\""+$basechr+"\")")`;                  string $meshCacheNameField =` textFieldGrp -label "geo cache name" -text  $basechr`;                  string $meshSeparator =` separator -w 500`;//+++++++++++++++++++++++//CACHEFile//+++++++++++++++++++++++                  string $CACHEFileCheckBox =` checkBox -label "CACHEFile" -v 1`;                  string $CACHEFilePathField =` textFieldGrp -label "CACHEFile path" -text  "Editable"`;                  string $CACHEFilePathButton =`  button -label "auto"                                                                -c ("CACHEFilepath(\""+$CACHEFilePathField+"\",\""+$chrname+"\")")`;                 // string $CACHEFilePathButtonman =`  button -label "manual"                                                           // -c ("manulpath(\""+$CACHEFilePathField+"\")")`;                                  string $CACHEFileSeparator =` separator -w 500`;//+++++++++++++++++++++++//hairgroup//+++++++++++++++++++++++                                     string $hairCheckBox =` checkBox -label "Hairgroup" -v 1`;                  string $hairNameField =` textField -text "hairgroupname" -ed false`;                  string $hairAddbutton =` button -label "add"                                                   -c ("addName(\""+$hairNameField+"\")")`;                  string $hairSelectButton =` button -label "select"                                                   -c ("selectName(\""+$hairNameField+"\")")`;                  string $hairSeparator =` separator -w 500`;                    //+++++++++++++++++++++++//hairjoints//+++++++++++++++++++++++                  string $jointsCherkBox =` checkBox -label "HairJoints" -v 1`;                  string $jointNameField =` textField -text "hairjointsname" -ed false`;                  string $jointAddButton =`  button -label "add"                                                   -c ("addName(\""+$jointNameField+"\")")`;                  string $jointSelectButton =` button -label "select"                                                   -c ("selectName(\""+$jointNameField+"\")")`;                  string $jointSepartor =` separator -w 500`;//+++++++++++++++++++++++//slps//+++++++++++++++++++++++                  string $SLPCheckBox =` checkBox -label "SLPs" -v 1`;                  string $SLPTSL =`  textScrollList -numberOfRows 8 -allowMultiSelection true`;                    string $SLPAddButton =` button -label "add"                                                 -c ("addMeshes(\""+$SLPTSL+"\")")`;                  string $SLPRemoveButton =` button -label "remove"                                                   -c ("removeMeshes(\""+$SLPTSL+"\")")`;                  string $SLPUpButton =`  button -label "¡ü"                                                   -c ("downTSL(\""+$SLPTSL+"\")")`;                  string $SLPdownButton =` button -label "¡ý"                                                   -c ("upTSL(\""+$SLPTSL+"\")")`;                  string $SLPCachePathField =` textFieldGrp -label "geo cache path" -text  "cache path"`;                  geocachepath($SLPCachePathField,$basechr);                  string $SLPCachePathButton =`  button -label "auto"                                                                -c ("geocachepath(\""+$SLPCachePathField+"\",\""+$basechr+"\")")`;                  string $SLPCacheNameField =` textFieldGrp -label "geo cache name" -text  ($basechr+"_SLPs")`;                  string $SLPSeparator =` separator -w 500`;//+++++++++++++++++++++++//deleteCHR//+++++++++++++++++++++++                  string $CHRCherkBox =` checkBox -label "DeleteCHR" -v 1`;                  string $CHRNameField =` textField -text "CHRname" -ed false`;                  string $CHRAddButton =`  button -label "add"                                                  -c ("addName(\""+$CHRNameField+"\")")`;                  string $CHRSelectButton =` button -label "select"                                                  -c ("selectName(\""+$CHRNameField+"\")")`;                  string $CHRSepartor =` separator -w 500`;//+++++++++++++++++++++++//GO//+++++++++++++++++++++++                  string $GOButton =` button -label "GO"                                             -c ("xyGeoCacheMain(\""+$RENDERFilePathField+"\",\""+$meshCheckBox+"\",\""+$meshTSL+"\",\""+$meshCachePathField+"\",\""+$meshCacheNameField+"\",\""+$CACHEFileCheckBox+"\",\""+$CACHEFilePathField+"\",\""+$hairCheckBox+"\",\""+$hairNameField+"\",\""+$jointsCherkBox+"\",\""+$jointNameField+"\",\""+$SLPCheckBox+"\",\""+$SLPTSL+"\",\""+$SLPCachePathField+"\",\""+$SLPCacheNameField+"\",\""+$CHRCherkBox+"\",\""+$CHRNameField+"\" )")`;                                  setParent ..;                setParent ..;//+++++++++++++++++++++++                  formLayout -edit//+++++++++++++++++++++++++++++++++++++++++++++++//renderpath layout//+++++++++++++++++++++++                      -attachForm  $RENDERFilePathField     "top"    5                      -attachForm    $RENDERFilePathField  "left"   5                                               -attachControl  $RENDERFileSeparator     "top"    5 $RENDERFilePathField//+++++++++++++++++++++++++++++++++++++++++++++++//meshes layout//+++++++++++++++++++++++                          -attachControl  $meshCheckBox     "top"    5 $RENDERFileSeparator                          -attachForm     $meshCheckBox    "left"   5                          -attachControl  $meshTSL     "top"    5 $meshCheckBox                          -attachForm     $meshTSL     "left"   5                          -attachForm     $meshTSL     "right"   5                                                                              -attachControl  $meshAddButton     "top"    5 $meshTSL                          -attachForm     $meshAddButton     "left"   5                          -attachPosition $meshAddButton     "right"  5 25                          -attachControl  $meshRemoveButton    "top"    5 $meshTSL                          -attachControl  $meshRemoveButton    "left"   5 $meshAddButton                          -attachPosition $meshRemoveButton    "right"  5  50                          -attachControl  $meshUpButton   "top"    5 $meshTSL                          -attachControl  $meshUpButton    "left"   5 $meshRemoveButton                          -attachPosition $meshUpButton   "right"  5 75                          -attachControl  $meshDownButton    "top"    5 $meshTSL                          -attachControl  $meshDownButton    "left"   5 $meshUpButton                          -attachForm     $meshDownButton   "right"  5                          -attachControl  $meshCachePathField     "top"    5 $meshAddButton                           -attachForm     $meshCachePathField     "left"   5                          -attachPosition    $meshCachePathField     "right"   5 80                          -attachControl  $meshCachePathButton    "top"    5 $meshAddButton                           -attachControl    $meshCachePathButton     "left"   5 $meshCachePathField                           -attachControl  $meshCacheNameField     "top"    5 $meshCachePathField                          -attachForm     $meshCacheNameField     "left"   5                          -attachControl  $meshSeparator     "top"    5 $meshCacheNameField//+++++++++++++++++++++++++++++++++++++++++++++++//CACHEFile layout//+++++++++++++++++++++++                          -attachControl  $CACHEFileCheckBox     "top"    5  $meshSeparator                          -attachForm     $CACHEFileCheckBox    "left"   5                          -attachControl  $CACHEFilePathField     "top"    5 $CACHEFileCheckBox                           -attachForm     $CACHEFilePathField     "left"   5                          -attachControl  $CACHEFilePathButton    "top"    5 $CACHEFileCheckBox                           -attachControl  $CACHEFilePathButton     "left"   5 $CACHEFilePathField                          //-attachControl  $CACHEFilePathButtonman    "top"    5 $CACHEFileCheckBox                           //-attachControl  $CACHEFilePathButtonman     "left"   5 $CACHEFilePathButton                          -attachControl  $CACHEFileSeparator    "top"    5 $CACHEFilePathField//++++++++++++++++++++++++++++++++++++++++++++++//hairgroup layout//+++++++++++++++++++++++                           -attachControl  $hairCheckBox     "top"    5 $CACHEFileSeparator                          -attachForm     $hairCheckBox    "left"   5                                                    -attachControl  $hairAddbutton     "top"    5 $hairCheckBox                          -attachForm     $hairAddbutton     "left"   5                          -attachPosition $hairAddbutton     "right"  5 33                          -attachControl  $hairNameField     "top"    5 $hairCheckBox                          -attachControl  $hairNameField     "left"   5 $hairAddbutton                          -attachPosition $hairNameField      "right"  5 66                          -attachControl  $hairSelectButton    "top"    5 $hairCheckBox                          -attachControl  $hairSelectButton    "left"   5 $hairNameField                          -attachForm     $hairSelectButton    "right"  5                          -attachControl  $hairSeparator     "top"    5 $hairSelectButton//+++++++++++++++++++++++++++++++++++++++++++++++//hairjoints layout//+++++++++++++++++++++++                          -attachControl  $jointsCherkBox     "top"    5 $hairSeparator                          -attachForm     $jointsCherkBox    "left"   5                                                    -attachControl  $jointAddButton     "top"    5 $jointsCherkBox                          -attachForm     $jointAddButton     "left"   5                          -attachPosition $jointAddButton     "right"  5 33                          -attachControl  $jointNameField     "top"    5 $jointsCherkBox                          -attachControl  $jointNameField     "left"   5 $jointAddButton                          -attachPosition $jointNameField     "right"  5 66                          -attachControl  $jointSelectButton   "top"    5 $jointsCherkBox                          -attachControl  $jointSelectButton   "left"   5 $jointNameField                          -attachForm     $jointSelectButton   "right"  5                          -attachControl  $jointSepartor     "top"    5 $jointSelectButton//+++++++++++++++++++++++++++++++++++++++++++++++//slps layout//+++++++++++++++++++++++                          -attachControl  $SLPCheckBox     "top"    5  $jointSepartor                          -attachForm     $SLPCheckBox    "left"   5                          -attachControl  $SLPTSL     "top"    5  $SLPCheckBox                          -attachForm     $SLPTSL    "left"   5                          -attachForm     $SLPTSL    "right"   5                                                    -attachControl  $SLPAddButton     "top"    5 $SLPTSL                          -attachForm     $SLPAddButton    "left"   5                          -attachPosition $SLPAddButton     "right"  5 25                          -attachControl  $SLPRemoveButton    "top"    5 $SLPTSL                          -attachControl  $SLPRemoveButton    "left"   5 $SLPAddButton                          -attachPosition    $SLPRemoveButton    "right"  5 50                          -attachControl  $SLPUpButton     "top"    5 $SLPTSL                          -attachControl    $SLPUpButton    "left"   5  $SLPRemoveButton                          -attachPosition $SLPUpButton     "right"  5 75                          -attachControl  $SLPdownButton    "top"    5 $SLPTSL                          -attachControl  $SLPdownButton    "left"   5 $SLPUpButton                          -attachForm     $SLPdownButton    "right"  5                          -attachControl  $SLPCachePathField     "top"    5 $SLPRemoveButton                          -attachForm     $SLPCachePathField     "left"   5                          -attachControl  $SLPCachePathButton     "top"    5 $SLPRemoveButton                          -attachControl  $SLPCachePathButton     "left"   5 $SLPCachePathField                          -attachControl  $SLPCacheNameField     "top"    5 $SLPCachePathField                          -attachForm     $SLPCacheNameField     "left"   5                          -attachControl  $SLPSeparator     "top"    5 $SLPCacheNameField//++++++++++++++++++++++++++++++++++++++++++++++//deleteCHR layout//+++++++++++++++++++++++                          -attachControl  $CHRCherkBox     "top"    5 $SLPSeparator                          -attachForm     $CHRCherkBox    "left"   5                                                    -attachControl  $CHRAddButton     "top"    5 $CHRCherkBox                          -attachForm     $CHRAddButton     "left"   5                          -attachPosition $CHRAddButton     "right"  5 33                          -attachControl  $CHRNameField     "top"    5 $CHRCherkBox                          -attachControl  $CHRNameField     "left"   5 $CHRAddButton                          -attachPosition $CHRNameField     "right"  5 66                          -attachControl  $CHRSelectButton   "top"    5 $CHRCherkBox                          -attachControl  $CHRSelectButton   "left"   5 $CHRNameField                          -attachForm     $CHRSelectButton   "right"  5                          -attachControl  $CHRSepartor     "top"    5 $CHRSelectButton//++++++++++++++++++++++++++++++++++++++++++++++                          -attachControl  $GOButton    "top"    5 $CHRSepartor                           -attachForm     $GOButton    "left"   5                          -attachForm     $GOButton    "right"   5                  $xychformLayout;string $controls ="xyGeoCacheMain(\""+$RENDERFilePathField+"\",\""+$meshCheckBox+"\",\""+$meshTSL+"\",\""+$meshCachePathField+"\",\""+$meshCacheNameField+"\",\""+$CACHEFileCheckBox+"\",\""+$CACHEFilePathField+"\",\""+$hairCheckBox+"\",\""+$hairNameField+"\",\""+$jointsCherkBox+"\",\""+$jointNameField+"\",\""+$SLPCheckBox+"\",\""+$SLPTSL+"\",\""+$SLPCachePathField+"\",\""+$SLPCacheNameField+"\",\""+$CHRCherkBox+"\",\""+$CHRNameField+"\");";                  select -cl;               if(`objExists ($namespace+"MESHES")` )                  {                  select -r ($namespace+"MESHES");                  addMeshes($meshTSL);                 }                 else               checkBox -e -v 0  $meshCheckBox;                   geocachepath($meshCachePathField,$basechr);                  CACHEFilepath($CACHEFilePathField,$chrname);                  select -cl;               if(`objExists ($namespace+"HAIRS")` )                  {                  select -r ($namespace+"HAIRS");                  addName($hairNameField);               }                else               checkBox -e -v 0  $hairCheckBox;                     select -cl;               if(`objExists ($namespace+"Joint_ANCHOR_HAIRSETUP")` )                  {                  select -r ($namespace+"Joint_ANCHOR_HAIRSETUP");                  addName($jointNameField);                }                 else               checkBox -e -v 0  $jointsCherkBox;                                 select -cl;               if(`objExists ($namespace+"SLPS")` )                  {                  select -r ($namespace+"SLPS");                  addMeshes($SLPTSL);                 }                else               checkBox -e -v 0  $SLPCheckBox;                     select -cl;               if(`objExists ($namespace+"CHR")` )                  {                  select -r ($namespace+"CHR");                  addName($CHRNameField);               }                else               checkBox -e -v 0  $CHRCherkBox; return $controls;}//==================================////==================================global proc preaddMeshes(string $TSL ){string $meshes[] = `ls -sl`;for ($each in $meshes) { textScrollList -e -append $each -sc ("selectTSLmesh(\""+$TSL+"\")")  $TSL; }string $list[] = ` textScrollList -q -ai $TSL`;textScrollList -e -ra $TSL;string $shorterList[] = stringArrayRemoveDuplicates($list);for ($obj in $shorterList) { textScrollList -e -append $obj -sc ("selectTSLmesh(\""+$TSL+"\")")  $TSL; }}//==================================////==================================global proc addMeshes(string $TSL ){string $meshes[] = `ls -sl`;for ($each in $meshes) { textScrollList -e -append $each -sc ("selectTSLmesh(\""+$TSL+"\")")  $TSL; }string $list[] = ` textScrollList -q -ai $TSL`;textScrollList -e -ra $TSL;string $shorterList[] = stringArrayRemoveDuplicates($list);for ($obj in $shorterList) { textScrollList -e -append $obj -sc ("selectTSLmesh(\""+$TSL+"\")")  $TSL; }}//==================================////==================================global proc removeMeshes(string $TSL ){string $meshes[] = ` textScrollList -q -si  $TSL`;for ($each in $meshes) { textScrollList -e -ri $each  $TSL; }}//==================================////==================================global proc addName(string $nameTexfield ){string $names[] = `ls -sl`;for ($each in $names) {textField  -e -tx $each  $nameTexfield; }}//==================================////==================================global proc selectName(string $nameTexfield ){string $name = `textField  -q -tx  $nameTexfield`;select -r $name;}//==================================////==================================global proc selectTSLmesh(string $selectedTSL){     string $sleitem[] =`textScrollList -q -si $selectedTSL`;  select -r $sleitem;}//==================================////==================================global proc upTSL(string $selectedTSL){     int $rows =`textScrollList -q -numberOfRows $selectedTSL`;  textScrollList -e -numberOfRows ($rows+2) $selectedTSL;}//==================================////==================================global proc downTSL(string $selectedTSL){     int $rows =`textScrollList -q -numberOfRows $selectedTSL`;  textScrollList -e -numberOfRows $rows $selectedTSL;}//==================================////==================================global proc geocachepath(string $TFBG,string $chrname){ string $project = zwGetProject("");  string $path = `file -q -sceneName`;string $base = basename($path,".mb");string $filenamearray[];$filenamearray = stringToStringArray($base, "_");string $episode = ("episode_"+$filenamearray[1]);string $scene = ("scene_"+$filenamearray[2]);string $path ="//file-cluster/GDC/Projects/" + $project + "/Project/data/"+$episode+"/"+$scene+"/geoCache";textFieldGrp -e -tx  ($path+"/"+$chrname) $TFBG;}//==================================////==================================global proc CACHEFilepath(string $TFBG,string $rendername){string $path = `substitute "anim" $rendername "cache"`;textFieldGrp -e -tx  $path $TFBG;}//==================================////==================================//==================================////==================================//global proc string getmannul( string $filename, string $fileType )//{//return $filename;//}//==================================////==================================//global proc manulpath( string $TFBG )//{//fileBrowserDialog -m 0 -fc "getmannul" -ft "mayaBinary" -an "OK";//textFieldGrp -e -tx  `getmannul` $TFBG; //}//==================================////==================================global proc xyGeoCacheMain(string $RENDERFilePathField,string $meshCheckBox,string $meshTSL,string $meshCachePathField,string $meshCacheNameField,string $CACHEFileCheckBox,string $CACHEFilePathField,string $hairCheckBox,string $hairNameField,string $jointsCherkBox,string $jointNameField,string $SLPCheckBox,string $SLPTSL,string $SLPCachePathField,string $SLPCacheNameField,string $CHRCherkBox,string $CHRNameField ){xyCreatGeoCache($meshCheckBox,$meshTSL,$meshCachePathField,$meshCacheNameField );xyImportCACHEFile($CACHEFileCheckBox,$CACHEFilePathField,$meshCachePathField,$meshCacheNameField );xySeparateHairGroup($RENDERFilePathField,$hairCheckBox,$hairNameField );xyBakeJointGroup($jointsCherkBox, $jointNameField );xyCreatGeoCache($SLPCheckBox,$SLPTSL,$SLPCachePathField,$SLPCacheNameField );xyDeleteCHR($CHRCherkBox,$CHRNameField );print "======================================================================================\n";}//==================================////==================================global proc xyCreatGeoCache(string $CheckBox,string $TSL,string $CachePathField,string $CacheNameField ){int $doGeoCache = `checkBox -q -v $CheckBox`;string $meshes[] = {};clear $meshes;string $meshes[] = `textScrollList -q -ai $TSL`;string $geoCachePath =`textFieldGrp -q -tx $CachePathField`;string $geoCacheName = `textFieldGrp -q -tx $CacheNameField`;select -cl;if($doGeoCache) {  for ($mesh in $meshes)   {    select -add $mesh;   } string $panelsname = `paneLayout -q -pane1 viewPanes`;int $isoOn = `isolateSelect - q -s  $panelsname`;if($isoOn ==1) { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname;  }else { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname; }  doCreateGeometryCache 4 { "2", "1", "10", "OneFilePerFrame", "1", $geoCachePath,"0",$geoCacheName,"0", "replace", "0", "1", "1","0","1" } ; print "\n"; print "´´½¨geometry cache"; print "\ncache meshes:\n"; print $meshes; print "\ncacheÂ·¾¶:\n"; print $geoCachePath; print "\ncacheÃû×Ö:\n"; print $geoCacheName; print "\n"; }else print "²»´´½¨geometrycache\n";}//==================================////==================================global proc xyImportCACHEFile(string $CACHEFileCheckBox,string $CACHEFilePathField,string $CachePathField,string $CacheNameField ){int $doImCACHEFile = `checkBox -q -v $CACHEFileCheckBox`;string $CACHEFilePath =`textFieldGrp -q -tx $CACHEFilePathField`;if ($doImCACHEFile) { //++++++++++++++++++++++++ string $basenamePrefix = `match "[^/\\]+$" $CACHEFilePath`;	$basenamePrefix = `match "[^.]+" $basenamePrefix`; string $renamePrefix = $basenamePrefix;int $nameexist = `namespace -exists $renamePrefix`;int $nameid = 1;while ($nameexist)	{ $renamePrefix = $basenamePrefix;$renamePrefix = $renamePrefix + $nameid+"clone";$nameexist = `namespace -exists $renamePrefix`;$nameid++;	}  file -reference -namespace $renamePrefix $CACHEFilePath; //++++++++++++++++++++++++ string $mintime = `playbackOptions -q -min`; string $maxtime =`playbackOptions -q -max`; string $geoCachePath =`textFieldGrp -q -tx $CachePathField`; string $geoCacheName = `textFieldGrp -q -tx $CacheNameField`; string $cachefilename = `createNode cacheFile -n $renamePrefix`;  setAttr ($cachefilename+".cn") -type "string" $geoCacheName;  setAttr ($cachefilename+".cp")-type "string" $geoCachePath ;	setAttr ($cachefilename+".os") $mintime;	setAttr ($cachefilename+".oe") $maxtime;	setAttr ($cachefilename+".ss") $mintime;	setAttr ($cachefilename+".se") $maxtime;	setAttr ($cachefilename+".sf") $mintime; connectAttr ":time1.o" ($cachefilename+".tim");string $channelnames[] =`cacheFile -q -cnm  $cachefilename`;  string $arraych[] ={}; string $arraychclash[]={};  $arraychclash = stringToStringArray($channelnames[0], "|");string $basename = $arraychclash[size($arraychclash)-1];  $arraych = stringToStringArray($basename, ":");  int $k =0;  $channelnamespace = "";  for($k=0;$k<size($arraych)-1;$k++)   {    $channelnamespace = ($channelnamespace+$arraych[$k]+":");    } int $channelsize = size($channelnames); setAttr -s $channelsize ($cachefilename+".ch"); for($i = 0;$i<$channelsize;$i++)   {    string $chanelarraychclash[]={}; $chanelarraychclash = stringToStringArray($channelnames[$i], "|");string $basename = $chanelarraychclash[size($chanelarraychclash)-1];    setAttr ($cachefilename+".ch["+$i+"]") -type "string" $channelnames[$i];  string $arraych[] ={};  $arraych = stringToStringArray($basename, ":");  int $k =0;  $channelnamespace = "";  for($k=0;$k<size($arraych)-1;$k++)   {    $channelnamespace = ($channelnamespace+$arraych[$k]+":");    }   string $origename = `substitute  $channelnamespace $basename "" `;   $origename = `substitute  "Deformed" $origename "" `;   string $switchname = `createNode historySwitch -n ($origename+"swith") `;   setAttr ($switchname+".ihi") 0;   connectAttr ($cachefilename+".ocd["+$i+"]") ($switchname+".inp[0]");   connectAttr ($cachefilename+".ir") ($switchname+".pfc");   connectAttr -f ($renamePrefix+":"+$origename+".outMesh") ($switchname+".undeformedGeometry[0]");   disconnectAttr ($renamePrefix+":"+$origename+".outMesh") ($switchname+".undeformedGeometry[0]");   connectAttr -f ($switchname+".outputGeometry[0]") ($renamePrefix+":"+$origename+".inMesh");   } print "\n"; print "²Î¿¼CACHE:"; print "\n"; print $CACHEFilePath; print "\n"; }else print "²»²Î¿¼CACHE\n";}//=========================//=========================global proc xySeparateHairGroup(string $RENDERFilePathField,string $hairCheckBox,string $hairNameField ){int $doSepHairGroup = `checkBox -q -v $hairCheckBox`;string $hairGroupName =`textField -q -tx $hairNameField`;select -cl  ;if ($doSepHairGroup) {string $renderpath = `referenceQuery  -filename $hairGroupName`;file -ir $renderpath;select -r $hairGroupName;parent -w;select -cl  ; print "\n"; print "·ÖÀëÍ··¢×é"; print "\n"; print $hairGroupName; print "\n"; }else print "²»·ÖÀëÍ··¢×é\n";}//==================================////==================================global proc xyBakeJointGroup(string $jointsCherkBox,string $jointNameField ){int $doBakeJointGroup = `checkBox -q -v $jointsCherkBox`;string $jointGroupName =`textField -q -tx $jointNameField`;select -cl  ;if ($doBakeJointGroup) {select -r $jointGroupName;string $panelsname = `paneLayout -q -pane1 viewPanes`;int $isoOn = `isolateSelect - q -s  $panelsname`;if($isoOn ==1) { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname;  }else { enableIsolateSelect $panelsname 1; isolateSelect -s 1 $panelsname; }czKeyBake;select -cl ;  print "\n"; print "bake¹Ç÷À×é"; print "\n"; print $jointGroupName; print "\n"; }else print "²»bake¹Ç÷À×é\n";}//==================================////==================================global proc xyDeleteCHR(string $CHRCherkBox,string $CHRNameField ){int $doDeleteCHR = `checkBox -q -v $CHRCherkBox`;string $CHRGroupName =`textField -q -tx $CHRNameField`;select -cl  ;if ($doDeleteCHR) {delete $CHRGroupName; print "\n"; print "É¾³ýCHR"; print "\n"; print $CHRGroupName; print "\n"; }else print "²»É¾³ýCHR×é\n";}//+++++++++++++++++++++++++++////+++++++++++++++++++++++++++global proc xyImportExGeotool() {	if(`window -exists xyImportExGeoUI`)		deleteUI xyImportExGeoUI;	window -title "WINX Import Exisited Geometry Cache Tool"               -width 200 -height 360  xyImportExGeoUI;    scrollLayout  -w 200;      string $IEGcolumnLayout =` columnLayout -adjustableColumn true -cw 160`;string $checks[] = `xylayoutfloders`;string $checknames[] ={};       for($checkb in $checks)           {            $checknames[size($checknames)]= `eval $checkb`;            }print $checknames;            button -l "Import " -c ("xyImportExistGeoCache(\""+$IEGcolumnLayout+"\")");      showWindow xyImportExGeoUI;}//++++++++++++++++++++++////++++++++++++++++++++++global proc string[] xylayoutfloders( ){string $project = zwGetProject("");string $path = `file -q -sceneName`;string $base = basename($path,".mb");string $filenamearray[];$filenamearray = stringToStringArray($base, "_");string $episode = ("episode_"+$filenamearray[1]);string $scene = ("scene_"+$filenamearray[2]);string $path ="//file-cluster/GDC/Projects/" + $project + "/Project/data/"+$episode+"/"+$scene+"/geoCache/";string $folders[] =`getFileList -folder $path`;string $checkboxs[]={};for($obj in $folders){int $fol = `filetest -d ($path+$obj)`;int $historys = `gmatch $obj "history*"`;if($fol&&$historys != 1){$checkboxs[size($checkboxs)] = ("checkBox -l "+$obj+";");}}return $checkboxs;}//++++++++++++++++++++++////++++++++++++++++++++++global proc xyImportExistGeoCache(string $UI){string $items[]=`columnLayout -q -ca $UI`;string $project = zwGetProject("");string $path = `file -q -sceneName`;string $base = basename($path,".mb");string $filenamearray[];$filenamearray = stringToStringArray($base, "_");string $episode = ("episode_"+$filenamearray[1]);string $scene = ("scene_"+$filenamearray[2]);string $path ="//file-cluster/GDC/Projects/" + $project + "/Project/data/"+$episode+"/"+$scene+"/geoCache/";for($i=0;$i<size($items)-1;$i++){if (`checkBox -q -ex $items[$i]`){string $checkboxv = `checkBox -q -v $items[$i]`;string $geocachename = `checkBox -q -l $items[$i]`;string $geocachepath =$path+$geocachename;string $geonamearray[] = {};string $cachefilepath;$geonamearray = stringToStringArray($geocachename, "_");int $isprops =`gmatch  $geonamearray[1]  "p*"`;if($isprops ==0){ if($geonamearray[0] == "wi")    $cachefilepath ="//file-cluster/GDC/Projects/" + $project + "/Project/scenes/characters/"+$geonamearray[1]+"/master/"+$geonamearray[0]+"_"+$geonamearray[1]+"_"+$geonamearray[2]+"_h_ms_cache.mb";  else    $cachefilepath ="//file-cluster/GDC/Projects/" + $project + "/Project/scenes/characters/"+$geonamearray[1]+"/master/"+$geonamearray[0]+"_"+$geonamearray[1]+"_h_ms_cache.mb";}else{  if($geonamearray[0] == "wi")     $cachefilepath ="//file-cluster/GDC/Projects/" + $project + "/Project/scenes/props/"+$geonamearray[1]+"/master/"+$geonamearray[0]+"_"+$geonamearray[1]+"_"+$geonamearray[2]+"_h_ms_cache.mb";  else     $cachefilepath ="//file-cluster/GDC/Projects/" + $project + "/Project/scenes/props/"+$geonamearray[1]+"/master/"+$geonamearray[0]+"_"+$geonamearray[1]+"_h_ms_cache.mb";  }xyImportExistCACHEFile($checkboxv,$cachefilepath,$geocachepath,$geocachename );print "+++++++++++++++";}}}//==================================global proc xyImportExistCACHEFile(string $CACHEFileCheckBox,string $CACHEFilePathField,string $CachePathField,string $CacheNameField ){int $doImCACHEFile = $CACHEFileCheckBox;string $CACHEFilePath = $CACHEFilePathField;if ($doImCACHEFile) { //++++++++++++++++++++++++ string $basenamePrefix = `match "[^/\\]+$" $CACHEFilePath`;	$basenamePrefix = `match "[^.]+" $basenamePrefix`; string $renamePrefix = $basenamePrefix;int $nameexist = `namespace -exists $renamePrefix`;int $nameid = 1;while ($nameexist)	{ $renamePrefix = $basenamePrefix;$renamePrefix = $renamePrefix + $nameid+"clone";$nameexist = `namespace -exists $renamePrefix`;$nameid++;	}  file -reference -namespace $renamePrefix $CACHEFilePath; //++++++++++++++++++++++++//* string $mintime = `playbackOptions -q -min`; string $maxtime =`playbackOptions -q -max`; string $geoCachePath = $CachePathField; string $geoCacheName = $CacheNameField; string $cachefilename = `createNode cacheFile -n $renamePrefix`;  setAttr ($cachefilename+".cn") -type "string" $geoCacheName;  setAttr ($cachefilename+".cp") -type "string" $geoCachePath ;	setAttr ($cachefilename+".os") $mintime;	setAttr ($cachefilename+".oe") $maxtime;	setAttr ($cachefilename+".ss") $mintime;	setAttr ($cachefilename+".se") $maxtime;	setAttr ($cachefilename+".sf") $mintime; connectAttr ":time1.o" ($cachefilename+".tim");string $channelnames[] =`cacheFile -q -cnm  $cachefilename`;  string $arraych[] ={}; string $arraychclash[]={};  $arraychclash = stringToStringArray($channelnames[0], "|");string $basename = $arraychclash[size($arraychclash)-1];  $arraych = stringToStringArray($basename, ":");  int $k =0;  $channelnamespace = "";  for($k=0;$k<size($arraych)-1;$k++)   {    $channelnamespace = ($channelnamespace+$arraych[$k]+":");    } int $channelsize = size($channelnames); setAttr -s $channelsize ($cachefilename+".ch"); for($i = 0;$i<$channelsize;$i++)   {    string $chanelarraychclash[]={}; $chanelarraychclash = stringToStringArray($channelnames[$i], "|");string $basename = $chanelarraychclash[size($chanelarraychclash)-1];    setAttr ($cachefilename+".ch["+$i+"]") -type "string" $channelnames[$i];  string $arraych[] ={};  $arraych = stringToStringArray($basename, ":");  int $k =0;  $channelnamespace = "";  for($k=0;$k<size($arraych)-1;$k++)   {    $channelnamespace = ($channelnamespace+$arraych[$k]+":");    }   string $origename = `substitute  $channelnamespace $basename "" `;   $origename = `substitute  "Deformed" $origename "" `;   string $switchname = `createNode historySwitch -n ($origename+"swith") `;   setAttr ($switchname+".ihi") 0;   connectAttr ($cachefilename+".ocd["+$i+"]") ($switchname+".inp[0]");   connectAttr ($cachefilename+".ir") ($switchname+".pfc");   connectAttr -f ($renamePrefix+":"+$origename+".outMesh") ($switchname+".undeformedGeometry[0]");   disconnectAttr ($renamePrefix+":"+$origename+".outMesh") ($switchname+".undeformedGeometry[0]");   connectAttr -f ($switchname+".outputGeometry[0]") ($renamePrefix+":"+$origename+".inMesh");   } print "\n"; print "²Î¿¼CACHE:"; print "\n"; print $CACHEFilePath; print "\n";print $renamePrefix;print "\n"; }else;}//+++++++++++++++++++++++++++++++//+++++++++++++++++++++++++++++++global proc string xycreateHistorySwitch(string $shape, int $wantTweakNode){	string $isDeformable[] = `ls -type deformableShape $shape`;	if (0 == size($isDeformable)) {		string $rels[] = `listRelatives -path -shapes -noIntermediate $shape`;		$isDeformable = `ls -type deformableShape $rels`;		if (0 == size($isDeformable)) {		error((uiRes("m_createHistorySwitch.kNonDeformableError")));		}	}	string $switch[] = `deformer -type historySwitch  $shape`;	string $hist[] = `listHistory -pdo 1 $shape`;	if (! $wantTweakNode) {		for ($histNode in $hist) {			if (nodeType($histNode) == "tweak") {				string $dblList[] = `listAttr -m ($histNode+".plist")`;				string $fltList[] = `listAttr -m ($histNode+".vlist")`;				if (size($dblList) <= 1 && size($fltList) <= 1) {					// we don't delete the tweak node if it contains tweaks					//					delete $histNode;				}				break;			}		}	}	string $conns[] = `listConnections -p 1 ($switch[0]+".ip[0].ig")`;	connectAttr $conns[0] ($switch[0]+".ug[0]");	setAttr ($switch[0]+".playFromCache") 1;	getAttr -silent ($switch[0]+".op[0]");	setAttr ($switch[0]+".playFromCache") 0;		disconnectAttr $conns[0] ($switch[0]+".ug[0]");		return $switch[0];}