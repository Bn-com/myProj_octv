/// Copyright (C) 2000-2008 IDMT. All rights reserved.
///
/// Author: ’‘÷ŸΩ›
///
/// Creation Date: 2008/06/03
///
/// Description: 

//////////////////////////////////////////////////////////
//	Procdures Name: 
//	
//	Arguments : NULL
//	Return : NULL
//////////////////////////////////////////////////////////

{
	string $exportFileName = ( `internalVar -userTmpDir` + "zzjWiSlObjNameTempHairs.txt" );
	int $fileId=`fopen $exportFileName "r"`;
	string $userSlObjName;
	$userSlObjName=`fread $fileId $userSlObjName`;
	fclose $fileId;
	
	string $exportFileName = ( `internalVar -userTmpDir` + "zzjWiSprtHairFileName.txt" );
	int $fileId=`fopen $exportFileName "r"`;
	string $sprtHairFileName;
	$sprtHairFileName=`fread $fileId $sprtHairFileName`;
	fclose $fileId;
	
	string $userSlObjNames[]=stringToStringArray($userSlObjName, " ");
	select $userSlObjNames;
	
	string $expHairNames[] = `ls -sl "HAIRS""*:*HAIRS""*:*:*HAIRS""*:*:*:*HAIRS"`;
	string $expChrName =`match "[a-z]*" $expHairNames[0]`;
		if ($expChrName =="wi")
		{
			$expChrName = `match "wi_c[0-9]*" $expHairNames[0]`;
			$expChrName = `match "c[0-9]+" $expChrName `;
			$expChrName = zwGetCharacterNameById($expChrName);
		}





	string $reference[] = `file -q -r`;
	for ( $refFile in $reference ){
	file -ir $refFile;
	}
	
	
	
	
//	delete `ls -textures`;
string $hairFileNames[];
clear $hairFileNames;
int $hairTmp=0;	

string $hairSystemtemp[]=`ls -type hairSystem`;
for ($a in $hairSystemtemp)
{
	string $tmp[]=`listConnections ($a+".baldnessMap")`;
	if ($tmp[0]!="") $hairFileNames[$hairTmp++]=$tmp[0];
}
for ($a in $hairSystemtemp)
{
	string $tmp[]=`listConnections ($a+".hairColor")`;
	if ($tmp[0]!="") $hairFileNames[$hairTmp++]=$tmp[0];
}

string $materialstemp[]=`ls -textures`;
string $hairFileName=stringArrayToString($hairFileNames, " ");

for ($a in $materialstemp)
{
	if (`gmatch  $hairFileName ("*"+$a+"*")`==0)
	delete $a;
}





	
	string $materials[]=`ls -materials`;
	for ($a in $materials){
	if ($a!="lambert1"){
	if ($a!="particleCloud1")
	delete $a;
	}
	}
	string $shadingEngines[]=`ls -type shadingEngine`;
	for ($a in $shadingEngines){
	if ($a!="initialShadingGroup"){
	if ($a!="initialParticleSE")
	delete $a;
	}
	}
	
	delete `ls -type bump2d`;
	delete `ls -type place2dTexture`;
		
	string $myShader=`shadingNode -asShader lambert -name wi_matte`;
	setAttr ($myShader+".color") -type double3 0 0 0 ;
	setAttr ($myShader+".matteOpacityMode") 0;

	sets -renderable true -noSurfaceShader true -empty -name ($myShader+"SG");
	connectAttr -f ($myShader+".outColor") ($myShader+"SG"+".surfaceShader");
	select $userSlObjNames;
	sets -e -forceElement ($myShader+"SG");
	
	file -import -type "mayaBinary" -rpr "wi_hairs_light" -options "v=0" "\\\\file-cluster\\gdc\\Resource\\Support\\Maya\\projects\\WinxClub\\zzjWinxSetRenderLayer\\wi_hairs_light.mb";

string $tougu[]=`ls -type joint "*airs*""*:*airs*""*:*Head_joint*ANCHOR""*:*:*Head_joint*ANCHOR"`;
if (`objExists $tougu[0]`)
{
float $tempxx[]=`xform -q -ws -t $tougu[0]`;
print $tempxx;
setAttr wi_hairs_light.tx $tempxx[0];
setAttr wi_hairs_light.ty $tempxx[1];
setAttr wi_hairs_light.tz $tempxx[2];
parent wi_hairs_light $tougu[0];
}

	select $userSlObjNames;
	select -add wi_hairs_light ;
	
	createRenderLayer -name ("chr_"+$expChrName+"_hairs") -number 1 -noRecurse `ls -selection`;
	setAttr "defaultRenderLayer.renderable" 0;
	
	setAttr "perspShape.farClipPlane" 100000;

	source "//file-cluster/GDC/Resource/Support/AnimalLogic/mayaman1.2.64/mel/makeMayaManMenu.mel";
	setupMayaManMenu;
	czMayaManSettings;

	pv_performAction $sprtHairFileName "mayaBinary";
	file -f -save -options "v=0;p=17" -type "mayaBinary";
}	
	
	
