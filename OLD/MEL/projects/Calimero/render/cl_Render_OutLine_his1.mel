global proc cl_OutLine_calimero()

{
//创建头部轮廓线
	string $CalimerogrpName="cl_c0010002calimero2";
	string $PriscillaName = "cl_c0020001priscilla";
	string $ValerianoName ="cl_c0030001valeriano";
	string $PrerrotName ="cl_c0040001pierrot";
	string $objheads[] =cl_searchingMSHMesh("MSH_head_*");
	string $objbodys[] =`cl_searchingMSHMesh "MSH_body_*"`;
	string $objlegs[] = `cl_searchingMSHMesh "MSH_leg_*"`;
	string $objdresses[]=`cl_searchingMSHMesh "MSH_dress_*"`;
	string $objsbodyA[] = stringArrayCatenate($objbodys, $objlegs);
	string $objsbody[]= stringArrayCatenate($objsbodyA, $objdresses);
	string $strokegroupname =`group -em -name cl_outToon`;
	for ( $objhead in $objheads )
	{	
		string $buffers[]={};
		tokenize $objhead "|" $buffers;

		string $tokenizeName =$buffers[0];
		string $tokenizebName_m = `match "^[^0-9]+[0-9]+[a-z]+"  $tokenizeName`;
		
		string $head_toonName = `match "[a-z]+$" $tokenizebName_m`;
		$head_toonName += "_Head_TP";
		
		string $head_strokeNode = cl_addPfxToon($objhead,$strokegroupname);
		
      string $head_toon_P[] = `listRelatives -p $head_strokeNode`;//get toon shape node 's parent Trans NODE
    	
		if ($tokenizebName_m==$CalimerogrpName)
	        {
			setAttr ($head_strokeNode+".profileColor") -type double3 1 1 1 ;
			string $file ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0010001calimero/c0010001calimero_Face_PFX.iff";
			string $strokefile = `shadingNode -asTexture file `;
			string $strokemap = `setAttr ($strokefile+".fileTextureName") -type "string" $file`;
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineWidthMap");
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineOpacityMap");
         
			rename $head_toon_P[0] $head_toonName; 
		}
		if ($tokenizebName_m==$PriscillaName)
		{	
			setAttr ($head_strokeNode+".profileColor") -type double3 1 1 1 ;
			setAttr ($head_strokeNode+".profileBreakAngle") 90;
			setAttr ($head_strokeNode+".localOcclusion") 1 ;
                        setAttr ($head_strokeNode+".occlusionTolerance") 10 ;
			string $file ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0020001priscilla/c0020001priscilla_Head_PFX.iff";
			string $strokefile = `shadingNode -asTexture file `;
			string $strokemap = `setAttr ($strokefile+".fileTextureName") -type "string" $file`;
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineWidthMap");
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineOpacityMap");
			rename $head_toon_P[0] $head_toonName; 
		 }
		 if ($tokenizebName_m==$ValerianoName)
		{			
			setAttr ($head_strokeNode+".profileColor") -type double3 1 1 1 ;
			setAttr ($head_strokeNode+".lineEndThinning") 10 ;
			string $file ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0030001valeriano/c0030001valeriano_Head_PFX.iff";
			string $strokefile = `shadingNode -asTexture file `;
			string $strokemap = `setAttr ($strokefile+".fileTextureName") -type "string" $file`;
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineWidthMap");
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineOpacityMap");
			rename $head_toon_P[0] $head_toonName; 
		}
		if ($tokenizebName_m==$PrerrotName)

		{
			setAttr ($head_strokeNode+".profileColor") -type double3 1 1 1 ;
         setAttr ($head_strokeNode+".lineEndThinning") 10 ;
			setAttr ($head_strokeNode+".localOcclusion") 1 ;
			setAttr ($head_strokeNode+".occlusionTolerance") 1 ;
			string $file ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0040001pierrot/c0040001pierrot_Face_PFX.iff";
			string $strokefile = `shadingNode -asTexture file `;
			string $strokemap = `setAttr ($strokefile+".fileTextureName") -type "string" $file`;
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($head_strokeNode+".lineWidthMap");
			rename $head_toon_P[0] $head_toonName;  
		}
	}
	//创建身体轮廓线
	for ( $k=0;$k<size($objsbodyA);$k++)
	{	
		string $bufferbody[]={};
		tokenize $objsbodyA[$k] "|" $bufferbody;

		string $tokenizebNames =$bufferbody[0];
		string $tokenizebNames_m = `match "^[^0-9]+[0-9]+[a-z]+" $tokenizebNames`;
		
		string $body_toonName = `match "[a-z]+$" $tokenizebNames_m`;
		$body_toonName += "_Body_TP";
		$body_toonName += $k;
		string $body_strokeNode = cl_addPfxToon( $objsbodyA[$k],$strokegroupname);
		
		
		string $body_toon_P[] = `listRelatives -p $body_strokeNode`;//get toon shape node 's parent Trans NODE
		if ($tokenizebNames_m==$CalimerogrpName)
		{
        //add body profile lines 
			setAttr ($body_strokeNode +".profileColor") -type double3 1 1 1 ;
			setAttr ($body_strokeNode +".lineWidth") 0.25 ;//0.05   body    ;   0.02  foot
			setAttr ($body_strokeNode +".localOcclusion") 1 ;
			rename 	$body_toon_P  $body_toonName;
		}
		if ($tokenizebNames_m==$PriscillaName)
		{	
			
			setAttr ($body_strokeNode +".profileColor") -type double3 1 1 1 ;
			setAttr ($body_strokeNode +".occlusionTolerance") 10 ;
			setAttr ($body_strokeNode +".localOcclusion") 1 ;
			rename 	$body_toon_P  $body_toonName;
		 }
		 if ($tokenizebNames_m==$ValerianoName)
		{			
			
			setAttr ($body_strokeNode +".profileColor") -type double3 1 1 1 ;
			setAttr ($body_strokeNode +".localOcclusion") 1 ;
			setAttr ($body_strokeNode +".lineEndThinning") 10 ;
			rename 	$body_toon_P  $body_toonName;
		}
		if ($tokenizebNames_m==$PrerrotName)

		{
			setAttr ($body_strokeNode +".profileColor") -type double3 1 1 1 ;
			setAttr ($body_strokeNode +".lineEndThinning") 10 ;
			setAttr ($body_strokeNode +".localOcclusion") 1 ;
			setAttr ($body_strokeNode +".occlusionTolerance") 1 ;
			string $file ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0040001pierrot/c0040001pierrot_Face_PFX.iff";
			string $strokefile = `shadingNode -asTexture file `;
			string $strokemap = `setAttr ($strokefile+".fileTextureName") -type "string" $file`;
			defaultNavigation -force true -connectToExisting -source $strokefile -destination ($body_strokeNode +".lineWidthMap");
			rename 	$body_toon_P  $body_toonName;
		}
	}
	//=================================================================================
	//===========================add intsection line ==================================
	string $calimeroBodyGrp[] = cl_CHR_MeshGrp($objsbodyA,"cl_c0010001calimero");
	
	string $myIntersector = `stringArrayIntersector`;
        stringArrayIntersector -edit -intersect $calimeroBodyGrp $myIntersector;
        stringArrayIntersector -edit -intersect $objbodys $myIntersector;
        string $calimeroBody_[] = `stringArrayIntersector -query $myIntersector`;
        deleteUI $myIntersector;
        for($j=0;$j<size($calimeroBody_);$j++)
       {
     	string $strokeNode_2 = cl_addPfxToon($calimeroBody_[$j],$strokegroupname);
    	
    	setAttr ($strokeNode_2 + ".profileLines") 0;
    	setAttr ($strokeNode_2 + ".creaseLines") 0;
    	setAttr ($strokeNode_2 + ".borderLines") 2;
    	
    	setAttr ($strokeNode_2 + ".intersectionLines") 1;
    	setAttr ($strokeNode_2 + ".selfIntersect") 1;	
    			
    	setAttr ($strokeNode_2 + ".intersectionColor") -type double3 1 1 1 ;
	setAttr ($strokeNode_2 + ".intersectionAngleMin") 20.5063;
        setAttr ($strokeNode_2 + ".intersectionAngleMax" ) 52;
       
    	//string $selfSectOp_mapPath ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0010001calimero/c0010001calimero_selfSectOP_PFX.iff";
	//string $selfSecOp_file = `shadingNode -asTexture file -n "c0010001calimero_selfSectOpFile"`;
	//string $strokemap = `setAttr ($selfSecOp_file +".fileTextureName") -type "string" $selfSectOp_mapPath`;
	//defaultNavigation -force true -connectToExisting -source $selfSecOp_file -destination ($strokeNode_2+".lineOpacityMap");
    	
    	string $strokePs_2[] = `listRelatives -p $strokeNode_2`;
    	rename  $strokePs_2[0] "calimero_bodySefIntSecPfx";//rename it
   }
	//==========================add head&body intersection lines====================
	string $calimeroHeadGrp[] = cl_CHR_MeshGrp($objheads,"cl_c0010001calimero");
	//size($calimeroHeadGrp)
	string $myIntersector = `stringArrayIntersector`;
   stringArrayIntersector -edit -intersect $calimeroHeadGrp $myIntersector;
   stringArrayIntersector -edit -intersect $objheads $myIntersector;
   string $calimeroHead_[] = `stringArrayIntersector -query $myIntersector`;
   //size($calimeroHead_)
   deleteUI $myIntersector;		
	for($i=0;$i<size($calimeroHead_);$i++)
	{
    	string $strokeNode_3 = cl_addPfxToon($calimeroHead_[$i],$strokegroupname);		
    	setAttr ($strokeNode_3 + ".profileLines") 0;
    	setAttr ($strokeNode_3 + ".creaseLines") 0;
    	setAttr ($strokeNode_3 + ".borderLines") 2;
    			
    	setAttr ($strokeNode_3 + ".lineWidth") 0.1;
    	setAttr ($strokeNode_3 + ".intersectionLines") 1;
    	setAttr ($strokeNode_3 + ".intersectionLineWidth") 0.8;
    	setAttr ($strokeNode_3 + ".intersectionAngleMin") 24.5;
    	setAttr ($strokeNode_3 + ".intersectionAngleMax") 65.5;
    			
    	setAttr ($strokeNode_3 + ".intersectionColor") -type double3 1 1 1 ;
    	
	string $intsectOp_mapPath ="//file-cluster/GDC/Projects/Calimero/Project/sourceimages/characters/c0010001calimero/c0010001calimero_intsectOP_PFX.iff";
	string $intsectOp_file = `shadingNode -asTexture file -n "c0010001calimero_intsectOpFile"`;
	string $strokemap = `setAttr ($intsectOp_file+".fileTextureName") -type "string" $intsectOp_mapPath`;
	defaultNavigation -force true -connectToExisting -source $intsectOp_file -destination ($strokeNode_3+".lineWidthMap");
    	defaultNavigation -force true -connectToExisting -source $intsectOp_file -destination ($strokeNode_3+".lineOpacityMap");
	string $yourBodyIs = cl_CHR_findspecifiedMesh($calimeroHead_[$i],"MSH_body_*");
    	//select -r $calimeroHead_[$i];
    	select -r $yourBodyIs;
    	assignPfxToon $strokeNode_3 0;
    	string $strokePs_3[] = `listRelatives -p $strokeNode_3`;
    	rename  $strokePs_3[0] "calimero_bodyHeadIntSecPfx";//rename it
	}
		

}
//===============add toon to specific mesh=====================
global proc string cl_addPfxToon(string $body,string $parent)
{   
    select $body;
	 assignNewPfxToon;
	 //string $parent = "cl_outToon"
	 
	 string $strokebody[] = `ls -sl -l`;
	 for ($j=0;$j<size($strokebody);$j++)
	{
		parent $strokebody[$j] $parent;
	}
	 
	 string $newPathes[] = `listRelatives -shapes`;
    return $newPathes[0];   
 }

//===============serching node in the scene with special character=============
global proc string[] cl_searchingMSHMesh(string $meshStamp)
{
   //string $meshStamp = "MSH_head_*";
   //string $s[] = `ls -sl -l`;
   //$meshStamp = $s[0];
   string $listSameStamps[] = `ls -l -type "transform"  -recursive 1 $meshStamp`;
   string $cacheMeshes[]={};
   string $mshMeshes[] = {};
   //clear $exactMeshes;
   for ($eachMesh in $listSameStamps)
   {
    string $getP[] = `listRelatives -p  $eachMesh`;  
    //string $chr_cache = `match "[cC]+[aA]+[cC]+[hH]+[eE]+" "GEO_CACHE_CHA"`;
    string $chr_cache = `match "[cC]+[aA]+[cC]+[hH]+[eE]+" $getP[0]`;
    string $chr_person = `match "[pP]+[eE]+[rR]+[sS]+[oO]+[nN]+" $getP[0]`;
    if ( $chr_cache !=""   ){
	    $cacheMeshes[size($cacheMeshes)] = $eachMesh;
	    
	    }
    else if( $chr_person !=""){
	    $mshMeshes[size($mshMeshes)] = $eachMesh;
	    }
   }
   if(size($cacheMeshes)==0&&size($mshMeshes)==0)
       warning ("Find No cache mesh named: " + $meshStamp);
       
   if (size($cacheMeshes) !=0)
      {
        return $cacheMeshes;
      }
   else
      {
        return $mshMeshes; 
      }
   
}  

//==============find distinct meshes of specify character who with the same name ===============
global proc string[] cl_CHR_MeshGrp(string $allMeshes[],string $CHR)
{ 
  string $temp_stor[];
  string $chr;
  //string $allMeshes[] = $objsbodyA
  //string $CHR = "cl_c0010001calimero";
  for ( $objbody in $allMeshes)
  {	
    //$i=0;
    //$objbody = $allMeshes[$i];
      string $bufferbody[];
      //clear $bufferbody;
	  tokenize $objbody "|" $bufferbody;
	  string $tokenizebNames =$bufferbody[0];
	  
	  $tokenizebNames = `match "^[^0-9]+[0-9]+[a-z]+"  $tokenizebNames`;
		
		
		if($tokenizebNames == $CHR)
		{
		  $temp_stor[size($temp_stor)] = $objbody;		    
		}
	
  }
  return  $temp_stor;   
 }  
//==============find distinct mesh in same CHRGrp========================
global proc string cl_CHR_findspecifiedMesh(string $consultMesh,string $describeStr)
{
  //string $calimeroHeadGrp[] = cl_CHR_MeshGrp($objheads,"cl_c0010001calimero");
  //string $consultMesh =$calimeroHeadGrp[0]; 
  //string $describeStr = "MSH_body_*";
  string $buffers[];
  tokenize $consultMesh "|" $buffers;
  string $CHR_topGrp = $buffers[0];
  string $findIt = "";
  string $findAllDescribeMesh[] = cl_searchingMSHMesh($describeStr);
  for($each_m in $findAllDescribeMesh)
  {
    string $buffers_2[];
    tokenize $each_m "|" $buffers_2;
    string $CHR_topGrp_2 = $buffers_2[0]; 
    if( $CHR_topGrp_2 == $CHR_topGrp)
      $findIt =  $each_m; 
  }
  //print $findIt
  return $findIt;     
}
	