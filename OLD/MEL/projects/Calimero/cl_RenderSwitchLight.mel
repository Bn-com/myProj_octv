//////////////////////////////////////////////////////////
//
//	Script Name: 
//	Author: WansHoulOng
//	Created: 
//
//	Update/Change: WansHoulOng
//	Last Updated: 
//	Description:
//				
//////////////////////////////////////////////////////////

global proc cl_RenderSwitchLight()
{
	string $LGTGroups[] = cl_RenderSwitchLightGetLightGroups();

	if(`window -exists cl_RenderSwitchLight_Win`)
		deleteUI cl_RenderSwitchLight_Win;
	window -title "Lighting Switch" -in "PL" -menuBar  true -mxb false -mnb false   cl_RenderSwitchLight_Win;
		string $co = `columnLayout -adj 0`;
		if (size($LGTGroups))
		{
			rowColumnLayout  -nc 2;
				string $collection1 = `radioCollection cl_RenderSwitchLight_Win_radio`;
					for ($light in $LGTGroups)
					{
						string $buff[] = stringToStringArray($light,"|");
						radioButton -label $light ("cl_RenderSwitchLight_Win_"+$buff[0]);

						string $children[] = `listRelatives -c  $light`;
						optionMenuGrp -label ":" -columnWidth2 10 600 -columnAlign 1 "left"  -cc "" ("cl_RenderSwitchLight_Win_"+$buff[0]+"_Time");
						for ($item in $children)
						{
							string $buff1[] = stringToStringArray($item,":");
							menuItem -label $buff1[size($buff1)-1];
						}
					}
					/*string $rb1, $rb2, $rb3;
					$rb1 = `radioButton -label "Red"`;
					optionMenuGrp -label ":" -columnWidth2 40 600 -columnAlign 1 "right"  -cc "";
					$rb1 = `radioButton -label "Blue"`;
					optionMenuGrp -label ":" -columnWidth2 40 600 -columnAlign 1 "right"  -cc "";*/
					setParent ..;
				setParent ..;
			setParent ..;
			//radioCollection -e -sl ("cl_RenderSwitchLight_Win_"+$LGTGroups[0]) $collection1;
			button -l "Set Light" -p $co -w 100 -h 30 -c "cl_RenderSwitchLightApply";
		}
		else 
			text -label "No LIGHTING in this Scence!" -align "center"; 

	showWindow cl_RenderSwitchLight_Win;
}

global proc string[] cl_RenderSwitchLightGetLightGroups()
{
	string $WRDGroups[] = `ls "WORLD" "*:WORLD"`;
	string $LGTGroups[]={};
	for ($world in $WRDGroups)
	{
		string $children[] = `listRelatives -c -f $world`;
		for ($child in $children)
		{
			if (match("LIGHTING",$child) != "")
			{
				$LGTGroups[size($LGTGroups)] = $child;
			}
		}
	}

	return $LGTGroups;
}

global proc cl_RenderSwitchLightApply()
{
	string $select = `radioCollection -q -sl cl_RenderSwitchLight_Win_radio`;
	string $light = `radioButton -q -l $select`;
	string $time = `optionMenuGrp -q -v ($select+"_Time")`;
	
	string $attrs[] = `attributeQuery -node $light -listEnum "Mood"`;
	string $values[] = stringToStringArray($attrs[0],":");
	int $moodV=0;
	for ($i=0;$i<size($values);$i++)
	{
		if (toupper($values[$i]) == $time)
		{
			$moodV = $i;
			break;
		}
	}
	catchQuiet(`setAttr ($light+".Mood") $moodV`);
	string $times[] = `listRelatives -c  -f $light`;
	for ($item in $times)
	{
		string $allLights[] = `listRelatives -c  -f $item`;
		for ($tmp in $allLights)
		{
			setAttr ($tmp+".visibility") 1;
		}
	}

	
	string $radioChildren[] = `radioCollection -q -cia cl_RenderSwitchLight_Win_radio`;
	for ($child in $radioChildren)
	{
		if (match($select,$child)=="")
		{
			string $otherlight = `radioButton -q -l $child`;
			string $otherattrs[] = `attributeQuery -node $otherlight -listEnum "Mood"`;
			string $othervalues[] = stringToStringArray($otherattrs[0],":");
			int $othermoodV=0;
			for ($i=0;$i<size($othervalues);$i++)
			{
				if (toupper($othervalues[$i]) == $time)
				{
					$othermoodV = $i;
					break;
				}
			}
			catchQuiet(`setAttr ($otherlight+".Mood") $othermoodV`);

			string $othertimes[] = `listRelatives -c  -f $otherlight`;
			for ($item in $othertimes)
			{
				if (match($time,$item)!="")
				{
					string $allLights[] = `listRelatives -c  -f $item`;
					for ($tmp in $allLights)
					{
						if (match("_EXTRA_",$tmp)=="")
							setAttr ($tmp+".visibility") 0;
						else
							setAttr ($tmp+".visibility") 1;
					}
				}
				else
				{
					string $allLights[] = `listRelatives -c  -f $item`;
					for ($tmp in $allLights)
					{
						setAttr ($tmp+".visibility") 1;
					}
				}
			}
		}
	}
	float $timeslider = `currentTime -q`;
	currentTime ($timeslider+1);
	currentTime ($timeslider-1);
}