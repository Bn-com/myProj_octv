global proc zzyMaxMinXYZBoundaryBoxUI()
//
//
//
//
{
	if (`window -ex zzyMaxMinXYZBoundaryBoxUI`)
	deleteUI -window zzyMaxMinXYZBoundaryBoxUI;
	string $window = `window -title "求物体活动最大边界Box"
    		                 -widthHeight 800 200  zzyMaxMinXYZBoundaryBoxUI`;

	formLayout Fom;
		frameLayout     -l "ObjectState"
				-labelAlign "center"
				-borderStyle "etchedOut" ObjectStateFrm;
			columnLayout;
			radioButtonGrp  -numberOfRadioButtons 2
    					-label "物体状态："
					-labelArray2 "静止" "活动" 
					-sl 1 ObjectState;
			setParent..;
		setParent..;

		frameLayout     -l "Time"
				-labelAlign "center"
				-borderStyle "etchedOut" ObjectActivityTimeFrm;
			columnLayout;
				
			radioButtonGrp  -numberOfRadioButtons 2
					-en 0
					-label "Time range："
					-labelArray2 "Start/End" "Time Slider" 
					-sl 2 ObjectActivityTime;

			textFieldGrp 
					-label "Strat time：" -en 0
					-text "0.0000" StartTime;

			textFieldGrp 
					-label "End time：" -en 0
					-text "10.0000" EndTime;
				
			setParent..;
		 setParent..;

			

		 button -l "创建边界BOX" -c "zzyCreateBoundaryBOX" button1;
		 button -l "关闭" -c "deleteUI zzyMaxMinXYZBoundaryBoxUI" button2;



	setParent..;

	string $sCmdOnObjectActivityTime ="radioButtonGrp -e -en 1 -sl 2 ObjectActivityTime;";
	string $sCmdOffObjectActivityTime ="radioButtonGrp -e -en 0 ObjectActivityTime;";


	string $sCmdOnStarTime="textFieldGrp -e -en 1   StartTime;";
        string $sCmdOnEndTime="textFieldGrp  -e -en 1  EndTime;";
	string $sCmdOffStarTime="textFieldGrp -e -en 0  StartTime;";
	string $sCmdOffEndTime="textFieldGrp  -e -en 0   EndTime;";


	radioButtonGrp -e	-on1 ($sCmdOffObjectActivityTime+$sCmdOffStarTime+$sCmdOffEndTime)
				-on2 ($sCmdOnObjectActivityTime)  ObjectState;

        radioButtonGrp -e	-on1 ($sCmdOnStarTime+$sCmdOnEndTime)
				-on2 ($sCmdOffStarTime+$sCmdOffEndTime)  ObjectActivityTime;

	formLayout -e

	    -attachForm     ObjectStateFrm     "top"    5 
            -attachForm     ObjectStateFrm     "left"   5        
            -attachForm     ObjectStateFrm     "right"  5 
	    
	    -attachControl  ObjectActivityTimeFrm "top"   5 ObjectStateFrm
	    -attachForm     ObjectActivityTimeFrm "left"  5
	    -attachForm     ObjectActivityTimeFrm "right" 5 

            -attachNone     button1     "top"
            -attachForm     button1     "left"   5 
            -attachPosition button1     "right"  5 50
            -attachForm     button1     "bottom" 5  

	    -attachNone     button2     "top"
            -attachPosition button2     "left"   5 50
            -attachForm     button2     "right"  5 
            -attachForm     button2     "bottom" 5  
				
				
	    Fom;		
		
	showWindow zzyMaxMinXYZBoundaryBoxUI;
		

}




global proc zzyCreateBoundaryBOX()
//
//函数描述：
//         创建物体活动边界范围的BOX;
//
{
	int $iObjectState=`radioButtonGrp -q -sl ObjectState`;
	float $fStartTime;
	float $fEndTime;
	float $afCoordinate[];

	string $asSelectObject[]=`ls -sl`;
	if(size($asSelectObject)==0)
	{
		error "请选择物体";
	}

	string $sSelectObject;
	string $asObjectTemp[];
	
	if(`objectType -isa "shape" $asSelectObject[0]`)
	{
		clear $afCoordinate;
		clear $asObjectTemp;
		$asObjectTemp=`listRelatives -parent $asSelectObject[0]`;
		$afCoordinate=`xform -q -boundingBox $asObjectTemp[0]`;
	}
	else 
	{
		clear $afCoordinate;
		$afCoordinate=`xform -q -boundingBox $asSelectObject[0]`;

	}
	float $fMinX=$afCoordinate[0];
	float $fMinY=$afCoordinate[1];
	float $fMinZ=$afCoordinate[2];

	float $fMaxX=$afCoordinate[3];
	float $fMaxY=$afCoordinate[4];
	float $fMaxZ=$afCoordinate[5];

	
	
        
	if($iObjectState==1)//静止物体
	{
		for($sSelectObject in $asSelectObject)
		{       
		        if(`objectType -isa "shape" $sSelectObject`)
			{
				clear $asObjectTemp;
				$asObjectTemp=`listRelatives -parent $sSelectObject`;
				$sSelectObject=$asObjectTemp[0];
			}
			if(`getAttr ($sSelectObject+".visibility")`)//排除隐藏节点；
			{
				clear $afCoordinate;
				$afCoordinate=`xform -q -boundingBox $sSelectObject`;
				if($afCoordinate[0]<$fMinX)
				{
					$fMinX=$afCoordinate[0];
				}
				if($afCoordinate[1]<$fMinY)
				{
					$fMinY=$afCoordinate[1];
				}
				if($afCoordinate[2]<$fMinZ)
				{
					$fMinZ=$afCoordinate[2];
				}
				if($afCoordinate[3]>$fMaxX)
				{
					$fMaxX=$afCoordinate[3];
				}
				if($afCoordinate[4]>$fMaxY)
				{
					$fMaxY=$afCoordinate[4];
				}
				if($afCoordinate[5]>$fMaxZ)
				{
					$fMaxZ=$afCoordinate[5];
				}
			}
		}


	}
        if($iObjectState==2)//活动物体
	{
		int $iTime=`radioButtonGrp -q -sl ObjectActivityTime`;  
		if($iTime==2)                                               //timeSlider
		{
			$fStartTime=`playbackOptions -q -minTime`;
			$fEndTime  =`playbackOptions -q -maxTime`;
		}
		else                                                     //time:start  end
		{
			$fStartTime=`textFieldGrp -q -text StartTime`;
			$fEndTime  =`textFieldGrp -q -text EndTime`;
		}
		for($fStartTime;$fStartTime<=$fEndTime;$fStartTime++)
		{
			currentTime -edit $fStartTime;
	
			for($sSelectObject in $asSelectObject)
			{       clear $afCoordinate;
				
				if(`objectType -isa "shape" $sSelectObject`)
				{
					clear $asObjectTemp;
					$asObjectTemp=`listRelatives -parent $sSelectObject`;
					$sSelectObject=$asObjectTemp[0];
				}
				if(`getAttr ($sSelectObject+".visibility")`)//排除隐藏节点；
				{
					clear $afCoordinate;
					$afCoordinate=`xform -q -boundingBox $sSelectObject`;
					if($afCoordinate[0]<$fMinX)
					{
						$fMinX=$afCoordinate[0];
					}
					if($afCoordinate[1]<$fMinY)
					{
						$fMinY=$afCoordinate[1];
					}
					if($afCoordinate[2]<$fMinZ)
					{
						$fMinZ=$afCoordinate[2];
					}
					if($afCoordinate[3]>$fMaxX)
					{
						$fMaxX=$afCoordinate[3];
					}
					if($afCoordinate[4]>$fMaxY)
					{
						$fMaxY=$afCoordinate[4];
					}
					if($afCoordinate[5]>$fMaxZ)
					{
						$fMaxZ=$afCoordinate[5];
					}
				}
                        }
		}
		
	}

	float $fBoxCenterX=($fMinX+$fMaxX)/2;
	float $fBoxCenterY=($fMinY+$fMaxY)/2;
	float $fBoxCenterZ=($fMinZ+$fMaxZ)/2;

	float $fWidthX     =abs($fMaxX-$fMinX);
	float $fBoxHeightY =abs($fMaxY-$fMinY);
	float $fBoxDepthZ  =abs($fMaxZ-$fMinZ);

	string $asBoundaryBox[]=`polyCube -ch on -o on -w $fWidthX -h $fBoxHeightY -d $fBoxDepthZ -cuv 4 -n BoundaryBOX`;
	
	move $fBoxCenterX $fBoxCenterY $fBoxCenterZ;
	      

}