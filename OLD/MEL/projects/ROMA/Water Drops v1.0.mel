/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WATER DROPS 1.0                                                                                         //
// By Mariano Antico                                                                                       //
// Barraca Post                                                                                            //
// www.barraca.com.ar                                                                                      //
// www.marianoantico.blogspot.com                                                                          //
// Last Updated: June 14, 2011.                                                                            //
// All Rights Reserved .                                                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

// INTERFAZ

if (`window -ex Drops`) {
  deleteUI -window Drops;
}
if (`window -ex GotasFijasOk`) {
    deleteUI -window GotasFijasOk;
}
window -s 0 -t "Water Drops 1.0 by Mariano Antico" /*-minimizeButton false  -maximizeButton false*/ Drops;
	columnLayout -adjustableColumn true;
    menuBarLayout menuWater;
        menu -l "File" -en true m1;
        menuItem -l "Reset values" -en true -c "resetValues()";
        menu -l "Window" -en true m2;
        menuItem -l "Expression Editor" -en true -c "ExpressionEditor;";
        menuItem -l "Dynamic Relationships" -en true -c "DynamicRelationshipEditor;";
        menu -l "Help" -en true m3;
        menuItem -l "About" -en true -c "aboutHelp()";
        separator;
	setParent..;

//SEED SECTION

//    rowColumnLayout -numberOfColumns 1 -columnWidth 1 245;
        text -font "boldLabelFont" -l "CREATE SEED EXPRESSION:";
        separator -style "none" -h 2;
    rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;       
        text -font "plainLabelFont" -l "SEED:"; textField -font "plainLabelFont" -tx "12345" -ec "updateSeed()" seedTF;
        separator -style "none" -h 2;separator -style "none" -h 2;       
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80;    
        button -l "Create Seed" -c "updateSeed()"; button -l "Random Seed" -c "randomSeed()"; button -l "Delete Seed" -c "deleteSeed()";
        separator -style "none" -h 2;separator -style "none" -h 2;separator -style "none" -h 2;           
    setParent ..;        

//    rowColumnLayout -numberOfColumns 1;       
        separator;
        text -font "boldLabelFont" -l "CREATE WATER DROPS:";
        separator -style "none" -h 2;
        separator;

//DRIVER WATER DROPS SECTION

        separator -style "none" -h 5;
        text -font "boldLabelFont" -l "CREATE DRIVER WATER DROPS:";
        separator -style "none" -h 5;
    rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;
        text -font "plainLabelFont" -l "NUMBER OF DROPS:"; textField -font "plainLabelFont" -tx "10" count2TF;
        text -font "plainLabelFont" -l "PARTICLES RATE:"; textField -font "plainLabelFont" -tx "250" -ec "updateParticleRate2()" frameRate2TF;
        text -font "plainLabelFont" -l "INITIAL STATE FRAME:"; textField -font "plainLabelFont" -tx "20" -ec "updateFrameEnd2()" frameEnd2TF;
        text -font "plainLabelFont" -l "RADIUS:"; textField -font "plainLabelFont" -tx "0.200" -ec "updateRadius2()" radius2TF;
        text -font "plainLabelFont" -l "RANDOM RADIUS:"; textField -font "plainLabelFont" -tx "0.250" -ec "updateRandomRadius2()" randomRadius2TF;
    setParent ..;
    
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 120 -columnWidth 2 60 -columnWidth 3 60;    
        text -font "plainLabelFont" -l "GOAL U:"; textField -font "plainLabelFont" -tx "0" goalU1TF;  textField -font "plainLabelFont" -tx "1" goalU2TF;
        text -font "plainLabelFont" -l "GOAL V:"; textField -font "plainLabelFont" -tx "0" goalV1TF;  textField -font "plainLabelFont" -tx "1" goalV2TF;
        text -font "plainLabelFont" -l "RANDOM VELOCITY:"; textField -font "plainLabelFont" -tx "1" velocity1TF;  textField -font "plainLabelFont" -tx "2" velocity2TF;
        text -font "plainLabelFont" -l "START OFFSET:"; textField -font "plainLabelFont" -tx "0" ageOffset1TF;  textField -font "plainLabelFont" -tx "12" ageOffset2TF;

    setParent ..; 
    
    rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;        
        text -font "plainLabelFont" -l "# OF RANDOM MOVES:"; textField -font "plainLabelFont" -tx "6" movesTF;
        separator -style "none" -h 3;separator -style "none" -h 3;        
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80;
        button -l "Create Driver" -c "createDrops()"; button -l "Select Driver" -c "selectDriver()"; button -l "Driver Visibility" -c "toogleVisibleDriver()";
    setParent ..; 

//WATER SWEAT SECTION  

//    rowColumnLayout -numberOfColumns 1;
        separator;   
        separator -style "none" -h 5;
        text -font "boldLabelFont" -l "CREATE SWEAT:";

   rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;
        separator -style "none" -h 5;separator -style "none" -h 5;
        text -font "plainLabelFont" -l "RADIUS:"; textField -font "plainLabelFont" -tx "0.100" -ec "updateRadius()" radiusTF;
        text -font "plainLabelFont" -l "RANDOM RADIUS:"; textField -font "plainLabelFont" -tx "0.250" -ec "updateRandomRadius()" randomRadiusTF;
        text -font "plainLabelFont" -l "PARTICLES RATE:"; textField -font "plainLabelFont" -tx "250" -ec "updateParticleRate()" frameRateTF;
        text -font "plainLabelFont" -l "INITIAL STATE FRAME:"; textField -font "plainLabelFont" -tx "100" -ec "updateFrameEnd()" frameEndTF;
        separator -style "none" -h 5;separator -style "none" -h 5;
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80;
        button -l "Create Sweat" -c "createParts()"; button -l "Select Sweat" -c "selectSweat()"; button -l "Sweat Visibility" -c "toogleVisibleSweat()";
    setParent ..; 

//WATER DROPS SECTION  

//    rowColumnLayout -numberOfColumns 1;
        separator;   
        separator -style "none" -h 5;
        text -font "boldLabelFont" -l "CREATE WATER DROPS:";

   rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;
        separator -style "none" -h 5;separator -style "none" -h 5;
        text -font "plainLabelFont" -l "RADIUS:"; textField -font "plainLabelFont" -tx "0.250" -ec "updateRadius3()" radius3TF;
        text -font "plainLabelFont" -l "RANDOM RADIUS:"; textField -font "plainLabelFont" -tx "0.060" -ec "updateRandomRadius3()" randomRadius3TF;
        text -font "plainLabelFont" -l "PARTICLES RATE:"; textField -font "plainLabelFont" -tx "100" -ec "updateParticleRate3()" frameRate3TF;
        text -font "plainLabelFont" -l "INITIAL STATE FRAME:"; textField -font "plainLabelFont" -tx "3" -ec "updateFrameEnd3()" frameEnd3TF;
        separator -style "none" -h 5;separator -style "none" -h 5;
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80;
        button -l "Create Drops" -c "createWater()"; button -l "Select Drops" -c "selectWater()"; button -l "Drops Visibility" -c "toogleVisibleWater()";
    setParent ..; 

//WATER TRAILS SECTION  

//    rowColumnLayout -numberOfColumns 1;
        separator;   
        separator -style "none" -h 5;
        text -font "boldLabelFont" -l "CREATE WATER TRAILS:";

   rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;
        separator -style "none" -h 5;separator -style "none" -h 5;
        text -font "plainLabelFont" -l "RADIUS:"; textField -font "plainLabelFont" -tx "0.060" -ec "updateRadius4()" radius4TF;
        text -font "plainLabelFont" -l "RANDOM RADIUS:"; textField -font "plainLabelFont" -tx "0.850" -ec "updateRandomRadius4()" randomRadius4TF;
        text -font "plainLabelFont" -l "PARTICLES RATE:"; textField -font "plainLabelFont" -tx "10" -ec "updateParticleRate4()" frameRate4TF;
        separator -style "none" -h 5;separator -style "none" -h 5;
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80;
        button -l "Create Trails" -c "createTrails()"; button -l "Select Trails" -c "selectTrails()"; button -l "Trails Visibility" -c "toogleVisibleTrails()";
    setParent ..;
    
//TOOLS

   rowColumnLayout -numberOfColumns 2 -columnWidth 1 120 -columnWidth 2 120;
        separator -style "none" -h 2;separator -style "none" -h 2;
        separator; separator;
        separator -style "none" -h 2;separator -style "none" -h 2;
        button -l "OBJECT DROPS" -c "createObjectWater()"; button -l "OBJECT TRAILS" -c "createObjectTrails()";
        button -l "REFRESH VALUES" -c "refreshValues()"; button -l "SET INITIAL STATE" -c "initialState()"; 
    setParent ..; 
    rowColumnLayout -numberOfColumns 3 -columnWidth 1 80 -columnWidth 2 80 -columnWidth 3 80; 
        button -l "COLLIDE ON" -c "collideOn()"; button -l "COLLIDE OFF" -c "collideOff()"; button -l "CACHE" -c "cacheParts()";
    setParent ..;          
       
showWindow;



//PROCEDIMIENTOS

cycleCheck -e off;

// Select Driver

global proc selectDriver(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "Driver nParticles doesn`t exist.";
    } else {
        int $i = 0;
        select -cl;
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "driver" $obj`){
                select -add $obj;
            }
        }
        pickWalk -d up;
    }
}

// Select Sweat

global proc selectSweat(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "Sweat nParticles doesn`t exist.";
    } else {
        int $i = 0;
        select -cl;
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "sweat" $obj`){
                select -add $obj;
            }
        }
        pickWalk -d up;
    }
}

// Select Water Drops

global proc selectWater(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "Water Drops nParticles doesn`t exist.";
    } else {
        int $i = 0;
        select -cl;
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "water" $obj`){
                select -add $obj;
            }
        }
        pickWalk -d up;
    }
}

// Select Trails

global proc selectTrails(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "Trails nParticles doesn`t exist.";
    } else {
        int $i = 0;
        select -cl;
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "trail" $obj`){
                select -add $obj;
            }
        }
        pickWalk -d up;
    }
}


// Toogle visibility sweat

global proc toogleVisibleSweat(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "sweat" $obj`){
                select -r $obj;
                string $objnPart[] = `pickWalk -d up`;
                if (`getAttr ($objnPart[0] + ".visibility")`){
                    setAttr ($objnPart[0] + ".visibility") 0;
                } else {
                    setAttr ($objnPart[0] + ".visibility") 1;
                }                    
            }
        }
    }
}

// Toogle visibility driver

global proc toogleVisibleDriver(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "driver" $obj`){
                select -r $obj;
                string $objnPart[] = `pickWalk -d up`;
                if (`getAttr ($objnPart[0] + ".visibility")`){
                    setAttr ($objnPart[0] + ".visibility") 0;
                } else {
                    setAttr ($objnPart[0] + ".visibility") 1;
                }                    
            }
        }
    }
}

// Toogle visibility water drop

global proc toogleVisibleWater(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "water" $obj`){
                select -r $obj;
                string $objnPart[] = `pickWalk -d up`;
                if (`getAttr ($objnPart[0] + ".visibility")`){
                    setAttr ($objnPart[0] + ".visibility") 0;
                } else {
                    setAttr ($objnPart[0] + ".visibility") 1;
                }                    
            }
        }
    }
}

// Toogle visibility trails

global proc toogleVisibleTrails(){
    string $selObjShort[] = `ls -type "nParticle"`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObjShort){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" && `attributeExists "trail" $obj`){
                select -r $obj;
                string $objnPart[] = `pickWalk -d up`;
                if (`getAttr ($objnPart[0] + ".visibility")`){
                    setAttr ($objnPart[0] + ".visibility") 0;
                } else {
                    setAttr ($objnPart[0] + ".visibility") 1;
                }                    
            }
        }
    }
}

// Cache

global proc cacheParts(){
    nClothCacheOpt;
}

global proc cacheParts2(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle"){
                select -r $obj;
                doCreateNclothCache 4 { "2", "1", "10", "OneFilePerFrame", "1", "","0","","0", "add", "0", "1", "1","0","1" } ;
            }
        }
    }
}

// Set initial state

global proc initialState(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle"){
                select -r $obj;
                setNClothStartState;
                performSetNClothStartState 1;
            }
        }
    }
}

// Collide ON

global proc collideOn(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle"){
                setAttr ($obj + ".collide") 1;
            }
        }
    }
}

// Collide OFF

global proc collideOff(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select nParticles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle"){
                setAttr ($obj + ".collide") 0;
            }
        }
    }
}

// Group

global proc grupo(string $object){
    if (`objExists Water_Drops_Dynamics_GRP`) {
        string $parientes[] = `listRelatives -parent $object`;
        if (size($parientes) == 0){        
            parent $object Water_Drops_Dynamics_GRP ;            
        } else {       
            for ($each in $parientes){
                if (`gmatch $each "*Water_Drops_Dynamics_GRP*"`){
                } else {
                    parent $object Water_Drops_Dynamics_GRP ;                
                }
            }
        }
    } else {
        string $Grupo = `CreateEmptyGroup`;
        string $Grupo = `rename Water_Drops_Dynamics_GRP`;
        parent $object Water_Drops_Dynamics_GRP ;
    }
}

// create Seed

global proc createSeed(){
    float $seedNum = `textField -q -tx seedTF`;
    string $seedExp = "if (frame == 0){\n";
        $seedExp += "    seed ";
        $seedExp += $seedNum;
        $seedExp += ";\n";
        $seedExp += "}\n";
    string $seedExpression = `expression -s $seedExp -n "Seed_Exp"`;          
}

// delete Seed

global proc deleteSeed(){
    if (`objExists Seed_Exp`){
        delete Seed_Exp;
    }
}

// update Seed

global proc updateSeed(){
    if (`objExists Seed_Exp`){
        deleteSeed();
        createSeed(); 
    } else {
        createSeed(); 
    }   
}

// random Seed

global proc randomSeed(){
    if (`objExists Seed_Exp`){
        deleteSeed();
        int $seedRandom = rand(99999);
        string $seedExp = "if (frame == 0){\n";
            $seedExp += "    seed ";
            $seedExp += $seedRandom;
            $seedExp += ";\n";
            $seedExp += "}\n";
        string $seedExpression = `expression -s $seedExp -n "Seed_Exp"`;  
        textField -e -tx $seedRandom seedTF;
    } else {
        int $seedRandom = rand(99999);
        string $seedExp = "if (frame == 0){\n";
            $seedExp += "    seed ";
            $seedExp += $seedRandom;
            $seedExp += ";\n";
            $seedExp += "}\n";
        string $seedExpression = `expression -s $seedExp -n "Seed_Exp"`;  
        textField -e -tx $seedRandom seedTF;
    }   
}

// reset values menu

global proc resetValues(){

    textField -e -tx "10" count2TF;
    textField -e -tx "250" frameRate2TF;
    textField -e -tx "20" frameEnd2TF;
    textField -e -tx "0.200" radius2TF;
    textField -e -tx "0.250" randomRadius2TF;

    textField -e -tx "0" goalU1TF;textField -e -tx "1" goalU2TF;
    textField -e -tx "0" goalV1TF;textField -e -tx "1" goalV2TF;
    textField -e -tx "1" velocity1TF;textField -e -tx "2" velocity2TF;
    textField -e -tx "0" ageOffset1TF;textField -e -tx "12" ageOffset2TF;
    textField -e -tx "6" movesTF;
 
    textField -e -tx "250" frameRateTF;
    textField -e -tx "20" frameEndTF;
    textField -e -tx "0.100" radiusTF;
    textField -e -tx "0.250" randomRadiusTF;
    
    textField -e -tx "100" frameRate3TF;
    textField -e -tx "3" frameEnd3TF;
    textField -e -tx "0.250" radius3TF;
    textField -e -tx "0.060" randomRadius3TF;
    
    textField -e -tx "10" frameRate4TF;
    textField -e -tx "0.060" radius4TF;
    textField -e -tx "0.850" randomRadius4TF;       
    
}

// about menu

global proc aboutHelp(){
    showHelp -absolute "http://www.marianoantico.blogspot.com/";
}

// refresh values

global proc refreshValues(){
    float $frameEnd = `playbackOptions -q -max`;
    textField -e -tx $frameEnd frameEndTF;
    textField -e -tx $frameEnd frameEnd2TF;
    string $Gotas[] = `ls -dag Water_Drops_Dynamics_GRP`;
    if (size($Gotas) == 0 ){
        warning "select an Emitter or Particles.";
    } else {   
        for ($obj in $Gotas){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "pointEmitter" && `attributeExists "sweat" $obj`){
                float $frameRate = `getAttr ($obj + ".rate")`;
                textField -e -tx $frameRate frameRateTF;
            } else if ($nodeType == "nParticle" && `attributeExists "sweat" $obj`){
                float $randRadiusUno = `getAttr ($obj + ".radiusScaleRandomize")`;
                textField -e -tx $randRadiusUno randomRadiusTF;
                float $radiusUno = `getAttr ($obj + ".radius")`;
                textField -e -tx $radiusUno radiusTF;
            } else if ($nodeType == "pointEmitter" && `attributeExists "driver" $obj`){
                float $frameRate = `getAttr ($obj + ".rate")`;
                textField -e -tx $frameRate frameRate2TF;
            } else if ($nodeType == "nParticle" && `attributeExists "driver" $obj`){
                float $randRadiusUno = `getAttr ($obj + ".radiusScaleRandomize")`;
                textField -e -tx $randRadiusUno randomRadius2TF;
                float $radiusUno = `getAttr ($obj + ".radius")`;
                textField -e -tx $radiusUno radius2TF;
            } 
        }
    }
}
 
// update Radius Sweat

global proc updateRadius(){
    string $sel[] = `ls -sl -dag`;
    float $radiusUno = `textField -q -tx radiusTF`; 
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "sweat" $obj`){
            setAttr ($obj + ".radius") $radiusUno;
        }
    }
}

// update Radius driver

global proc updateRadius2(){
    string $sel[] = `ls -sl -dag`;
    float $radiusUno = `textField -q -tx radius2TF`; 
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "driver" $obj`){
            setAttr ($obj + ".radius") $radiusUno;
        }
    }
}

// update Radius water

global proc updateRadius3(){
    string $sel[] = `ls -sl -dag`;
    float $radiusUno = `textField -q -tx radius3TF`; 
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "water" $obj`){
            setAttr ($obj + ".radius") $radiusUno;
        }
    }
}

// update Radius trails

global proc updateRadius4(){
    string $sel[] = `ls -sl -dag`;
    float $radiusUno = `textField -q -tx radius4TF`; 
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "trail" $obj`){
            setAttr ($obj + ".radius") $radiusUno;
        }
    }
}


// update random Radius Sweat

global proc updateRandomRadius(){
    string $sel[] = `ls -sl -dag`;
    float $randRadiusUno = `textField -q -tx randomRadiusTF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "sweat" $obj`){
            setAttr ($obj + ".radiusScaleRandomize") $randRadiusUno;
        }                                 
    }   
}

// update random Radius driver

global proc updateRandomRadius2(){
    string $sel[] = `ls -sl -dag`;
    float $randRadiusUno = `textField -q -tx randomRadius2TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "driver" $obj`){
            setAttr ($obj + ".radiusScaleRandomize") $randRadiusUno;
        }                                 
    }   
}

// update random Radius water

global proc updateRandomRadius3(){
    string $sel[] = `ls -sl -dag`;
    float $randRadiusUno = `textField -q -tx randomRadius3TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "water" $obj`){
            setAttr ($obj + ".radiusScaleRandomize") $randRadiusUno;
        }                                 
    }   
}

// update random Radius trails

global proc updateRandomRadius4(){
    string $sel[] = `ls -sl -dag`;
    float $randRadiusUno = `textField -q -tx randomRadius4TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "nParticle" && `attributeExists "trail" $obj`){
            setAttr ($obj + ".radiusScaleRandomize") $randRadiusUno;
        }                                 
    }   
}

// update Particle Rate Sweat

global proc updateParticleRate(){
    string $sel[] = `ls -sl -dag`;
    float $frameRate = `textField -q -tx frameRateTF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "pointEmitter" && `attributeExists "sweat" $obj`){
            setAttr ($obj + ".rate") $frameRate;
        }                                 
    }   
}

// update Particle Rate Driver

global proc updateParticleRate2(){
    string $sel[] = `ls -sl -dag`;
    float $frameRate = `textField -q -tx frameRate2TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "pointEmitter" && `attributeExists "driver" $obj`){
            setAttr ($obj + ".rate") $frameRate;
        }                                 
    }   
}

// update Particle Rate water

global proc updateParticleRate3(){
    string $sel[] = `ls -sl -dag`;
    float $frameRate = `textField -q -tx frameRate3TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "pointEmitter" && `attributeExists "water" $obj`){
            setAttr ($obj + ".rate") $frameRate;
        }                                 
    }   
}

// update Particle Rate trails

global proc updateParticleRate4(){
    string $sel[] = `ls -sl -dag`;
    float $frameRate = `textField -q -tx frameRate4TF`;
    for ($obj in $sel){
        string $nodeType = `nodeType $obj`;
        if ($nodeType == "pointEmitter" && `attributeExists "trail" $obj`){
            setAttr ($obj + ".rate") $frameRate;
        }                                 
    }   
}

// update Frame End Sweat

global proc updateFrameEnd(){
    int $frameEndGotasFijas = `textField -q -tx frameEndTF`;
    playbackOptions -aet $frameEndGotasFijas -max $frameEndGotasFijas;  
}

// update Frame End Driver

global proc updateFrameEnd2(){
    int $frameEndGotasFijas = `textField -q -tx frameEnd2TF`;
    playbackOptions -aet $frameEndGotasFijas -max $frameEndGotasFijas;  
}

// update Frame End water

global proc updateFrameEnd3(){
    int $frameEndGotasFijas = `textField -q -tx frameEnd3TF`;
    playbackOptions -aet $frameEndGotasFijas -max $frameEndGotasFijas;  
}

//Apply gotas Fijas

global proc gotasFijasApply(string $nParticles, string $emitter, string $object){
    if (`window -ex GotasFijasOk`) {
      deleteUI -window GotasFijasOk;
    }
    if (`objExists Gotas_Fijas_Exp`){
       delete Gotas_Fijas_Exp;
    }
    select -r $nParticles;
    string $gotasFijasPartsRename = `rename ($object + "_Sweat_nParticles")`;
    select -r $emitter;
    string $gotasFijasEmitter[] = `ls -sl`;
    string $gotasFijasEmitterRename = `rename ($object + "_Sweat_Emitter")`;
    emitter -e -r 0 $gotasFijasEmitterRename;
    select -r $gotasFijasPartsRename;
    setNClothStartState;
    performSetNClothStartState 1;
    currentTime -edit 0;
    select -r $object;
}

//Cancel gotas Fijas

global proc gotasFijasCancel(){
    if (`window -ex GotasFijasOk`) {
        deleteUI -window GotasFijasOk;
    }
    currentTime -edit 0;
}

//Create Sweat Particles

global proc createParts(){
    string $fileNew = "";    
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select an object.";
    } else {
        if (`objExists Gotas_Fijas_Exp`){
            delete Gotas_Fijas_Exp;
        }
        if (`objExists Driver_Gotas_Exp`){
            delete Driver_Gotas_Exp;
        }
        if (`objExists Trails_Exp`){
            delete Trails_Exp;
        }
        if (`objExists Water_Drops_Exp`){
            delete Water_Drops_Exp;
        }        
        select -r $selObjShort[0];
        grupo($selObjShort[0]);
        float $radiusUno = `textField -q -tx radiusTF`;
        float $randRadiusUno = `textField -q -tx randomRadiusTF`;
        float $frameRate = `textField -q -tx frameRateTF`;
        int $frameEndGotasFijas = `textField -q -tx frameEndTF`;
        NParticleMenu MayaWindow|mainNParticleMenu;       
        updateNParticleStyleMenu "Water";
        string $emisorUno[] = `emitter -type surf -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n ($selObjShort[0] + "_Sweat_Creation_Emitter")`;
        setAttr ($emisorUno[1] + ".enableTextureRate") 1;
        addAttr -h 0 -ln "sweat" -at double $emisorUno[1];
        string $particulasUno[] = `nParticle -n ($selObjShort[0] + "_Sweat_Creation_nParticles")`;
        addAttr -h 0 -ln "sweat" -at double $particulasUno[1];     
        connectDynamic -em $emisorUno[0] $particulasUno[0];
        grupo($particulasUno[0]);

        string $nucleus[] = `listConnections -d 1 -s 1 ($particulasUno[0] + ".currentState")`;

        setAttr ($nucleus[0] + ".gravity") 0;
        event -name "Die_Event" -die 1 -count 0 $particulasUno[0];
        setAttr ($particulasUno[0] + ".radiusScaleSPH") 0;
        setAttr ($particulasUno[0] + ".radius") $radiusUno;
        setAttr ($particulasUno[0] + ".radiusScaleInput") 5;
        setAttr ($particulasUno[0] + ".radiusScaleRandomize") $randRadiusUno;

        string $fileNew = `shadingNode -asTexture file -n ($selObjShort[0] + "_Sweat_Texture_Rate_File")`;
        string $place2dNew = `shadingNode -asUtility place2dTexture`;
        connectAttr -f ($place2dNew + ".coverage") ($fileNew + ".coverage");
        connectAttr -f ($place2dNew + ".translateFrame") ($fileNew + ".translateFrame");
        connectAttr -f ($place2dNew + ".rotateFrame") ($fileNew + ".rotateFrame");
        connectAttr -f ($place2dNew + ".mirrorU") ($fileNew + ".mirrorU");
        connectAttr -f ($place2dNew + ".mirrorV") ($fileNew + ".mirrorV");
        connectAttr -f ($place2dNew + ".stagger") ($fileNew + ".stagger");
        connectAttr -f ($place2dNew + ".wrapU") ($fileNew + ".wrapU");
        connectAttr -f ($place2dNew + ".wrapV") ($fileNew + ".wrapV");
        connectAttr -f ($place2dNew + ".repeatUV") ($fileNew + ".repeatUV");
        connectAttr -f ($place2dNew + ".offset") ($fileNew + ".offset");
        connectAttr -f ($place2dNew + ".rotateUV") ($fileNew + ".rotateUV");
        connectAttr -f ($place2dNew + ".noiseUV") ($fileNew + ".noiseUV");
        connectAttr -f ($place2dNew + ".vertexUvOne") ($fileNew + ".vertexUvOne");
        connectAttr -f ($place2dNew + ".vertexUvTwo") ($fileNew + ".vertexUvTwo");
        connectAttr -f ($place2dNew + ".vertexUvThree") ($fileNew + ".vertexUvThree");
        connectAttr -f ($place2dNew + ".vertexCameraOne") ($fileNew + ".vertexCameraOne");
        connectAttr -f ($place2dNew + ".outUV") ($fileNew + ".uv");
        connectAttr -f ($place2dNew + ".outUvFilterSize") ($fileNew + ".uvFilterSize");
        string $DirName = `workspace -q -fullName`;
        string $openFileName[] = `fileDialog2  -caption "Please select a texture rate map." -fileMode 1 -startingDirectory $DirName -fileFilter "*.*"`;
        setAttr -type "string" ($fileNew + ".fileTextureName") (substituteAllString($openFileName[0], ($DirName + "/"), ""));
        connectAttr -f ($fileNew + ".outColor") ($emisorUno[1] + ".textureRate");

        currentTime -edit 0;
        if ($frameEndGotasFijas > (`playbackOptions -q -max`)){
            playbackOptions -aet $frameEndGotasFijas -max $frameEndGotasFijas;
        }        

        string $gotasFijasVentana = "if (frame == ";
            $gotasFijasVentana += $frameEndGotasFijas;
            $gotasFijasVentana += "){\n";
            $gotasFijasVentana += "    play -state off;\n";
            $gotasFijasVentana += ("    select " + $particulasUno[0] + ";\n");
            $gotasFijasVentana += "    if (`window -ex GotasFijasOk`) {\n";
            $gotasFijasVentana += "        deleteUI -window GotasFijasOk;\n";
            $gotasFijasVentana += "    }\n";
            $gotasFijasVentana += "    window -s 0 -t \"SWEAT\" -w 350 -h 250 -minimizeButton false  -maximizeButton false GotasFijasOk;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "            text -font \"boldLabelFont\" -l \"APPLY INITIAL STATE?\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 5 -columnWidth 1 10 -columnWidth 2 80 -columnWidth 3 10 -columnWidth 4 80 -columnWidth 5 10;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "            global proc Aplicar(){\n";
            $gotasFijasVentana += ("                gotasFijasApply(\"" + $particulasUno[0] + "\",\"" + $emisorUno[1] + "\",\"" + $selObjShort[0] + "\");\n");
            $gotasFijasVentana += "            }\n";
            $gotasFijasVentana += "            button -l \"APPLY\" -c \"Aplicar()\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";            
            $gotasFijasVentana += "            button -l \"CANCEL\" -c\"gotasFijasCancel()\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "    showWindow;\n";
            $gotasFijasVentana += "}\n";

        string $play = `expression -s $gotasFijasVentana -n "Gotas_Fijas_Exp"`;
        play -forward true;
    }
}

//Apply Driver gotas 

global proc driverGotasApply(string $nParticles, string $emitter, string $object){
    if (`window -ex GotasFijasOk`) {
      deleteUI -window GotasFijasOk;
    }
    if (`objExists Driver_Gotas_Exp`){
       delete Driver_Gotas_Exp;
    }
    select -r $nParticles;
    string $DriverPartsRename = `rename ($object + "_Driver_Drops_nParticles")`;
    select -r $emitter;
    string $DriverEmitterRename = `rename ($object + "_Driver_Drops_Emitter")`;
    emitter -e -r 0 $DriverEmitterRename;
    select -r $DriverPartsRename;
    string $PartisShape[] = `ls -dag $DriverPartsRename`;
    setNClothStartState;
    performSetNClothStartState 1;
    currentTime -edit 0;
    setAttr ($DriverPartsRename + ".collide") 1;
    string $GotasCaenMoveExpression = "";    
    int $moves = `textField -q -tx movesTF`;
    for ($i=0; $i< ($moves + 1);$i++){
        int $randExpressions = rand(2.99);           
        int $j = $i + 1;
        float $velocity1 = `textField -q -tx velocity1TF`;
        float $velocity2 = `textField -q -tx velocity2TF`;
        float $randFreno = rand(($velocity1*.005),($velocity2*.005));
        float $randXMove = rand(0.0002,0.0009);
        float $randCaida = rand(0.0025,0.0085);
        float $randTimes = rand(0.0055,0.0095);
        float $randMultiply = rand(8,12);
        float $randNoiseX = rand(.12,.35);

        if ($randExpressions == 0){    

            $GotasCaenMoveExpression += ("if (" + $PartisShape[1] + ".randMov > " + $i + " && " +  $PartisShape[1] + ".randMov < " + $j + "){\n");
            $GotasCaenMoveExpression += ("    if (frame > " + $PartisShape[1] + ".startOffset){\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalV -= abs(sin(time*(noise(time/" + $PartisShape[1] + ".randSin)*" + $randMultiply + "))*" + $randFreno +");\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalU += (sin(time*(gauss(time/" + $PartisShape[1] + ".randSin)*" + $randNoiseX + "))*" + $randXMove + ");\n");
            $GotasCaenMoveExpression += ("        if (" + $PartisShape[1] + ".goalV < " + $randCaida + "){\n");
           	$GotasCaenMoveExpression +=	("            if (" + $PartisShape[1] + ".goalPP > 0.06){\n");
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] +	".goalPP -= 0.05;\n");
            $GotasCaenMoveExpression += "            } else {\n";
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".goalPP = 0.1;\n");
//            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".lifespanPP = 0;\n");
            $GotasCaenMoveExpression += "            }\n";
            $GotasCaenMoveExpression += "        }\n";
            $GotasCaenMoveExpression += "    }\n";
            $GotasCaenMoveExpression += "}\n";
        
        } else if ($randExpressions == 1){    

            $GotasCaenMoveExpression += ("if (" + $PartisShape[1] + ".randMov > " + $i + " && " +  $PartisShape[1] + ".randMov < " + $j + "){\n");
            $GotasCaenMoveExpression += ("    if (frame > " + $PartisShape[1] + ".startOffset){\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalV -= abs(sin(time/" + $PartisShape[1] + ".randSin)*" + $randFreno +");\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalU += (noise(time)/" + $PartisShape[1] + ".randSin)*" + $randXMove + ";\n");
            $GotasCaenMoveExpression += ("        if (" + $PartisShape[1] + ".goalV < " + $randCaida + "){\n");
           	$GotasCaenMoveExpression +=	("            if (" + $PartisShape[1] + ".goalPP > 0.06){\n");
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] +	".goalPP -= 0.05;\n");
            $GotasCaenMoveExpression += "            } else {\n";
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".goalPP = 0.1;\n");
//            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".lifespanPP = 0;\n");
            $GotasCaenMoveExpression += "            }\n";
            $GotasCaenMoveExpression += "        }\n";
            $GotasCaenMoveExpression += "    }\n";
            $GotasCaenMoveExpression += "}\n";
        
        } else if ($randExpressions == 2){    

            $GotasCaenMoveExpression += ("if (" + $PartisShape[1] + ".randMov > " + $i + " && " +  $PartisShape[1] + ".randMov < " + $j + "){\n");
            $GotasCaenMoveExpression += ("    if (frame > " + $PartisShape[1] + ".startOffset){\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalV -= abs(( sin(time/" + $PartisShape[1] + ".randSin)*cos(sin(time/" + $PartisShape[1] + ".randSin*3.14))/atan(3.14/" + $PartisShape[1] + ".randSin))*" + $randFreno + ");\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalU += (noise(time)/" + $PartisShape[1] + ".randSin*" + ($randFreno*.1) + ");\n");
            $GotasCaenMoveExpression += ("        if (" + $PartisShape[1] + ".goalV < " + $randCaida + "){\n");
           	$GotasCaenMoveExpression +=	("            if (" + $PartisShape[1] + ".goalPP > 0.06){\n");
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] +	".goalPP -= 0.05;\n");
            $GotasCaenMoveExpression += "            } else {\n";
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".goalPP = 0.1;\n");
//            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".lifespanPP = 0;\n");
            $GotasCaenMoveExpression += "            }\n";
            $GotasCaenMoveExpression += "        }\n";
            $GotasCaenMoveExpression += "    }\n";
            $GotasCaenMoveExpression += "}\n";

        } else if ($randExpressions == 3){    

            $GotasCaenMoveExpression += ("if (" + $PartisShape[1] + ".randMov > " + $i + " && " +  $PartisShape[1] + ".randMov < " + $j + "){\n");
            $GotasCaenMoveExpression += ("    if (frame > " + $PartisShape[1] + ".startOffset){\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalV -= abs(sin(time*(noise(time/" + $PartisShape[1] + ".randSin)*" + $randMultiply + "))*" + $randFreno +");\n");
            $GotasCaenMoveExpression += ("        " + $PartisShape[1] + ".goalU += (sin(time*(gauss(time/" + $PartisShape[1] + ".randSin)*" + $randNoiseX + "))*" + $randXMove + ");\n");
            $GotasCaenMoveExpression += ("        if (" + $PartisShape[1] + ".goalV < " + $randCaida + "){\n");
           	$GotasCaenMoveExpression +=	("            if (" + $PartisShape[1] + ".goalPP > 0.06){\n");
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] +	".goalPP -= 0.05;\n");
            $GotasCaenMoveExpression += "            } else {\n";
            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".goalPP = 0.1;\n");
//            $GotasCaenMoveExpression += ("                " + $PartisShape[1] + ".lifespanPP = 0;\n");
            $GotasCaenMoveExpression += "            }\n";
            $GotasCaenMoveExpression += "        }\n";
            $GotasCaenMoveExpression += "    }\n";
            $GotasCaenMoveExpression += "}\n";

        } 
    }
    dynExpression -s $GotasCaenMoveExpression -rbd $PartisShape[1];
}

//Cancel driver gotas

global proc driverGotasCancel(){
    if (`window -ex GotasFijasOk`) {
        deleteUI -window GotasFijasOk;
    }
    currentTime -edit 0;
}

//Create Driver Drops Particles

global proc createDrops(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select a goal object.";
    } else {
        if (`objExists Gotas_Fijas_Exp`){
            delete Gotas_Fijas_Exp;
        }
        if (`objExists Driver_Gotas_Exp`){
            delete Driver_Gotas_Exp;
        }
        if (`objExists Trails_Exp`){
            delete Trails_Exp;
        }
        if (`objExists Water_Drops_Exp`){
            delete Water_Drops_Exp;
        }
        select -r $selObjShort[0];
        grupo($selObjShort[0]);     
        float $radiusUno = `textField -q -tx radius2TF`;
        float $randRadiusUno = `textField -q -tx randomRadius2TF`;
        float $frameRate = `textField -q -tx frameRate2TF`;
        int $maxCount = `textField -q -tx count2TF`;        
        int $frameEndDriverGotas = `textField -q -tx frameEnd2TF`;
        if ($frameEndDriverGotas > (`playbackOptions -q -max`)){
            playbackOptions -aet $frameEndDriverGotas -max $frameEndDriverGotas;
        }
        NParticleMenu MayaWindow|mainNParticleMenu;       
        updateNParticleStyleMenu "Water";
        select -cl;
        string $emisorCaida[] = `emitter -type omni -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n ($selObjShort[0] + "_Driver_Drops_Creation_Emitter")`;
        string $particulasCaida[] = `nParticle -n ($selObjShort[0] + "_Driver_Drops_Creation_nParticles")`;
        addAttr -h 0 -ln "driver" -at double $emisorCaida[0];
        addAttr -h 0 -ln "driver" -at double $particulasCaida[1];        
        connectDynamic -em $emisorCaida[0] $particulasCaida[0];
//        string $gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($selObjShort[0] + "_Driver_Drops_Gravity")`;
//        connectDynamic -f $gravity[0]  $particulasCaida[1];        
//        grupo($gravity[0]);
        grupo($emisorCaida[0]);
        grupo($particulasCaida[0]);
        string $nucleus[] = `listConnections -d 1 -s 1 ($particulasCaida[0] + ".currentState")`;

        setAttr ($nucleus[0] + ".gravity") 0;
        setAttr ($particulasCaida[0] + ".maxCount") $maxCount;
        setAttr ($particulasCaida[0] + ".radiusScaleSPH") 0;
        setAttr ($particulasCaida[0] + ".radius") $radiusUno;
        setAttr ($particulasCaida[0] + ".radiusScaleInput") 5;
        setAttr ($particulasCaida[0] + ".radiusScaleRandomize") $randRadiusUno;
        goal -w 0.5 -utr 0   -g $selObjShort[0]  $particulasCaida[0];
        setAttr ($particulasCaida[0] + ".collide") 1;
        setAttr ($particulasCaida[0] + ".conserve") 1;
        setAttr ($particulasCaida[0] + ".goalSmoothness") 0.001;
        setAttr ($particulasCaida[0] + ".goalWeight[0]") 1;
        setAttr ($particulasCaida[0] + ".lifespanMode") 3;
        setAttr ($particulasCaida[0] + ".collideWidthScale") 0.6;        

        addAttr -ln goalU -dt doubleArray $particulasCaida[1];
        addAttr -ln goalU0 -dt doubleArray $particulasCaida[1];
        addAttr -ln goalV -dt doubleArray $particulasCaida[1];
        addAttr -ln goalV0 -dt doubleArray $particulasCaida[1];
        addAttr -ln "randSin0"  -dt doubleArray  $particulasCaida[1];
        addAttr -ln "randSin"  -dt doubleArray  $particulasCaida[1];
        setAttr -e-keyable true ($particulasCaida[1] + ".randSin");
        addAttr -ln "randMov0"  -dt doubleArray  $particulasCaida[1];
        addAttr -ln "randMov"  -dt doubleArray  $particulasCaida[1];
        setAttr -e-keyable true ($particulasCaida[1] + ".randMov");
        addAttr -ln "startOffset0"  -dt doubleArray  $particulasCaida[1];
        addAttr -ln "startOffset"  -dt doubleArray  $particulasCaida[1];
        setAttr -e-keyable true ($particulasCaida[1] + ".startOffset");
        
        string $GotasCaenCreationExpression = ($particulasCaida[1] + ".goalPP = 1;\n");
            $GotasCaenCreationExpression += ($particulasCaida[1] + ".randSin = rand(" + (`textField -q -tx velocity1TF`) + "," + (`textField -q -tx velocity2TF`) + ");\n");
            $GotasCaenCreationExpression += ($particulasCaida[1] + ".startOffset = rand(" + (`textField -q -tx ageOffset1TF`) + "," + (`textField -q -tx ageOffset2TF`) + ");\n");
            $GotasCaenCreationExpression += ($particulasCaida[1] + ".goalU = rand(" + (`textField -q -tx goalU1TF`) + "," + (`textField -q -tx goalU2TF`) + ");\n");
            $GotasCaenCreationExpression += ($particulasCaida[1] + ".goalV = rand(" + (`textField -q -tx goalV1TF`) + "," + (`textField -q -tx goalV2TF`) + ");\n");
            $GotasCaenCreationExpression += ($particulasCaida[1] + ".randMov = rand(0," + (`textField -q -tx movesTF`) + ".99);\n");

        string $CreationExp = `dynExpression -c -s $GotasCaenCreationExpression`;        

        string $gotasFijasVentana = "if (frame == ";
            $gotasFijasVentana += $frameEndDriverGotas;
            $gotasFijasVentana += "){\n";
            $gotasFijasVentana += "    play -state off;\n";
            $gotasFijasVentana += ("    select " + $particulasCaida[0] + ";\n");
            $gotasFijasVentana += "    if (`window -ex GotasFijasOk`) {\n";
            $gotasFijasVentana += "        deleteUI -window GotasFijasOk;\n";
            $gotasFijasVentana += "    }\n";
            $gotasFijasVentana += "    window -s 0 -t \"DRIVER WATER DROPS\" -w 350 -h 250 -minimizeButton false  -maximizeButton false GotasFijasOk;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "            text -font \"boldLabelFont\" -l \"APPLY INITIAL STATE?\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 5 -columnWidth 1 10 -columnWidth 2 80 -columnWidth 3 10 -columnWidth 4 80 -columnWidth 5 10;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "            global proc Aplicar(){\n";
            $gotasFijasVentana += ("                driverGotasApply(\"" + $particulasCaida[0] + "\",\"" + $emisorCaida[0] + "\",\"" + $selObjShort[0] + "\");\n");
            $gotasFijasVentana += "            }\n";
            $gotasFijasVentana += "            button -l \"APPLY\" -c\"Aplicar()\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";            
            $gotasFijasVentana += "            button -l \"CANCEL\" -c\"driverGotasCancel()\";\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
            $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
            $gotasFijasVentana += "    showWindow;\n";
            $gotasFijasVentana += "}\n";

        string $playDriver = `expression -s $gotasFijasVentana -n "Driver_Gotas_Exp"`;
        play -forward true;
  
        currentTime -edit 0;
        play -forward true;
    }
}

//Apply water drops

global proc waterDropsApply(string $nParticles, string $emitter, string $object){
    if (`window -ex GotasFijasOk`) {
      deleteUI -window GotasFijasOk;
    }
    if (`objExists Water_Drops_Exp`){
       delete Water_Drops_Exp;
    }
    select -r $nParticles;
    string $gotasFijasPartsRename = `rename "Water_Drops_nParticles"`;
    select -r $emitter;
    string $gotasFijasEmitter[] = `ls -sl`;
    string $gotasFijasEmitterRename = `rename "Water_Drops_Emitter"`;
    select -r $gotasFijasPartsRename;
    setNClothStartState;
    performSetNClothStartState 1;
    currentTime -edit 0;
    select -r $object;
}

//Cancel water Drops

global proc waterDropsCancel(){
    if (`window -ex GotasFijasOk`) {
        deleteUI -window GotasFijasOk;
    }
    currentTime -edit 0;
}

//Create Water Drops Particles

global proc createWater(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select Driver Drops Particles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" /*&& `attributeExists "driver" $obj`*/){
                if (`objExists Gotas_Fijas_Exp`){
                    delete Gotas_Fijas_Exp;
                }
                if (`objExists Driver_Gotas_Exp`){
                    delete Driver_Gotas_Exp;
                }
                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
                if (`objExists Water_Drops_Exp`){
                    delete Water_Drops_Exp;
                }
                float $radiusUno = `textField -q -tx radius3TF`;
                float $randRadiusUno = `textField -q -tx randomRadius3TF`;
                float $frameRate = `textField -q -tx frameRate3TF`;
                int $frameEndDriverGotas = `textField -q -tx frameEnd3TF`;
                if ($frameEndDriverGotas > (`playbackOptions -q -max`)){
                    playbackOptions -aet $frameEndDriverGotas -max $frameEndDriverGotas;
                }
                NParticleMenu MayaWindow|mainNParticleMenu;       
                updateNParticleStyleMenu "Water";
                string $emisorCaida[] = `emitter -type omni -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n "Water_Drops_Creation_Emitter"`;
                string $particulasCaida[] = `nParticle -n "Water_Drops_Creation_nParticles"`;
                addAttr -h 0 -ln "water" -at double $emisorCaida[1];
                addAttr -h 0 -ln "water" -at double $particulasCaida[1];        
                connectDynamic -em $emisorCaida[1] $particulasCaida[0];
        //        string $gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($selObjShort[0] + "_Driver_Drops_Gravity")`;
        //        connectDynamic -f $gravity[0]  $particulasCaida[1];        
        //        grupo($gravity[0]);
                grupo($particulasCaida[0]);
                string $nucleus[] = `listConnections -d 1 -s 1 ($particulasCaida[0] + ".currentState")`;
        
                setAttr ($nucleus[0] + ".gravity") 0;
                setAttr ($emisorCaida[1] + ".emitterType") 0;
                setAttr ($emisorCaida[1] + ".spread") 1;
                setAttr ($emisorCaida[1] + ".directionX") 0;
                setAttr ($emisorCaida[1] + ".speed") 0;


                setAttr ($particulasCaida[0] + ".radius") $radiusUno;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") $randRadiusUno;
                setAttr ($particulasCaida[0] + ".collide") 0;
                setAttr ($particulasCaida[0] + ".lifespanMode") 1;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_Position") 0;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_FloatValue") 1;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_Position") 0.252174;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_FloatValue") 0.44;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_Position") 0.521739;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_FloatValue") 0;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScaleInput") 1;
                setAttr ($particulasCaida[0] + ".radiusScaleInputMax") 2.808989;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") 0.060;
                setAttr ($particulasCaida[0] + ".radiusScaleSPH") 0;         
                
                string $gotasFijasVentana = "if (frame == ";
                    $gotasFijasVentana += $frameEndDriverGotas;
                    $gotasFijasVentana += "){\n";
                    $gotasFijasVentana += "    play -state off;\n";
                    $gotasFijasVentana += ("    select " + $particulasCaida[0] + ";\n");
                    $gotasFijasVentana += "    if (`window -ex GotasFijasOk`) {\n";
                    $gotasFijasVentana += "        deleteUI -window GotasFijasOk;\n";
                    $gotasFijasVentana += "    }\n";
                    $gotasFijasVentana += "    window -s 0 -t \"DRIVER WATER DROPS\" -w 350 -h 250 -minimizeButton false  -maximizeButton false GotasFijasOk;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "            text -font \"boldLabelFont\" -l \"APPLY INITIAL STATE?\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 5 -columnWidth 1 10 -columnWidth 2 80 -columnWidth 3 10 -columnWidth 4 80 -columnWidth 5 10;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "            global proc Aplicar(){\n";
                    $gotasFijasVentana += ("                waterDropsApply(\"" + $particulasCaida[0] + "\",\"" + $emisorCaida[1] + "\",\"" + $selObjShort[0] + "\");\n");
                    $gotasFijasVentana += "            }\n";
                    $gotasFijasVentana += "            button -l \"APPLY\" -c\"Aplicar()\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";            
                    $gotasFijasVentana += "            button -l \"CANCEL\" -c\"waterDropsCancel()\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "    showWindow;\n";
                    $gotasFijasVentana += "}\n";
        
                string $playDriver = `expression -s $gotasFijasVentana -n "Water_Drops_Exp"`;
                play -forward true;
          
                currentTime -edit 0;
                play -forward true;
                
            } else {
                warning "select Driver Drops Particles.";
            }
        }       
    }
}


//Create Trails Particles

global proc createTrails(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
                currentTime -edit 0;
    if (size($selObjShort) == 0 ){
        warning "select Driver Drops Particles.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "nParticle" /*&& `attributeExists "driver" $obj`*/){
                if (`objExists Gotas_Fijas_Exp`){
                    delete Gotas_Fijas_Exp;
                }
                if (`objExists Driver_Gotas_Exp`){
                    delete Driver_Gotas_Exp;
                }
                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
                if (`objExists Water_Drops_Exp`){
                    delete Water_Drops_Exp;
                }
                float $radiusUno = `textField -q -tx radius4TF`;
                float $randRadiusUno = `textField -q -tx randomRadius4TF`;
                float $frameRate = `textField -q -tx frameRate4TF`;
                NParticleMenu MayaWindow|mainNParticleMenu;       
                updateNParticleStyleMenu "Water";
                string $emisorCaida[] = `emitter -type omni -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n "Water_Trails_Creation_Emitter"`;
                string $particulasCaida[] = `nParticle -n "Water_Trails_Creation_nParticles"`;
                addAttr -h 0 -ln "trail" -at double $emisorCaida[1];
                addAttr -h 0 -ln "trail" -at double $particulasCaida[1];        
                connectDynamic -em $emisorCaida[1] $particulasCaida[0];
        //        string $gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($selObjShort[0] + "_Driver_Drops_Gravity")`;
        //        connectDynamic -f $gravity[0]  $particulasCaida[1];        
        //        grupo($gravity[0]);
                grupo($particulasCaida[0]);
                string $nucleus[] = `listConnections -d 1 -s 1 ($particulasCaida[0] + ".currentState")`;
        
                setAttr ($nucleus[0] + ".gravity") 0;
                setAttr ($emisorCaida[1] + ".speed") 0;
                select -r $emisorCaida[1];
                string $gotasFijasEmitterRename = `rename "Water_Trails_Emitter"`; 
                                
                select -r $particulasCaida[0];
                setAttr ($particulasCaida[0] + ".radius") $radiusUno;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") $randRadiusUno;
                setAttr ($particulasCaida[0] + ".collide") 0;
                setAttr ($particulasCaida[0] + ".radiusScaleSPH") 0;

                select -r $particulasCaida[0];
                string $TrailsPartisRename = `rename "Water_Trails_nParticles"`;
  

                string $TrailExpression = "if (frame == 1){\n";
                    $TrailExpression += "    play -state off;\n";
                    $TrailExpression += ("    setAttr " + $TrailsPartisRename + ".radiusScaleInput 5;\n");
                    $TrailExpression += "}";
                
                string $playDriver = `expression -s $TrailExpression -n "Trails_Exp"`;
                
                for ($i = 0; $i < 2; $i++){
                    currentTime -edit $i;
                }    

                currentTime -edit 0;

                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
         
            }
        }       
    }
}

//Apply water drops

global proc waterDropsObjectApply(string $nParticles, string $emitter, string $object){
    if (`window -ex GotasFijasOk`) {
      deleteUI -window GotasFijasOk;
    }
    if (`objExists Water_Drops_Exp`){
       delete Water_Drops_Exp;
    }
    select -r $nParticles;
    string $gotasFijasPartsRename = `rename ($object + "_Water_Drops_nParticles")`;
    select -r $emitter;
    string $gotasFijasEmitter[] = `ls -sl`;
    string $gotasFijasEmitterRename = `rename ($object + "_Water_Drops_Emitter")`;
    select -r $gotasFijasPartsRename;
    setNClothStartState;
    performSetNClothStartState 1;
    currentTime -edit 0;
    select -r $object;
}

//Create Water Drops Object

global proc createObjectWater(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
    if (size($selObjShort) == 0 ){
        warning "select Object.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "transform" /*&& `attributeExists "driver" $obj`*/){
                if (`objExists Gotas_Fijas_Exp`){
                    delete Gotas_Fijas_Exp;
                }
                if (`objExists Driver_Gotas_Exp`){
                    delete Driver_Gotas_Exp;
                }
                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
                if (`objExists Water_Drops_Exp`){
                    delete Water_Drops_Exp;
                }
                float $radiusUno = `textField -q -tx radius3TF`;
                float $randRadiusUno = `textField -q -tx randomRadius3TF`;
                float $frameRate = `textField -q -tx frameRate3TF`;
                int $frameEndDriverGotas = `textField -q -tx frameEnd3TF`;
                if ($frameEndDriverGotas > (`playbackOptions -q -max`)){
                    playbackOptions -aet $frameEndDriverGotas -max $frameEndDriverGotas;
                }
                select -cl;
                NParticleMenu MayaWindow|mainNParticleMenu;       
                updateNParticleStyleMenu "Water";
                string $emisorCaida[] = `emitter -type omni -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n ($selObjShort[0] + "_Water_Drops_Creation_Emitter")`;
                string $particulasCaida[] = `nParticle -n ( $selObjShort[0] + "_Water_Drops_Creation_nParticles")`;
                addAttr -h 0 -ln "water" -at double $emisorCaida[0];
                addAttr -h 0 -ln "water" -at double $particulasCaida[1];        
                connectDynamic -em $emisorCaida[0] $particulasCaida[0];
        //        string $gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($selObjShort[0] + "_Driver_Drops_Gravity")`;
        //        connectDynamic -f $gravity[0]  $particulasCaida[1];        
        //        grupo($gravity[0]);

                setAttr ($emisorCaida[0] + ".emitterType") 0;
                setAttr ($emisorCaida[0] + ".spread") 1;
                setAttr ($emisorCaida[0] + ".directionX") 0;
                setAttr ($emisorCaida[0] + ".speed") 0;

                parent $emisorCaida[0] $selObjShort[0];
                setAttr ($emisorCaida[0] + ".translateZ") 0;
                setAttr ($emisorCaida[0] + ".translateX") 0;
                setAttr ($emisorCaida[0] + ".translateY") 0;

                setAttr ($particulasCaida[0] + ".radius") $radiusUno;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") $randRadiusUno;
                setAttr ($particulasCaida[0] + ".collide") 0;
                setAttr ($particulasCaida[0] + ".lifespanMode") 1;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_Position") 0;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_FloatValue") 1;
                setAttr ($particulasCaida[0] + ".radiusScale[0].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_Position") 0.252174;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_FloatValue") 0.44;
                setAttr ($particulasCaida[0] + ".radiusScale[1].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_Position") 0.521739;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_FloatValue") 0;
                setAttr ($particulasCaida[0] + ".radiusScale[2].radiusScale_Interp") 2;
                setAttr ($particulasCaida[0] + ".radiusScaleInput") 1;
                setAttr ($particulasCaida[0] + ".radiusScaleInputMax") 2.808989;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") 0.060;
                setAttr ($particulasCaida[0] + ".radiusScaleSPH") 0;         

                string $nucleus[] = `listConnections -d 1 -s 1 ($particulasCaida[0] + ".currentState")`;
        
                setAttr ($nucleus[0] + ".gravity") 0;
                
                string $gotasFijasVentana = "if (frame == ";
                    $gotasFijasVentana += $frameEndDriverGotas;
                    $gotasFijasVentana += "){\n";
                    $gotasFijasVentana += "    play -state off;\n";
                    $gotasFijasVentana += ("    select " + $particulasCaida[0] + ";\n");
                    $gotasFijasVentana += "    if (`window -ex GotasFijasOk`) {\n";
                    $gotasFijasVentana += "        deleteUI -window GotasFijasOk;\n";
                    $gotasFijasVentana += "    }\n";
                    $gotasFijasVentana += "    window -s 0 -t \"DRIVER WATER DROPS\" -w 350 -h 250 -minimizeButton false  -maximizeButton false GotasFijasOk;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "            text -font \"boldLabelFont\" -l \"APPLY INITIAL STATE?\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 5 -columnWidth 1 10 -columnWidth 2 80 -columnWidth 3 10 -columnWidth 4 80 -columnWidth 5 10;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "            global proc Aplicar(){\n";
                    $gotasFijasVentana += ("                waterDropsObjectApply(\"" + $particulasCaida[0] + "\",\"" + $emisorCaida[0] + "\",\"" + $selObjShort[0] + "\");\n");
                    $gotasFijasVentana += "            }\n";
                    $gotasFijasVentana += "            button -l \"APPLY\" -c\"Aplicar()\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";            
                    $gotasFijasVentana += "            button -l \"CANCEL\" -c\"waterDropsCancel()\";\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "        rowColumnLayout -numberOfColumns 1;\n";
                    $gotasFijasVentana += "            separator -style \"none\" -h 5;\n";
                    $gotasFijasVentana += "    showWindow;\n";
                    $gotasFijasVentana += "}\n";
        
                string $playDriver = `expression -s $gotasFijasVentana -n "Water_Drops_Exp"`;
                play -forward true;
          
                currentTime -edit 0;
                play -forward true;
            } else {
                warning "select Object.";
            }
        }       
    }
}

//Create Trails Particles Object

global proc createObjectTrails(){
    string $selObjShort[] = `ls -sl`;
    string $selObj[] = `ls -sl -dag`;
                currentTime -edit 0;
    if (size($selObjShort) == 0 ){
        warning "select Object.";
    } else {
        for ($obj in $selObj){
            string $nodeType = `nodeType $obj`;
            if ($nodeType == "transform" /*&& `attributeExists "driver" $obj`*/){
                if (`objExists Gotas_Fijas_Exp`){
                    delete Gotas_Fijas_Exp;
                }
                if (`objExists Driver_Gotas_Exp`){
                    delete Driver_Gotas_Exp;
                }
                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
                if (`objExists Water_Drops_Exp`){
                    delete Water_Drops_Exp;
                }
                select -cl;                
                float $radiusUno = `textField -q -tx radius4TF`;
                float $randRadiusUno = `textField -q -tx randomRadius4TF`;
                float $frameRate = `textField -q -tx frameRate4TF`;
                NParticleMenu MayaWindow|mainNParticleMenu;       
                updateNParticleStyleMenu "Water";
                string $emisorCaida[] = `emitter -type omni -r $frameRate -sro 0 -nuv 0 -cye none -cyi 1 -spd 0 -srn 0 -nsp 0 -tsp 0 -mxd 0 -mnd 0 -dx 1 -dy 0 -dz 0 -sp 0 -n ($selObjShort[0] + "_Water_Trails_Creation_Emitter")`;
                string $particulasCaida[] = `nParticle -n ($selObjShort[0] + "_Water_Trails_Creation_nParticles")`;
                addAttr -h 0 -ln "trail" -at double $emisorCaida[0];
                addAttr -h 0 -ln "trail" -at double $particulasCaida[1];        
                connectDynamic -em $emisorCaida[0] $particulasCaida[0];
        //        string $gravity[] = `gravity -pos 0 0 0 -m 9.8 -att 0 -dx 0 -dy -1 -dz 0  -mxd -1  -vsh none -vex 0 -vof 0 0 0 -vsw 360 -tsr 0.5 -n ($selObjShort[0] + "_Driver_Drops_Gravity")`;
        //        connectDynamic -f $gravity[0]  $particulasCaida[1];        
        //        grupo($gravity[0]);
//                grupo($particulasCaida[0]);
                setAttr ($emisorCaida[0] + ".speed") 0;
                select -r $emisorCaida[0];

                parent $emisorCaida[0] $selObjShort[0];
                setAttr ($emisorCaida[0] + ".translateZ") 0;
                setAttr ($emisorCaida[0] + ".translateX") 0;
                setAttr ($emisorCaida[0] + ".translateY") 0;

                string $gotasFijasEmitterRename = `rename ($selObjShort[0] + "_Water_Trails_Emitter")`; 
                                
                select -r $particulasCaida[0];
                setAttr ($particulasCaida[0] + ".radius") $radiusUno;
                setAttr ($particulasCaida[0] + ".radiusScaleRandomize") $randRadiusUno;
                setAttr ($particulasCaida[0] + ".collide") 0;
                setAttr ($particulasCaida[0] + ".radiusScaleSPH") 0;

                string $nucleus[] = `listConnections -d 1 -s 1 ($particulasCaida[0] + ".currentState")`;
        
                setAttr ($nucleus[0] + ".gravity") 0;
                
                select -r $particulasCaida[0];
                string $TrailsPartisRename = `rename ($selObjShort[0] + "_Water_Trails_nParticles")`;
  

                string $TrailExpression = "if (frame == 1){\n";
                    $TrailExpression += "    play -state off;\n";
                    $TrailExpression += ("    setAttr " + $TrailsPartisRename + ".radiusScaleInput 5;\n");
                    $TrailExpression += "}";
                
                string $playDriver = `expression -s $TrailExpression -n "Trails_Exp"`;
                
                for ($i = 0; $i < 2; $i++){
                    currentTime -edit $i;
                }    

                currentTime -edit 0;

                if (`objExists Trails_Exp`){
                    delete Trails_Exp;
                }
         
            }
        }       
    }
}

print "Water Drops 1.0 By Mariano Antico.";
