//
//描述：删除场景中的MateNode 和 SLCodeNode 材质节点，使场景中的材质节点连接恢复为没加MateNode和
//SLCodeNode材质节点时的状态。
// 

global proc zzyDeleteMatteNodeAndSLCodeNode()
{
string $asAllMatteNode[]=`ls -type MatteNode`;//求出场景中所有MatteNode节点。

string $asAllSLCodeNode[];

string $sMatteNode;

string $asMatteNodeInputColorNode[];

string $asMatteNodeInputTransparencyNode[];

string $asSLCodeNode[];

string $asOutputColorShader[];

string $asOutputTransparencyShader[];

for($sMatteNode in $asAllMatteNode )
{   
    clear  $asMatteNodeInputColorNode;

    $asMatteNodeInputColorNode=`listConnections -p 1 -s on ($sMatteNode+".color")`;//求出连接MatteNode节点的color属性的输入节点。

    if(size($asMatteNodeInputColorNode)!=0)
    {

            clear  $asSLCodeNode;

            $asSLCodeNode=`listConnections  -d on -type SLCodeNode ($sMatteNode+".outColor")`;//求出连接MatteNode节点的outColor属性的节点并且为SLCodeNode。

            clear $asOutputColorShader;                                               //求连接color的最终节点。

            if(size($asSLCodeNode)==0)
            {
            
                    $asOutputColorShader=`listConnections  -d on  ($sMatteNode+".outColor")`;

            }
            else
            {
                    $asOutputColorShader=`listConnections  -d on  ($asSLCodeNode[0]+".outColor")`;

            }
            if(size($asOutputColorShader)!=0)
	    {       
	            if( `isConnected $asMatteNodeInputColorNode[0] ($asOutputColorShader[0]+".color")`==0 )
	            {
                               connectAttr -force $asMatteNodeInputColorNode[0] ($asOutputColorShader[0]+".color");
	            }
    	    }     
            

     }

    clear  $asMatteNodeInputTransparencyNode;

    $asMatteNodeInputTransparencyNode=`listConnections -p 1 -s on  ($sMatteNode+".transparency")`;//求出连接MatteNode节点的Transparency属性的输入节点。

    if(size($asMatteNodeInputTransparencyNode)!=0)
    {
            clear  $asSLCodeNode;

            $asSLCodeNode=`listConnections  -d on -type SLCodeNode ($sMatteNode+".outTransparency")`;//求出连接MatteNode节点的outTransparency属性的节点并且为SLCodeNode。

            clear $asOutputTransparencyShader;                                               //求连接outTransparency的最终节点。
    
            if(size($asSLCodeNode)==0)
            {

                   $asOutputTransparencyShader=`listConnections  -d on  ($sMatteNode+".outTransparency")`;
	    }
	    else
	    {

                    $asOutputTransparencyShader=`listConnections  -d on  ($asSLCodeNode[0]+".outTrans")`;
	    }

            if(size($asOutputTransparencyShader)!=0)
	    {
	            if( `isConnected $asMatteNodeInputTransparencyNode[0] ($asOutputTransparencyShader[0]+".transparency")`==0)
	            {

	                       connectAttr -force $asMatteNodeInputTransparencyNode[0] ($asOutputTransparencyShader[0]+".transparency");
                    } 
            
	    }


    
    
    }
    
}

 //删除 MatteNode和 SLCodeNode 节点。

$asAllSLCodeNode=`ls -type SLCodeNode `;

delete $asAllSLCodeNode;

$asAllMatteNode=`ls -type MatteNode`;

delete $asAllMatteNode;


}