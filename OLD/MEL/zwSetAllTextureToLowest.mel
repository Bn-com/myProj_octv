/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc string zwSetAllTextureToLowest()
{
	string $sctipt = "";

	string $file[] = `ls -type "file"`;
	for ($node in $file)
	{
		string $fileTextureName = `getAttr ($node + ".fileTextureName")`;

		$fileTextureName = `substitute "[.]bot$" $fileTextureName ".iff"`;

		string $newTexture = zwGetLowestByRes($fileTextureName);
		if ($newTexture == "")
		{
			$newTexture = zwGetLowestByHml($fileTextureName);
		}
		if ($newTexture == "")
		{
			continue;
		}

		string $str = "setAttr \"" + $node + ".fileTextureName\" -type \"string\" \"" + $newTexture + "\";";
		evalEcho $str;
		$str = "evalEcho \"catch(`setAttr \\\"" + $node + ".fileTextureName\\\" -type \\\"string\\\" \\\"" + $fileTextureName + "\\\"`)\";\n";
		$sctipt += $str;
	}

	return $sctipt;
}

global proc string zwGetLowestByRes(string $path)
{
	string $res[] = {"4k", "2k", "1k", "512", "256"};
	
	for ($i=0; $i<size($res); $i++)
	{
		string $str = `match ("[/\\]" + $res[$i] + "[/\\]") $path`;
		if ($str != "")
		{
			for ($j=size($res)-1; $j>$i; $j--)
			{
				string $str1 = `substitute $res[$i] $str $res[$j]`;
				string $dest = `substitute $str $path $str1`;
				$dest = `substitute ("_" + $res[$i] + "[.]") $dest ("_" + $res[$j] + ".")`;
				string $expandName = `workspace -expandName $dest`;
				if (`filetest -f $expandName`)
				{
					return $dest;
				}
			}
		}
	}

	return "";
}

global proc string zwGetLowestByHml(string $path)
{
	string $hml[] = {"", "_h", "_l", "_m", "_s", "_v"};
	
	string $str = `substitute "_[hmlsv][.]" $path "."`;

	for ($i=size($hml); $i>=0; $i--)
	{
		string $dest = `substitute "[.]" $str ($hml[$i] + ".")`;
		if (`filetest -f $dest`)
		{
			if ($dest == $path)
			{
				return "";
			}
			return $dest;
		}
	}

	return "";
}