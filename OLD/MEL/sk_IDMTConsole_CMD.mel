//////////////////////////////////////////////////////////
//
//	Script Name: 	外包后台入口
//	Author: 			
//	Created: 			2014
//
//
//					
//////////////////////////////////////////////////////////
global proc sk_FinalLayoutTemplateCMD(string $path)
{
	file -force -loadReferenceDepth "all" -open $path;
	python("from idmt.maya.py_common import sk_checkCommon");
	python("reload(sk_checkCommon)");
	python("sk_checkCommon.sk_checkTools().checkFinalLayoutPerform(1,0,1)");
}


// 1 动画文件清理
// 21 Fs
// 31 自动分层
// 32 motionblue 层


// dod 1000-1999
// 1100 dod4 自动群组分层
global proc sk_MayaBackBatchCMD(string $path , int $batchType)
{
	//file -force -loadReferenceDepth "all" -open $path;
	// 环境

	//返回值
	int $result = 1;

	$result = catch(sk_MayaBackBatchCMDPerform($path,$batchType));

	// 报错信息
	if($result != 0)
	{
		quit -force -exitCode 6 ;
	}
}


global proc int sk_MayaBackBatchCMDPerform(string $path , int $batchType)
{
	python("import time");
	python("print '\\n---[BatchStart]---\\n' + time.strftime('%Y-%m-%d %H:%M:%S') + '\\n'");
	// TD测试1
	if($batchType == 66)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mi");
		python("reload(sk_projTools_mi)");
		python("sk_projTools_mi.sk_projTools_mi().fixGPSTool()");

	}
	
	// TD测试2
	if($batchType == 67)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mi");
		python("reload(sk_projTools_mi)");
		python("sk_projTools_mi.sk_projTools_mi().fixGPSTool(\"on\")");

	}
	
	// TD测试3
	if($batchType == 68)
	{	
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mi");
		python("reload(sk_projTools_mi)");
		python("from idmt.maya.commonPerform.renderLayers import zb_renderLayer_mi");
		python("reload(zb_renderLayer_mi)");
		//python("sk_projTools_mi.sk_projTools_mi().fixTLFur()");
		//python("sk_projTools_mi.sk_projTools_mi().check2kSwitch4kFix(rlFix = 1,aovFix = 1)");
		python("zb_renderLayer_mi.zb_renderLayer_mi().bladeRenderCreate()");
	}

	// 本地fs
	if($batchType == 69)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.norch import north_alembicCommon");
		python("reload(north_alembicCommon)");
		python("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC(shave = 0,abcBy_ns = 1)");
	}

	//ZM特效后台批量渲染
	if($batchType == 90)
	{	
		print "fuck";
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		if ( $shotInfo[0] == "zm" )
		{
		    python("from idmt.maya.ZoomWhiteDolphin import zm_batchrender");
		    python("reload(zm_batchrender)");
		    python("zm_batchrender.zmbatchFXwautoCreate()");

		}
		
		if ( $shotInfo[0] == "nj" )
		{
		    python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_Yoda");
		    python("reload(sk_renderLayer_Yoda)");
		    python("sk_renderLayer_Yoda.sk_renderLayer_Yoda().ydRLSpeficCreate(\'CHRM_AO\')");
				file -rename "E:/heelo.mb";
				file -f -save;
		}
	}
	
	
	// FL快速版
	if($batchType == 1)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		if ( $shotInfo[0] == "zm" )
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutPerform(1,0,0)");
		}
		if ( $shotInfo[0] == "csl" )		    
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.ShunLiu_common import csl_cacheFinalLayout");
		python("reload(csl_cacheFinalLayout)");
		python("csl_cacheFinalLayout.csl_cacheFinalLayout().csl_checkFinalLayoutPerform( server = 1 , viewCheck = 0 , cachePre = 0,shotType = 3, resetPosition= 0,smooth=1,EnvExort=0,ImageSizeCover=1 )");
		}
		if ( $shotInfo[0] == "do5" )
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.commonPerform.finalLayout import sk_cacheFinalLayout_do5");
		python("reload(sk_cacheFinalLayout_do5)");
		python("sk_cacheFinalLayout_do5.sk_cacheFinalLayout_do5().checkFinalLayoutPerform(server = 1 , viewCheck = 0 , cachePre = -20 , shotType = 2 , resetPosition = 0)");
		}
		if ( $shotInfo[0] == "yt" )
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.ShunLiu_common import csl_cacheFinalLayout");
		python("reload(csl_cacheFinalLayout)");
		python("csl_cacheFinalLayout.csl_cacheFinalLayout().csl_checkFinalLayoutPerform( server = 1 , viewCheck = 0 , cachePre = 0,shotType = 2, resetPosition= 0,smooth=1,EnvExort=0,ImageSizeCover=0 )");
		}		
	}
	// geo cache
	if($batchType == 601)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		if ( $shotInfo[0] == "ddz" )
		{
			python("from idmt.maya.GA import GA_RenderAutoCom");
			python("reload(GA_RenderAutoCom)");
			python("GA_RenderAutoCom.GA_RenderAutoCom().GA_RenderAutoComFinal(2,1,0)");

		}

	}
	if($batchType == 5000)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_finalLayout import sk_cacheFinalLayout");
		python("reload(sk_cacheFinalLayout)");
		python("sk_cacheFinalLayout.sk_cacheFinalLayout().checkFinalLayoutPerform()");
	}
	// abc cache
	if($batchType == 5001)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		string $shotType = `python("sk_infoConfig.sk_infoConfig().checkShotType()")`;
		string $shaveMode = "0";
		if ( $shotInfo[0] == "ice"||  $shotInfo[0] == "mi" )
		{
			$shaveMode = "1";
		}
		else
		{
		  python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		  python("reload(sk_sceneTools)");
		  python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		}
		// FinalLayout
		python("from idmt.maya.norch import north_alembicCommon");
		python("reload(north_alembicCommon)");
		string $flCmd = ("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC(1,-15," + $shotType + "," + $shaveMode + ",0)");
		python($flCmd);
	}
	// only export abc
	if($batchType == 5003)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		string $shotType = `python("sk_infoConfig.sk_infoConfig().checkShotType()")`;
		string $shaveMode = "0";
		if ( $shotInfo[0] == "ice"||  $shotInfo[0] == "mi" )
		{
			$shaveMode = "1";
		}
		else
		{
		  python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		  python("reload(sk_sceneTools)");
		  python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		}
		// FinalLayout
		python("from idmt.maya.norch import north_alembicCommon");
		python("reload(north_alembicCommon)");
		string $flCmd = ("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC(justCache = 1,abcBy_ns = 0)");
		python($flCmd);
	}

	// abc export by asset mode
	if($batchType == 5002)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		string $shotType = `python("sk_infoConfig.sk_infoConfig().checkShotType()")`;
		string $shaveMode = "0";
		if ( $shotInfo[0] == "ice"||  $shotInfo[0] == "mi" )
		{
			$shaveMode = "1";
		}
		else
		{
		  python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		  python("reload(sk_sceneTools)");
		  python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		}
		// FinalLayout
		python("from idmt.maya.norch import north_alembicCommon");
		python("reload(north_alembicCommon)");
		string $flCmd = ("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC()");
		python($flCmd);
	}

	// only export abc by asset
	if($batchType == 5004)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		string $shotType = `python("sk_infoConfig.sk_infoConfig().checkShotType()")`;
		string $shaveMode = "0";
		if ( $shotInfo[0] == "ice"||  $shotInfo[0] == "mi" )
		{
			$shaveMode = "1";
		}
		else
		{
		  python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		  python("reload(sk_sceneTools)");
		  python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		}
		// FinalLayout
		python("from idmt.maya.norch import north_alembicCommon");
		python("reload(north_alembicCommon)");
		string $flCmd = ("north_alembicCommon.GDCAlembicCommon().GDC_FinaloutABC(justCache = 1)");
		python($flCmd);
	}
	
	// FL完整版
	if($batchType == 2)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutPerform(1,1)");
		}
	}
	
	// FL Export ALL
	if($batchType == 10)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutPerform(1,0,0)");
		}
	}
	
	// FL Export Cache
	if($batchType == 11)
	{
		file -force -loadReferenceDepth "none" -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		// 只加载角色和道具
		python("from idmt.maya.commonCore.core_mayaCommon import sk_referenceConfig");
		python("reload(sk_referenceConfig)");
		python("sk_referenceConfig.sk_referenceConfig().checkRefLoadChrProp()");
		//file -force -open $path;
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutExport(0,1,0,0,0)");
		}
	}
	
	// FL Export Anim
	if($batchType == 12)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutExport(0,0,1,0,0)");
	 }
	}
	
	// FL Export Otc
	if($batchType == 13)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutExport(1,0,0,0,0)");
	  }
	}
	
	// FL Export AssetInfo
	if($batchType == 14)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutExport(0,0,0,1,0)");
	 }
	}
	
	// FL Export HideInfo
	if($batchType == 15)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{

		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkFinalLayoutExport(0,0,0,0,1)");
	  }
	}
	
	// Cam View Check
	if($batchType == 21)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// CamView
		python("from idmt.maya.py_common import sk_camMatrixScene");
		python("reload(sk_camMatrixScene)");
		python("sk_camMatrixScene.sk_camMatrixScene().sk_sceneMeshCamConfigBatch(0)");
	 }
	}
	
	// Cam Server Update
	if($batchType == 25)
	{
		file -force -open $path;

		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneCameraUpdate(1)");

	}

	if($batchType == 26)
	{
		file -force -open $path;

		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneCameraUpdate(1,abcToggle=1)");

	}

	// Asset 全 替换
	if($batchType == 30)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneAutoReplace(-1,0,1)");
	  }
	}
	
	// Asset 低 替换
	if($batchType == 31)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		python("from idmt.maya.py_common import sk_sceneConfig");
		python("reload(sk_sceneConfig)");
		python("sk_sceneConfig.sk_sceneConfig().sk_sceneAutoReplace(1,0,1)");
		}
	}
	
	// Asset 中 替换
	if($batchType == 32)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		python("from idmt.maya.py_common import sk_sceneConfig");
		python("reload(sk_sceneConfig)");
		python("sk_sceneConfig.sk_sceneConfig().sk_sceneAutoReplace(1,0,1)");
	 }
	}
	
	// Asset 高 替换
	if($batchType == 33)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{
		
		python("from idmt.maya.py_common import sk_sceneConfig");
		python("reload(sk_sceneConfig)");
		python("sk_sceneConfig.sk_sceneConfig().sk_sceneAutoReplace(2,0,1)");
	 }
	}
	
	// Asset [全] 替换
	if($batchType == 41)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{

		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkAnim2RenderSetInfo(0,0)");
	 }
	}
	
	// Asset [高] 替换
	if($batchType == 42)
	{
		file -force -open $path;
		
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ( $shotInfo[0] == "zm" )
		{

		python("from idmt.maya.py_common import sk_checkCommon");
		python("reload(sk_checkCommon)");
		python("sk_checkCommon.sk_checkTools().checkAnim2RenderSetInfo(0,3)");
	 }
	}

	// 后台批量检测
	if($batchType == 50)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().justCheck()");
	}

	// renderLayer专用检测
	if($batchType == 51)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_renderFileCheck_base");
		python("reload(sk_renderFileCheck_base)");
		python("sk_renderFileCheck_base.sk_renderFileCheck_base().checkPerform()");
	}


	// 参考定制替换
	if($batchType == 52)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().refReplacePerform(saveMode = 1)");
	}

	// 渲染层切换修正
	if($batchType == 53)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().fixRenderLayerSwitch()");
	}

	// 全自动后台分层
	// 快速版
	if($batchType == 70)
	{
		file -force -loadReferenceDepth "none" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;

		
		if ($shotInfo[0] == "cl")
		{
			python("from idmt.maya.commonCore.core_mayaCommon import sk_referenceConfig");
			python("reload(sk_referenceConfig)");
			python("sk_referenceConfig.sk_referenceConfig().checkReferenceShaderReset(0)");
			python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
			python("reload(sk_sceneTools)");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  START  "+ "======================" + "\n");
			// 处理非参考的namespace
			python("sk_sceneTools.sk_sceneTools().sk_sceneNoRefNamespaceClean()");
			// anim转render
			python("from idmt.maya.Calimero import sk_calimeroProjectTools");
			python("reload(sk_calimeroProjectTools)");
			python("sk_calimeroProjectTools.sk_clProjectTools().sk_clAnim2Render()");
			// 加载丢失参考
			python("sk_calimeroProjectTools.sk_clProjectTools().calimeroRefAutoLoad(\"lr\")");
			// 整理文件
			python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
			python("reload(sk_sceneTools)");
			python("sk_sceneTools.sk_sceneTools().sk_sceneReorganize(2)");
			// 后台分层
			python("from idmt.maya.Calimero import sk_renderLayer_Calimero");
			python("reload(sk_renderLayer_Calimero)");
			python("sk_renderLayer_Calimero.clRLConfig().clRLAutoCreate(1,1,1)");
			
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
		
		if ($shotInfo[0] == "zm")
		{

		python("from idmt.maya.ZoomWhiteDolphin import zm_AutoRenderLayer_ZoomWhiteDolphin");
		python("reload(zm_AutoRenderLayer_ZoomWhiteDolphin)");

		string $cnw = "zm_AutoRenderLayer_ZoomWhiteDolphin.zmRLConfig().zmAutoLayercrete(\"" + $path + "\")";
		python($cnw);

		}
		
		if ($shotInfo[0] == "nj" || $shotInfo[0] == "yd")
		{
			// 后台分层
			/*
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_Yoda");
			python("reload(sk_renderLayer_Yoda)");

			python("sk_renderLayer_Yoda.sk_renderLayer_Yoda().ydRLAutoCreate(createMode = 1,refClean = 0,RGB = 1,RGBCreatType = 1)");
			*/
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_YodaNew");
			python("reload(sk_renderLayer_YodaNew)");
			python("sk_renderLayer_YodaNew.sk_renderLayer_YodaNew().ydRLAutoCreateNew(createMode = 1,refClean = 0,RGB = 1,RGBCreatType = 1, shaderForece = 1,exr=1)");			
			
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
		
		if ($shotInfo[0] == "sk" )
		{
			// 后台分层
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_SK4");
			python("reload(sk_renderLayer_SK4)");
			python("sk_renderLayer_SK4.sk_renderLayer_SK4().sk4RLAutoCreate()");
			
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}

		if ($shotInfo[0] == "LION")
		{
			// 后台分层
			file -force -open $path;
			python("from idmt.maya.py_common import Lion_RendeerAutoCommons");
			python("reload(Lion_RendeerAutoCommons)");
			python("Lion_RendeerAutoCommons.lion_RenderAutoCommons().lion_RenderLayerAuto(2,1)");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}

		if ($shotInfo[0] == "tf" )
		{
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  START  "+ "======================" + "\n");
			// 后台分层场景
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.TF import TF_AotuRenderLayerV02");
			python("reload(TF_AotuRenderLayerV02)");
			python("TF_AotuRenderLayerV02.TF_AutoRenderLayerClass().TF_RenderLayerAutoCreate_Set()");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
	}
	
	
	// 全自动后台分层
	// 稳妥版
	if($batchType == 71)
	{
		file -force -loadReferenceDepth "none" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		
		if ($shotInfo[0] == "cl")
		{
			python("from idmt.maya.commonCore.core_mayaCommon import sk_referenceConfig");
			python("reload(sk_referenceConfig)");
			python("sk_referenceConfig.sk_referenceConfig().checkReferenceShaderReset(1)");
			python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
			python("reload(sk_sceneTools)");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  START  "+ "======================" + "\n");
			// 处理非参考的namespace
			python("sk_sceneTools.sk_sceneTools().sk_sceneNoRefNamespaceClean()");
			// anim转render
			python("from idmt.maya.Calimero import sk_calimeroProjectTools");
			python("reload(sk_calimeroProjectTools)");
			python("sk_calimeroProjectTools.sk_clProjectTools().sk_clAnim2Render()");
			// 加载丢失参考
			python("sk_calimeroProjectTools.sk_clProjectTools().calimeroRefAutoLoad(\"lr\")");
			// 整理文件
			python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
			python("reload(sk_sceneTools)");
			python("sk_sceneTools.sk_sceneTools().sk_sceneReorganize(2)");
			// 后台分层
			python("from idmt.maya.Calimero import sk_renderLayer_Calimero");
			python("reload(sk_renderLayer_Calimero)");
			python("sk_renderLayer_Calimero.clRLConfig().clRLAutoCreate(1,1,2)");
			
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
		if ($shotInfo[0] == "nj" || $shotInfo[0] == "yd")
		{
				
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_YodaNew");
			python("reload(sk_renderLayer_YodaNew)");
			python("sk_renderLayer_YodaNew.sk_renderLayer_YodaNew().ydRLAutoCreateNew(createMode = 1,refClean = 0,RGB = 1,RGBCreatType = 1, shaderForece = 1,exr=1)");
		
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
			
			
		}
		if ($shotInfo[0] == "sk" )
		{
			// 后台分层
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.Strawberry import sk4_autorenderLayer");
			python("reload(sk4_autorenderLayer)");
			python("sk4_autorenderLayer.sk4_autorenderLayer().sk4RLAutoCreate()");
			
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
		if ($shotInfo[0] == "LION")
		{
			// 后台分层
			file -force -open $path;
			python("from idmt.maya.py_common import Lion_RendeerAutoCommons");
			python("reload(Lion_RendeerAutoCommons)");
			python("Lion_RendeerAutoCommons.lion_RenderAutoCommons().lion_RenderLayerAuto(2,1)");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}
		if ($shotInfo[0] == "tf" )
		{
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + " ]<<  START  "+ "======================" + "\n");
			// 后台分层
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.TF import TF_AotuRenderLayerV02");
			python("reload(TF_AotuRenderLayerV02)");
			python("TF_AotuRenderLayerV02.TF_AutoRenderLayerClass().TF_RenderLayerAutoCreate_Chr()");
			print "\n";
			print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");
			print "\n";
		}

	}

	// 批量把那个乐高2016的相机LensSqueezeRatio属性给为1.1保存。
	if($batchType == 72)
	{
		file -force -loadReferenceDepth "all" -open $path;
		// 删除未勾选的参考
		python("execfile(r'//file-cluster/GDC/Resource/Support/Maya/projects/Ninjago2016/nj_2016_Batch_CamerasLensSqueezeRatio.py')");
		file -f -save;
		print "\n================   Done   ================\n";
	}
	// do5路径修正
	if($batchType == 73)
	{
		file -force -loadReferenceDepth "all" -open $path;
		// 删除未勾选的参考
		python("from idmt.maya.xwjModule import do5geocache");
		python("reload(do5geocache)");
		python("do5geocache.do5geocache()");
		print "\n================   Done   ================\n";
	}
	// mk layout文件优化
	if($batchType == 74)
	{
		print "\nbegin run mk_clean\n";
		print $path;
		print "\n-----transfromAssest-----\n";
		//file -force -lnr -pmt 0 -open $path;
		python("from idmt.maya.xwjModule import mk_cleanlayout");
		python("reload(mk_cleanlayout)");
		python("mkClean=mk_cleanlayout.mk_cleanlayout(\""+$path+"\")");
		python("mkClean.transMa()");
		print "\n-----export new scene---------\n";
		//file -force -lnr -pmt 0 -open $path;
		//file -force -loadReferenceDepth "all" -open $path;
		python("mkClean.export()");
		print "\n================  mk_clean   Done  ================\n";
	}


	// 全自动后台分层
	if($batchType == 1100)
	{
			file -force -open $path;

			python("from idmt.maya.commonCore.core_renderLayer import sk_renderLayerCore");
			python("reload(sk_renderLayerCore)");
			python("sk_renderLayerCore.sk_renderLayerCore().idmtArnoldRendererSettings()");

			python("from idmt.maya.commonPerform.renderLayers import dod_renderLayers");
			python("reload(dod_renderLayers)");
			python("dod_renderLayers.dod_renderLayers().dodRlCoAOVsArnold(\"char_fish\",0,1,1)");
	}
	// nj2017,全自动后台分层优化（角色与场景分开,试渲一帧）
	if($batchType == 15002)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(0,3,1,1)");

	}
	// nj2017,全自动后台分层优化（角色与场景一起，试渲一帧）
	if($batchType == 15003)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(1,3,1,1)");

	}
	// nj2017,全自动后台分层优化（角色与场景分开,不试渲一帧）
	if($batchType == 15004)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(0,3,1,0)");

	}
	// nj2017,全自动后台分层优化（角色与场景一起，不试渲一帧）
	if($batchType == 15005)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(1,3,1,0)");

	}
	if($batchType == 15006)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(0,3,0,0)");

	}
	if($batchType == 15007)
	{
			file -force -open $path;

			python("from idmt.maya.py_common import nj17_RenderAutoCommons");
			python("reload(nj17_RenderAutoCommons)");
			python("nj17_RenderAutoCommons.nj17_RenderAutoCommons().nj17_RenderLayerAuto(1,3,0,0)");

	}
//顺溜项目自动后台分层（顺溜项目环节负责人要求单独拿出来）
	if($batchType == 2100)
	{
			file -force -loadReferenceDepth "all" -open $path;
			
			python("from idmt.maya.ShunLiu_common import csl_RenderAutoCommons");
			python("reload(csl_RenderAutoCommons)");
			python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_RenderLayerAuto(3,1)");
			
	}
	if($batchType == 2107)
	{
			file -force -loadReferenceDepth "all" -open $path;
			
			python("from idmt.maya.ShunLiu_common import csl_RenderAutoCommons");
			python("reload(csl_RenderAutoCommons)");
			python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_RenderLayerAuto(3,0)");
			
	}	

	if($batchType == 2105)
	{
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.ShunLiu_common import csl_RenderAutoCommons");
			python("reload(csl_RenderAutoCommons)");
			python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_MotionblurLayerAuto(3,1)");
			
	} 	
//顺溜项目自动cache
	if($batchType == 2101)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		// 删除未勾选的参考
		if ( $shotInfo[0] == "csl" )		    
		{
		// 删除未勾选的参考
    		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
    		python("reload(sk_sceneTools)");
    		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
    		// FinalLayout
    		python("from idmt.maya.ShunLiu_common import csl_cacheFinalLayout");
    		python("reload(csl_cacheFinalLayout)");
    		python("csl_cacheFinalLayout.csl_cacheFinalLayout().csl_checkFinalLayoutPerform( server = 1 , viewCheck = 0 , cachePre = -12,shotType = 3, resetPosition= 0,smooth=0,EnvExort=0,ImageSizeCover=1 )");
		}
		else	    
		{
		// 删除未勾选的参考
    		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
    		python("reload(sk_sceneTools)");
    		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
    		// FinalLayout
    		python("from idmt.maya.commonPerform.finalLayout import sk_cacheFinalLayout_do5");
    		python("reload(sk_cacheFinalLayout_do5)");
    		python("sk_cacheFinalLayout_do5.sk_cacheFinalLayout_do5().checkFinalLayoutPerform(server = 1 , viewCheck = 0 , cachePre = -20 , shotType = 2 , resetPosition = 0)");
		}		
    }
	if($batchType == 2102)
	{
			file -force -loadReferenceDepth "all" -open $path;
			python("from idmt.maya.ShunLiu_common import csl_RenderAutoCommons");
			python("reload(csl_RenderAutoCommons)");
			python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_camRenderSet(3,1)");
			
	}
	if($batchType == 2106)
	{
		file -force -loadReferenceDepth "none" -open $path;
		editRenderLayerGlobals -currentRenderLayer defaultRenderLayer;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;		
		python("from idmt.maya.ShunLiu_common import csl_RenderAutoCommons");
		python("reload(csl_RenderAutoCommons)");
		if ( $shotInfo[0] == "csl" )
		{		
			// 只加载角色和道具
		    python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_checkReferenceShaderReset(0)");	
		    //load 参考（除了场景）		
		    python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_RefLoad()");	   
		    //文件设置
		    python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_FileSet(3)");	
		    //连接相应节点
		    python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_ResetMat(3,1)");	                     
		    
		 }
		 else if ( $shotInfo[0] == "do5" )
		 {
		     python("csl_RenderAutoCommons.csl_RenderAutoCommons().csl_ResetMat(2,1)");	 
		 }
	}
    if($batchType == 203)
	{
			file -force -open $path;
			
            python("from idmt.maya.commonCore.core_proxysys import proxyCommon");
            python("reload(proxyCommon)");
            python("proxyCommon.proxyCommon().nj_mrproxyExr(infoType=\"roof\")");	
	}  	
    if($batchType == 202)
	{
			file -force -open $path;
			
            python("from idmt.maya.commonCore.core_proxysys import proxyCommon");
            python("reload(proxyCommon)");
            python("proxyCommon.proxyCommon().proxyLightSet()");	
	} 	  
	//[通用]动捕数据处理
    if($batchType == 3001)
	{
			file -force -open $path;
			
    		python("from idmt.maya.ShunLiu_common import csl_cacheFinalLayout");
    		python("reload(csl_cacheFinalLayout)");
    		python("csl_cacheFinalLayout.csl_cacheFinalLayout().csl_setRefSwitch(ID='s001020MilitaryCamp')");
	} 	
    if($batchType == 3002)
	{
			file -force -open $path;

    		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
    		python("reload(sk_infoConfig)");
    		python("shotInfo = sk_infoConfig.sk_infoConfig().checkShotInfo()");
    		string $type = `python("shotInfo[1][0]")`;    		
    		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;	
    		int $idNum = python("int(shotInfo[1][1:7])");
		    if ( $shotInfo[0] == "csl" && $type != "s" && $idNum >= 1000 )
		    {		
                python("from idmt.maya.commonCore.core_mayaCommon import sk_backCmd");
                python("reload(sk_backCmd)");
        		python("sk_backCmd.sk_backCmd().checkTexTransformtMo(1,1,1,0)");
                if ( ($type != "s" && $shotInfo[2] == "h" && $idNum >= 1000) &&($shotInfo[3] == "rg" || $shotInfo[3] == "tx"))
        		{
        		    python("sk_backCmd.sk_backCmd().checkAssetAnim2RenderCheckInConfig()");
        		}                
                print ("======================  >>[ " + $shotInfo[0] + "_" + $shotInfo[1] + "_" + $shotInfo[2] + "_" + $shotInfo[3] + " ]<<  End  "+ "======================" + "\n");        		
    	    }
    	    else print("文件名不正确");
	} 	
    if($batchType == 4001)
	{
			file -force -open $path;
            python("from idmt.maya.ShunLiu_common import csl_toolCommons");
    		python("reload(csl_toolCommons)");
    		python("csl_toolCommons.csl_toolComnnons().csl_RefImp()");				
	}
	// [通用]转换变量路径
	if($batchType == 3003)
	{
        file -force -loadReferenceDepth "all" -open $path;        
        python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;	

		python("from idmt.maya.ShunLiu_common import csl_VariablePathSwitch");
		python("reload(csl_VariablePathSwitch)");
		python("csl_VariablePathSwitch.csl_VariablePathSwitch().csl_VariableSwitch(1,1,1,1,1)");
        string $filename=`file -q -sn -shn`;
        string $path="D:/Info_Temp/Variable/";	
        sysFile -makeDir $path;	
		file -rename ($path+$filename);
        file -f -save;	
        print ($path+$filename);

	}

	if($batchType == 7001)
	{
        file -force -loadReferenceDepth "all" -open $path;        
        python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;	

		python("from idmt.maya.py_common import sk_ImagePathSwitch");
		python("reload(sk_ImagePathSwitch)");
		python("sk_ImagePathSwitch.sk_ImagePathSwitch().sk_ImagePathSwitch(0,0,1)");
        string $filename=`file -q -sn -shn`;
        string $path="D:/Info_Temp/Variable/";	
        sysFile -makeDir $path;	
		file -rename ($path+$filename);
        file -f -save;	
        print ($path+$filename);


	}		
    if($batchType == 3010)
	{
        file -force -loadReferenceDepth "all" -open $path; 
             
        python("from idmt.maya.ShunLiu_common import csl_checkin");
		python("reload(csl_checkin)");
		string $shotInfo[] = `python("csl_checkin.csl_checkin().csl_ImageSizeReadFs()")`;	

        string $filename=`file -q -sn -shn`;
        string $paths="E:/Info_Temp/TexCover/";	
        sysFile -makeDir $path;	
		file -rename ($paths+$filename);
        file -f -save;	
        zwSysFile "copy" ($paths+$filename) $path true;
        print ($path);


	}
	
	//相机移回原点
	
	if($batchType == 3011)
	{
        file -force -open $path; 
        currentTime 1001;      
        python("from idmt.maya.ShunLiu_common import csl_camfarauto");
		python("reload(csl_camfarauto)");
		python("csl_camfarauto.csl_fixedcamfar()");	

        string $filename=`file -q -sn -shn`;
        string $paths="D:/Info_Temp/CamFar/";	
        sysFile -makeDir $paths;	
		file -rename ($paths+$filename);
        file -f -save;	
        print ($paths+$filename);


	}
	
	if($batchType == 3099)
	{
        file -force -open $path; 
        currentTime 1001;      
        python("from idmt.maya.ShunLiu_common import csl_jzMat");
        python("reload(csl_jzMat)");
		python("csl_jzMat.csl_JzMatte()");	

        
        string $paths="D:/Info_Temp/JZ_Matte/";	
        sysFile -makeDir $paths;
        
        
        	

        string $filename=`file -q -sn -shn`;	
        print ($paths+$filename);


	}
		
	if($batchType ==999)
	{
		file -force -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		string $shotInfo[] = `python("sk_infoConfig.sk_infoConfig().checkShotInfo()")`;
		// 删除未勾选的参考
		python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
		python("reload(sk_sceneTools)");
		python("sk_sceneTools.sk_sceneTools().sk_sceneUnloadRefDel()");
		// FinalLayout
		python("from idmt.maya.commonPerform.finalLayout import sk_cacheFinalLayout_do5");
		python("reload(sk_cacheFinalLayout_do5)");
		python("sk_cacheFinalLayout_do5.sk_cacheFinalLayout_do5().checkFinalLayoutPerform(server =0 , viewCheck = 0 , cachePre = -20 , shotType = 2 , resetPosition = 0)");
	}
	
    if($batchType ==401)
	{
        //file -force -loadReferenceDepth "none" -open $path;

		python("from idmt.maya.py_common import yd_animRef");
		python("reload(yd_animRef)");
        string $CMD="yd_animRef.yd_animRef().FileSwich(\"" +$path + "\")";
        python($CMD);
		//python("yd_animRef.yd_animRef().RefSwich('yd',0)");
		//file -force -loadReferenceDepth "none" -open $path;
		//python("yd_animRef.yd_animRef().RefSwich('yd',1)");

	}
	    if($batchType ==402)
	{
        //file -force -loadReferenceDepth "none" -open $path;

		python("from idmt.maya.py_common import yd_animRef");
		python("reload(yd_animRef)");
        string $CMD="yd_animRef.yd_animRef().tes(\"" +$path + "\")";
        python($CMD);
	}
	    if($batchType ==403)
	{
        file -force -open $path;
		python("from idmt.maya.py_common import yd_tools");
		python("reload(yd_tools)");
		python("yd_tools.yd_tools().yd_BLCExr('YODA',3)");
	}
		if($batchType ==1006)
	{
        file -force -open $path;
		python("import Other.minitiger.mi_kit_rnd as mkrn");
		python("reload(mkrn)");
		python("mkrn.mi_batch_savefile(\"mi_modification_abcFilePathAttr()\",u\"oem_stor\")");
	}
	// an文件导出layer info
		if($batchType ==1007)
	{
        file -force -open $path;
		python("from idmt.maya.commonCore.core_finalLayout import sk_cacheFinalLayout;");
		python("reload(sk_cacheFinalLayout)");
		python("sk_cacheFinalLayout.sk_cacheFinalLayout().displayLayerInfoExport()");
	}
	// mi 010场导出extra abc
		if($batchType ==1008)
	{
        file -force -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mi;");
		python("reload(sk_projTools_mi)");
		python("sk_projTools_mi.sk_projTools_mi().miAssetLightMeshAbcConfig(ex=1)");
	}
	// 镜头camera scale 检测
	if($batchType == 1009)
	{
        file -force -open $path;
        python("from idmt.maya.commonCore.core_mayaCommon import sk_sceneTools");
        python("reload(sk_sceneTools)");
        python("sk_sceneTools.sk_sceneTools().sk_sceneCameraScaleCheck(0)");
	}
	// mi 自动分层
		if($batchType ==1010)
	{
        file -force -open $path;
		python("from idmt.maya.commonPerform.renderLayers import zb_renderLayer_mi;");
		python("reload(zb_renderLayer_mi)");
		python("zb_renderLayer_mi.zb_renderLayer_mi().sylvainAutoRenderLayers()");
	}
	// mi ms 渲染
		if($batchType ==1011)
	{
        file -force -open $path;
		python("from Other.minitiger import mi_kit_pre");
		python("reload(mi_kit_pre)");
		python("mi_kit_pre.mi_ms_im_cams2rndOpt()");
	}

	// mi 金属刀换木刀
		if($batchType ==1012)
	{
        file -force -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mi");
		python("reload(sk_projTools_mi)");
		python("sk_projTools_mi.sk_projTools_mi().woodBlade()");
	}

	// mk xgen输出curve及path
		if($batchType ==1013)
	{
        file -force -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mk");
		python("reload(sk_projTools_mk)");
		python("sk_projTools_mk.sk_projTools_mk().xgeCurveAbcExport()");
		//python("sk_projTools_mk.sk_projTools_mk().xgenAllAbcExport()");
	}


	// mk xgen输出path及checkin
		if($batchType ==1014)
	{
        file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mk");
		python("reload(sk_projTools_mk)");
		python("sk_projTools_mk.sk_projTools_mk().dyFileToFs()");
	}

	// mk 修正大批量ass
		if($batchType ==1015)
	{
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_mk");
		python("reload(sk_projTools_mk)");
		python("sk_projTools_mk.sk_projTools_mk().fixMaAssLoadMode(\"" + $path + "\")");
	}


	// 提交deadline
	if($batchType ==902)
	{
        file -force -open $path;
        //source "Z:/Netrender/Maya_Odd/cloud/DeadlineRepository7/submission/Maya/Main/SubmitMayaToDeadline.mel";
		//SubmitJobToDeadline;
		print "\n================  SubmitJobToDeadline ================\n";
	}
	// 批量改材质
	if($batchType ==901)
	{
        file -force -open $path;
		python("from idmt.maya.py_common import GDC_Tools");
		python("reload(GDC_Tools)");
		python("GDC_Tools.GDC_Tools().nj_MatApply(1,0)");
	}
		if($batchType ==903)
	{
        file -force -open $path;
		python("from idmt.maya.py_common import nj17_CheckTools");
		python("reload(nj17_CheckTools)");
		python("nj17_CheckTools.nj17_CheckTools().refReplaceChr()");
	}
		if($batchType ==904)
	{
		file -force -loadReferenceDepth "none" -open $path;
		python("from idmt.maya.py_common import nj17_CheckTools");
		python("reload(nj17_CheckTools)");
		python("nj17_CheckTools.nj17_CheckTools().refFix('se7066010001SnakeEggSwampEXT')");
	}
	//arnold .tx 开启
		if($batchType ==905)
	{
		catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("import maya.cmds as mc");
		python("mc.setAttr('defaultArnoldRenderOptions.use_existing_tiled_textures',1)");
		python("mc.file(s=1,f=1)");
	}
	//arnold .tx 关闭
		if($batchType ==906)
	{
		catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("import maya.cmds as mc");
		python("mc.setAttr('defaultArnoldRenderOptions.use_existing_tiled_textures',0)");
		python("mc.file(s=1,f=1)");
	}
// 项目自动分层
	// 只左眼开启
		if($batchType ==39997)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().stereoCamFix(mode=1)");
	}
	// 只右眼开启
		if($batchType ==39998)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().stereoCamFix(mode=2)");
	}
	// 左右眼全开启
		if($batchType ==39999)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_base");
		python("reload(sk_projTools_base)");
		python("sk_projTools_base.sk_projTools_base().stereoCamFix(mode=0)");
	}
	//Lion
		if($batchType ==40001)
	{
        file -force -open $path;
		python("from idmt.maya.py_common import Lion_RendeerAutoCommons");
		python("reload(Lion_RendeerAutoCommons)");
		python("Lion_RendeerAutoCommons.lion_RenderAutoCommons().lion_RenderLayerAuto(2,1)");
	}
	//do6
		if($batchType ==40002)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers()");
	}
	//do6 IDP
		if($batchType ==40005)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'allidp')");
	}
	//do6 chrshd
		if($batchType ==40006)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'chrshd')");
	}
	//do6 chrfog
		if($batchType ==40007)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'chrfog')");
	}
	//do6 chrrgb
		if($batchType ==40008)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'chrrgb')");
	}
	//do6 chrholo
		if($batchType ==40009)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'chrholo')");
	}
	//do6 screenAdd
		if($batchType ==40011)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'screenAdd')");
	}
	//do6 BGVFX
		if($batchType ==40012)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'bgvfx')");
	}
	//do6 chrenv
		if($batchType ==40013)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'chrenv')");
	}
	//do6 greeneyes
		if($batchType ==40014)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers(rlName = 'greeneyes')");
	}
	//do5 只保留波波和光剑
		if($batchType ==40010)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.projectTools import sk_projTools_do6");
		python("reload(sk_projTools_do6)");
		python("sk_projTools_do6.sk_projTools_do6().refImportFix()");
	}
	//do6导入版
		if($batchType ==40003)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().do6AutoCreateRenderLayers('refImport=1')");
	}
	//do6修正bag武器
		if($batchType ==40004)
	{
        catch(`file -force -loadReferenceDepth "all" -open $path`);
		python("from idmt.maya.commonPerform.renderLayers import sk_renderLayer_do6");
		python("reload(sk_renderLayer_do6)");
		python("sk_renderLayer_do6.sk_renderLayer_do6().fixWeaponNanObjs()");
	}
	// TD专用
	// [通用]rg转anim
		if($batchType == 98001)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_backCmd");
		python("reload(sk_backCmd)");
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		python("checkShotInfos = sk_infoConfig.sk_infoConfig().checkShotInfo()");
		string $assetType = `python("checkShotInfos[1][0]")`;
		if($assetType == "s")
		{
			print "\n----SetMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkRg2Anim(backMode = 0,setMode = 1)");
		}
		else
		{
			print "\n----ChrMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkRg2Anim(backMode = 0,setMode = 0)");
		}
	}
	// [通用]rg转render
		if($batchType == 98002)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_backCmd");
		python("reload(sk_backCmd)");
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		python("checkShotInfos = sk_infoConfig.sk_infoConfig().checkShotInfo()");
		string $assetType = `python("checkShotInfos[1][0]")`;
		if($assetType == "s")
		{
			print "\n----SetMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkRg2Render(backMode = 0,setMode = 1)");
		}
		else
		{
			print "\n----ChrMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkRg2Render(backMode = 0,setMode = 0)");
		}
	}
	// [通用]tx转anim
		if($batchType == 98003)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_backCmd");
		python("reload(sk_backCmd)");
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		python("checkShotInfos = sk_infoConfig.sk_infoConfig().checkShotInfo()");
		string $assetType = `python("checkShotInfos[1][0]")`;
		if($assetType == "s")
		{
			print "\n----SetMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkTx2Anim(backMode = 0,setMode = 1)");
		}
		else
		{
			print "\n----ChrMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkTx2Anim(backMode = 0,setMode = 0)");
		}
	}
	// [通用]tx转render
		if($batchType == 98004)
	{
		file -force -loadReferenceDepth "all" -open $path;
		python("from idmt.maya.commonCore.core_mayaCommon import sk_backCmd");
		python("reload(sk_backCmd)");
		python("from idmt.maya.commonCore.core_mayaCommon import sk_infoConfig");
		python("reload(sk_infoConfig)");
		python("checkShotInfos = sk_infoConfig.sk_infoConfig().checkShotInfo()");
		string $assetType = `python("checkShotInfos[1][0]")`;
		if($assetType == "s")
		{
			print "\n----SetMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkTx2Render(backMode = 0,setMode = 1)");
		}
		else
		{
			print "\n----ChrMode\n";
			print $assetType;
			print "\n";
			python("sk_backCmd.sk_backCmd().checkTx2Render(backMode = 0,setMode = 0)");
		}
	}
	// [通用]尺寸自动出1/2,1/4
		if($batchType == 98005)
	{
		file -force -loadReferenceDepth "all" -open $path;
		//贴图分三种尺寸上传
		python("from idmt.maya.py_common import mr_ImageSizeCover");
		python("reload(mr_ImageSizeCover)");
		python("mr_ImageSizeCover.nj_ImageSizeCover().nj_ImageSizeCover('half',1,1)") ;
		python("mr_ImageSizeCover.nj_ImageSizeCover().nj_ImageSizeCover('quarter',1,1)") ;
		print "\n\n 贴图成功分为原始尺寸、半尺寸(half)与四分之一(quarter)三种质量\n\n";
	}
	return 0;
}