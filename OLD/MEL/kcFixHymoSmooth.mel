/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: Kiem Ching
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


//
// wrong  : groupPart1 -> finalSmooth -> groupPart2 -> node
// correct: groupPart1 -> groupPart2 -> finalSmooth -> node
//
// Suspected wrong step: apply final smooth, set to 0, then only select faces to assign face shader
//

global proc kcFixHymoSmooth()
{
	string $obj = "hymo_c_lo_head";

	if (`objExists $obj`)
	{
		string $history[] = `listHistory -pruneDagObjects true $obj`;		

		for ($item in $history)
			if ((`nodeType $item` == "polySmoothFace") && (`gmatch $item "finalSmooth*"`))
			{
				$smooth = $item;
			
				string $smoothOut[] = `listConnections -source false -destination true ($item + ".output")`;

				if ((size($smoothOut) > 0) && (`nodeType $smoothOut[0]` == "groupParts"))
				{
					string $groupPart2 = $smoothOut[0];

					// fix the node

					string $groupPart1Out[] = `listConnections -plugs true -source true -destination false ($item + ".inputPolymesh")`;
					string $groupPart2In[] = `listConnections -plugs true -source false -destination true ($item + ".output")`;
					string $nodeIn[] = `listConnections -plugs true -source false -destination true ($groupPart2 + ".outputGeometry")`;

					connectAttr -f $groupPart1Out[0] $groupPart2In[0];
					connectAttr -f ($groupPart2 + ".outputGeometry") ($item + ".inputPolymesh");
					connectAttr -f ($item + ".output") $nodeIn[0];
				}
			
				break;
			}
	}
}