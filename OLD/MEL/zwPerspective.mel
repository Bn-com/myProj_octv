/// Copyright (C) 2000-2005 IDMT. All rights reserved.
///
/// Author: ª∆÷ŸŒ¨
///
/// Creation Date: 2006/11/15
///
/// Description: 
///


global proc kcAddCamAttr(string $menu, string $startSlider, string $endSlider)
{
	string $camera = `optionMenu -query -value $menu`;

	if (`objExists $camera`)
	{
		int $startTime = `intSliderGrp -q -value $startSlider`;	

		if (!`attributeExists "startTime" $camera`)
			addAttr -longName startTime -keyable true -defaultValue $startTime $camera;
		else
			setAttr ($camera + ".startTime") $startTime;

		int $endTime = `intSliderGrp -q -value $endSlider`;	

		if (!`attributeExists "endTime" $camera`)
			addAttr -longName endTime -keyable true -defaultValue $endTime $camera;
		else
			setAttr ($camera + ".endTime") $endTime;
	}
}

global proc zwPerspective()
{
	if (`window -exists perspective`)
		deleteUI perspective;
	window -title "Switch Camera" -width 200 -height 65 perspective;
		formLayout formLayout1;
			text -label "Camera:" text1;
			optionMenu -changeCommand zwSelectPerspCamera optionMenu1;
			string $cameras[] = `listCameras -perspective`;
			for ($camera in $cameras)
				menuItem -label $camera;
			string $button1 = `button -label "Update" -command "perspectiveProc"`;
			string $button2 = `button -label "Help" -command "zjHelpCallback zwPerspective"`;

   			string $frameLayout = `frameLayout -collapsable true -collapse true -label "Set Camera Time Range" -borderStyle "etchedOut"`;
   				string $formLayout = `formLayout`;
					string $startSlider = `intSliderGrp -label "Start Time" -field true -value 43 -minValue -5000 -maxValue 5000`;
					string $endSlider = `intSliderGrp -label "End Time" -field true -value 1000 -minValue -5000 -maxValue 5000`;
					string $button3 = `button -label "Set Time Range" -width 100 -command ("kcAddCamAttr optionMenu1 " + $startSlider + " " + $endSlider)`;
				setParent ..;
			setParent ..;

			formLayout -edit
				-attachForm		$startSlider		"top"		15
				-attachForm		$startSlider		"left"		5

				-attachControl	$endSlider		"top"		5	$startSlider
				-attachForm		$endSlider		"left"		5

				-attachControl	$button3		"top"		5	$endSlider
				-attachForm		$button3		"left"		5
				-attachForm		$button3		"right"		5
			$formLayout;

		formLayout -edit
			-attachForm		text1		"top"		15
			-attachForm		text1		"left"		5

			-attachControl		optionMenu1	"left"		10	text1
			-attachOppositeControl	optionMenu1	"bottom"	0	text1

			-attachOppositeControl	$button1	"top"		0	optionMenu1
			-attachControl		$button1	"left"		10	optionMenu1
			-attachOppositeControl	$button1	"bottom"	0	text1

			-attachOppositeControl	$button2	"top"		0	optionMenu1
			-attachControl		$button2	"left"		10	$button1
			-attachOppositeControl	$button2	"bottom"	0	text1

			-attachControl		$frameLayout	"top"		10	text1
			-attachForm 		$frameLayout	"left"		5	
		formLayout1;
	showWindow perspective;
}

global proc zwSelectPerspCamera()
{
	string $camera = `optionMenu -query -value optionMenu1`;
	string $panel = `getPanel -withFocus`;

	if (`objExists $camera`)
	{
		lookThroughModelPanel $camera $panel;

		if (`attributeExists "startTime" $camera`)
		{
			int $start = `getAttr ($camera + ".startTime")`;
			playbackOptions -e -minTime $start;

			currentTime -e $start;
		}

		if (`attributeExists "endTime" $camera`)
		{
			int $end = `getAttr ($camera + ".endTime")`;
			playbackOptions -e -maxTime $end;
		}
	}
}

global proc perspectiveProc()
{
	string $camera = `optionMenu -query -value optionMenu1`;
	zwPerspective;
	if (`objExists $camera`)
		optionMenu -edit -value $camera optionMenu1;
	zwSelectPerspCamera;
}