//rearrange smooth node and polytransfer node
proc string smoothSearch(string $list[])
{
	for ($i in $list)
	{
		if (`gmatch $i "finalSmooth*"`&&(`nodeType $i` == "polySmoothFace"))
			return $i;
	}
	return "";
}

global proc zjArrangeNodes()
{
	print "\nREARRANGE SMOOTH NODE";
	string $list[];
	int $k = 0;
	string $all[] = `ls -l -tr`;
	for ($item in $all)
	{
		if (attributeExists("sm_divisions",$item))
			$list[$k++] = $item;
	}
	for ($object in $list)
	{
		string $his[] = `listHistory -groupLevels true -pruneDagObjects 1 -leaf true $object`;
		string $smoothNode = smoothSearch($his);
		if ($smoothNode != "")
		{
			delete $smoothNode;
			string $shapes[] = `listRelatives -fullPath -noIntermediate -type "mesh" $object`;
			if (size($shapes)>0)
			{
				$plyname = `polySmooth -divisions 0 -continuity 1 -keepBorder 0 -keepSelectionBorder 1 -keepTessellation 1 -constructionHistory 1 $shapes[0]`;
				rename $plyname "finalSmooth";
			}
		}	
	}
//	zjtmpbratz();	//apply material for 11 bratz models only

}

