// procedure pour creer un shader 2D apres selec un shader RGB
//    - retourne le nom du shader cree
// -----------------------------------------------------------------------------------------
global proc string createShd2D(string $_baseName, string $_shdAO)
{
    string $shadName;
    string $shaderRGB;
    string $fileName;
    string $fileRGB;
    
    string $shader2D;
    $Sel = `ls -sl -type blinn -type lambert`;
    string $shaderSel = $Sel[0];
    
    string $shdrAmbientConn[];
    string $shdrColorConn[];
    string $shdrTranspConn[];
    string $shaderSelOK;

    // genere un nom pour le shader d'occlu
    $shaderSelOK = basename( $shaderSel, "_RGB" );
    $shaderSelOK = basename( $shaderSelOK, "_RGBA" );
    $shadName =  ( $shaderSelOK + "_2D" );

    // creer le shader
    $shader2D = `shadingNode -asShader lambert -name $shadName`;
    
    // recupere la connection entrante dans l'ambient du shader
    $shdrAmbientConn = `listConnections -s 1 -d 1 ($shaderSel + ".ambientColor")`;
    $shdrColorConn = `listConnections -s 1 -d 1 ($shaderSel + ".color")`;
    $shdrTranspConn = `listConnections -s 1 -d 1 ($shaderSel + ".transparency")`;
    
    if ( `size($shdrColorConn)` == 0 )
    
    {
        // pas de connection dans la color
        // on fait donc un copyAttr de la couleur color  de $shader vers $shaderDupli
        copyAttr -v ($shaderSel + ".ambientColor") ($shader2D + ".ambientColor");
    
    }
    else
    {
        // il y'a un element connecte a la color
        // on fait directement la connexion
        connectAttr ($shdrColorConn[0] + ".outColor") ($shader2D + ".color");
    }
    
    if ( `size($shdrTranspConn)` == 0 )
    
    {
        // pas de connection dans l'ambient
        // on fait donc un copyAttr de la couleur ambient de $shader vers $shaderDupli
        copyAttr -v ($shaderSel + ".transparency") ($shader2D + ".transparency");
    
    }
    else
    {
        // il y'a un element connecte a l'ambient
        // on ignore donc l'ambient de $shader
        // on fait directement un setAttr (d'une valeur "forcee") sur l'ambient de $shaderDupli
        connectAttr ($shdrTranspConn[0] + ".outTransparency") ($shader2D + ".transparency");

    }
    if ( `size($shdrAmbientConn)` == 0 )
    
    {
        // pas de connection dans l'ambient
        // on fait donc un copyAttr de la couleur ambient de $shader vers $shaderDupli
        copyAttr -v ($shaderSel + ".ambientColor") ($shader2D + ".ambientColor");
    
    }
    else
    {
        // il y'a un element connecte a l'ambient
        // on ignore donc l'ambient de $shader
        // on fait directement un setAttr (d'une valeur "forcee") sur l'ambient de $shaderDupli
        setAttr ($shader2D + ".ambientColor") -type double3 1 1 1 ;

    }
                                           
    return $shader2D;
}