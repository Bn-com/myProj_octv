// procedure pour creer un surface shader pour le ZDEPTH
//    - prend en argument : un base name + le shader d'AO a connecter dans son ambient
//    - retourne le nom du shader cree
// -----------------------------------------------------------------------------------------
global proc string createShdZ()
{
    
    hyperShadePanelGraphCommand("hyperShadePanel1", "clearGraph");
    
    string $shadName;
    string $shaderZ;
    string $fileName;
    string $utilSRange;
    string $utilMult;
    string $utilSInfo;
   
    // genere un nom pour le shader d'occlu
    string $shadName =  "SHD_" + "ZDEPTH";

    // creer le shader
    $shaderZ = `shadingNode -asShader lambert -n $shadName`;
    setAttr ($shaderZ + ".ambientColor") -type double3 1 1 1 ;
  
    // creer le nom du SetRange a partir de celui du shader
    $fileName = "DEFAULT_" + "_setRangeZ";
    // Create setRange
    $utilSRange = `createNode setRange -n $fileName`;
    setAttr ($utilSRange + ".minX") 1;
    
    // creer le nom du MultiplyDivide a partir de celui du shader
    $fileName = "DEFAULT_" + "multDivZ";
    // Create MultiplyDivide
    $utilMult = `createNode multiplyDivide -n $fileName`;
    setAttr ($utilMult + ".input2X") -1;
    
    // creer le nom du SamplerInfo a partir de celui du shader
    $fileName = "DEFAULT_" + "sampInfoZ";
    // Create SamplerInfo
    $utilSInfo = `createNode samplerInfo -n $fileName`;
    addAttr -ln "NearClipCalimero" -nn "Near Clip Calimero" -at double  -dv 0.1 $utilSInfo;
    addAttr -ln "FarClipCalimero" -nn "Far Clip Calimero" -at double  -dv 2000 $utilSInfo;
  
    // Connections
    connectAttr -f ($utilSRange + ".outValueX") ($shaderZ + ".colorR");
    connectAttr -f ($utilSRange + ".outValueX") ($shaderZ + ".colorG");
    connectAttr -f ($utilSRange + ".outValueX") ($shaderZ + ".colorB");
    connectAttr -f ($utilSInfo + ".NearClipCalimero") ($utilSRange + ".oldMinX");
    connectAttr -f ($utilSInfo + ".FarClipCalimero") ($utilSRange + ".oldMaxX");
    connectAttr -f ($utilSInfo + ".pointCameraZ") ($utilMult + ".input1X");
    connectAttr -f ($utilMult + ".outputX") ($utilSRange + ".valueX");
    
    hyperShadePanelGraphCommand("hyperShadePanel1", "rearrangeGraph");

    return $shaderZ;
}
