import maya.cmds as cmds
#edo_addFacialCtrlCmd('test')
def edo_addFacialCtrlCmd(ctrlName,parent=''):
    #ctrlName='test'
    if ctrlName=='':
        ctrlName=cmds.textField('edo_facialCtrlUItextField',q=1,text=1)
    curve=cmds.curve(d=1,p=[(-1,1,0),(-1,-1,0),(1,-1,0),(1,1,0),(-1,1,0)],k=[0,1,2,3,4])
    cmds.rename(curve,ctrlName+'_FRAME')
    cmds.setAttr(ctrlName+'_FRAMEShape.overrideEnabled',1)
    cmds.setAttr(ctrlName+'_FRAMEShape.overrideDisplayType',2)
    cmds.addAttr(ctrlName+'_FRAME',ln='up',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.up',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='dn',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.dn',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='lf',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.lf',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='rt',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.rt',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='lfup',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.lfup',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='rtup',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.rtup',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='lfdn',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.lfdn',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='rtdn',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.rtdn',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='fourAxis_up',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.fourAxis_up',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='fourAxis_dn',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.fourAxis_dn',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='fourAxis_lf',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.fourAxis_lf',keyable=1)
    cmds.addAttr(ctrlName+'_FRAME',ln='fourAxis_rt',at='double',min=0)
    cmds.setAttr(ctrlName+'_FRAME.fourAxis_rt',keyable=1)
    cmds.group(ctrlName+'_FRAME',n='GRP_'+ctrlName+'_FRAME')
    curve=cmds.curve(d=1,p=[(-1,1,0),(-1,3,0),(-2,3,0),(0,5,0),(2,3,0),(1,3,0),(1,1,0),(4,4,0),(1,1,0),(3,1,0),(3,2,0),(5,0,0),(3,-2,0),(3,-1,0),(1,-1,0),(4,-4,0),(1,-1,0),(1,-3,0),(2,-3,0),(0,-5,0),(-2,-3,0),(-1,-3,0),(-1,-1,0),(-4,-4,0),(-1,-1,0),(-3,-1,0),(-3,-2,0),(-5,0,0),(-3,2,0),(-3,1,0),(-1,1,0),(-4,4,0),(-1,1,0)],k=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32])
    cmds.rename(curve,ctrlName+'_CTRL')
    cmds.setAttr(ctrlName+'_CTRLShape.overrideEnabled',1)
    cmds.setAttr(ctrlName+'_CTRLShape.ovc',17)
    cmds.setAttr(ctrlName+'_CTRL.sx',0.05)
    cmds.setAttr(ctrlName+'_CTRL.sy',0.05)
    cmds.setAttr(ctrlName+'_CTRL.sy',0.05)
    cmds.transformLimits(ctrlName+'_CTRL',etx=(1,1),tx=(-1,1))
    cmds.transformLimits(ctrlName+'_CTRL',ety=(1,1),ty=(-1,1))
    cmds.transformLimits(ctrlName+'_CTRL',etz=(1,1),tz=(0,0))
    cmds.makeIdentity(ctrlName+'_CTRL',apply=1,t=1,r=1,s=1,n=0)
    cmds.group(ctrlName+'_CTRL',n='GRP_'+ctrlName+'_CTRL',p=ctrlName+'_FRAME')
    ##==================    
    cmds.createNode('multiplyDivide',n=ctrlName+'_upmult_Xinverse')
    cmds.connectAttr(ctrlName+'_CTRL.tx',ctrlName+'_upmult_Xinverse.input2X',f=1)
    cmds.setAttr(ctrlName+'_upmult_Xinverse.input1X',-1)
    cmds.createNode('clamp',n=ctrlName+'_upclamp_PXrange')
    cmds.connectAttr(ctrlName+'_upmult_Xinverse.outputX',ctrlName+'_upclamp_PXrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_upclamp_PXrange.minR',0)
    cmds.setAttr(ctrlName+'_upclamp_PXrange.maxR',1)
    cmds.createNode('clamp',n=ctrlName+'_upclamp_NXrange')
    cmds.connectAttr(ctrlName+'_CTRL.tx',ctrlName+'_upclamp_NXrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_upclamp_NXrange.minR',0)
    cmds.setAttr(ctrlName+'_upclamp_NXrange.maxR',1)
    cmds.createNode('plusMinusAverage',n=ctrlName+'_upplus_Xplus')
    cmds.connectAttr(ctrlName+'_upclamp_NXrange.outputR',ctrlName+'_upplus_Xplus.input1D[0]',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_PXrange.outputR',ctrlName+'_upplus_Xplus.input1D[1]',f=1)
    cmds.createNode('reverse',n=ctrlName+'_upreverse_X')
    cmds.connectAttr(ctrlName+'_upplus_Xplus.output1D',ctrlName+'_upreverse_X.inputX',f=1)
    cmds.createNode('clamp',n=ctrlName+'_upclamp_PYrange')
    cmds.connectAttr(ctrlName+'_CTRL.ty',ctrlName+'_upclamp_PYrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_upclamp_PYrange.minR',0)
    cmds.setAttr(ctrlName+'_upclamp_PYrange.maxR',1)
    cmds.createNode('multiplyDivide',n=ctrlName+'_upScale')
    cmds.connectAttr(ctrlName+'_upclamp_PYrange.outputR',ctrlName+'_upScale.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upreverse_X.outputX',ctrlName+'_upScale.input2X',f=1)
    cmds.createNode('clamp',n=ctrlName+'_upclamp_finalrange')
    cmds.connectAttr(ctrlName+'_upScale.outputX',ctrlName+'_upclamp_finalrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_upclamp_finalrange.minR',0)
    cmds.setAttr(ctrlName+'_upclamp_finalrange.maxR',1)
    cmds.connectAttr(ctrlName+'_upclamp_finalrange.outputR',ctrlName+'_FRAME.up',f=1)
    
    ##==================    
    cmds.createNode('multiplyDivide',n=ctrlName+'_dnmult_Yinverse')
    cmds.connectAttr(ctrlName+'_CTRL.ty',ctrlName+'_dnmult_Yinverse.input2X',f=1)
    cmds.setAttr(ctrlName+'_dnmult_Yinverse.input1X',-1)
    cmds.createNode('clamp',n=ctrlName+'_dnclamp_PYrange')
    cmds.connectAttr(ctrlName+'_dnmult_Yinverse.outputX',ctrlName+'_dnclamp_PYrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_dnclamp_PYrange.minR',0)
    cmds.setAttr(ctrlName+'_dnclamp_PYrange.maxR',1)
    cmds.createNode('multiplyDivide',n=ctrlName+'_dnScale')
    cmds.connectAttr(ctrlName+'_dnclamp_PYrange.outputR',ctrlName+'_dnScale.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upreverse_X.outputX',ctrlName+'_dnScale.input2X',f=1)
    cmds.createNode('clamp',n=ctrlName+'_dnclamp_finalrange')
    cmds.connectAttr(ctrlName+'_dnScale.outputX',ctrlName+'_dnclamp_finalrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_dnclamp_finalrange.minR',0)
    cmds.setAttr(ctrlName+'_dnclamp_finalrange.maxR',1)
    cmds.connectAttr(ctrlName+'_dnclamp_finalrange.outputR',ctrlName+'_FRAME.dn',f=1)
    
    
    ##==================    
    cmds.createNode('multiplyDivide',n=ctrlName+'_lfmult_Yinverse')
    cmds.connectAttr(ctrlName+'_CTRL.ty',ctrlName+'_lfmult_Yinverse.input2X',f=1)
    cmds.setAttr(ctrlName+'_lfmult_Yinverse.input1X',-1)
    cmds.createNode('clamp',n=ctrlName+'_lfclamp_PYrange')
    cmds.connectAttr(ctrlName+'_lfmult_Yinverse.outputX',ctrlName+'_lfclamp_PYrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_lfclamp_PYrange.minR',0)
    cmds.setAttr(ctrlName+'_lfclamp_PYrange.maxR',1)
    cmds.createNode('clamp',n=ctrlName+'_lfclamp_NYrange')
    cmds.connectAttr(ctrlName+'_CTRL.ty',ctrlName+'_lfclamp_NYrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_lfclamp_NYrange.minR',0)
    cmds.setAttr(ctrlName+'_lfclamp_NYrange.maxR',1)
    cmds.createNode('plusMinusAverage',n=ctrlName+'_lfplus_Yplus')
    cmds.connectAttr(ctrlName+'_lfclamp_NYrange.outputR',ctrlName+'_lfplus_Yplus.input1D[0]',f=1)
    cmds.connectAttr(ctrlName+'_lfclamp_PYrange.outputR',ctrlName+'_lfplus_Yplus.input1D[1]',f=1)
    cmds.createNode('reverse',n=ctrlName+'_lfreverse_Y')
    cmds.connectAttr(ctrlName+'_lfplus_Yplus.output1D',ctrlName+'_lfreverse_Y.inputX',f=1)
    cmds.createNode('multiplyDivide',n=ctrlName+'_lfmult_Xinverse')
    cmds.connectAttr(ctrlName+'_CTRL.tx',ctrlName+'_lfmult_Xinverse.input2X',f=1)
    cmds.setAttr(ctrlName+'_lfmult_Xinverse.input1X',-1)
    cmds.createNode('clamp',n=ctrlName+'_lfclamp_PXrange')
    cmds.connectAttr(ctrlName+'_lfmult_Xinverse.outputX',ctrlName+'_lfclamp_PXrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_lfclamp_PXrange.minR',0)
    cmds.setAttr(ctrlName+'_lfclamp_PXrange.maxR',1)
    cmds.createNode('multiplyDivide',n=ctrlName+'_lfScale')
    cmds.connectAttr(ctrlName+'_lfclamp_PXrange.outputR',ctrlName+'_lfScale.input1X',f=1)
    cmds.connectAttr(ctrlName+'_lfreverse_Y.outputX',ctrlName+'_lfScale.input2X',f=1)
    cmds.createNode('clamp',n=ctrlName+'_lfclamp_finalrange')
    cmds.connectAttr(ctrlName+'_lfScale.outputX',ctrlName+'_lfclamp_finalrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_lfclamp_finalrange.minR',0)
    cmds.setAttr(ctrlName+'_lfclamp_finalrange.maxR',1)
    cmds.connectAttr(ctrlName+'_lfclamp_finalrange.outputR',ctrlName+'_FRAME.lf',f=1)
    
    ##==================    
    cmds.createNode('clamp',n=ctrlName+'_rtclamp_PXrange')
    cmds.connectAttr(ctrlName+'_CTRL.tx',ctrlName+'_rtclamp_PXrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_rtclamp_PXrange.minR',0)
    cmds.setAttr(ctrlName+'_rtclamp_PXrange.maxR',1)
    cmds.createNode('multiplyDivide',n=ctrlName+'_rtScale')
    cmds.connectAttr(ctrlName+'_rtclamp_PXrange.outputR',ctrlName+'_rtScale.input1X',f=1)
    cmds.connectAttr(ctrlName+'_lfreverse_Y.outputX',ctrlName+'_rtScale.input2X',f=1)
    cmds.createNode('clamp',n=ctrlName+'_rtclamp_finalrange')
    cmds.connectAttr(ctrlName+'_rtScale.outputX',ctrlName+'_rtclamp_finalrange.inputR',f=1)
    cmds.setAttr(ctrlName+'_rtclamp_finalrange.minR',0)
    cmds.setAttr(ctrlName+'_rtclamp_finalrange.maxR',1)
    cmds.connectAttr(ctrlName+'_rtclamp_finalrange.outputR',ctrlName+'_FRAME.rt',f=1)
    
    ##==================
    cmds.createNode('multiplyDivide',n=ctrlName+'_lfupmult')
    cmds.connectAttr(ctrlName+'_lfclamp_NYrange.outputR',ctrlName+'_lfupmult.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_PXrange.outputR',ctrlName+'_lfupmult.input2X',f=1)
    cmds.connectAttr(ctrlName+'_lfupmult.outputX',ctrlName+'_FRAME.lfup',f=1)

    ##==================
    cmds.createNode('multiplyDivide',n=ctrlName+'_rtupmult')
    cmds.connectAttr(ctrlName+'_lfclamp_NYrange.outputR',ctrlName+'_rtupmult.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_NXrange.outputR',ctrlName+'_rtupmult.input2X',f=1)
    cmds.connectAttr(ctrlName+'_rtupmult.outputX',ctrlName+'_FRAME.rtup',f=1)
    
    ##==================
    cmds.createNode('multiplyDivide',n=ctrlName+'_lfdnmult')
    cmds.connectAttr(ctrlName+'_lfclamp_PYrange.outputR',ctrlName+'_lfdnmult.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_PXrange.outputR',ctrlName+'_lfdnmult.input2X',f=1)
    cmds.connectAttr(ctrlName+'_lfdnmult.outputX',ctrlName+'_FRAME.lfdn',f=1)
  
    ##==================
    cmds.createNode('multiplyDivide',n=ctrlName+'_rtdnmult')
    cmds.connectAttr(ctrlName+'_lfclamp_PYrange.outputR',ctrlName+'_rtdnmult.input1X',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_NXrange.outputR',ctrlName+'_rtdnmult.input2X',f=1)
    cmds.connectAttr(ctrlName+'_rtdnmult.outputX',ctrlName+'_FRAME.rtdn',f=1)
    
    #=======4Aixs=====================
    cmds.connectAttr(ctrlName+'_lfclamp_NYrange.outputR',ctrlName+'_FRAME.fourAxis_up',f=1)
    cmds.connectAttr(ctrlName+'_lfclamp_PYrange.outputR',ctrlName+'_FRAME.fourAxis_dn',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_NXrange.outputR',ctrlName+'_FRAME.fourAxis_rt',f=1)
    cmds.connectAttr(ctrlName+'_upclamp_PXrange.outputR',ctrlName+'_FRAME.fourAxis_lf',f=1)
    
    if not parent=='':
        cmds.parent('GRP_'+ctrlName+'_FRAME',parent)
    cmds.select(cl=1)

def edo_facialCtrlUI():
    if cmds.window('edo_facialCtrlUI',ex=1):
        cmds.deleteUI('edo_facialCtrlUI')
    cmds.window('edo_facialCtrlUI',t='add facial CtrlUI',w=400,h=100)
    cmds.columnLayout('edo_facialCtrlUILayout',adjustableColumn=True,rs=10)
    cmds.text('edo_facialCtrlUIText',l='filed the facial ctrl name:')
    cmds.textField('edo_facialCtrlUItextField')
    cmds.button('edo_facialCtrlUIButton',l='create',c='edo_addFacialCtrlCmd(\'\')')
    cmds.showWindow('edo_facialCtrlUI')
    cmds.window('edo_facialCtrlUI',e=1,w=300,h=100)