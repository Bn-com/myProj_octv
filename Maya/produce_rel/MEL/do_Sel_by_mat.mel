/////////////////////////////////////////////////////////////////
//Select by material: do_Sel_by_mat v1.0 December 1, 2009
/////////////////////////////////////////////////////////////////

/*

1.Description   - This script selects all the faces on a poly mesh that share the same material. Usefull on large models that have many materials. Despite 		the Maya's default "Select Objects with Material" from Hypershade this script selects the faces from the curent object only.
2.Install
	
	a) copy "do_Sel_by_mat.mel" to your Maya's scripts directory (Example: "C:\...\Documents\maya\version\scripts"). 
	b) Start Maya. If you have it already open type "rehash" in the command window and execute.
	c) the script should be sourced now ... 
	If it isn't then u can manualy source it from the Script Editor (Window--> General Editors --> Script Editor).

3.How it works  - All you have to do is to select one face on your desired poly mesh and run "do_Sel_by_mat()".
4.Issues 	- The script will work only on meshes wich have at least 2 shaders/mats (I assume you know to select all :P) and only 1 selected face.

This script may be freely distributed. Use/Modify at your own risk!
Special thanks to Ken Proudfoot and Ben Wronsky for their Get_mat and materialSelect scripts.


// Dragos Olariu
// dragosholariu@yahoo.com




*/


proc materialSelect() {
	string $sel[] = `ls -sl`;
	if (size($sel) < 2 || size($sel) > 2) {
		error("Select an object, shift-select one material in Hypershade, then run this script");
	}
	string $object = $sel[1];
	string $mat = $sel[0];
	string $objects[];
	string $objList;
	string $objList2;
	string $objBuffer[];

	hyperShade -o $mat;
    	select -tgl $objects;
    	$objects=`ls -sl`;  
	for ($j=0; $j<size($objects); $j++) {
		$objList = $objList + $objects[$j] + " ";
	}

	tokenize($objList, ".", $objBuffer);

	for ($h=0; $h<size($objBuffer); $h++) {
		$objList2 = $objList2 + $objBuffer[$h] + " ";
	}
	tokenize($objList2, " ", $objBuffer);

	select -cl;

	for ($i=0; $i<size($objBuffer); $i+=2) {
		if ($objBuffer[$i] == $object) {
			string $objSel = $objBuffer[$i];
			string $objFaceList = $objBuffer[$i+1];
			string $finalObjSel = $objSel + "." + $objFaceList;
			select -tgl $finalObjSel;
		}
	}
}

proc string rootNode( string $object )
{
  string $buffer[];
  maintainActiveChangeSelectMode $object;
  tokenize $object "." $buffer;
  return $buffer[0];

}

//////////////////////////////////////////////////////////////////
// Main proc (gets Shadergroup name).
///////////////////////////////////////////////////////////////////

global proc do_Sel_by_mat()
{


	////////////////////////////////////////
	//Obtains object name from a selected face. Removes the ".f[xx]" part.
	///////////////////////////////////////
	
	string $face_sel[] = `ls -selection`; 
	string $obj_sel = stringArrayToString($face_sel, "");
	print $obj_sel;
	
	string $array[];
	$array = stringToStringArray($obj_sel, ".");
	$array[1]="";

	string $curent_obj = stringArrayToString($array, "");
	print $curent_obj;

	////////////////////////////////////////
	/////////////////////////////////////////
	////////////////////////////////////////


  string $faceSG = "";
  
//list array of faces
string $selectedFaces[] = `filterExpand -ex true -sm 34`;


  // Get array of all Shading Groups
  string $shadingGroups[] = `ls -type shadingEngine`;

  for ( $shadingGroup in $shadingGroups )
  {
    // If this facet is a member of the shading set for this
    // Shading Group, tag this as the facet's shader
    if ( `sets -isMember $shadingGroup $selectedFaces` )
    {
      $faceSG = $shadingGroup;
      break;
    }
  }

///////////////////////////////////////////////////////////////////
// Get name of Material from the above Shadergroup name.
///////////////////////////////////////////////////////////////////

  string $matName = "";
  if ( "shadingEngine" == `nodeType $faceSG` &&
    `connectionInfo -id ( $faceSG + ".surfaceShader" )` )
  {
    $matName = rootNode( `connectionInfo -sfd
      ( $faceSG + ".surfaceShader" )` );
  }

select -cl;
select -r $matName;
select -tgl $curent_obj;
materialSelect();
}





